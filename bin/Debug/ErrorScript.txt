Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.MRateSetting' is specified more than once.
=====

--<Version = 1.0.1.5>


SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MRateSetting ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.MRateSetting ADD CONSTRAINT
	DF_MRateSetting_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 2:24:00 PM
Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.TStock' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.TStock ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.TStock ADD CONSTRAINT
	DF_TStock_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 2:24:07 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
The statement has been terminated.
The statement has been terminated.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(468,'SB_Hamali',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(374,'S_IsMobileShop',1,'False',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(375,'P_IsBroker',1,'False',NULL,2);


 Error End ======================== Vriha iTech3/8/2019 2:24:08 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(172,8,'Broker Master',21,'Master.BrokerAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 2:24:08 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(170,2,'Cash Denomination Master',134,'Master.CashDenominationAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 2:24:08 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(171,3,'Cash Denomination Master',134,'Utilities.CashSlip',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 2:24:08 PM
Error Start =========
 There is already an object named 'MPrintReportName' in the database.
=====

CREATE TABLE [dbo].[MPrintReportName](
	[PkSrNO] [numeric](18, 0) NOT NULL,
	[ReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LangReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ButtonType] [numeric](18, 0) NOT NULL,
	[ButtonName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[VoucherTypecode] [numeric](18, 0) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MPrintReportName] PRIMARY KEY CLUSTERED 
(
	[PkSrNO] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 2:24:08 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(468,'SB_Hamali',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(374,'S_IsMobileShop',1,'False',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(375,'P_IsBroker',1,'False',NULL,2);


 Error End ======================== Vriha iTech3/8/2019 5:54:08 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

ALTER PROCEDURE [dbo].[AddMRateSetting2]
     @PkSrNo                              numeric(18),
--   @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
	 @MRP				                  numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                           numeric(18,4),
	 @BSaleRate                           numeric(18,4),
	 @CSaleRate                           numeric(18,4),
	 @DSaleRate                           numeric(18,4),
	 @ESaleRate                           numeric(18,4),
	 @StockConversion					  Numeric(18,2),
--	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive							  bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
     @Weight1                             Numeric(18,2),  
     @Weight2                             Numeric(18,2),
     @LPPerc                             Numeric(18,2),  
     @SPPerc                             Numeric(18,2),
     @Hamali                             Numeric(18,2)
AS
if(cast(@FromDate as datetime) < cast('02-02-1900 00:00:00' as datetime))
begin
	set @FromDate= Convert(datetime,Cast(getdate() as varchar))
end
IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET

          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
	      MRP = @MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2,
          Weight1 = @Weight1,                              
          Weight2 = @Weight2,
          LPPerc = @LPPerc,                              
          SPPerc = @SPPerc,
          Hamali=@Hamali  
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT('MRateSetting', RESEED, @Id)
       INSERT INTO MRateSetting(
          ItemNo,
          FromDate,
          PurRate,
	      MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,

		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo,
          Weight1 ,                             
          Weight2,
          LPPerc,
          SPPerc,
          Hamali
)
       VALUES(
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1,
          @Weight1,                              
          @Weight2,
          @LPPerc,
          @SPPerc,
          @Hamali
)

END


 Error End ======================== Vriha iTech3/8/2019 6:17:08 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

ALTER Function [dbo].[GetItemRateAll]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive='true' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive='true' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
				AND MItemMaster.GroupNo=@PGroupNo
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End


 Error End ======================== Vriha iTech3/8/2019 6:17:08 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(468,'SB_Hamali',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(374,'S_IsMobileShop',1,'False',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(375,'P_IsBroker',1,'False',NULL,2);


 Error End ======================== Vriha iTech3/8/2019 6:17:08 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

Create Function [dbo].[GetItemRateAllAuto]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18),
@PDepartmentNo				numeric(18),
@PCatNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null) and (@PDepartmentNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive='true' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive='true' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
AND MItemMaster.FkDepartmentNo=Case When @PDepartmentNo is null then MItemMaster.FkDepartmentNo else @PDepartmentNo end
				AND MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.Groupno else @PGroupNo  end
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End


 Error End ======================== Vriha iTech3/8/2019 6:17:08 PM
Error Start =========
 Conversion failed when converting datetime from character string.
=====

INSERT INTO [dbo].[MPrintReportName]([PkSrNO],[ReportName],[LangReportName],[ButtonType],[ButtonName],[VoucherTypecode]
           ,[IsActive],[UserId],[UserDate])
     VALUES (1,'GetBill','GetBillMar',1,'Print',15,'true',1,'NULL')


 Error End ======================== Vriha iTech3/8/2019 6:17:09 PM
Error Start =========
 Invalid column name 'IsSendEmail'.
=====

IF NOT EXISTS(select Ledgername from mledger where groupno= 37)
BEGIN


INSERT INTO MLedger(  LedgerUserNo, LedgerName, GroupNo, OpeningBalance, SignCode, MaintainBillByBill, IsActive, ContactPerson, CompanyNo, LedgerStatus, IsEnroll, IsSendSMS, 
                      UserID, UserDate, TransporterNo, StateCode, LedgerLangName, IsPartyWiseRate, QuotationRate, ContactPersonLang, StatusNo, IsSendEmail)
     VALUES (0,'NA',37,0.00,0,'False','True','NA',1,2,'False','False',1,'3/4/2019 12:00:00 AM',0,27,'','False','False','naa',2,'False')    

END


 Error End ======================== Vriha iTech3/8/2019 6:17:09 PM
Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.MRateSetting' is specified more than once.
=====

--<Version = 1.0.1.5>


SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MRateSetting ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.MRateSetting ADD CONSTRAINT
	DF_MRateSetting_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.TStock' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.TStock ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.TStock ADD CONSTRAINT
	DF_TStock_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

ALTER PROCEDURE [dbo].[AddMRateSetting2]
     @PkSrNo                              numeric(18),
--   @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
	 @MRP				                  numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                           numeric(18,4),
	 @BSaleRate                           numeric(18,4),
	 @CSaleRate                           numeric(18,4),
	 @DSaleRate                           numeric(18,4),
	 @ESaleRate                           numeric(18,4),
	 @StockConversion					  Numeric(18,2),
--	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive							  bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
     @Weight1                             Numeric(18,2),  
     @Weight2                             Numeric(18,2),
     @LPPerc                             Numeric(18,2),  
     @SPPerc                             Numeric(18,2),
     @Hamali                             Numeric(18,2)
AS
if(cast(@FromDate as datetime) < cast('02-02-1900 00:00:00' as datetime))
begin
	set @FromDate= Convert(datetime,Cast(getdate() as varchar))
end
IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET

          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
	      MRP = @MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2,
          Weight1 = @Weight1,                              
          Weight2 = @Weight2,
          LPPerc = @LPPerc,                              
          SPPerc = @SPPerc,
          Hamali=@Hamali  
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT('MRateSetting', RESEED, @Id)
       INSERT INTO MRateSetting(
          ItemNo,
          FromDate,
          PurRate,
	      MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,

		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo,
          Weight1 ,                             
          Weight2,
          LPPerc,
          SPPerc,
          Hamali
)
       VALUES(
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1,
          @Weight1,                              
          @Weight2,
          @LPPerc,
          @SPPerc,
          @Hamali
)

END


 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

ALTER Function [dbo].[GetItemRateAll]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive='true' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive='true' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
				AND MItemMaster.GroupNo=@PGroupNo
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End


 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(468,'SB_Hamali',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(374,'S_IsMobileShop',1,'False',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(375,'P_IsBroker',1,'False',NULL,2);


 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(172,8,'Broker Master',21,'Master.BrokerAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(170,2,'Cash Denomination Master',134,'Master.CashDenominationAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(171,3,'Cash Denomination Master',134,'Utilities.CashSlip',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

Create Function [dbo].[GetItemRateAllAuto]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18),
@PDepartmentNo				numeric(18),
@PCatNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null) and (@PDepartmentNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive='true' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive='true' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
AND MItemMaster.FkDepartmentNo=Case When @PDepartmentNo is null then MItemMaster.FkDepartmentNo else @PDepartmentNo end
				AND MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.Groupno else @PGroupNo  end
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End


 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 There is already an object named 'MPrintReportName' in the database.
=====

CREATE TABLE [dbo].[MPrintReportName](
	[PkSrNO] [numeric](18, 0) NOT NULL,
	[ReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LangReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ButtonType] [numeric](18, 0) NOT NULL,
	[ButtonName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[VoucherTypecode] [numeric](18, 0) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MPrintReportName] PRIMARY KEY CLUSTERED 
(
	[PkSrNO] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 Conversion failed when converting datetime from character string.
=====

INSERT INTO [dbo].[MPrintReportName]([PkSrNO],[ReportName],[LangReportName],[ButtonType],[ButtonName],[VoucherTypecode]
           ,[IsActive],[UserId],[UserDate])
     VALUES (1,'GetBill','GetBillMar',1,'Print',15,'true',1,'NULL')
INSERT INTO [dbo].[MPrintReportName]([PkSrNO],[ReportName],[LangReportName],[ButtonType],[ButtonName],[VoucherTypecode]
           ,[IsActive],[UserId],[UserDate])
     VALUES (2,'GetBigBill','GetBigBillMar',2,'BigPrint',15,'true',1,'NULL')


 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 Invalid column name 'IsSendEmail'.
=====

IF NOT EXISTS(select Ledgername from mledger where groupno= 37)
BEGIN


INSERT INTO MLedger(  LedgerUserNo, LedgerName, GroupNo, OpeningBalance, SignCode, MaintainBillByBill, IsActive, ContactPerson, CompanyNo, LedgerStatus, IsEnroll, IsSendSMS, 
                      UserID, UserDate, TransporterNo, StateCode, LedgerLangName, IsPartyWiseRate, QuotationRate, ContactPersonLang, StatusNo, IsSendEmail)
     VALUES (0,'NA',37,0.00,0,'False','True','NA',1,2,'False','False',1,'3/4/2019 12:00:00 AM',0,27,'','False','False','naa',2,'False')    

END


 Error End ======================== Vriha iTech3/8/2019 6:22:21 PM
Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.MRateSetting' is specified more than once.
=====

--<Version = 1.0.1.5>


SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MRateSetting ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.MRateSetting ADD CONSTRAINT
	DF_MRateSetting_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 6:23:59 PM
Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.TStock' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.TStock ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.TStock ADD CONSTRAINT
	DF_TStock_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 6:23:59 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

ALTER PROCEDURE [dbo].[AddMRateSetting2]
     @PkSrNo                              numeric(18),
--   @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
	 @MRP				                  numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                           numeric(18,4),
	 @BSaleRate                           numeric(18,4),
	 @CSaleRate                           numeric(18,4),
	 @DSaleRate                           numeric(18,4),
	 @ESaleRate                           numeric(18,4),
	 @StockConversion					  Numeric(18,2),
--	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive							  bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
     @Weight1                             Numeric(18,2),  
     @Weight2                             Numeric(18,2),
     @LPPerc                             Numeric(18,2),  
     @SPPerc                             Numeric(18,2),
     @Hamali                             Numeric(18,2)
AS
if(cast(@FromDate as datetime) < cast('02-02-1900 00:00:00' as datetime))
begin
	set @FromDate= Convert(datetime,Cast(getdate() as varchar))
end
IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET

          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
	      MRP = @MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2,
          Weight1 = @Weight1,                              
          Weight2 = @Weight2,
          LPPerc = @LPPerc,                              
          SPPerc = @SPPerc,
          Hamali=@Hamali  
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT('MRateSetting', RESEED, @Id)
       INSERT INTO MRateSetting(
          ItemNo,
          FromDate,
          PurRate,
	      MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,

		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo,
          Weight1 ,                             
          Weight2,
          LPPerc,
          SPPerc,
          Hamali
)
       VALUES(
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1,
          @Weight1,                              
          @Weight2,
          @LPPerc,
          @SPPerc,
          @Hamali
)

END


 Error End ======================== Vriha iTech3/8/2019 6:24:02 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

ALTER Function [dbo].[GetItemRateAll]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive='true' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive='true' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
				AND MItemMaster.GroupNo=@PGroupNo
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End


 Error End ======================== Vriha iTech3/8/2019 6:24:02 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(468,'SB_Hamali',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(374,'S_IsMobileShop',1,'False',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(375,'P_IsBroker',1,'False',NULL,2);


 Error End ======================== Vriha iTech3/8/2019 6:24:02 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(172,8,'Broker Master',21,'Master.BrokerAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:24:02 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(170,2,'Cash Denomination Master',134,'Master.CashDenominationAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:24:02 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(171,3,'Cash Denomination Master',134,'Utilities.CashSlip',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:24:02 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

Create Function [dbo].[GetItemRateAllAuto]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18),
@PDepartmentNo				numeric(18),
@PCatNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null) and (@PDepartmentNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive='true' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive='true' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
AND MItemMaster.FkDepartmentNo=Case When @PDepartmentNo is null then MItemMaster.FkDepartmentNo else @PDepartmentNo end
				AND MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.Groupno else @PGroupNo  end
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End


 Error End ======================== Vriha iTech3/8/2019 6:24:02 PM
Error Start =========
 There is already an object named 'MPrintReportName' in the database.
=====

CREATE TABLE [dbo].[MPrintReportName](
	[PkSrNO] [numeric](18, 0) NOT NULL,
	[ReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LangReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ButtonType] [numeric](18, 0) NOT NULL,
	[ButtonName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[VoucherTypecode] [numeric](18, 0) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MPrintReportName] PRIMARY KEY CLUSTERED 
(
	[PkSrNO] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 6:24:03 PM
Error Start =========
 Conversion failed when converting datetime from character string.
=====

INSERT INTO [dbo].[MPrintReportName]([PkSrNO],[ReportName],[LangReportName],[ButtonType],[ButtonName],[VoucherTypecode]
           ,[IsActive],[UserId],[UserDate])
     VALUES (1,'GetBill','GetBillMar',1,'Print',15,'true',1,'NULL')
INSERT INTO [dbo].[MPrintReportName]([PkSrNO],[ReportName],[LangReportName],[ButtonType],[ButtonName],[VoucherTypecode]
           ,[IsActive],[UserId],[UserDate])
     VALUES (2,'GetBigBill','GetBigBillMar',2,'BigPrint',15,'true',1,'NULL')


 Error End ======================== Vriha iTech3/8/2019 6:24:03 PM
Error Start =========
 Invalid column name 'IsSendEmail'.
=====

IF NOT EXISTS(select Ledgername from mledger where groupno= 37)
BEGIN


INSERT INTO MLedger(  LedgerUserNo, LedgerName, GroupNo, OpeningBalance, SignCode, MaintainBillByBill, IsActive, ContactPerson, CompanyNo, LedgerStatus, IsEnroll, IsSendSMS, 
                      UserID, UserDate, TransporterNo, StateCode, LedgerLangName, IsPartyWiseRate, QuotationRate, ContactPersonLang, StatusNo, IsSendEmail)
     VALUES (0,'NA',37,0.00,0,'False','True','NA',1,2,'False','False',1,'3/4/2019 12:00:00 AM',0,27,'','False','False','naa',2,'False')    

END


 Error End ======================== Vriha iTech3/8/2019 6:24:03 PM
Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.MRateSetting' is specified more than once.
=====

--<Version = 1.0.1.5>


SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MRateSetting ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.MRateSetting ADD CONSTRAINT
	DF_MRateSetting_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 6:27:38 PM
Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.TStock' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.TStock ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.TStock ADD CONSTRAINT
	DF_TStock_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 6:27:39 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

ALTER PROCEDURE [dbo].[AddMRateSetting2]
     @PkSrNo                              numeric(18),
--   @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
	 @MRP				                  numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                           numeric(18,4),
	 @BSaleRate                           numeric(18,4),
	 @CSaleRate                           numeric(18,4),
	 @DSaleRate                           numeric(18,4),
	 @ESaleRate                           numeric(18,4),
	 @StockConversion					  Numeric(18,2),
--	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive							  bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
     @Weight1                             Numeric(18,2),  
     @Weight2                             Numeric(18,2),
     @LPPerc                             Numeric(18,2),  
     @SPPerc                             Numeric(18,2),
     @Hamali                             Numeric(18,2)
AS
if(cast(@FromDate as datetime) < cast('02-02-1900 00:00:00' as datetime))
begin
	set @FromDate= Convert(datetime,Cast(getdate() as varchar))
end
IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET

          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
	      MRP = @MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2,
          Weight1 = @Weight1,                              
          Weight2 = @Weight2,
          LPPerc = @LPPerc,                              
          SPPerc = @SPPerc,
          Hamali=@Hamali  
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT('MRateSetting', RESEED, @Id)
       INSERT INTO MRateSetting(
          ItemNo,
          FromDate,
          PurRate,
	      MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,

		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo,
          Weight1 ,                             
          Weight2,
          LPPerc,
          SPPerc,
          Hamali
)
       VALUES(
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1,
          @Weight1,                              
          @Weight2,
          @LPPerc,
          @SPPerc,
          @Hamali
)

END


 Error End ======================== Vriha iTech3/8/2019 6:27:41 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

ALTER Function [dbo].[GetItemRateAll]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive='true' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive='true' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
				AND MItemMaster.GroupNo=@PGroupNo
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End


 Error End ======================== Vriha iTech3/8/2019 6:27:42 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(468,'SB_Hamali',4,'True',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(374,'S_IsMobileShop',1,'False',NULL,2);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(375,'P_IsBroker',1,'False',NULL,2);


 Error End ======================== Vriha iTech3/8/2019 6:27:42 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(172,8,'Broker Master',21,'Master.BrokerAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:27:42 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(170,2,'Cash Denomination Master',134,'Master.CashDenominationAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:27:42 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(171,3,'Cash Denomination Master',134,'Utilities.CashSlip',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:27:42 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

Create Function [dbo].[GetItemRateAllAuto]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18),
@PDepartmentNo				numeric(18),
@PCatNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null) and (@PDepartmentNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive='true' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive='true' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
AND MItemMaster.FkDepartmentNo=Case When @PDepartmentNo is null then MItemMaster.FkDepartmentNo else @PDepartmentNo end
				AND MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.Groupno else @PGroupNo  end
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End


 Error End ======================== Vriha iTech3/8/2019 6:27:42 PM
Error Start =========
 There is already an object named 'MPrintReportName' in the database.
=====

CREATE TABLE [dbo].[MPrintReportName](
	[PkSrNO] [numeric](18, 0) NOT NULL,
	[ReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LangReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ButtonType] [numeric](18, 0) NOT NULL,
	[ButtonName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[VoucherTypecode] [numeric](18, 0) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MPrintReportName] PRIMARY KEY CLUSTERED 
(
	[PkSrNO] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 6:27:42 PM
Error Start =========
 Invalid column name 'IsSendEmail'.
=====

IF NOT EXISTS(select Ledgername from mledger where groupno= 37)
BEGIN


INSERT INTO MLedger(  LedgerUserNo, LedgerName, GroupNo, OpeningBalance, SignCode, MaintainBillByBill, IsActive, ContactPerson, CompanyNo, LedgerStatus, IsEnroll, IsSendSMS, 
                      UserID, UserDate, TransporterNo, StateCode, LedgerLangName, IsPartyWiseRate, QuotationRate, ContactPersonLang, StatusNo, IsSendEmail)
     VALUES (0,'NA',37,0.00,0,'False','True','NA',1,2,'False','False',1,'3/4/2019 12:00:00 AM',0,27,'','False','False','naa',2,'False')    

END


 Error End ======================== Vriha iTech3/8/2019 6:27:42 PM
Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.MRateSetting' is specified more than once.
=====

--<Version = 1.0.1.5>


SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MRateSetting ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.MRateSetting ADD CONSTRAINT
	DF_MRateSetting_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.TStock' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.TStock ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.TStock ADD CONSTRAINT
	DF_TStock_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

ALTER PROCEDURE [dbo].[AddMRateSetting2]
     @PkSrNo                              numeric(18),
--   @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
	 @MRP				                  numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                           numeric(18,4),
	 @BSaleRate                           numeric(18,4),
	 @CSaleRate                           numeric(18,4),
	 @DSaleRate                           numeric(18,4),
	 @ESaleRate                           numeric(18,4),
	 @StockConversion					  Numeric(18,2),
--	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive							  bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
     @Weight1                             Numeric(18,2),  
     @Weight2                             Numeric(18,2),
     @LPPerc                             Numeric(18,2),  
     @SPPerc                             Numeric(18,2),
     @Hamali                             Numeric(18,2)
AS
if(cast(@FromDate as datetime) < cast('02-02-1900 00:00:00' as datetime))
begin
	set @FromDate= Convert(datetime,Cast(getdate() as varchar))
end
IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET

          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
	      MRP = @MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2,
          Weight1 = @Weight1,                              
          Weight2 = @Weight2,
          LPPerc = @LPPerc,                              
          SPPerc = @SPPerc,
          Hamali=@Hamali  
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT('MRateSetting', RESEED, @Id)
       INSERT INTO MRateSetting(
          ItemNo,
          FromDate,
          PurRate,
	      MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,

		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo,
          Weight1 ,                             
          Weight2,
          LPPerc,
          SPPerc,
          Hamali
)
       VALUES(
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1,
          @Weight1,                              
          @Weight2,
          @LPPerc,
          @SPPerc,
          @Hamali
)

END


 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

ALTER Function [dbo].[GetItemRateAll]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive='true' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive='true' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
				AND MItemMaster.GroupNo=@PGroupNo
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End


 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(172,8,'Broker Master',21,'Master.BrokerAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(170,2,'Cash Denomination Master',134,'Master.CashDenominationAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(171,3,'Cash Denomination Master',134,'Utilities.CashSlip',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
Invalid column name 'Weight1'.
Invalid column name 'Weight2'.
Invalid column name 'LPPerc'.
Invalid column name 'SPPerc'.
=====

Create Function [dbo].[GetItemRateAllAuto]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18),
@PDepartmentNo				numeric(18),
@PCatNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null) and (@PDepartmentNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive='true' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive='true' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
AND MItemMaster.FkDepartmentNo=Case When @PDepartmentNo is null then MItemMaster.FkDepartmentNo else @PDepartmentNo end
				AND MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.Groupno else @PGroupNo  end
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End


 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 There is already an object named 'MPrintReportName' in the database.
=====

CREATE TABLE [dbo].[MPrintReportName](
	[PkSrNO] [numeric](18, 0) NOT NULL,
	[ReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LangReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ButtonType] [numeric](18, 0) NOT NULL,
	[ButtonName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[VoucherTypecode] [numeric](18, 0) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MPrintReportName] PRIMARY KEY CLUSTERED 
(
	[PkSrNO] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MPrintReportName'. Cannot insert duplicate key in object 'dbo.MPrintReportName'.
Violation of PRIMARY KEY constraint 'PK_MPrintReportName'. Cannot insert duplicate key in object 'dbo.MPrintReportName'.
The statement has been terminated.
The statement has been terminated.
=====

INSERT INTO [dbo].[MPrintReportName]([PkSrNO],[ReportName],[LangReportName],[ButtonType],[ButtonName],[VoucherTypecode]
           ,[IsActive],[UserId],[UserDate])
     VALUES (1,'GetBill','GetBillMar',1,'Print',15,'true',1,NULL)
INSERT INTO [dbo].[MPrintReportName]([PkSrNO],[ReportName],[LangReportName],[ButtonType],[ButtonName],[VoucherTypecode]
           ,[IsActive],[UserId],[UserDate])
     VALUES (2,'GetBigBill','GetBigBillMar',2,'BigPrint',15,'true',1,NULL)


 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 Invalid column name 'IsSendEmail'.
=====

IF NOT EXISTS(select Ledgername from mledger where groupno= 37)
BEGIN


INSERT INTO MLedger(  LedgerUserNo, LedgerName, GroupNo, OpeningBalance, SignCode, MaintainBillByBill, IsActive, ContactPerson, CompanyNo, LedgerStatus, IsEnroll, IsSendSMS, 
                      UserID, UserDate, TransporterNo, StateCode, LedgerLangName, IsPartyWiseRate, QuotationRate, ContactPersonLang, StatusNo, IsSendEmail)
     VALUES (0,'NA',37,0.00,0,'False','True','NA',1,2,'False','False',1,'3/4/2019 12:00:00 AM',0,27,'','False','False','naa',2,'False')    

END


 Error End ======================== Vriha iTech3/8/2019 6:32:06 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]
           ([PkSettingNo]
           ,[SettingKeyCode]
           ,[SettingTypeNo]
           ,[SettingValue]
           ,[SettingDescription])
     VALUES
           (369
           ,'S_IsPartyWiseDisc'
           ,1
           ,'False'
           ,NULL);


 Error End ======================== Vriha iTech3/8/2019 6:47:55 PM

Error Start =========
 Column names in each table must be unique. Column name 'CreditDays' in table 'dbo.MLedgerDetails' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MLedgerDetails ADD
	CreditDays numeric(18, 0) NULL 


 Error End ======================== Vriha iTech3/8/2019 6:47:55 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
The statement has been terminated.
The statement has been terminated.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription])
     VALUES(370,'S_IsSMSSend',1,'False',NULL);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription])
     VALUES(371,'S_IsEmailSend',1,'False',NULL);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription])
     VALUES(372,'S_IsAutoSMSSend',1,'False',NULL);

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription])
     VALUES(373,'S_IsAutoEmailSend',1,'False',NULL);


 Error End ======================== Vriha iTech3/8/2019 6:47:55 PM

Error Start =========
 'CREATE/ALTER PROCEDURE' must be the first statement in a query batch.
Incorrect syntax near the keyword 'ELSE'.
=====
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON

Create PROCEDURE [dbo].[AddMRack]
     @RackNo                              numeric(18),
     @RackName                            varchar(50),
     @RackCode                            varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)

AS
IF EXISTS(select RackNo from MRack
          where
          RackNo = @RackNo)
     BEGIN
       --Update existing row
       UPDATE MRack
       SET
          RackName = @RackName,
          RackCode = @RackCode,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
	      CompanyNo=@CompanyNo

       WHERE
          RackNo = @RackNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(RackNo),0) From MRack
       DBCC CHECKIDENT('MRack', RESEED, @Id)
       INSERT INTO MRack(
          RackName,
          RackCode,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo
)
       VALUES(
          @RackName,
          @RackCode,
          @IsActive,
          @UserID,
          @UserDate,
	      @CompanyNo
)

END


 Error End ======================== Vriha iTech3/8/2019 6:47:55 PM

Error Start =========
 There is already an object named 'DeleteMRack' in the database.
=====

Create PROCEDURE  [dbo].[DeleteMRack] 
@RackNo                             numeric(18)

AS
Update MRack set IsActive='False' where RackNo = @RackNo


 Error End ======================== Vriha iTech3/8/2019 6:47:55 PM

Error Start =========
 There is already an object named 'DeleteMLedgerGroup' in the database.
=====

Create PROCEDURE  [dbo].[DeleteMLedgerGroup] 
@LedgerGroupNo                          numeric(18)

AS
Update MLedgerGroup set IsActive='False' where LedgerGroupNo= @LedgerGroupNo


 Error End ======================== Vriha iTech3/8/2019 6:47:55 PM

Error Start =========
 There is already an object named 'TDeliveryAddress' in the database.
=====

CREATE TABLE [dbo].[TDeliveryAddress](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherno] [numeric](18, 0) NULL,
	[Ledgerno] [numeric](18, 0) NULL,
	[LedgerDetailsNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserId] [int] NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[StatusNo] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TDeliveryAddress] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 6:47:55 PM

Error Start =========
 There is already an object named 'TEWayDetails' in the database.
=====

CREATE TABLE [dbo].[TEWayDetails](
	[PKEWayNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherNo] [int] NULL,
	[EWayNo] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[VoucherUserNo] [numeric](18, 0) NULL,
	[EWayDate] [datetime] NULL,
	[ModeNo] [numeric](18, 0) NULL,
	[Distance] [numeric](18, 2) NULL,
	[TransportNo] [numeric](18, 0) NULL,
	[VehicleNo] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LRNo] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LRDate] [datetime] NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[LedgerName] [varchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Address] [varchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CityNo] [numeric](18, 0) NULL,
	[Yadi2018BhatiyaCityName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PinCode] [numeric](18, 0) NULL,
	[StateCode] [numeric](18, 0) NULL,
	[StateName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[StatusNo] [int] NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_TEWayDetails] PRIMARY KEY CLUSTERED 
(
	[PKEWayNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 6:47:55 PM

Error Start =========
 There is already an object named 'GetRackWiseBill' in the database.
=====

Create PROCEDURE [dbo].[GetRackWiseBill]
@PkVoucherNo                numeric(18),
@Type						int

AS
Begin

SELECT     TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherDate, CASE WHEN (@Type = 1) 
                      THEN MStockItems_V_1.ItemName ELSE MStockItems_V_1.ItemNameLang END AS ItemName, MRateSetting.MRP, TStock.Quantity, TStock.GRWeight, 
                      TStock.TRWeight, TStock.PackagingCharges, TStock.NoOfBag, TStock.CessValue, TStock.OtherCharges AS Dhekharek, TStock.Rate, TStock.Amount, MUOM.UOMName, 
                      TStock.SGSTPercentage, TStock.SGSTAmount, TStock.DiscPercentage, TStock.DiscAmount, TStock.DiscRupees, TStock.DiscPercentage2, TStock.DiscAmount2, 
                      TStock.DiscRupees2, TStock.CGSTPercentage, TStock.CGSTAmount, TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, TStock.CessAmount, 
                      MLedgerDetails.GSTNO AS CustGSTNo, MLedgerDetails.PANNo AS CustPANNo, MLedgerDetails.FSSAI, MFirm.GSTNO AS CmpGSTNo, MLedger.StateCode, 
                      MItemMaster.HSNCode, TVoucherEntry.BilledAmount, CASE WHEN (@Type = 1) THEN LedgerName ELSE LedgerLangName END AS LedgerName, 
                      MLedger.ContactPerson, MLedgerDetails.PhNo1 AS CustPhNo, MLedgerDetails.MobileNo1 AS CustMoNo, CASE WHEN (@Type = 1) 
                      THEN MLedgerDetails.Address ELSE MLedgerDetails.AddressLang END AS CustAddress, MFirm.Address + ' / ' + MFirm.PinCode AS CmpAddress, 
                      MFirm.EmailID AS CmpEmailID, MFirm.PhoneNo1 + ' / ' + MFirm.PhoneNo2 AS CompPhoneNo, MFirm.FSSAINO AS CompFSSAINo, TVoucherEntry.Reference, 
                      TVoucherEntry.VoucherTime, TStock.NetAmount + TStock.CessValue + TStock.PackagingCharges + TStock.OtherCharges AS NetAmount, TStock.NetRate, 
                      TStock.DisplayItemName, TStock.Remarks AS RemarksItemlevel, '' AS TransporterName, TVoucherEntry.LRNo, MTransporterMode.TransModeName, 
                      TVoucherEntry.TransNoOfItems,
                          (SELECT     SettingValue
                            FROM          MSettings
                            WHERE      (PkSettingNo = 311)) AS DisplayTrans, TVoucherEntry.Remark, MState.StateName, MCity.CityName, MPayType.PayTypeName, 
                      MLedgerDetails_1.Address AS CustDeliveryAddress, mcity_1.CityName AS custDeliverycity, MRack.RackName, MRackDetails.ToQty
FROM         MCity AS mcity_1 RIGHT OUTER JOIN
                      TStock INNER JOIN
                      MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN
                      TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
                      MFirm ON TVoucherEntry.CompanyNo = MFirm.FirmNo INNER JOIN
                      MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                      dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems_V_1 ON TStock.ItemNo = MStockItems_V_1.ItemNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MLedgerDetails ON MLedgerDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo LEFT OUTER JOIN
                      MTransporterMode ON TVoucherEntry.TransportMode = MTransporterMode.TransModeNo INNER JOIN
                      MState ON MLedger.StateCode = MState.StateCode LEFT OUTER JOIN
                      MCity ON MLedgerDetails.CityNo = MCity.CityNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      MRack INNER JOIN
                      MRackDetails ON MRack.RackNo = MRackDetails.FkRackNo ON MItemMaster.GroupNo = MRackDetails.ItemNo LEFT OUTER JOIN
                      TDeliveryAddress ON TVoucherEntry.PkVoucherNo = TDeliveryAddress.FkVoucherno AND TVoucherEntry.LedgerNo = TDeliveryAddress.Ledgerno LEFT OUTER JOIN
                      MLedgerDetails AS MLedgerDetails_1 ON MLedgerDetails_1.LedgerDetailsNo = TDeliveryAddress.LedgerDetailsNo AND 
                      TDeliveryAddress.Ledgerno = MLedgerDetails_1.DeliveryLedgerNo ON mcity_1.CityNo = MLedgerDetails_1.CityNo
WHERE     (TVoucherEntry.PkVoucherNo = @PkVoucherNo)

ORDER BY TStock.PkStockTrnNo

END


 Error End ======================== Vriha iTech3/8/2019 6:47:55 PM

Error Start =========
 There is already an object named 'GetGSTB2BPayTypewise' in the database.
=====

Create PROCEDURE [dbo].[GetGSTB2BPayTypewise] 
	@FromDate datetime,
	@ToDate datetime
		
AS
BEGIN
SELECT    'Cash SAles' as LedgerName, '21' as LedgerNo,SUM(TStock.NetAmount) AS basic, TStock.SGSTPercentage *2 AS taxPer,
 SUM(TStock.SGSTAmount) as cgstamt  , sum(TStock.SGSTAmount) AS sgstamount,     SUM(TStock.Amount) AS Expr2, MPayType.PayTypeName
FROM         TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo
WHERE     (TVoucherEntry.VoucherTypeCode = 15) AND (TVoucherEntry.IsCancel = 'false') AND (TVoucherEntry.PayTypeNo = 2) AND (TVoucherEntry.LedgerNo = 21) 
AND (TVoucherEntry.VoucherDate >= @FromDate) AND (TVoucherEntry.VoucherDate <=@ToDate)
GROUP BY TStock.SGSTPercentage, MPayType.PayTypeName

union 
SELECT     MLedger.LedgerName, TVoucherEntry.LedgerNo, SUM(TStock.NetAmount) AS basic, TStock.SGSTPercentage * 2 AS taxPer,
SUM(TStock.SGSTAmount) as cgstamt  , sum(TStock.SGSTAmount) AS sgstamount, 
                      SUM(TStock.Amount) AS Expr2, MPayType.PayTypeName
FROM         TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo
WHERE     (TVoucherEntry.VoucherTypeCode = 15) AND (TVoucherEntry.IsCancel = 'false') AND (TVoucherEntry.PayTypeNo = 2) AND (TVoucherEntry.LedgerNo != 21) 
AND (TVoucherEntry.VoucherDate >= @FromDate) AND (TVoucherEntry.VoucherDate <=@ToDate)
GROUP BY TVoucherEntry.LedgerNo, TStock.SGSTPercentage, MPayType.PayTypeName, MLedger.LedgerName
union
SELECT     MLedger.LedgerName, TVoucherEntry.LedgerNo, SUM(TStock.NetAmount) AS basic, TStock.SGSTPercentage * 2 AS taxPer,
SUM(TStock.SGSTAmount) as cgstamt  , sum(TStock.SGSTAmount) AS sgstamount, 
                      SUM(TStock.Amount) AS Expr2, MPayType.PayTypeName
FROM         TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo
WHERE     (TVoucherEntry.VoucherTypeCode = 15) AND (TVoucherEntry.IsCancel = 'false') AND (TVoucherEntry.PayTypeNo!= 2)
AND (TVoucherEntry.VoucherDate >= @FromDate) AND (TVoucherEntry.VoucherDate <=@ToDate)
GROUP BY TVoucherEntry.LedgerNo, TStock.SGSTPercentage, MPayType.PayTypeName, MLedger.LedgerName

end


 Error End ======================== Vriha iTech3/8/2019 6:47:55 PM

Error Start =========
 Column already has a DEFAULT bound to it.
Could not create constraint. See previous errors.
=====

ALTER TABLE MRateSetting ADD CONSTRAINT Stock DEFAULT 0 FOR Stock

ALTER TABLE MRateSetting ADD CONSTRAINT Stock2 DEFAULT 0 FOR Stock2

ALTER TABLE MRateSetting ADD CONSTRAINT Weight1 DEFAULT 0 FOR Weight1

ALTER TABLE MRateSetting ADD CONSTRAINT Weight2 DEFAULT 0 FOR Weight2

ALTER TABLE MRateSetting ADD CONSTRAINT SPPerc DEFAULT 0 FOR SPPerc

ALTER TABLE MRateSetting ADD CONSTRAINT LPPerc DEFAULT 0 FOR LPPerc


 Error End ======================== Vriha iTech3/8/2019 6:47:56 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_DBVersionLog'. Cannot insert duplicate key in object 'dbo.DBVersionLog'.
The statement has been terminated.
=====

IF NOT EXISTS(select ScriptNo from DBVersionLog where ScriptNo = 3)
BEGIN

UPDATE MSetting SET AppVersion = 'rKNKsixM4yg=';

INSERT INTO [DBVersionLog]
           ([ScriptNo]
           ,[ScriptDescription])
     VALUES
           (2
           ,'Updated application version to 1.0.1.0')
END


 Error End ======================== Vriha iTech3/8/2019 6:47:56 PM

Error Start =========
 Invalid object name 'dbo.GetItemClosingStockByDate'.
=====

Alter PROCEDURE [dbo].[GetItemClosingStockByDate]
@MonthNo int,
@CompNo numeric(18),
@FrDate datetime,
@ToDate datetime,	
@ItemNo numeric(18)
AS
BEGIN
	SELECT  Distinct   CONVERT(varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntry.VoucherUserNo AS VoucherSrNo , MLedger.LedgerName AS Particulars, MVoucherType.VoucherTypeName, TVoucherEntry.PKVoucherNo, 
             case when  TStock.trncode=1 then sum(abs(TStock.BilledQuantity+TStock.FreeQty)) else 0 end as [Inward Quantity], case when  TStock.trncode=2 then sum(abs(TStock.BilledQuantity+TStock.FreeQty)) else 0 end AS [Outward Quantity]
    FROM        TVoucherEntry INNER JOIN
                      --TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo  = TStock.FkVoucherTrnNo
WHERE   --  (TVoucherDetails.VoucherSrNo = 1) AND 
(TStock.ItemNo = @ItemNo) and (month(TVoucherEntry.VoucherDate)= @MonthNo)
		And (TVoucherEntry.CompanyNo = @CompNo) And	(TVoucherEntry.VoucherDate >= @FrDate) And (TVoucherEntry.VoucherDate <= @ToDate)  and TVoucherEntry.IsCancel='false'
Group by TVoucherEntry.VoucherDate,TVoucherEntry.VoucherUserNo,MLedger.LedgerName,MVoucherType.VoucherTypeName, TVoucherEntry.PKVoucherNo,
TStock.trncode

Union
SELECT DISTINCT 
                      CONVERT(varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntry.VoucherUserNo AS VoucherSrNo,MVoucherType.VoucherTypeName AS Particulars, MVoucherType.VoucherTypeName, TVoucherEntry.PKVoucherNo, 
                      CASE WHEN TStock.trncode = 1 THEN sum(abs(TStock.BilledQuantity+TStock.FreeQty)) ELSE 0 END AS [Inward Quantity], 
                      CASE WHEN TStock.trncode = 2 THEN sum(abs(TStock.BilledQuantity+TStock.FreeQty)) ELSE 0 END AS [Outward Quantity]
FROM           TStock INNER JOIN
                      TVoucherEntry INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo
WHERE     (TStock.ItemNo = @ItemNo) and (month(TVoucherEntry.VoucherDate)= @MonthNo)
		And (TVoucherEntry.CompanyNo = @CompNo) And	(TVoucherEntry.VoucherDate >= @FrDate) And (TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherEntry.VoucherTypeCode in(23,24,8,32,19))  and TVoucherEntry.IsCancel='false'
	Group by TVoucherEntry.VoucherDate,TVoucherEntry.VoucherUserNo,TVoucherEntry.VoucherTypeCode,MVoucherType.VoucherTypeName, TVoucherEntry.PKVoucherNo,
TStock.trncode
	
END


 Error End ======================== Vriha iTech3/8/2019 6:47:56 PM

Error Start =========
 Invalid object name 'dbo.AddTDeliveryAddress'.
=====

ALTER PROCEDURE [dbo].[AddTDeliveryAddress]
     @PkSrNo                              numeric(18),
     @FkVoucherno                         numeric(18),
     @Ledgerno                            numeric(18),
     @LedgerDetailsNo                     numeric(18),
     @IsActive                            bit,
     @UserId                              int,
	 @UserDate					          datetime,
	 --@ModifiedBy					      varchar(500),
@Companyno                   int
   --  @StatusNo							  int
	
AS
IF EXISTS(select PkSrNo from TDeliveryAddress
          where
          FkVoucherno = @FkVoucherno)
     BEGIN
       --Update existing row
       UPDATE TDeliveryAddress
       SET
          FkVoucherno		= @FkVoucherno,
          Ledgerno			= @Ledgerno,
		  LedgerDetailsNo	= @LedgerDetailsNo,
          IsActive			= @IsActive,
          UserID			= @UserID,
          UserDate			= @UserDate,
          ModifiedBy		= isnull(ModifiedBy,'') + cast(@UserID as varchar)+'@'+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo			= 2

       WHERE
          FkVoucherno = @FkVoucherno

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TDeliveryAddress
       DBCC CHECKIDENT('TDeliveryAddress', RESEED, @Id)
       INSERT INTO TDeliveryAddress(
 
          FkVoucherno,
          Ledgerno,
		  LedgerDetailsNo,
          IsActive,
          UserID,
          UserDate,
CompanyNo,
          StatusNo	
)
       VALUES(

          @FkVoucherno,
          @Ledgerno,
		  @LedgerDetailsNo,
		  @IsActive,
		  @UserID,
		  @UserDate,
@CompanyNo,
          1
)

END


 Error End ======================== Vriha iTech3/8/2019 6:47:56 PM

Error Start =========
 Invalid object name 'dbo.AddTEWayDetails'.
=====

ALTER PROCEDURE [dbo].[AddTEWayDetails]
    @PKEWayNo						numeric(18),						                            
    @FkVoucherNo					numeric(18),		                       
    @EWayNo							varchar(50),                     
    @VoucherUserNo                  numeric(18),     
    @EWayDate                       datetime,
    @ModeNo                         numeric(18),
    @Distance                       numeric(18,2),    
	@TransportNo					numeric(18),							  
	@VehicleNo						varchar(50),
	@LRNo								varchar(50),
	@LRDate							datetime,
	@LedgerNo						numeric(18),
	@LedgerName						varchar(max),
	@Address						varchar(max),
	@CityNo							numeric(18),
	@CityName						varchar(50),
	@PinCode						numeric(18),
	@StateCode						numeric(18),
	@StateName						varchar(50),
	@UserID							numeric(18),
	@UserDate						datetime,
	--@ModifiedBy						varchar(max),
	@StatusNo						int,
	@IsActive						bit
    
AS
IF EXISTS(select FkVoucherNo from [TEWayDetails]
          where
          FkVoucherNo = @FkVoucherNo)
     BEGIN
       UPDATE TEWayDetails
       SET

	FkVoucherNo		= @FkVoucherNo,
	EWayNo			= @EWayNo,
	VoucherUserNo	= @VoucherUserNo,
	EWayDate		= @EWayDate,
	ModeNo			= @ModeNo,
	Distance		= @Distance,
	TransportNo		= @TransportNo,
	VehicleNo		= @VehicleNo,
	LRNo			= @LRNo,
	LRDate			= @LRDate,
	LedgerNo		= @LedgerNo,
	LedgerName		= @LedgerName,
	Address			= @Address,
	CityNo			= @CityNo,
	CityName		= @CityName,
	PinCode			= @PinCode,
	StateCode		= @StateCode,
	StateName		= @StateName,
	UserID			= @UserID,
	UserDate		= @UserDate,
	ModifiedBy		= isnull(ModifiedBy,'') + cast(@UserID as varchar)+'@'+ CONVERT(VARCHAR(10), GETDATE(), 105),
	StatusNo		= 2,
	IsActive		= @IsActive
    
       WHERE
          PKEWayNo = @PKEWayNo

     END
ELSE
     BEGIN
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PKEWayNo),0) From TEWayDetails
       DBCC CHECKIDENT('TEWayDetails', RESEED, @Id)
       INSERT INTO TEWayDetails(

			FkVoucherNo,
			EWayNo,
			VoucherUserNo,
			EWayDate,
			ModeNo,
			Distance,
			TransportNo,
			VehicleNo,
			LRNo,
			LRDate,
			LedgerNo,
			LedgerName,
			Address,
			CityNo,
			CityName,
			PinCode,
			StateCode,
			StateName,
			UserID,
			UserDate,
			--ModifiedBy,
			StatusNo,
			IsActive
		        
)
       VALUES(
			@FkVoucherNo,
			@EWayNo,
			@VoucherUserNo,
			@EWayDate,
			@ModeNo,
			@Distance,
			@TransportNo,
			@VehicleNo,
			@LRNo,
			@LRDate,
			@LedgerNo,
			@LedgerName,
			@Address,
			@CityNo,
			@CityName,
			@PinCode,
			@StateCode,
			@StateName,
			@UserID,
			@UserDate,
			--@ModifiedBy,
			1,
			@IsActive                 
)

END


 Error End ======================== Vriha iTech3/8/2019 6:47:56 PM

Error Start =========
 There is already an object named 'GetChequePrintDetails' in the database.
=====

--<EndVersion = 1.0.0.0>

--<Version = 1.0.1.1>

Create Procedure [dbo].[GetChequePrintDetails]
@ChqPrintingNo	numeric(18)
AS
Begin
	SELECT     MLedger.LedgerName, TChequePrinting.ChequeDate, TVoucherEntry.BilledAmount As ChequeAmount, TChequePrinting.Remark1, TChequePrinting.Remark2, 
                      TChequePrinting.Remark3
FROM         TChequePrinting INNER JOIN
                      MLedger ON TChequePrinting.LedgerNo = MLedger.LedgerNo INNER JOIN
                      TVoucherEntry ON TChequePrinting.FKVoucherNo = TVoucherEntry.PkVoucherNo
WHERE     (TChequePrinting.PkSrNo = @ChqPrintingNo)	
End


 Error End ======================== Vriha iTech3/8/2019 6:47:56 PM

Error Start =========
 Invalid column name 'esflag'.
Invalid column name 'esflag'.
=====

Alter Procedure [dbo].[GetStockSummaryAllReport]
@CompNo		           numeric(18),
@FromDate	           datetime,
@ToDate		           datetime,
@ItStr		           varchar(max),
@EsFlag                int
As
declare @VType varchar(100),@SVType varchar(100),@SRVType varchar(100),@PVType varchar(100),@PRVType varchar(100)
declare @OPVType varchar(100),@PhVType varchar(100),@ProdVType varchar(100)
if(@EsFlag=0)
begin
        set @VType='15,9,12,13,8,36'
		set @SVType='15'
		set @SRVType='12'
		set @PVType='9'
		set @PRVType='13'
      set @OPVType='36'
       set @PhVType='8'
      set @ProdVType='0'
end
else if(@EsFlag=1)
begin
        set @VType='115,109,112,113,108,136'
        set @SVType='115'
        set @SRVType='112'
		set @PVType='109'
		set @PRVType='113'
  set @OPVType='136'
       set @PhVType='108'
      set @ProdVType='1'

end

SELECT   ItemNo,sum(PurQty) AS PurQty, sum(SaleQty)  AS SaleQty,sum(PurReturnQty) AS PurReturnQty,sum(SalesReturnQty) AS SalesReturnQty,
sum(OpnOutQty) AS OpnOutQty,sum (OpnInQty) AS OpnInQty,sum (PhyOutQty) AS PhyOutQty,sum (PhyInQty) AS PhyInQty,
ItemGroupName, ItemName, Barcode,UOMH,UOMName_H,UOML,UOMName_L,HSNCode ,sum(ProdOutQty) AS ProdOutQty,sum(ProdInQty) AS ProdInQty from
(
--------Opening Stock for Out or minus---------------

SELECT     0 as StockType,   b.ItemNo, 0 AS PurQty, 0  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,   
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H,  
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo 
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@VType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     a.VoucherDate < @FromDate AND a.IsCancel = 'False' --AND a.VoucherTypeCode IN (cast (@VType)
 and b.trncode=2
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,   
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

--------Opening Stock in or plus---------------
union all 

SELECT     0 as StockType,   b.ItemNo, 0 AS PurQty, 0  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,   
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H,  
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo 
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@VType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     a.VoucherDate < @FromDate AND a.IsCancel = 'False'-- AND a.VoucherTypeCode IN  (CAST(@VType as numeric)   ) 
 and b.trncode=1
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,   
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate


Union All

------------------- Sales -------------------
SELECT   1 as StockType,     b.ItemNo, 0 AS PurQty, 
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo,MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@SVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE        (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (15))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,   MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All

------------------- Pur Return -------------------
SELECT    1 as StockType,     b.ItemNo, 0 AS PurQty, 0 AS SaleQty, 
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo,MUOM_S.UOMName AS UOMName_S, 
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PRVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (13))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- Purchase -------------------
SELECT   1 as StockType, b.ItemNo, CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PurQty, 
0 AS SaleQty,0 AS PurReturnQty, 0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,MItemGroup.ItemGroupName,
MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H,MItemMASter.UOML,
MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False')-- AND (a.VoucherTypeCode IN (9))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML,MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- Sales Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@SRVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False')-- AND (a.VoucherTypeCode IN (12))
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- Physical stock entry minus Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PhVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 

WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (8)) 
and b.trncode=2
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate
Union All
------------------- Physical stock entry plus Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End  AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PhVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 

WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (8))
 and b.trncode=1
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

union all 
SELECT     1 AS StockType, MItemMaster.ItemNo, 0 AS PurQty, 0 AS SaleQty, 0 AS PurReturnQty, 0 AS SalesReturnQty,0 as FkUomNo,'' AS UOMName_S,
                      MItemGroup.ItemGroupName, MItemMaster.ItemName, MItemMaster.Barcode, MItemMaster.UOMH, MUOM_H.UOMName AS UOMName_H, MItemMaster.UOML, 
                      MUOM_L.UOMName AS UOMName_L,
MItemMASter.HSNCode,RDate as VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,
 0 AS ProdOutQty,sum( MRecipeMain.ProdQty ) AS ProdInQty
FROM         MItemGroup INNER JOIN
                      MItemMaster ON MItemGroup.ItemGroupNo = MItemMaster.GroupNo INNER JOIN
                      MUOM ON MItemMaster.UOML = MUOM.UOMNo INNER JOIN
                      MUOM AS MUOM_H ON MItemMaster.UOMH = MUOM_H.UOMNo INNER JOIN
                      MUOM AS MUOM_L ON MItemMaster.UOML = MUOM_L.UOMNo INNER JOIN
                      MRecipeMain ON MItemMaster.ItemNo = MRecipeMain.FinishItemID
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on MRecipeMain.FinishItemID= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@ProdVType,  ',') AS Vch on MRecipeMain.esflag= CAST(vch.value AS varchar)
WHERE     (MRecipeMain.RecipeType = 2)-- and (MRecipeMain.RDate >= @FromDate) AND (MRecipeMain.RDate  <= @ToDate)
 AND (MRecipeMain.IsActive = 'True') 
GROUP BY MItemMaster.ItemNo, MItemMaster.UOML, MItemMaster.ItemName, MItemGroup.ItemGroupName, MUOM.UOMName, MItemMaster.Barcode, MItemMaster.UOMH, 
                      MUOM_H.UOMName, MItemMaster.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,RDate

union all 

SELECT     1 AS StockType, MItemMaster.ItemNo, 0 AS PurQty, 0 AS SaleQty, 0 AS PurReturnQty, 0 AS SalesReturnQty, 0 AS FkUomNo, '' AS UOMName_S, 
                      MItemGroup.ItemGroupName, MItemMaster.ItemName, MItemMaster.Barcode, MItemMaster.UOMH, MUOM_H.UOMName AS UOMName_H, MItemMaster.UOML, 
                      MUOM_L.UOMName AS UOMName_L, MItemMaster.HSNCode, MRecipeMain.RDate AS VoucherDate, 0 AS OpnOutQty, 0 AS OpnInQty, 0 AS PhyOutQty, 0 AS PhyInQty, 
                      sum(MRecipeSub.FinalQty) AS ProdOutQty,0 AS ProdInQty
FROM         MItemGroup INNER JOIN
                      MItemMaster ON MItemGroup.ItemGroupNo = MItemMaster.GroupNo INNER JOIN
                      MUOM ON MItemMaster.UOML = MUOM.UOMNo INNER JOIN
                      MUOM AS MUOM_H ON MItemMaster.UOMH = MUOM_H.UOMNo INNER JOIN
                      MUOM AS MUOM_L ON MItemMaster.UOML = MUOM_L.UOMNo INNER JOIN
                      MRecipeSub ON MItemMaster.ItemNo = MRecipeSub.RawProductID INNER JOIN
                      MRecipeMain ON MRecipeMain.MRecipeID = MRecipeSub.FKMRecipeID
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on MRecipeSub.RawProductID= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@ProdVType,  ',') AS Vch on MRecipeMain.esflag= CAST(vch.value AS varchar)
WHERE     (MRecipeMain.RecipeType = 2) and (MRecipeMain.RDate >= @FromDate) AND (MRecipeMain.RDate  <= @ToDate) AND (MRecipeMain.IsActive = 'True') 
GROUP BY MItemMaster.ItemNo, MItemMaster.UOML, MItemMaster.ItemName, MItemGroup.ItemGroupName, MUOM.UOMName, MItemMaster.Barcode, MItemMaster.UOMH, 
                      MUOM_H.UOMName, MItemMaster.UOML, MUOM_L.UOMName, MItemMaster.HSNCode, MRecipeMain.RDate


)AS tbl
GROUP BY ItemNo,ItemGroupName, ItemName, Barcode, UOMH,UOMName_H,UOML,UOMName_L,HSNCode
Order BY ItemGroupName, ItemName


 Error End ======================== Vriha iTech3/8/2019 6:47:56 PM

Error Start =========
 Column names in each table must be unique. Column name 'EmailPass' in table 'dbo.MFirm' is specified more than once.
=====

--<EndVersion = 1.0.1.3>

--<Version = 1.0.1.4>

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MFirm ADD
	EmailPass nvarchar(50) NULL


 Error End ======================== Vriha iTech3/8/2019 6:47:56 PM

Error Start =========
 Column names in each table must be unique. Column name 'UomLang' in table 'dbo.MUOM' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MUOM ADD
	UomLang varchar(50) NULL


 Error End ======================== Vriha iTech3/8/2019 6:47:56 PM

Error Start =========
 There is already an object named 'MCashDenomination' in the database.
=====

CREATE TABLE [dbo].[MCashDenomination](
	[CashDenominationNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[Note] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[RSType] [numeric](18, 0) NULL,
	[SerialNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MCashDenomination] PRIMARY KEY CLUSTERED 
(
	[CashDenominationNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'AddMCashDenomination' in the database.
=====

Create PROCEDURE [dbo].[AddMCashDenomination]
     @CashDenominationNo              numeric(18),
     @Note                            varchar(50),
     @RSType                          numeric(18),  
     @SerialNo                        numeric(18),  
     @IsActive                        bit,
     @UserID                          numeric(18),
     @UserDate                        datetime,
	 @CompanyNo						  numeric(18)

AS
IF EXISTS(select CashDenominationNo from MCashDenomination
          where
          CashDenominationNo = @CashDenominationNo)
     BEGIN
       --Update existing row
       UPDATE MCashDenomination
       SET
          Note = @Note,
          RSType=@RSType,
          SerialNo = @SerialNo,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
	      CompanyNo=@CompanyNo

       WHERE
          CashDenominationNo = @CashDenominationNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CashDenominationNo),0) From MCashDenomination
       DBCC CHECKIDENT('MCashDenomination', RESEED, @Id)
       INSERT INTO MCashDenomination(
          Note,
          RSType,
          SerialNo,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo
)
       VALUES(
          @Note,
          @RSType,
          @SerialNo,
          @IsActive,
          @UserID,
          @UserDate,
	      @CompanyNo
)

END


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'DeleteMCashDenomination' in the database.
=====

Create PROCEDURE  [dbo].[DeleteMCashDenomination] 
@CashDenominationNo                             numeric(18)


AS
Update MCashDenomination set IsActive='False' where CashDenominationNo = @CashDenominationNo


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'RptTDocketPrinting' in the database.
=====

Create Procedure [dbo].[RptTDocketPrinting]
@DocketPrintingNo numeric(18)

As

SELECT     MLedger.LedgerName, TVoucherChqCreditDetails.ChequeNo, TVoucherChqCreditDetails.ChequeDate, MBranch.BranchName, TVoucherEntry.BilledAmount, 
                      TDocketPrintingDetails.Remark, '' AS Status, TDocketPrinting.DocketUserNo, TDocketPrinting.FromDate, TDocketPrinting.ToDate, 
                      MLedger_1.LedgerName AS DepositeTo, MLedgerDetails.AccountNo AS PANNo
FROM         MLedger INNER JOIN
                      TVoucherDetails ON MLedger.LedgerNo = TVoucherDetails.LedgerNo INNER JOIN
                      TVoucherEntry INNER JOIN
                      TVoucherChqCreditDetails ON TVoucherEntry.PkVoucherNo = TVoucherChqCreditDetails.FKVoucherNo ON 
                      TVoucherDetails.PkVoucherTrnNo = TVoucherChqCreditDetails.FkVoucherTrnNo INNER JOIN
                      MBranch ON TVoucherChqCreditDetails.BranchNo = MBranch.BranchNo INNER JOIN
                      TDocketPrintingDetails ON TVoucherEntry.PkVoucherNo = TDocketPrintingDetails.FkVoucherNo INNER JOIN
                      TDocketPrinting ON TDocketPrintingDetails.DocketPrintingNo = TDocketPrinting.DocketPrintingNo INNER JOIN
                      MLedger AS MLedger_1 ON TDocketPrinting.LedgerNo = MLedger_1.LedgerNo LEFT OUTER JOIN
                      MLedgerDetails ON MLedger_1.LedgerNo = MLedgerDetails.LedgerNo
WHERE     (TVoucherEntry.CompanyNo = 1) AND (TVoucherEntry.PayTypeNo = 4) AND (TVoucherDetails.SrNo = 501) AND (TDocketPrintingDetails.DocketPrintingNo = @DocketPrintingNo)
ORDER BY MLedger.LedgerName


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'TCashSlip' in the database.
=====

CREATE TABLE [dbo].[TCashSlip](
	[CashSlipNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[DocketUserNo] [numeric](18, 0) NULL,
	[ToDate] [datetime] NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL

 CONSTRAINT [PK_TCashSlip] PRIMARY KEY CLUSTERED 
(
	[CashSlipNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'TCashSlipDetails' in the database.
=====

CREATE TABLE [dbo].[TCashSlipDetails](
	[CashSlipDetailsNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[CashSlipNo]  [numeric](18, 0) NULL,
	[Note] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[RSType] [numeric](18, 0) NULL,
	[Pieces] [numeric](18, 0) NULL,
	[Amount] [numeric](18, 2) NULL,
    [IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[Status] [numeric](18, 0) NULL,

 CONSTRAINT [PK_TCashSlipDetails] PRIMARY KEY CLUSTERED 
(
	[CashSlipDetailsNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'AddTCashSlip' in the database.
=====

Create PROCEDURE [dbo].[AddTCashSlip]
     @CashSlipNo                            numeric(18),
     @DocketUserNo                          numeric(18),
     @ToDate                                datetime,
     @LedgerNo                              numeric(18),
     @UserID                                numeric(18),
     @UserDate                              datetime,
     @CompanyNo                             numeric(18),
     @ReturnID                              int output
AS
IF EXISTS(select CashSlipNo from TCashSlip
          where
          CashSlipNo = @CashSlipNo)
     BEGIN
       --Update existing row
       UPDATE TCashSlip
       SET
          DocketUserNo = @DocketUserNo,
          ToDate = @ToDate,
          LedgerNo = @LedgerNo,
          UserID = @UserID,
          UserDate = @UserDate,
          CompanyNo = @CompanyNo

       WHERE
          CashSlipNo = @CashSlipNo
		  set @ReturnID = @CashSlipNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CashSlipNo),0) From TCashSlip
       DBCC CHECKIDENT('TCashSlip', RESEED, @Id)
       INSERT INTO TCashSlip(
          DocketUserNo,
          ToDate,
          LedgerNo,
          UserID,
          UserDate,
          CompanyNo
)
       VALUES(
          @DocketUserNo,
          @ToDate,
          @LedgerNo,
          @UserID,
          @UserDate,
          @CompanyNo
)
set @ReturnID = Scope_Identity()
END


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'AddTCashSlipDetails' in the database.
=====

Create PROCEDURE [dbo].[AddTCashSlipDetails]
     @CashSlipDetailsNo               numeric(18),
     @CashSlipNo                      numeric(18),
     @Note                            varchar(50),
     @RSType                          numeric(18),  
     @Pieces                          numeric(18),  
     @Amount                          numeric(18,2),  
     @IsActive                        bit,
     @UserID                          numeric(18),
     @UserDate                        datetime,
     @CompanyNo                       numeric(18)
     
AS
IF EXISTS(select CashSlipDetailsNo from TCashSlipDetails
          where
          CashSlipDetailsNo = @CashSlipDetailsNo)
     BEGIN
       --Update existing row
       UPDATE TCashSlipDetails
       SET
          CashSlipNo = @CashSlipNo,
          Note = @Note,
          RSType=@RSType,
          Pieces = @Pieces,
          Amount=@Amount,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          CompanyNo = @CompanyNo

       WHERE
          CashSlipDetailsNo = @CashSlipDetailsNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CashSlipDetailsNo),0) From TCashSlipDetails
       DBCC CHECKIDENT('TCashSlipDetails', RESEED, @Id)
       INSERT INTO TCashSlipDetails(
          CashSlipNo,
          Note,
          RSType,
          Pieces,
          Amount,
          IsActive,
          UserID,
          UserDate,
          CompanyNo
)
       VALUES(
          @CashSlipNo,
          @Note,
          @RSType,
          @Pieces,
          @Amount,
          @IsActive,
          @UserID,
          @UserDate,
          @CompanyNo
)

END


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'DeleteTCashSlip' in the database.
=====

Create PROCEDURE  [dbo].[DeleteTCashSlip] 
@CashSlipNo                       numeric(18)

AS
DELETE FROM TCashSlipDetails 
       WHERE
          CashSlipNo = @CashSlipNo

DELETE FROM TCashSlip
       WHERE
          CashSlipNo = @CashSlipNo


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'DeleteTCashSlipDetails' in the database.
=====

Create PROCEDURE  [dbo].[DeleteTCashSlipDetails] 
@CashSlipDetailsNo                     numeric(18)

AS
DELETE FROM TCashSlipDetails 
       WHERE
          CashSlipDetailsNo = @CashSlipDetailsNo


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'GetGSTSummary' in the database.
=====

Create PROCEDURE [dbo].[GetGSTSummary] 
	@FromDate datetime,
	@ToDate datetime,
	@VchType numeric(18)
AS


Select * from (
select pkvoucherno , a.ledgerno ,b.ledgername ,c.gstno, b.statecode , a.vouchertypecode ,voucheruserno , voucherdate , billedamount ,[0] ,[2.5],[6],[9],[14],0 as tax0,
0 as tax25,0 as tax6,0 as tax9,0 as tax14  from 
(
Select fkvoucherno ,sgstpercentage , (sgstamount)  as taxamount from tstock) as tb1
pivot
(
sum(taxamount)
for  sgstpercentage in ([0],[2.5],[6],[9],[14]
)
)
 as tb2
 inner join tvoucherentry as a on tb2.fkvoucherno = a.pkvoucherno inner join mledger as b on a.ledgerno = b.ledgerno
inner join mledgerdetails as c on b.ledgerno = c.ledgerno  and b.statecode=27
WHERE  a.VoucherTypeCode=+cast(@VchType as varchar)
			and a.VoucherDate>=''+cast(@FromDate as varchar)+'' and a.VoucherDate<=''+cast(@ToDate as varchar)+'' 

union 

select pkvoucherno , a.ledgerno ,b.ledgername ,c.gstno, b.statecode , a.vouchertypecode ,voucheruserno , voucherdate , billedamount ,0 as [0],0 as [2.5],0 as [6],0 as [9],0 as [14],
[0] as tax0,
[2.5] as tax25,[6] as tax6,[9] as tax9,[14] as tax14  from 

 
(
Select fkvoucherno ,sgstpercentage , (netamount)  as taxamount from tstock) as tb1
pivot
(
sum(taxamount)
for  sgstpercentage in ([0],[2.5],[6],[9],[14]
)
)
 as tb2
 inner join tvoucherentry as a on tb2.fkvoucherno = a.pkvoucherno inner join mledger as b on a.ledgerno = b.ledgerno  
inner join mledgerdetails as c on b.ledgerno = c.ledgerno  and b.statecode=27
WHERE  a.VoucherTypeCode= cast(@VchType as varchar)
			and a.VoucherDate>=''+cast(@FromDate as varchar)+'' and a.VoucherDate<=''+cast(@ToDate as varchar)+'' 
) as tbl4 

order by voucheruserno


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 Column names in each table must be unique. Column name 'KarnatakaVal' in table 'dbo.MLanguageDictionary' is specified more than once.
=====


SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MLanguageDictionary ADD
	KarnatakaVal nvarchar(50) NULL


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 Column names in each table must be unique. Column name 'ContainerCharges' in table 'dbo.TStock' is specified more than once.
=====

ALTER TABLE dbo.TStock ADD
	ContainerCharges numeric(18, 2) NULL,
	ContainerChargesAmt numeric(18, 2) NULL,
	PackagingChargesAmt numeric(18, 2) NULL


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'TGenerateIMEI' in the database.
=====

CREATE TABLE [dbo].[TGenerateIMEI](
	[PkGenerateIMEIID] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[IMEINo] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[FkVoucherNo]  [numeric](18, 0) NULL,
	[FkStockTrnNo] [numeric](18, 0) NULL,
    [ItemNo]   [numeric](18, 0) NULL,
    [IsSales]  [bit] NULL,
    [SalesStockTrnNo]   [numeric](18, 0) NULL,
    [SalesFkVoucherNo]  [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,

 CONSTRAINT [PK_TGenerateIMEI] PRIMARY KEY CLUSTERED 
(
	[PkGenerateIMEIID] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 There is already an object named 'AddTGenerateIMEI' in the database.
=====

create PROCEDURE [dbo].[AddTGenerateIMEI]
     @PkGenerateIMEIID               numeric(18),
     @IMEINo                         varchar(50),
     @FkVoucherNo                    numeric(18),
     @FkStockTrnNo                   numeric(18),   
     @ItemNo                         numeric(18),  
     @IsSales                        bit,
     @SalesStockTrnNo                numeric(18),  
     @SalesFkVoucherNo               numeric(18),  
     @IsActive                       bit,
     @UserID                         numeric(18),
     @UserDate                       datetime,
     @CompanyNo                      numeric(18)
     
AS
IF EXISTS(select PkGenerateIMEIID from TGenerateIMEI
          where
          PkGenerateIMEIID = @PkGenerateIMEIID and IMEINo=@IMEINo)
     BEGIN
       --Update existing row
       UPDATE TGenerateIMEI
       SET
          IMEINo = @IMEINo,
          FkVoucherNo = @FkVoucherNo,
          FkStockTrnNo=@FkStockTrnNo,
          ItemNo = @ItemNo,
          IsSales=@IsSales,
          SalesStockTrnNo=@SalesStockTrnNo,  
          SalesFkVoucherNo=@SalesFkVoucherNo,      
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          CompanyNo = @CompanyNo

       WHERE
          PkGenerateIMEIID = @PkGenerateIMEIID and IMEINo=@IMEINo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkGenerateIMEIID),0) From TGenerateIMEI
       DBCC CHECKIDENT('TGenerateIMEI', RESEED, @Id)
       INSERT INTO TGenerateIMEI(
          IMEINo,
          FkVoucherNo,
          FkStockTrnNo,
          ItemNo,
          IsSales,
          SalesStockTrnNo,  
          SalesFkVoucherNo,   
          IsActive,
          UserID,
          UserDate,
          CompanyNo
)
       VALUES(
          @IMEINo,
          @FkVoucherNo,
          @FkStockTrnNo,
          @ItemNo,
          @IsSales,
          @SalesStockTrnNo,  
          @SalesFkVoucherNo,   
          @IsActive,
          @UserID,
          @UserDate,
          @CompanyNo
)

END


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.MRateSetting' is specified more than once.
=====

--<EndVersion = 1.0.1.4>

--<Version = 1.0.1.5>


SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MRateSetting ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.MRateSetting ADD CONSTRAINT
	DF_MRateSetting_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.TStock' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.TStock ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.TStock ADD CONSTRAINT
	DF_TStock_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/8/2019 6:47:57 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

 Error End ======================== Vriha iTech3/8/2019 6:47:58 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====
INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(468,'SB_Hamali',4,'True',NULL,2);

 Error End ======================== Vriha iTech3/8/2019 6:47:58 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====
INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(374,'S_IsMobileShop',1,'False',NULL,2);

 Error End ======================== Vriha iTech3/8/2019 6:47:58 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====
INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(375,'P_IsBroker',1,'False',NULL,2);


 Error End ======================== Vriha iTech3/8/2019 6:47:58 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(172,8,'Broker Master',21,'Master.BrokerAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:47:58 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(170,2,'Cash Denomination Master',134,'Master.CashDenominationAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:47:58 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(171,3,'Cash Denomination Master',134,'Utilities.CashSlip',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/8/2019 6:47:58 PM

Error Start =========
 There is already an object named 'MPrintReportName' in the database.
=====

CREATE TABLE [dbo].[MPrintReportName](
	[PkSrNO] [numeric](18, 0) NOT NULL,
	[ReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LangReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ButtonType] [numeric](18, 0) NOT NULL,
	[ButtonName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[VoucherTypecode] [numeric](18, 0) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MPrintReportName] PRIMARY KEY CLUSTERED 
(
	[PkSrNO] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/8/2019 6:47:58 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MPrintReportName'. Cannot insert duplicate key in object 'dbo.MPrintReportName'.
Violation of PRIMARY KEY constraint 'PK_MPrintReportName'. Cannot insert duplicate key in object 'dbo.MPrintReportName'.
The statement has been terminated.
The statement has been terminated.
=====

INSERT INTO [dbo].[MPrintReportName]([PkSrNO],[ReportName],[LangReportName],[ButtonType],[ButtonName],[VoucherTypecode]
           ,[IsActive],[UserId],[UserDate])
     VALUES (1,'GetBill','GetBillMar',1,'Print',15,'true',1,NULL)
INSERT INTO [dbo].[MPrintReportName]([PkSrNO],[ReportName],[LangReportName],[ButtonType],[ButtonName],[VoucherTypecode]
           ,[IsActive],[UserId],[UserDate])
     VALUES (2,'GetBigBill','GetBigBillMar',2,'BigPrint',15,'true',1,NULL)


 Error End ======================== Vriha iTech3/8/2019 6:47:58 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

 Error End ======================== Vriha iTech3/23/2019 10:19:32 AM
Error Start =========
 ExecuteNonQuery: CommandText property has not been initialized
=====
 Error End ======================== Vriha iTech3/23/2019 4:13:20 PM
Error Start =========
 Column names in each table must be unique. Column name 'GSTSlab' in table 'dbo.MItemMaster' is specified more than once.
=====


--<Version = 1.0.1.6>

ALTER TABLE dbo.MItemMaster ADD
        GSTSlab bit NULL

 Error End ======================== Vriha iTech3/23/2019 4:16:47 PM
Error Start =========
 Column already has a DEFAULT bound to it.
Could not create constraint. See previous errors.
=====
ALTER TABLE dbo.MItemMaster ADD CONSTRAINT
        DF_MItemMaster_GSTSlab DEFAULT 0 FOR GSTSlab


 Error End ======================== Vriha iTech3/23/2019 4:16:47 PM
Error Start =========
 Column names in each table must be unique. Column name 'GSTSlab' in table 'dbo.MItemMaster' is specified more than once.
=====


--<Version = 1.0.1.6>

ALTER TABLE dbo.MItemMaster ADD
        GSTSlab bit NULL

 Error End ======================== Vriha iTech3/26/2019 12:44:03 PM
Error Start =========
 Column already has a DEFAULT bound to it.
Could not create constraint. See previous errors.
=====
ALTER TABLE dbo.MItemMaster ADD CONSTRAINT
        DF_MItemMaster_GSTSlab DEFAULT 0 FOR GSTSlab


 Error End ======================== Vriha iTech3/26/2019 12:44:03 PM
Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.MRateSetting' is specified more than once.
=====

--<Version = 1.0.1.5>


SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MRateSetting ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.MRateSetting ADD CONSTRAINT
	DF_MRateSetting_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/29/2019 2:09:13 PM
Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.TStock' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.TStock ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.TStock ADD CONSTRAINT
	DF_TStock_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech3/29/2019 2:09:13 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

 Error End ======================== Vriha iTech3/29/2019 2:09:14 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====
INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(468,'SB_Hamali',4,'True',NULL,2);

 Error End ======================== Vriha iTech3/29/2019 2:09:14 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====
INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(374,'S_IsMobileShop',1,'False',NULL,2);

 Error End ======================== Vriha iTech3/29/2019 2:09:14 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====
INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(375,'P_IsBroker',1,'False',NULL,2);


 Error End ======================== Vriha iTech3/29/2019 2:09:14 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(172,8,'Broker Master',21,'Master.BrokerAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/29/2019 2:09:14 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(170,2,'Cash Denomination Master',134,'Master.CashDenominationAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/29/2019 2:09:14 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(171,3,'Cash Denomination Master',134,'Utilities.CashSlip',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech3/29/2019 2:09:14 PM
Error Start =========
 There is already an object named 'MPrintReportName' in the database.
=====

CREATE TABLE [dbo].[MPrintReportName](
	[PkSrNO] [numeric](18, 0) NOT NULL,
	[ReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LangReportName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ButtonType] [numeric](18, 0) NOT NULL,
	[ButtonName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[VoucherTypecode] [numeric](18, 0) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MPrintReportName] PRIMARY KEY CLUSTERED 
(
	[PkSrNO] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech3/29/2019 2:09:16 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MPrintReportName'. Cannot insert duplicate key in object 'dbo.MPrintReportName'.
The statement has been terminated.
=====

INSERT INTO [dbo].[MPrintReportName]([PkSrNO],[ReportName],[LangReportName],[ButtonType],[ButtonName],[VoucherTypecode]
           ,[IsActive],[UserId],[UserDate])
     VALUES (1,'GetBill','GetBillMar',1,'Print',15,'true',1,NULL)

 Error End ======================== Vriha iTech3/29/2019 2:09:16 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MPrintReportName'. Cannot insert duplicate key in object 'dbo.MPrintReportName'.
The statement has been terminated.
=====
INSERT INTO [dbo].[MPrintReportName]([PkSrNO],[ReportName],[LangReportName],[ButtonType],[ButtonName],[VoucherTypecode]
           ,[IsActive],[UserId],[UserDate])
     VALUES (2,'GetBigBill','GetBigBillMar',2,'BigPrint',15,'true',1,NULL)


 Error End ======================== Vriha iTech3/29/2019 2:09:16 PM
Error Start =========
 Incorrect syntax near the keyword 'PROCEDURE'.
Must declare the scalar variable "@LedgerDetailsNo".
Must declare the scalar variable "@CreditLimit".
Must declare the scalar variable "@LedgerDetailsNo".
Must declare the scalar variable "@LedgerDetailsNo".
=====

GO

--Created on 09/12/2011
create PROCEDURE [dbo].[AddMLedgerDetails2]
     @LedgerDetailsNo                           numeric(18),
     @LedgerNo                            numeric(18),
     @CreditLimit                         numeric(18,2),
     @Address                             varchar(300),
     @StateNo                             numeric(18),
     @CityNo                              numeric(18),
     @PinCode                             varchar(100),
     @PhNo1                               varchar(100),
     -- @PhNo2                               varchar(100),
     @MobileNo1                           varchar(100),
    -- @MobileNo2                           varchar(100),
     @EmailID                             varchar(100),
     @CustomerType                        numeric(18,0),
     --   @PANNo                               varchar(100),
   
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo						      numeric(18),
	-- @FSSAI								  varchar(100),
	 @AreaNo							  numeric(18),
	-- @AddressLang                         nvarchar(500),
    -- @AdharNo					          varchar(100),

    -- @RateTypeNo						  numeric(18),
   --  @DiscPer						      numeric(18),
    -- @DiscRs					      	  numeric(18),
   --  @AnyotherNo1					      varchar(100),
 -- @AccountNo                           varchar(150),
 --   @ReportName                          varchar(max),
  --   @AnyotherNo2				      	  varchar(100),
     @GSTNo				            	  varchar(100),
    @FSSAIDate                           datetime,
     @GSTDate                             datetime,
@Distance     numeric(18,2)
AS

IF EXISTS(select LedgerDetailsNo from MLedgerDetails
          where
          LedgerDetailsNo = @LedgerDetailsNo)
     BEGIN
       --Update existing row
       UPDATE MLedgerDetails
       SET
  --LedgerDetailsNo =@LedgerDetailsNo, 
     LedgerNo=0,
     CreditLimit=@CreditLimit, 
     Address=@Address ,    
     StateNo=@StateNo  ,
     CityNo=@CityNo,  
     PinCode=@PinCode ,  
     PhNo1 =@PhNo1,       
     MobileNo1 =@MobileNo1 ,   
     EmailID   =@EmailID,  
     CustomerType =@CustomerType,

     UserID =@UserID,       
     UserDate =@UserDate,    
	 CompanyNo	=@CompanyNo,	
 AreaNo=@AreaNo,			
   GSTNo=@GSTNo	,	
    FSSAIDate  =@FSSAIDate , 
     GSTDate   =@GSTDate,  
Distance =@Distance ,
DeliveryLedgerNo=@LedgerNo
       WHERE
          LedgerDetailsNo = @LedgerDetailsNo
		  --set @ReturnID=@LedgerNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @LedgerDetailsNo=IsNull(Max(LedgerdetailsNo+2),0) From MLedgerDetails
       DBCC CHECKIDENT('MLedgerdetails', RESEED, @Id)
	

 SET IDENTITY_INSERT MLedgerDetails ON
     BEGIN
       --Insert new row
       
       INSERT INTO MLedgerDetails(
         LedgerDetailsNo,   
          LedgerNo,
          CreditLimit,
          Address,
		  StateNo,
          CityNo,
          PinCode,
          PhNo1,
       --   PhNo2,
          MobileNo1,
        --  MobileNo2,
          EmailID,     
          CustomerType,
       --   PANNo,
        --  AccountNo,
        --  ReportName,      
          UserID,
          UserDate,
         -- StatusNo,
		  CompanyNo,  
		---  FSSAI,
	      AreaNo,
		--  AddressLang,
		--  RateTypeNo,
		--  DiscPer,
		--  DiscRs,
        --  AdharCardNo,
	    --  AnyotherNo1,
		 -- AnyotherNo2,
		  GSTNo,
		  FSSAIDate,
		  GSTDate,
Distance,
DeliveryLedgerNo
)
       VALUES(
         @LedgerDetailsNo,    
          0,
          @CreditLimit,
          @Address,
		  @StateNo,
          @CityNo,
          @PinCode,
          @PhNo1,
        --  @PhNo2,
          @MobileNo1,
        --  @MobileNo2,
          @EmailID,
          @CustomerType,
        --  @PANNo,
        --  @AccountNo,
        --  @ReportName,
          @UserID,
          @UserDate,
       --   1,
		  @CompanyNo,
		--  @FSSAI,
	      @AreaNo,
		--  @AddressLang,
		--  @RateTypeNo,
      --    @DiscPer,
      --    @DiscRs,
       --   @AdharNo,
		--  @AnyotherNo1,
		--  @AnyotherNo2,
		  @GSTNo,
		 @FSSAIDate,
		  @GSTDate,
@Distance,
@LedgerNo
)
end
END


 Error End ======================== Vriha iTech3/29/2019 2:09:16 PM
Error Start =========
 Column names in each table must be unique. Column name 'GSTSlab' in table 'dbo.MItemMaster' is specified more than once.
=====





--<EndVersion = 1.0.1.5>


--<Version = 1.0.1.6>

ALTER TABLE dbo.MItemMaster ADD
        GSTSlab bit NULL

 Error End ======================== Vriha iTech3/29/2019 2:09:16 PM
Error Start =========
 Column already has a DEFAULT bound to it.
Could not create constraint. See previous errors.
=====
ALTER TABLE dbo.MItemMaster ADD CONSTRAINT
        DF_MItemMaster_GSTSlab DEFAULT 0 FOR GSTSlab


 Error End ======================== Vriha iTech3/29/2019 2:09:16 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(170,2,'Cash Denomination Master',134,'Master.CashDenominationAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech4/22/2019 3:55:45 PM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(171,3,'Cash Denomination Master',134,'Utilities.CashSlip',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech4/22/2019 3:55:45 PM
Error Start =========
 Incorrect syntax near the keyword 'PROCEDURE'.
Must declare the scalar variable "@LedgerDetailsNo".
Must declare the scalar variable "@CreditLimit".
Must declare the scalar variable "@LedgerDetailsNo".
Must declare the scalar variable "@LedgerDetailsNo".
=====

GO

--Created on 09/12/2011
create PROCEDURE [dbo].[AddMLedgerDetails2]
     @LedgerDetailsNo                           numeric(18),
     @LedgerNo                            numeric(18),
     @CreditLimit                         numeric(18,2),
     @Address                             varchar(300),
     @StateNo                             numeric(18),
     @CityNo                              numeric(18),
     @PinCode                             varchar(100),
     @PhNo1                               varchar(100),
     -- @PhNo2                               varchar(100),
     @MobileNo1                           varchar(100),
    -- @MobileNo2                           varchar(100),
     @EmailID                             varchar(100),
     @CustomerType                        numeric(18,0),
     --   @PANNo                               varchar(100),
   
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo						      numeric(18),
	-- @FSSAI								  varchar(100),
	 @AreaNo							  numeric(18),
	-- @AddressLang                         nvarchar(500),
    -- @AdharNo					          varchar(100),

    -- @RateTypeNo						  numeric(18),
   --  @DiscPer						      numeric(18),
    -- @DiscRs					      	  numeric(18),
   --  @AnyotherNo1					      varchar(100),
 -- @AccountNo                           varchar(150),
 --   @ReportName                          varchar(max),
  --   @AnyotherNo2				      	  varchar(100),
     @GSTNo				            	  varchar(100),
    @FSSAIDate                           datetime,
     @GSTDate                             datetime,
@Distance     numeric(18,2)
AS

IF EXISTS(select LedgerDetailsNo from MLedgerDetails
          where
          LedgerDetailsNo = @LedgerDetailsNo)
     BEGIN
       --Update existing row
       UPDATE MLedgerDetails
       SET
  --LedgerDetailsNo =@LedgerDetailsNo, 
     LedgerNo=0,
     CreditLimit=@CreditLimit, 
     Address=@Address ,    
     StateNo=@StateNo  ,
     CityNo=@CityNo,  
     PinCode=@PinCode ,  
     PhNo1 =@PhNo1,       
     MobileNo1 =@MobileNo1 ,   
     EmailID   =@EmailID,  
     CustomerType =@CustomerType,

     UserID =@UserID,       
     UserDate =@UserDate,    
	 CompanyNo	=@CompanyNo,	
 AreaNo=@AreaNo,			
   GSTNo=@GSTNo	,	
    FSSAIDate  =@FSSAIDate , 
     GSTDate   =@GSTDate,  
Distance =@Distance ,
DeliveryLedgerNo=@LedgerNo
       WHERE
          LedgerDetailsNo = @LedgerDetailsNo
		  --set @ReturnID=@LedgerNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @LedgerDetailsNo=IsNull(Max(LedgerdetailsNo+2),0) From MLedgerDetails
       DBCC CHECKIDENT('MLedgerdetails', RESEED, @Id)
	

 SET IDENTITY_INSERT MLedgerDetails ON
     BEGIN
       --Insert new row
       
       INSERT INTO MLedgerDetails(
         LedgerDetailsNo,   
          LedgerNo,
          CreditLimit,
          Address,
		  StateNo,
          CityNo,
          PinCode,
          PhNo1,
       --   PhNo2,
          MobileNo1,
        --  MobileNo2,
          EmailID,     
          CustomerType,
       --   PANNo,
        --  AccountNo,
        --  ReportName,      
          UserID,
          UserDate,
         -- StatusNo,
		  CompanyNo,  
		---  FSSAI,
	      AreaNo,
		--  AddressLang,
		--  RateTypeNo,
		--  DiscPer,
		--  DiscRs,
        --  AdharCardNo,
	    --  AnyotherNo1,
		 -- AnyotherNo2,
		  GSTNo,
		  FSSAIDate,
		  GSTDate,
Distance,
DeliveryLedgerNo
)
       VALUES(
         @LedgerDetailsNo,    
          0,
          @CreditLimit,
          @Address,
		  @StateNo,
          @CityNo,
          @PinCode,
          @PhNo1,
        --  @PhNo2,
          @MobileNo1,
        --  @MobileNo2,
          @EmailID,
          @CustomerType,
        --  @PANNo,
        --  @AccountNo,
        --  @ReportName,
          @UserID,
          @UserDate,
       --   1,
		  @CompanyNo,
		--  @FSSAI,
	      @AreaNo,
		--  @AddressLang,
		--  @RateTypeNo,
      --    @DiscPer,
      --    @DiscRs,
       --   @AdharNo,
		--  @AnyotherNo1,
		--  @AnyotherNo2,
		  @GSTNo,
		 @FSSAIDate,
		  @GSTDate,
@Distance,
@LedgerNo
)
end
END


 Error End ======================== Vriha iTech4/22/2019 3:55:46 PM
Error Start =========
 Incorrect syntax near 'GO'.
'CREATE/ALTER PROCEDURE' must be the first statement in a query batch.
=====
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
GO
--Created on 01/04/2019
ALTER PROCEDURE [dbo].[AddMRateSetting]
     @PkSrNo                              numeric(18),
   --  @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
     @MRP										numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                            numeric(18,4),
	 @BSaleRate                            numeric(18,4),
	 @CSaleRate                            numeric(18,4),
	 @DSaleRate                            numeric(18,4),
	 @ESaleRate                            numeric(18,4),
	 @StockConversion					  Numeric(18,2),
	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive								bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
if(cast(@FromDate as datetime) < cast('02-02-1900 00:00:00' as datetime))
begin
	set @FromDate= getdate()
end

IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET
          --FkBcdSrNo = @FkBcdSrNo,
          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
          MRP=@MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  PerOfRateVariation=@PerOfRateVariation,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT('MRateSetting', RESEED, @Id)
       INSERT INTO MRateSetting(
         -- FkBcdSrNo,
          ItemNo,
          FromDate,
          PurRate,
		  MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,
		  PerOfRateVariation,
		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          --@FkBcdSrNo,
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @PerOfRateVariation,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END
Update Mitemmaster set StatusNo=2 Where ItemNo =@ItemNo

 Error End ======================== Vriha iTech4/22/2019 3:55:46 PM
Error Start =========
 Column names in each table must be unique. Column name 'CreditDays' in table 'dbo.MLedgerDetails' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MLedgerDetails ADD
	CreditDays numeric(18, 0) NULL 


 Error End ======================== Vriha iTech5/31/2019 1:25:38 PM

Error Start =========
 Column names in each table must be unique. Column name 'ContainerCharges' in table 'dbo.MItemMaster' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON


ALTER TABLE dbo.MItemMaster ADD
	ContainerCharges  numeric(18,2) NULL


 Error End ======================== Vriha iTech5/31/2019 1:25:39 PM

Error Start =========
 Column names in each table must be unique. Column name 'Weight1' in table 'dbo.MRateSetting' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MRateSetting ADD
	Weight1  numeric(18,2) NULL,
    Weight2  numeric(18,2) NULL


 Error End ======================== Vriha iTech5/31/2019 1:25:39 PM

Error Start =========
 Column names in each table must be unique. Column name 'IsSendEmail' in table 'dbo.MLedger' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MLedger ADD
	IsSendEmail bit NULL


 Error End ======================== Vriha iTech5/31/2019 1:25:39 PM

Error Start =========
 Column names in each table must be unique. Column name 'SPPerc' in table 'dbo.MRateSetting' is specified more than once.
=====

ALTER TABLE dbo.MRateSetting ADD
	SPPerc numeric(18, 2) NULL
ALTER TABLE dbo.MRateSetting ADD
	LPPerc numeric(18, 2) NULL


 Error End ======================== Vriha iTech5/31/2019 1:25:39 PM

Error Start =========
 'CREATE/ALTER PROCEDURE' must be the first statement in a query batch.
Incorrect syntax near the keyword 'ELSE'.
=====
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON

Create PROCEDURE [dbo].[AddMRack]
     @RackNo                              numeric(18),
     @RackName                            varchar(50),
     @RackCode                            varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)

AS
IF EXISTS(select RackNo from MRack
          where
          RackNo = @RackNo)
     BEGIN
       --Update existing row
       UPDATE MRack
       SET
          RackName = @RackName,
          RackCode = @RackCode,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
	      CompanyNo=@CompanyNo

       WHERE
          RackNo = @RackNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(RackNo),0) From MRack
       DBCC CHECKIDENT('MRack', RESEED, @Id)
       INSERT INTO MRack(
          RackName,
          RackCode,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo
)
       VALUES(
          @RackName,
          @RackCode,
          @IsActive,
          @UserID,
          @UserDate,
	      @CompanyNo
)

END


 Error End ======================== Vriha iTech5/31/2019 1:25:40 PM

Error Start =========
 There is already an object named 'DeleteMRack' in the database.
=====

Create PROCEDURE  [dbo].[DeleteMRack] 
@RackNo                             numeric(18)

AS
Update MRack set IsActive='False' where RackNo = @RackNo


 Error End ======================== Vriha iTech5/31/2019 1:25:40 PM

Error Start =========
 There is already an object named 'DeleteMLedgerGroup' in the database.
=====

Create PROCEDURE  [dbo].[DeleteMLedgerGroup] 
@LedgerGroupNo                          numeric(18)

AS
Update MLedgerGroup set IsActive='False' where LedgerGroupNo= @LedgerGroupNo


 Error End ======================== Vriha iTech5/31/2019 1:25:40 PM

Error Start =========
 There is already an object named 'TEWayDetails' in the database.
=====

CREATE TABLE [dbo].[TEWayDetails](
	[PKEWayNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherNo] [int] NULL,
	[EWayNo] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[VoucherUserNo] [numeric](18, 0) NULL,
	[EWayDate] [datetime] NULL,
	[ModeNo] [numeric](18, 0) NULL,
	[Distance] [numeric](18, 2) NULL,
	[TransportNo] [numeric](18, 0) NULL,
	[VehicleNo] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LRNo] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LRDate] [datetime] NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[LedgerName] [varchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Address] [varchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CityNo] [numeric](18, 0) NULL,
	[Yadi2018BhatiyaCityName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PinCode] [numeric](18, 0) NULL,
	[StateCode] [numeric](18, 0) NULL,
	[StateName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[StatusNo] [int] NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_TEWayDetails] PRIMARY KEY CLUSTERED 
(
	[PKEWayNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech5/31/2019 1:25:40 PM

Error Start =========
 There is already an object named 'GetRackWiseBill' in the database.
=====

Create PROCEDURE [dbo].[GetRackWiseBill]
@PkVoucherNo                numeric(18),
@Type						int

AS
Begin

SELECT     TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherDate, CASE WHEN (@Type = 1) 
                      THEN MStockItems_V_1.ItemName ELSE MStockItems_V_1.ItemNameLang END AS ItemName, MRateSetting.MRP, TStock.Quantity, TStock.GRWeight, 
                      TStock.TRWeight, TStock.PackagingCharges, TStock.NoOfBag, TStock.CessValue, TStock.OtherCharges AS Dhekharek, TStock.Rate, TStock.Amount, MUOM.UOMName, 
                      TStock.SGSTPercentage, TStock.SGSTAmount, TStock.DiscPercentage, TStock.DiscAmount, TStock.DiscRupees, TStock.DiscPercentage2, TStock.DiscAmount2, 
                      TStock.DiscRupees2, TStock.CGSTPercentage, TStock.CGSTAmount, TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, TStock.CessAmount, 
                      MLedgerDetails.GSTNO AS CustGSTNo, MLedgerDetails.PANNo AS CustPANNo, MLedgerDetails.FSSAI, MFirm.GSTNO AS CmpGSTNo, MLedger.StateCode, 
                      MItemMaster.HSNCode, TVoucherEntry.BilledAmount, CASE WHEN (@Type = 1) THEN LedgerName ELSE LedgerLangName END AS LedgerName, 
                      MLedger.ContactPerson, MLedgerDetails.PhNo1 AS CustPhNo, MLedgerDetails.MobileNo1 AS CustMoNo, CASE WHEN (@Type = 1) 
                      THEN MLedgerDetails.Address ELSE MLedgerDetails.AddressLang END AS CustAddress, MFirm.Address + ' / ' + MFirm.PinCode AS CmpAddress, 
                      MFirm.EmailID AS CmpEmailID, MFirm.PhoneNo1 + ' / ' + MFirm.PhoneNo2 AS CompPhoneNo, MFirm.FSSAINO AS CompFSSAINo, TVoucherEntry.Reference, 
                      TVoucherEntry.VoucherTime, TStock.NetAmount + TStock.CessValue + TStock.PackagingCharges + TStock.OtherCharges AS NetAmount, TStock.NetRate, 
                      TStock.DisplayItemName, TStock.Remarks AS RemarksItemlevel, '' AS TransporterName, TVoucherEntry.LRNo, MTransporterMode.TransModeName, 
                      TVoucherEntry.TransNoOfItems,
                          (SELECT     SettingValue
                            FROM          MSettings
                            WHERE      (PkSettingNo = 311)) AS DisplayTrans, TVoucherEntry.Remark, MState.StateName, MCity.CityName, MPayType.PayTypeName, 
                      MLedgerDetails_1.Address AS CustDeliveryAddress, mcity_1.CityName AS custDeliverycity, MRack.RackName, MRackDetails.ToQty
FROM         MCity AS mcity_1 RIGHT OUTER JOIN
                      TStock INNER JOIN
                      MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN
                      TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
                      MFirm ON TVoucherEntry.CompanyNo = MFirm.FirmNo INNER JOIN
                      MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                      dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems_V_1 ON TStock.ItemNo = MStockItems_V_1.ItemNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MLedgerDetails ON MLedgerDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo LEFT OUTER JOIN
                      MTransporterMode ON TVoucherEntry.TransportMode = MTransporterMode.TransModeNo INNER JOIN
                      MState ON MLedger.StateCode = MState.StateCode LEFT OUTER JOIN
                      MCity ON MLedgerDetails.CityNo = MCity.CityNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      MRack INNER JOIN
                      MRackDetails ON MRack.RackNo = MRackDetails.FkRackNo ON MItemMaster.GroupNo = MRackDetails.ItemNo LEFT OUTER JOIN
                      TDeliveryAddress ON TVoucherEntry.PkVoucherNo = TDeliveryAddress.FkVoucherno AND TVoucherEntry.LedgerNo = TDeliveryAddress.Ledgerno LEFT OUTER JOIN
                      MLedgerDetails AS MLedgerDetails_1 ON MLedgerDetails_1.LedgerDetailsNo = TDeliveryAddress.LedgerDetailsNo AND 
                      TDeliveryAddress.Ledgerno = MLedgerDetails_1.DeliveryLedgerNo ON mcity_1.CityNo = MLedgerDetails_1.CityNo
WHERE     (TVoucherEntry.PkVoucherNo = @PkVoucherNo)

ORDER BY TStock.PkStockTrnNo

END


 Error End ======================== Vriha iTech5/31/2019 1:25:40 PM

Error Start =========
 Column already has a DEFAULT bound to it.
Could not create constraint. See previous errors.
=====

ALTER TABLE MRateSetting ADD CONSTRAINT Stock DEFAULT 0 FOR Stock

ALTER TABLE MRateSetting ADD CONSTRAINT Stock2 DEFAULT 0 FOR Stock2

ALTER TABLE MRateSetting ADD CONSTRAINT Weight1 DEFAULT 0 FOR Weight1

ALTER TABLE MRateSetting ADD CONSTRAINT Weight2 DEFAULT 0 FOR Weight2

ALTER TABLE MRateSetting ADD CONSTRAINT SPPerc DEFAULT 0 FOR SPPerc

ALTER TABLE MRateSetting ADD CONSTRAINT LPPerc DEFAULT 0 FOR LPPerc


 Error End ======================== Vriha iTech5/31/2019 1:25:41 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_DBVersionLog'. Cannot insert duplicate key in object 'dbo.DBVersionLog'.
The statement has been terminated.
=====

IF NOT EXISTS(select ScriptNo from DBVersionLog where ScriptNo = 3)
BEGIN

UPDATE MSetting SET AppVersion = 'rKNKsixM4yg=';

INSERT INTO [DBVersionLog]
           ([ScriptNo]
           ,[ScriptDescription])
     VALUES
           (2
           ,'Updated application version to 1.0.1.0')
END


 Error End ======================== Vriha iTech5/31/2019 1:25:42 PM

Error Start =========
 Invalid object name 'dbo.GetGSTTaxDetailsHSNCodeWise'.
=====

ALTER PROCEDURE [dbo].[GetGSTTaxDetailsHSNCodeWise] 

	@FromDate datetime,
	@ToDate datetime,
	@VchType numeric(18)
	
AS
BEGIN
	Declare @PerTable Table(TempPer numeric(18,2),ColNo numeric(18))
declare @StrQry varchar(max)

 set @StrQry='SELECT   HSNCode,ItemGroupName + ''  ''+MItemMaster.ItemName As Itemname,UOMShortCode +'' - ''+ UOMShortCode as Uomname,
sum(TStock.Quantity) as Quantity, sum(tstock.Amount) as Amount,sum((tstock.Netamount)-(TStock.SGSTAmount+TStock.IGSTAmount+TStock.CessAmount+TStock.CGSTAmount)) as NetAmount,
sum(TStock.IGSTAmount) as IGSTAmount ,sum(TStock.CGSTAmount) as CGSTAmount ,sum(TStock.SGSTAmount) as SGSTAmount,sum(TStock.CessAmount) as CessAmount 
FROM TVoucherEntry AS TVoucherEntry_1 INNER JOIN
TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo  
inner join MItemMaster on TStock.itemno=MItemMaster.itemno
INNER JOIN MItemGroup on MItemGroup.ItemGroupNo=MItemMaster.groupno
inner join muom on tstock.FkUomNo=muom.uomno
WHERE TVoucherEntry_1.VoucherTypeCode='+cast(@VchType as varchar)+' and  VoucherDate>='''+cast(@FromDate as varchar)+''' and VoucherDate<='''+cast(@ToDate as varchar)+'''
and TVoucherEntry_1.iscancel= 0  group by HSNCode,ItemGroupName,ItemName,UOMShortCode,UOMShortCode

order by HSNCode'

 Exec(@StrQry) 
END


 Error End ======================== Vriha iTech5/31/2019 1:25:42 PM

Error Start =========
 Invalid object name 'dbo.GetGSTTaxDetailsCess'.
=====

ALTER PROCEDURE [dbo].[GetGSTTaxDetailsCess] 
	@FromDate datetime,
	@ToDate datetime,
	@Type numeric(18),
	@VchType numeric(18),
	@DiscLedg varchar(max),
	@ChargesLedg varchar(max),
	@RoundOffLedgNo numeric(18),
	@TaxTypeNo	numeric(18)
AS
BEGIN
	Declare @PerTable Table(TempPer numeric(18,2),ColNo numeric(18))
	Declare @ColName numeric(18,2),@Cnt numeric(18),@DocNo numeric(18),@Date datetime,@Amt numeric(18,2),@Per numeric(18,2),
			@Pk numeric(18),@TotTax numeric(18,2), @TotAmt numeric(18,2),@TotAmt2 numeric(18,2),@TaxToal numeric(18,2),@AmtTotal numeric(18,2),
			@FinalAmount numeric(18,2),@StrQry varchar(max),@TempPer numeric(18,2),@TaxAmt numeric(18,2),@TaxAmt2 numeric(18,2),@TaxAmt3 numeric(18,2),@TaxAmt4 numeric(18,2),@TempDate datetime,@GSTNO varchar(50),@HSNCode varchar(50),@StateName varchar(100),@UomName varchar(50),@ItemNo numeric(18)
	Declare @Month varchar(20),@MNo int ,@TDate datetime ,@Yr int,@FrDate datetime,@TempPk numeric(18),@TempColNo numeric(18),
			@SGSTAmount numeric(18,2),@SGSTAmount2 numeric(18,2),@SGSTAmount3 numeric(18,2),@SGSTAmount4 numeric(18,2),@TempDocNo numeric(18),@Disc numeric(18,2),@Charges numeric(18,2),@RndOff numeric(18,2),@LedgerName varchar(max)
	Declare @TVal Table(DocNo numeric(18),Date datetime,LedgerName varchar(max),GSTNO varchar(50),HSNCode varchar(50),StateName varchar(100),UomName varchar(50), FinalAmt numeric(18,2),Disc numeric(18,2),Charges numeric(18,2),RndOff numeric(18,2),SAmt1 numeric(18,2),TAmt1 numeric(18,2),TCAmt1 numeric(18,2),TIAmt1 numeric(18,2),TCeAmt1 numeric(18,2),
			SAmt2 numeric(18,2),TAmt2 numeric(18,2),TCAmt2 numeric(18,2),TIAmt2 numeric(18,2),TCeAmt2 numeric(18,2),SAmt3 numeric(18,2),TAmt3 numeric(18,2),TCAmt3 numeric(18,2),TIAmt3 numeric(18,2),TCeAmt3 numeric(18,2),SAmt4 numeric(18,2),
			TAmt4 numeric(18,2),TCAmt4 numeric(18,2),TIAmt4 numeric(18,2),TCeAmt4 numeric(18,2),SAmt5 numeric(18,2),TAmt5 numeric(18,2),TIAmt5 numeric(18,2),TCeAmt5 numeric(18,2),TCAmt5 numeric(18,2),TaxToal numeric(18,2),AmtTotal numeric(18,2),ItemNo numeric(18))
	Declare @TDisc Table(LedgNo numeric(18))
	Declare @TChrg Table(LedgNo numeric(18))
	

	set @Cnt=0  set @TempPk=0 set @TaxToal =0 set @AmtTotal =0
    set @Amt=0 set @Per=0 set @TotTax=0 set @TotAmt=0 set @Disc =0 set @Charges =0 set @RndOff =0
	 set @StrQry='' set @FrDate=@FromDate set @TempColNo=0  set @TempDocNo=0 set @TempDate='01-01-1900'



set @StrQry='Select distinct TStock.SGSTPercentage,0 FROM TVoucherEntry INNER JOIN
								  TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
								  WHERE TaxTypeNo= '+Cast(@TaxTypeNo as varchar)+' AND TVoucherEntry.VoucherTypeCode='+cast(@VchType as varchar)+'
			and TVoucherEntry.VoucherDate>='''+cast(@FromDate as varchar)+''' and TVoucherEntry.iscancel= 0 
and TVoucherEntry.VoucherDate<='''+cast(@ToDate as varchar)+''' order by TStock.SGSTPercentage'
--(TStock.SGSTPercentage <> 0) and

insert into @PerTable Exec(@StrQry) --select * from @PerTable

insert into @TDisc Exec('Select LedgerNo From MLedger Where LedgerNo in ('+ @DiscLedg +')')
insert into @TChrg Exec('Select LedgerNo From MLedger Where LedgerNo in ('+ @ChargesLedg +')')

Declare CurCol Cursor for Select TempPer from @PerTable

		open CurCol
		Fetch next from CurCol into @TempPer
		while (@@Fetch_Status=0)
		Begin
			
			
			set @Cnt=@Cnt+1	
			update 	@PerTable set ColNo=@Cnt where 	TempPer=@TempPer
			Fetch next from CurCol into @TempPer
		End
		Close CurCol Deallocate CurCol

select * from @PerTable
set @Cnt=0
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type =2 )
BEGIN
Declare InsValue Cursor for SELECT     TVoucherEntry_1.VoucherUserNo, TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage, TVoucherEntry_1.PkVoucherNo, 
                      TVoucherEntry_1.BilledAmount, TStock.NetAmount AS SAmt1, TStock.SGSTAmount AS TAmt,TStock.CGSTAmount AS TCAmt,TStock.IGSTAmount AS TIAmt, TStock.CessAmount AS TCeAmt,  (TStock.DiscAmount+TStock.DiscRupees) as Disc,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherDetails_3.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
HSNCode,TStock.Itemno,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
                            FROM          TVoucherEntry AS TVoucherEntry_2 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN
                                                       (SELECT LedgNo FROM @TChrg)) AND (TVoucherDetails_2.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) 
                     
				FROM TVoucherEntry AS TVoucherEntry_1 INNER JOIN
                     TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo  inner join MStockItems on TStock.itemno=MStockItems.itemno
 inner join MUOM On Muom.UOMNo=TStock.FkUomNo
				WHERE TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = 'false')
					  AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo --and TVoucherEntry_1.PkVoucherNo=14246
				--Group by TVoucherEntry_1.VoucherUserNo,MStockItems.HSNCode,TVoucherEntry_1.VoucherDate,TStock.SGSTPercentage,TVoucherEntry_1.PkVoucherNo,BilledAmount,TStock.NetAmount,TStock.SGSTAmount,TStock.CGSTAmount,TStock.DiscAmount,TStock.DiscRupees
				order by TVoucherEntry_1.VoucherUserNo,TStock.SGSTPercentage

		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@HSNCode,@ItemNo,@Charges
			While(@@Fetch_Status=0)
				Begin
						--Select @LedgerName=LedgerName FRom MLedger Where LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
						Select @LedgerName=LedgerName,@StateName=StateName,@GSTNO=Case When(IsNull(GSTNO,'NA')='') Then '' Else  IsNull(GSTNO,'') end FRom MLedger inner Join MLedgerDetails On MLedger.LedgerNo=MLedgerDetails.LedgerNo inner join MState on MLedgerDetails.Stateno=MState.Stateno Where MLedger.LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
					
							set @TempPk=@Pk
							insert into @TVal (DocNo ,Date ,LedgerName,GSTNO, FinalAmt,Disc ,Charges ,RndOff, HSNCode,StateName,Itemno,SAmt1,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2,TAmt2,TCAmt2,TIAmt2,TCeAmt2,SAmt3,TAmt3,TCAmt3,TIAmt3,TCeAmt3,SAmt4,TAmt4,TCAmt4,TIAmt4,TCeAmt4,SAmt5,TAmt5,TCAmt5,TIAmt5,TCeAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@GSTNO,@FinalAmount ,@Disc,@Charges,@RndOff,@HSNCode,@StateName,@ItemNo,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
							set @Cnt=@Cnt+1	

						select @TempColNo=ColNo from @PerTable where TempPer=@Per

						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @SGSTAmount , TCAmt1 = @SGSTAmount2 , TIAmt1 = @SGSTAmount3, TCeAmt1 = @SGSTAmount4 where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @SGSTAmount , TCAmt2 = @SGSTAmount2, TIAmt2 = @SGSTAmount3, TCeAmt2 = @SGSTAmount4  where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @SGSTAmount , TCAmt3 = @SGSTAmount2 , TIAmt3 = @SGSTAmount3 , TCeAmt3 = @SGSTAmount4  where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @SGSTAmount , TCAmt4 = @SGSTAmount2 , TIAmt4 = @SGSTAmount3, TCeAmt4 = @SGSTAmount4 where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 5)
						update @TVal set SAmt5 = @Amt , TAmt5 = @SGSTAmount , TCAmt5 = @SGSTAmount2 , TIAmt5 = @SGSTAmount3 , TCeAmt5 = @SGSTAmount4  where DocNo = @DocNo and Itemno=@ItemNo
						set @TaxToal =@TaxToal+@SGSTAmount+@SGSTAmount2+@SGSTAmount3+@SGSTAmount4
					   set @AmtTotal =@AmtTotal+@Amt
					   set @TempDocNo=@DocNo


--if (@@Fetch_Status=0)
					fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@HSNCode,@ItemNo,@Charges
				End

close InsValue deallocate InsValue
if(@TempPk<>0)
							BEGIN
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo and Itemno=@ItemNo
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
End
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type =1 )
BEGIN
Declare InsValue Cursor for SELECT    case when @VchType=15 then   TVoucherEntry_1.VoucherUserNo else TVoucherEntry_1.Reference end as VoucherUserNo, TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage, TVoucherEntry_1.PkVoucherNo, 
                      TVoucherEntry_1.BilledAmount, SUM(TStock.NetAmount) AS SAmt, SUM(TStock.SGSTAmount) AS TAmt,SUM(TStock.CGSTAmount) AS TCAmt,SUM(TStock.IGSTAmount) AS TCAmt,SUM(TStock.CessAmount) AS TCAmt,sum(TStock.DiscAmount+TStock.DiscRupees) as Disc,
--                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0) 
--                            FROM          TVoucherEntry INNER JOIN
--                                                   TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
--                            WHERE      (TVoucherDetails.LedgerNo IN
--                                                       (SELECT LedgNo FROM @TDisc )) AND (TVoucherDetails.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
                        
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherDetails_3.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
                            FROM          TVoucherEntry AS TVoucherEntry_2 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN
                                                       (SELECT LedgNo FROM @TChrg)) AND (TVoucherDetails_2.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) 
                     
				FROM TVoucherEntry AS TVoucherEntry_1 INNER JOIN
                     TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo 
				WHERE TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = 'false')
					  AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
				Group by TVoucherEntry_1.VoucherUserNo,Reference,TVoucherEntry_1.VoucherDate,TStock.SGSTPercentage,TVoucherEntry_1.PkVoucherNo,BilledAmount
				order by TVoucherEntry_1.VoucherUserNo,TStock.SGSTPercentage

		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@Charges
			While(@@Fetch_Status=0)
				Begin
						--Select @LedgerName=LedgerName FRom MLedger Where LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
						Select @LedgerName=LedgerName,@GSTNO=Case When(IsNull(GSTNO,'NA')='') Then '' Else  IsNull(GSTNO,'') end FRom MLedger inner Join MLedgerDetails On MLedger.LedgerNo=MLedgerDetails.LedgerNo Where MLedger.LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
					
                    if(@TempPk<>@Pk)
						BEgin
							if(@TempPk<>0)
							BEGIN								
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo							
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
--							if(@Cnt>2000)
--							BEGIn
--								Select * from @TVal
--								Delete from @TVal
--								set @Cnt=0
--							END
							set @TempPk=@Pk
							insert into @TVal (DocNo ,Date ,LedgerName,GSTNO, FinalAmt,Disc ,Charges ,RndOff ,SAmt1,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2,TAmt2,TCAmt2,TIAmt2,TCeAmt2,SAmt3,TAmt3,TCAmt3,TIAmt3,TCeAmt3,SAmt4,TAmt4,TCAmt4,TIAmt4,TCeAmt4,SAmt5,TAmt5,TCAmt5,TIAmt5,TCeAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@GSTNO,@FinalAmount ,@Disc,@Charges,@RndOff,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
							set @Cnt=@Cnt+1	
						End
						select @TempColNo=ColNo from @PerTable where TempPer=@Per

						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @SGSTAmount , TCAmt1 = @SGSTAmount2 , TIAmt1 = @SGSTAmount3, TCeAmt1 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @SGSTAmount , TCAmt2 = @SGSTAmount2 , TIAmt2 = @SGSTAmount3, TCeAmt2 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @SGSTAmount , TCAmt3 = @SGSTAmount2 , TIAmt3 = @SGSTAmount3 , TCeAmt3 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @SGSTAmount , TCAmt4 = @SGSTAmount2 , TIAmt4 = @SGSTAmount3, TCeAmt4 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 5)
							update @TVal set SAmt5 = @Amt , TAmt5 = @SGSTAmount , TCAmt5 = @SGSTAmount2 , TIAmt5 = @SGSTAmount3 , TCeAmt5 = @SGSTAmount4 where DocNo = @DocNo
						set @TaxToal =@TaxToal+@SGSTAmount+@SGSTAmount2+@SGSTAmount3+@SGSTAmount4
						set @AmtTotal =@AmtTotal+@Amt
						set @TempDocNo=@DocNo
					fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@Charges
				End

close InsValue deallocate InsValue
if(@TempPk<>0)
							BEGIN
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
End
--------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type=3)
Begin
	Declare InsValue Cursor for SELECT     Count(TVoucherEntry_1.PkVoucherNo) as DocNo, TVoucherEntry_1.VoucherDate, -1 as SGSTPercentage,
                      SUM(TVoucherEntry_1.BilledAmount) AS SAmt, 0 as  TAmt,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0) 
                            FROM          TVoucherEntry INNER JOIN
                                                   TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
                            WHERE      (TVoucherDetails.LedgerNo IN
                                                       (SELECT LedgNo FROM @TDisc)) AND (TVoucherEntry.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry.VoucherTypeCode=@VchType)) as Disc,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherEntry_3.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry_3.VoucherTypeCode=@VchType)) as RndOff,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
							 FROM  TVoucherEntry AS TVoucherEntry_2 INNER JOIN TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN (SELECT LedgNo FROM @TChrg)) AND (TVoucherEntry_2.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry_2.VoucherTypeCode=@VchType)) as Charges
                     
			FROM         TVoucherEntry AS TVoucherEntry_1 
								 WHERE      TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate AND (TVoucherEntry_1.IsCancel = 'false')
										AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
								Group by TVoucherEntry_1.VoucherDate					
			Union all
			SELECT     0 as DocNo,TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage,SUM(TStock.NetAmount) AS SAmt, SUM(TStock.SGSTAmount) AS TAmt,
									   0 as Disc ,0 as RndOff ,0 as Charges                     
			FROM         TVoucherEntry AS TVoucherEntry_1 INNER JOIN
								  TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo 
								 WHERE      TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = 'false')
										AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
								Group by TVoucherEntry_1.VoucherDate,TStock.SGSTPercentage
			order by VoucherDate,SGSTPercentage
		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Amt,@SGSTAmount,@Disc,@RndOff,@Charges
			While(@@Fetch_Status=0)
			Begin
				if(@Per=-1)
				Begin
					if(@TempDate<>'01-01-1900')
					Begin
						update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where Date = @TempDate
						set @AmtTotal =0 set @TaxToal =0 set @TempDate=@Date					
					End
					insert into @TVal (DocNo ,Date ,LedgerName,FinalAmt,Disc ,Charges ,RndOff ,SAmt1,TAmt1,SAmt2,TAmt2,SAmt3,TAmt3,SAmt4,TAmt4,SAmt5,TAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@Amt,@Disc,@Charges,@RndOff,0,0,0,0,0,0,0,0,0,0 )
				End
				Else
				Begin
					select @TempColNo=ColNo from @PerTable where TempPer=@Per
						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @SGSTAmount where Date = @Date
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @SGSTAmount where Date = @Date
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @SGSTAmount where Date = @Date
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @SGSTAmount where Date = @Date
						if (@TempColNo = 5)
							update @TVal set SAmt5 = @Amt , TAmt5 = @SGSTAmount where Date = @Date
						set @TaxToal =@TaxToal+@SGSTAmount
						set @AmtTotal =@AmtTotal+@Amt
						set @TempDocNo=@DocNo
						set @TempDate=@Date
				
				End
				fetch next from InsValue into @DocNo,@Date,@Per,@Amt,@SGSTAmount,@Disc,@RndOff,@Charges
			End
close InsValue deallocate InsValue
if(@TempDate<>'01-01-1900')
					Begin
						update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where Date = @TempDate
						set @AmtTotal =0 set @TaxToal =0 set @TempDate=@Date					
					End		

End
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type=3)
Begin
	Begin
			if((Select Count(*) from @PerTable)=1)			
			select 'Quarter-'+Cast(datepart (q,Date) as varchar) as 'Quarter',Sum(cast (DocNo as numeric)) as 'TotalBills', sum(FinalAmt) as 'FinalAmt' ,sum(Disc) as 'Disc',sum(Charges) as 'Charges',sum(RndOff) as 'RndOff',sum(SAmt1) as 'SAmt1',sum(TAmt1) as 'TAmt1',sum(AmtTotal)as 'AmtTotal' ,sum(TaxToal) as 'TaxToal' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=2)
			select 'Quarter-'+Cast(datepart (q,Date) as varchar) as 'Quarter',Sum(cast (DocNo as numeric)) as 'TotalBills', sum(FinalAmt) as 'FinalAmt' ,sum(Disc) as 'Disc',sum(Charges) as 'Charges',sum(RndOff) as 'RndOff',sum(SAmt1) as 'SAmt1',sum(TAmt1) as 'TAmt1',Sum(SAmt2) as 'SAmt2',sum(TAmt2) as 'TAmt2',sum(AmtTotal)as 'AmtTotal' ,sum(TaxToal) as 'TaxToal'  from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=3)
			select 'Quarter-'+Cast(datepart (q,Date) as varchar) as 'Quarter',Sum(cast (DocNo as numeric)) as 'TotalBills', sum(FinalAmt) as 'FinalAmt' ,sum(Disc) as 'Disc',sum(Charges) as 'Charges',sum(RndOff) as 'RndOff',sum(SAmt1) as 'SAmt1',sum(TAmt1) as 'TAmt1',Sum(SAmt2) as 'SAmt2',sum(TAmt2) as 'TAmt2' ,Sum(SAmt3) as 'SAmt3',sum(TAmt3) as 'TAmt3' ,sum(AmtTotal)as 'AmtTotal' ,sum(TaxToal) as 'TaxToal' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=4)
			select 'Quarter-'+Cast(datepart (q,Date) as varchar) as 'Quarter',Sum(cast (DocNo as numeric)) as 'TotalBills', sum(FinalAmt) as 'FinalAmt' ,sum(Disc) as 'Disc',sum(Charges) as 'Charges',sum(RndOff) as 'RndOff',sum(SAmt1) as 'SAmt1',sum(TAmt1) as 'TAmt1',Sum(SAmt2) as 'SAmt2',sum(TAmt2) as 'TAmt2' ,Sum(SAmt3) as 'SAmt3',sum(TAmt3) as 'TAmt3',Sum(SAmt4) as 'SAmt4',sum(TAmt4) as 'TAmt4'  ,sum(AmtTotal)as 'AmtTotal' ,sum(TaxToal) as 'TaxToal' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=5)
			select 'Quarter-'+Cast(datepart (q,Date) as varchar) as 'Quarter',Sum(cast (DocNo as numeric)) as 'TotalBills', sum(FinalAmt) as 'FinalAmt' ,sum(Disc) as 'Disc',sum(Charges) as 'Charges',sum(RndOff) as 'RndOff',sum(SAmt1) as 'SAmt1',sum(TAmt1) as 'TAmt1',Sum(SAmt2) as 'SAmt2',sum(TAmt2) as 'TAmt2' ,Sum(SAmt3) as 'SAmt3',sum(TAmt3) as 'TAmt3',Sum(SAmt4) as 'SAmt4',sum(TAmt4) as 'TAmt4',Sum(SAmt5) as 'SAmt5',sum(TAmt5) as 'TAmt5' ,sum(AmtTotal)as 'AmtTotal' ,sum(TaxToal) as 'TaxToal'  from @TVal  Group BY datepart (q,Date)
	End
End
---------------------------------------------------------------------------------------------------------------------------------------------------------
Else
Begin
	if(@Type=1 or @Type=2 )
	Begin
		
		if((Select Count(*) from @PerTable)=1)
		select Date,DocNo ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,AmtTotal ,TaxToal from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=2)
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2 ,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=3)
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 as AMT ,TAmt1 as SGST,TCAmt1 as CGST,TIAmt1 as IGST,TCeAmt1 as Cess,SAmt2 as AMT ,TAmt2 as SGST,TCAmt2 as CGST,TIAmt2 as IGST ,TCeAmt2 as Cess  ,SAmt3 as AMT ,TAmt3 as SGST ,TCAmt3 as CGST,TIAmt3 as IGST,TCeAmt3 as Cess,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) as AMT ,sum(TAmt1) as SGST,sum(TCAmt1) as CGST,sum(TIAmt1) as IGST,sum(TCeAmt1) as Cess,sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=4)
		--select Date,DocNo  , LedgerName,FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,SAmt4 ,TAmt4  ,AmtTotal,TaxToal from @TVal
		--union All select null as Date, null as DocNo ,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(SAmt4) ,sum(TAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2  ,SAmt3 ,TAmt3 ,TCAmt3,TIAmt3,TCeAmt3,SAmt4 ,TAmt4 ,TCAmt4,TIAmt4,TCeAmt4,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(TIAmt4),sum(TCeAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=5)
		select Date,DocNo  ,LedgerName, GSTNO,FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2  ,SAmt3 ,TAmt3 ,TCAmt3,TIAmt3,TCeAmt3,SAmt4 ,TAmt4 ,TCAmt4,TIAmt4,TCeAmt4,SAmt5 ,TAmt5 ,TCAmt5,TIAmt5,TCeAmt5,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(TIAmt4),sum(TCeAmt4),sum(SAmt5) ,sum(TAmt5),sum(TCAmt5),sum(TIAmt5),sum(TCeAmt5),sum(AmtTotal) ,sum(TaxToal) from @TVal
	End
  End	
END


 Error End ======================== Vriha iTech5/31/2019 1:25:42 PM

Error Start =========
 Invalid object name 'dbo.AddTDeliveryAddress'.
=====

ALTER PROCEDURE [dbo].[AddTDeliveryAddress]
     @PkSrNo                              numeric(18),
     @FkVoucherno                         numeric(18),
     @Ledgerno                            numeric(18),
     @LedgerDetailsNo                     numeric(18),
     @IsActive                            bit,
     @UserId                              int,
	 @UserDate					          datetime,
	 --@ModifiedBy					      varchar(500),
@Companyno                   int
   --  @StatusNo							  int
	
AS
IF EXISTS(select PkSrNo from TDeliveryAddress
          where
          FkVoucherno = @FkVoucherno)
     BEGIN
       --Update existing row
       UPDATE TDeliveryAddress
       SET
          FkVoucherno		= @FkVoucherno,
          Ledgerno			= @Ledgerno,
		  LedgerDetailsNo	= @LedgerDetailsNo,
          IsActive			= @IsActive,
          UserID			= @UserID,
          UserDate			= @UserDate,
          ModifiedBy		= isnull(ModifiedBy,'') + cast(@UserID as varchar)+'@'+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo			= 2

       WHERE
          FkVoucherno = @FkVoucherno

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TDeliveryAddress
       DBCC CHECKIDENT('TDeliveryAddress', RESEED, @Id)
       INSERT INTO TDeliveryAddress(
 
          FkVoucherno,
          Ledgerno,
		  LedgerDetailsNo,
          IsActive,
          UserID,
          UserDate,
CompanyNo,
          StatusNo	
)
       VALUES(

          @FkVoucherno,
          @Ledgerno,
		  @LedgerDetailsNo,
		  @IsActive,
		  @UserID,
		  @UserDate,
@CompanyNo,
          1
)

END


 Error End ======================== Vriha iTech5/31/2019 1:25:43 PM

Error Start =========
 There is already an object named 'GetChequePrintDetails' in the database.
=====

--<EndVersion = 1.0.0.0>

--<Version = 1.0.1.1>

Create Procedure [dbo].[GetChequePrintDetails]
@ChqPrintingNo	numeric(18)
AS
Begin
	SELECT     MLedger.LedgerName, TChequePrinting.ChequeDate, TVoucherEntry.BilledAmount As ChequeAmount, TChequePrinting.Remark1, TChequePrinting.Remark2, 
                      TChequePrinting.Remark3
FROM         TChequePrinting INNER JOIN
                      MLedger ON TChequePrinting.LedgerNo = MLedger.LedgerNo INNER JOIN
                      TVoucherEntry ON TChequePrinting.FKVoucherNo = TVoucherEntry.PkVoucherNo
WHERE     (TChequePrinting.PkSrNo = @ChqPrintingNo)	
End


 Error End ======================== Vriha iTech5/31/2019 1:25:43 PM

Error Start =========
 Invalid column name 'esflag'.
Invalid column name 'esflag'.
=====

Alter Procedure [dbo].[GetStockSummaryAllReport]
@CompNo		           numeric(18),
@FromDate	           datetime,
@ToDate		           datetime,
@ItStr		           varchar(max),
@EsFlag                int
As
declare @VType varchar(100),@SVType varchar(100),@SRVType varchar(100),@PVType varchar(100),@PRVType varchar(100)
declare @OPVType varchar(100),@PhVType varchar(100),@ProdVType varchar(100)
if(@EsFlag=0)
begin
        set @VType='15,9,12,13,8,36'
		set @SVType='15'
		set @SRVType='12'
		set @PVType='9'
		set @PRVType='13'
      set @OPVType='36'
       set @PhVType='8'
      set @ProdVType='0'
end
else if(@EsFlag=1)
begin
        set @VType='115,109,112,113,108,136'
        set @SVType='115'
        set @SRVType='112'
		set @PVType='109'
		set @PRVType='113'
  set @OPVType='136'
       set @PhVType='108'
      set @ProdVType='1'

end

SELECT   ItemNo,sum(PurQty) AS PurQty, sum(SaleQty)  AS SaleQty,sum(PurReturnQty) AS PurReturnQty,sum(SalesReturnQty) AS SalesReturnQty,
sum(OpnOutQty) AS OpnOutQty,sum (OpnInQty) AS OpnInQty,sum (PhyOutQty) AS PhyOutQty,sum (PhyInQty) AS PhyInQty,
ItemGroupName, ItemName, Barcode,UOMH,UOMName_H,UOML,UOMName_L,HSNCode ,sum(ProdOutQty) AS ProdOutQty,sum(ProdInQty) AS ProdInQty from
(
--------Opening Stock for Out or minus---------------

SELECT     0 as StockType,   b.ItemNo, 0 AS PurQty, 0  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,   
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H,  
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo 
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@VType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     a.VoucherDate < @FromDate AND a.IsCancel = 'False' --AND a.VoucherTypeCode IN (cast (@VType)
 and b.trncode=2
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,   
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

--------Opening Stock in or plus---------------
union all 

SELECT     0 as StockType,   b.ItemNo, 0 AS PurQty, 0  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,   
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H,  
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo 
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@VType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     a.VoucherDate < @FromDate AND a.IsCancel = 'False'-- AND a.VoucherTypeCode IN  (CAST(@VType as numeric)   ) 
 and b.trncode=1
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,   
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate


Union All

------------------- Sales -------------------
SELECT   1 as StockType,     b.ItemNo, 0 AS PurQty, 
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo,MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@SVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE        (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (15))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,   MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All

------------------- Pur Return -------------------
SELECT    1 as StockType,     b.ItemNo, 0 AS PurQty, 0 AS SaleQty, 
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo,MUOM_S.UOMName AS UOMName_S, 
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PRVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (13))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- Purchase -------------------
SELECT   1 as StockType, b.ItemNo, CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PurQty, 
0 AS SaleQty,0 AS PurReturnQty, 0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,MItemGroup.ItemGroupName,
MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H,MItemMASter.UOML,
MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False')-- AND (a.VoucherTypeCode IN (9))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML,MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- Sales Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@SRVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False')-- AND (a.VoucherTypeCode IN (12))
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- Physical stock entry minus Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PhVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 

WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (8)) 
and b.trncode=2
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate
Union All
------------------- Physical stock entry plus Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End  AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PhVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 

WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (8))
 and b.trncode=1
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

union all 
SELECT     1 AS StockType, MItemMaster.ItemNo, 0 AS PurQty, 0 AS SaleQty, 0 AS PurReturnQty, 0 AS SalesReturnQty,0 as FkUomNo,'' AS UOMName_S,
                      MItemGroup.ItemGroupName, MItemMaster.ItemName, MItemMaster.Barcode, MItemMaster.UOMH, MUOM_H.UOMName AS UOMName_H, MItemMaster.UOML, 
                      MUOM_L.UOMName AS UOMName_L,
MItemMASter.HSNCode,RDate as VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,
 0 AS ProdOutQty,sum( MRecipeMain.ProdQty ) AS ProdInQty
FROM         MItemGroup INNER JOIN
                      MItemMaster ON MItemGroup.ItemGroupNo = MItemMaster.GroupNo INNER JOIN
                      MUOM ON MItemMaster.UOML = MUOM.UOMNo INNER JOIN
                      MUOM AS MUOM_H ON MItemMaster.UOMH = MUOM_H.UOMNo INNER JOIN
                      MUOM AS MUOM_L ON MItemMaster.UOML = MUOM_L.UOMNo INNER JOIN
                      MRecipeMain ON MItemMaster.ItemNo = MRecipeMain.FinishItemID
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on MRecipeMain.FinishItemID= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@ProdVType,  ',') AS Vch on MRecipeMain.esflag= CAST(vch.value AS varchar)
WHERE     (MRecipeMain.RecipeType = 2)-- and (MRecipeMain.RDate >= @FromDate) AND (MRecipeMain.RDate  <= @ToDate)
 AND (MRecipeMain.IsActive = 'True') 
GROUP BY MItemMaster.ItemNo, MItemMaster.UOML, MItemMaster.ItemName, MItemGroup.ItemGroupName, MUOM.UOMName, MItemMaster.Barcode, MItemMaster.UOMH, 
                      MUOM_H.UOMName, MItemMaster.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,RDate

union all 

SELECT     1 AS StockType, MItemMaster.ItemNo, 0 AS PurQty, 0 AS SaleQty, 0 AS PurReturnQty, 0 AS SalesReturnQty, 0 AS FkUomNo, '' AS UOMName_S, 
                      MItemGroup.ItemGroupName, MItemMaster.ItemName, MItemMaster.Barcode, MItemMaster.UOMH, MUOM_H.UOMName AS UOMName_H, MItemMaster.UOML, 
                      MUOM_L.UOMName AS UOMName_L, MItemMaster.HSNCode, MRecipeMain.RDate AS VoucherDate, 0 AS OpnOutQty, 0 AS OpnInQty, 0 AS PhyOutQty, 0 AS PhyInQty, 
                      sum(MRecipeSub.FinalQty) AS ProdOutQty,0 AS ProdInQty
FROM         MItemGroup INNER JOIN
                      MItemMaster ON MItemGroup.ItemGroupNo = MItemMaster.GroupNo INNER JOIN
                      MUOM ON MItemMaster.UOML = MUOM.UOMNo INNER JOIN
                      MUOM AS MUOM_H ON MItemMaster.UOMH = MUOM_H.UOMNo INNER JOIN
                      MUOM AS MUOM_L ON MItemMaster.UOML = MUOM_L.UOMNo INNER JOIN
                      MRecipeSub ON MItemMaster.ItemNo = MRecipeSub.RawProductID INNER JOIN
                      MRecipeMain ON MRecipeMain.MRecipeID = MRecipeSub.FKMRecipeID
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on MRecipeSub.RawProductID= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@ProdVType,  ',') AS Vch on MRecipeMain.esflag= CAST(vch.value AS varchar)
WHERE     (MRecipeMain.RecipeType = 2) and (MRecipeMain.RDate >= @FromDate) AND (MRecipeMain.RDate  <= @ToDate) AND (MRecipeMain.IsActive = 'True') 
GROUP BY MItemMaster.ItemNo, MItemMaster.UOML, MItemMaster.ItemName, MItemGroup.ItemGroupName, MUOM.UOMName, MItemMaster.Barcode, MItemMaster.UOMH, 
                      MUOM_H.UOMName, MItemMaster.UOML, MUOM_L.UOMName, MItemMaster.HSNCode, MRecipeMain.RDate


)AS tbl
GROUP BY ItemNo,ItemGroupName, ItemName, Barcode, UOMH,UOMName_H,UOML,UOMName_L,HSNCode
Order BY ItemGroupName, ItemName


 Error End ======================== Vriha iTech5/31/2019 1:25:43 PM

Error Start =========
 Invalid object name 'dbo.GetMultiBill'.
=====

ALTER PROCEDURE [dbo].[GetMultiBill]
@FromDate          datetime,
@ToDate            datetime,
@VchType           int,
@CompanyNo                   varchar(50),
@PartyNo                   varchar(max)


AS
Begin
declare @Type						int
set @Type=1
SELECT    TVoucherEntry.PkVoucherNo,TVoucherEntry.LedgerNo, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherDate, CASE WHEN (@Type = 1) 
                      THEN MStockItems_V_1.ItemName ELSE MStockItems_V_1.ItemNameLang END AS ItemName,MRateSetting.MRP, 
TStock.Quantity,TStock.GRWeight,TStock.TRWeight,
TStock.PackagingCharges,TStock.NoOfBag,TStock.CessValue,TStock.OtherCharges as Dhekharek,
 TStock.Rate, TStock.Amount,MUOM.UOMName, TStock.SGSTPercentage,TStock.SGSTAmount, 
                       TStock.DiscPercentage,TStock.DiscAmount,TStock.DiscRupees,TStock.DiscPercentage2,TStock.DiscAmount2,TStock.DiscRupees2, TStock.CGSTPercentage,
 TStock.CGSTAmount, TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, 
                      TStock.CessAmount, MLedgerDetails.GSTNO AS CustGSTNo, MLedgerDetails.PANNo AS CustPANNo,
MLedgerDetails.FSSAI,MFirm.GSTNO as CmpGSTNo, MLedger.StateCode,MItemMaster.HSNCode, TVoucherEntry.BilledAmount,MFirm.FSSAINo as CompFSSAINO, 
     CASE WHEN (@Type = 1) THEN LedgerName ELSE LedgerLangName END AS LedgerName,
                      MLedger.ContactPerson, MLedgerDetails.PhNo1 as CustPhNo, MLedgerDetails.MobileNo1 as CustMoNo,

         CASE WHEN (@Type = 1) THEN MLedgerDetails.Address ELSE MLedgerDetails.AddressLang end AS CustAddress,



 MFirm.Address AS CmpAddress, MFirm.EmailID AS CmpEmailID,MFirm.PhoneNo1 +' / '+ Mfirm.PhoneNo2 as CompPhoneNo,



 TVoucherEntry.Reference, TVoucherEntry.VoucherTime,(TStock.NetAmount + TStock.CessValue + TStock.PackagingCharges + TStock.OtherCharges)as NetAmount, TStock.NetRate,  TStock.DisplayItemName, TStock.Remarks as RemarksItemlevel,
                      '' AS TransporterName,MTransporterPayType.TransPayTypeName,TVoucherEntry.LRNo,MTransporterMode.TransModeName, TVoucherEntry.TransNoOfItems,  
               (SELECT     SettingValue   FROM   MSettings     WHERE      (PkSettingNo = 311)) AS DisplayTrans,TVoucherEntry.Remark, MState.StateName, MCity.CityName, MPayType.PayTypeName
FROM         MLedgerDetails INNER JOIN
                      TStock INNER JOIN  MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN 
                      TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN

                      MFirm ON TVoucherEntry.CompanyNo = MFirm.FirmNo INNER JOIN
                      MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                      dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems_V_1 ON TStock.ItemNo = MStockItems_V_1.ItemNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo ON MLedgerDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo   LEFT OUTER JOIN
 MTransporterMode ON TVoucherEntry.TransportMode = MTransporterMode.TransModeNo LEFT OUTER JOIN
                      MTransporterPayType ON TVoucherEntry.TransPayType = MTransporterPayType.TransPayTypeNo INNER JOIN
                      MState ON MLedger.StateCode = MState.StateCode INNER JOIN
                      MCity ON MLedgerDetails.CityNo = MCity.CityNo INNER JOIN
fn_Split (''+cast(@PartyNo as varchar(max))+ '','') AS Party_BILL on TVoucherEntry.LedgerNo= CAST(Party_BILL.value AS numeric) INNER JOIN

                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
    
WHERE      (TVoucherEntry.vouchertypecode = @VchType)
ORDER BY TStock.PkStockTrnNo

end


 Error End ======================== Vriha iTech5/31/2019 1:25:43 PM

Error Start =========
 Invalid object name 'dbo.GetVoucherDetailsByDays'.
=====

Alter PROCEDURE [dbo].[GetVoucherDetailsByDays]
@CurrDate datetime,
@CompNo numeric(18),
@MfgCompNo numeric(18)

AS  

if(@MfgCompNo=0)

SELECT     Convert(Varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntry.VoucherUserNo,MLedger.LedgerName AS LedgerName, MVoucherType.VoucherTypeName, TVoucherDetails.FKVoucherNo,
                     case when  TVoucherEntry.IsCancel='true' then 0 else   TVoucherDetails.Debit end  as [Debit Amount], 
                         case when  TVoucherEntry.IsCancel='true' then 0 else TVoucherDetails.Credit end AS [Credit Amount] --TVoucherEntry.VoucherTypeCode,TVoucherEntry.VoucherUserNo
FROM         TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode
WHERE      (TVoucherDetails.VoucherSrNo = 1) AND (Convert(varchar,TVoucherEntry.VoucherDate,101) = Convert(varchar,@CurrDate,101))
			 AND (TVoucherEntry.CompanyNo = @CompNo)--and TVoucherEntry.IsCancel='false'
union
SELECT     Convert(Varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntry.VoucherUserNo,'PHYSICAL STOCK' as LedgerName, MVoucherType.VoucherTypeName, TVoucherEntry.PKVoucherNo,0 as [Debit Amount],
			0 as [Credit Amount]
FROM         TVoucherEntry INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode
WHERE      (TVoucherEntry.VoucherTypeCode = 8) AND (Convert(varchar,TVoucherEntry.VoucherDate,101) = Convert(varchar,@CurrDate,101))
		and TVoucherEntry.IsCancel='false'	 AND (TVoucherEntry.CompanyNo = @CompNo)

else

	SELECT     Convert(Varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntryCompany.VoucherUserNo,MLedger.LedgerName AS LedgerName, MVoucherType.VoucherTypeName, TVoucherDetailsCompany.FKVoucherNo, 
 case when  TVoucherEntry.IsCancel='true' then 0 else  TVoucherDetailsCompany.Debit end as [Debit Amount], 
                      case when  TVoucherEntry.IsCancel='true' then 0 else  TVoucherDetailsCompany.Credit end AS [Credit Amount] --TVoucherEntry.VoucherTypeCode,TVoucherEntry.VoucherUserNo
FROM         TVoucherEntry INNER JOIN TVoucherEntryCompany ON TVoucherEntry.PKVoucherNo=TVoucherEntryCompany.FKVoucherNo INNER JOIN 
                      TVoucherDetailsCompany ON TVoucherEntryCompany.PKVoucherCompanyNo = TVoucherDetailsCompany.FKVoucherNo INNER JOIN
                      MLedger ON TVoucherDetailsCompany.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MVoucherType ON TVoucherEntryCompany.VoucherTypeCode = MVoucherType.VoucherTypeCode
WHERE      (TVoucherDetailsCompany.VoucherSrNo = 1) AND (Convert(varchar,TVoucherEntry.VoucherDate,101) = Convert(varchar,@CurrDate,101))
	and TVoucherEntry.IsCancel='false'	 	 AND (TVoucherEntryCompany.CompanyNo = @CompNo) AND TVoucherEntryCompany.MfgCompNo=@MfgCompNo



 Error End ======================== Vriha iTech5/31/2019 1:25:43 PM

Error Start =========
 Column names in each table must be unique. Column name 'EmailPass' in table 'dbo.MFirm' is specified more than once.
=====

--<EndVersion = 1.0.1.3>

--<Version = 1.0.1.4>

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MFirm ADD
	EmailPass nvarchar(50) NULL


 Error End ======================== Vriha iTech5/31/2019 1:25:43 PM

Error Start =========
 Column names in each table must be unique. Column name 'UomLang' in table 'dbo.MUOM' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MUOM ADD
	UomLang varchar(50) NULL


 Error End ======================== Vriha iTech5/31/2019 1:25:43 PM

Error Start =========
 Column names in each table must be unique. Column name 'KarnatakaVal' in table 'dbo.MLanguageDictionary' is specified more than once.
=====


SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MLanguageDictionary ADD
	KarnatakaVal nvarchar(50) NULL


 Error End ======================== Vriha iTech5/31/2019 1:25:43 PM

Error Start =========
 Column names in each table must be unique. Column name 'PackagingChargesAmt' in table 'dbo.TStock' is specified more than once.
=====

ALTER TABLE dbo.TStock ADD
	ContainerCharges numeric(18, 2) NULL,
	ContainerChargesAmt numeric(18, 2) NULL,
	PackagingChargesAmt numeric(18, 2) NULL


 Error End ======================== Vriha iTech5/31/2019 1:25:43 PM

Error Start =========
 The server principal "Logicall" is not able to access the database "Yadi2018" under the current security context.
=====

INSERT INTO [Yadi2018].[dbo].[MLanguage]
           ([LanguageName]
           ,[FontName]
           ,[FontSize]
           ,[FontBold]
           ,[CompanyNo]
           ,[StatusNo])
     VALUES
           ('Karnataka','Nudi 01 e',16,'False',1,3)

 Error End ======================== Vriha iTech5/31/2019 1:25:44 PM

Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.MRateSetting' is specified more than once.
=====

--<EndVersion = 1.0.1.4>

--<Version = 1.0.1.5>


SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MRateSetting ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.MRateSetting ADD CONSTRAINT
	DF_MRateSetting_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech5/31/2019 1:25:44 PM

Error Start =========
 Column names in each table must be unique. Column name 'Hamali' in table 'dbo.TStock' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.TStock ADD
	Hamali  numeric(18,2) NULL

ALTER TABLE dbo.TStock ADD CONSTRAINT
	DF_TStock_Hamali DEFAULT 0.0 FOR Hamali


 Error End ======================== Vriha iTech5/31/2019 1:25:45 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

 Error End ======================== Vriha iTech5/31/2019 1:25:46 PM

Error Start =========
 Incorrect syntax near the keyword 'PROCEDURE'.
Must declare the scalar variable "@LedgerDetailsNo".
Must declare the scalar variable "@CreditLimit".
Must declare the scalar variable "@LedgerDetailsNo".
Must declare the scalar variable "@LedgerDetailsNo".
=====

GO

--Created on 09/12/2011
create PROCEDURE [dbo].[AddMLedgerDetails2]
     @LedgerDetailsNo                           numeric(18),
     @LedgerNo                            numeric(18),
     @CreditLimit                         numeric(18,2),
     @Address                             varchar(300),
     @StateNo                             numeric(18),
     @CityNo                              numeric(18),
     @PinCode                             varchar(100),
     @PhNo1                               varchar(100),
     -- @PhNo2                               varchar(100),
     @MobileNo1                           varchar(100),
    -- @MobileNo2                           varchar(100),
     @EmailID                             varchar(100),
     @CustomerType                        numeric(18,0),
     --   @PANNo                               varchar(100),
   
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo						      numeric(18),
	-- @FSSAI								  varchar(100),
	 @AreaNo							  numeric(18),
	-- @AddressLang                         nvarchar(500),
    -- @AdharNo					          varchar(100),

    -- @RateTypeNo						  numeric(18),
   --  @DiscPer						      numeric(18),
    -- @DiscRs					      	  numeric(18),
   --  @AnyotherNo1					      varchar(100),
 -- @AccountNo                           varchar(150),
 --   @ReportName                          varchar(max),
  --   @AnyotherNo2				      	  varchar(100),
     @GSTNo				            	  varchar(100),
    @FSSAIDate                           datetime,
     @GSTDate                             datetime,
@Distance     numeric(18,2)
AS

IF EXISTS(select LedgerDetailsNo from MLedgerDetails
          where
          LedgerDetailsNo = @LedgerDetailsNo)
     BEGIN
       --Update existing row
       UPDATE MLedgerDetails
       SET
  --LedgerDetailsNo =@LedgerDetailsNo, 
     LedgerNo=0,
     CreditLimit=@CreditLimit, 
     Address=@Address ,    
     StateNo=@StateNo  ,
     CityNo=@CityNo,  
     PinCode=@PinCode ,  
     PhNo1 =@PhNo1,       
     MobileNo1 =@MobileNo1 ,   
     EmailID   =@EmailID,  
     CustomerType =@CustomerType,

     UserID =@UserID,       
     UserDate =@UserDate,    
	 CompanyNo	=@CompanyNo,	
 AreaNo=@AreaNo,			
   GSTNo=@GSTNo	,	
    FSSAIDate  =@FSSAIDate , 
     GSTDate   =@GSTDate,  
Distance =@Distance ,
DeliveryLedgerNo=@LedgerNo
       WHERE
          LedgerDetailsNo = @LedgerDetailsNo
		  --set @ReturnID=@LedgerNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @LedgerDetailsNo=IsNull(Max(LedgerdetailsNo+2),0) From MLedgerDetails
       DBCC CHECKIDENT('MLedgerdetails', RESEED, @Id)
	

 SET IDENTITY_INSERT MLedgerDetails ON
     BEGIN
       --Insert new row
       
       INSERT INTO MLedgerDetails(
         LedgerDetailsNo,   
          LedgerNo,
          CreditLimit,
          Address,
		  StateNo,
          CityNo,
          PinCode,
          PhNo1,
       --   PhNo2,
          MobileNo1,
        --  MobileNo2,
          EmailID,     
          CustomerType,
       --   PANNo,
        --  AccountNo,
        --  ReportName,      
          UserID,
          UserDate,
         -- StatusNo,
		  CompanyNo,  
		---  FSSAI,
	      AreaNo,
		--  AddressLang,
		--  RateTypeNo,
		--  DiscPer,
		--  DiscRs,
        --  AdharCardNo,
	    --  AnyotherNo1,
		 -- AnyotherNo2,
		  GSTNo,
		  FSSAIDate,
		  GSTDate,
Distance,
DeliveryLedgerNo
)
       VALUES(
         @LedgerDetailsNo,    
          0,
          @CreditLimit,
          @Address,
		  @StateNo,
          @CityNo,
          @PinCode,
          @PhNo1,
        --  @PhNo2,
          @MobileNo1,
        --  @MobileNo2,
          @EmailID,
          @CustomerType,
        --  @PANNo,
        --  @AccountNo,
        --  @ReportName,
          @UserID,
          @UserDate,
       --   1,
		  @CompanyNo,
		--  @FSSAI,
	      @AreaNo,
		--  @AddressLang,
		--  @RateTypeNo,
      --    @DiscPer,
      --    @DiscRs,
       --   @AdharNo,
		--  @AnyotherNo1,
		--  @AnyotherNo2,
		  @GSTNo,
		 @FSSAIDate,
		  @GSTDate,
@Distance,
@LedgerNo
)
end
END


 Error End ======================== Vriha iTech5/31/2019 1:25:46 PM

Error Start =========
 Column names in each table must be unique. Column name 'GSTSlab' in table 'dbo.MItemMaster' is specified more than once.
=====





--<EndVersion = 1.0.1.5>


--<Version = 1.0.1.6>

ALTER TABLE dbo.MItemMaster ADD
        GSTSlab bit NULL

 Error End ======================== Vriha iTech5/31/2019 1:25:46 PM

Error Start =========
 Incorrect syntax near 'GO'.
'CREATE/ALTER PROCEDURE' must be the first statement in a query batch.
=====
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
GO
--Created on 01/04/2019
ALTER PROCEDURE [dbo].[AddMRateSetting]
     @PkSrNo                              numeric(18),
   --  @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
     @MRP										numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                            numeric(18,4),
	 @BSaleRate                            numeric(18,4),
	 @CSaleRate                            numeric(18,4),
	 @DSaleRate                            numeric(18,4),
	 @ESaleRate                            numeric(18,4),
	 @StockConversion					  Numeric(18,2),
	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive								bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
if(cast(@FromDate as datetime) < cast('02-02-1900 00:00:00' as datetime))
begin
	set @FromDate= getdate()
end

IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET
          --FkBcdSrNo = @FkBcdSrNo,
          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
          MRP=@MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  PerOfRateVariation=@PerOfRateVariation,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT('MRateSetting', RESEED, @Id)
       INSERT INTO MRateSetting(
         -- FkBcdSrNo,
          ItemNo,
          FromDate,
          PurRate,
		  MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,
		  PerOfRateVariation,
		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          --@FkBcdSrNo,
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @PerOfRateVariation,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END
Update Mitemmaster set StatusNo=2 Where ItemNo =@ItemNo

 Error End ======================== Vriha iTech5/31/2019 1:25:46 PM

Error Start =========
 Incorrect syntax near 'GO'.
'CREATE/ALTER PROCEDURE' must be the first statement in a query batch.
=====
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
GO
--Created on 01/04/2019
ALTER PROCEDURE [dbo].[AddMRateSetting]
     @PkSrNo                              numeric(18),
   --  @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
     @MRP										numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                            numeric(18,4),
	 @BSaleRate                            numeric(18,4),
	 @CSaleRate                            numeric(18,4),
	 @DSaleRate                            numeric(18,4),
	 @ESaleRate                            numeric(18,4),
	 @StockConversion					  Numeric(18,2),
	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive								bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
if(cast(@FromDate as datetime) < cast('02-02-1900 00:00:00' as datetime))
begin
	set @FromDate= getdate()
end

IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET
          --FkBcdSrNo = @FkBcdSrNo,
          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
          MRP=@MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  PerOfRateVariation=@PerOfRateVariation,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT('MRateSetting', RESEED, @Id)
       INSERT INTO MRateSetting(
         -- FkBcdSrNo,
          ItemNo,
          FromDate,
          PurRate,
		  MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,
		  PerOfRateVariation,
		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          --@FkBcdSrNo,
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @PerOfRateVariation,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END
Update Mitemmaster set StatusNo=2 Where ItemNo =@ItemNo

 Error End ======================== Vriha iTech7/16/2019 12:47:29 PM
Error Start =========
 Column names in each table must be unique. Column name 'CreditDays' in table 'dbo.MLedgerDetails' is specified more than once.
=====

SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON

ALTER TABLE dbo.MLedgerDetails ADD
	CreditDays numeric(18, 0) NULL 


 Error End ======================== Vriha iTech7/18/2019 12:00:57 PM

Error Start =========
 'CREATE/ALTER PROCEDURE' must be the first statement in a query batch.
Incorrect syntax near the keyword 'ELSE'.
=====
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON

Create PROCEDURE [dbo].[AddMRack]
     @RackNo                              numeric(18),
     @RackName                            varchar(50),
     @RackCode                            varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)

AS
IF EXISTS(select RackNo from MRack
          where
          RackNo = @RackNo)
     BEGIN
       --Update existing row
       UPDATE MRack
       SET
          RackName = @RackName,
          RackCode = @RackCode,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
	      CompanyNo=@CompanyNo

       WHERE
          RackNo = @RackNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(RackNo),0) From MRack
       DBCC CHECKIDENT('MRack', RESEED, @Id)
       INSERT INTO MRack(
          RackName,
          RackCode,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo
)
       VALUES(
          @RackName,
          @RackCode,
          @IsActive,
          @UserID,
          @UserDate,
	      @CompanyNo
)

END


 Error End ======================== Vriha iTech7/18/2019 12:00:58 PM

Error Start =========
 There is already an object named 'DeleteMRack' in the database.
=====

Create PROCEDURE  [dbo].[DeleteMRack] 
@RackNo                             numeric(18)

AS
Update MRack set IsActive='False' where RackNo = @RackNo


 Error End ======================== Vriha iTech7/18/2019 12:00:59 PM

Error Start =========
 There is already an object named 'DeleteMLedgerGroup' in the database.
=====

Create PROCEDURE  [dbo].[DeleteMLedgerGroup] 
@LedgerGroupNo                          numeric(18)

AS
Update MLedgerGroup set IsActive='False' where LedgerGroupNo= @LedgerGroupNo


 Error End ======================== Vriha iTech7/18/2019 12:00:59 PM

Error Start =========
 There is already an object named 'TEWayDetails' in the database.
=====

CREATE TABLE [dbo].[TEWayDetails](
	[PKEWayNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherNo] [int] NULL,
	[EWayNo] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[VoucherUserNo] [numeric](18, 0) NULL,
	[EWayDate] [datetime] NULL,
	[ModeNo] [numeric](18, 0) NULL,
	[Distance] [numeric](18, 2) NULL,
	[TransportNo] [numeric](18, 0) NULL,
	[VehicleNo] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LRNo] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LRDate] [datetime] NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[LedgerName] [varchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Address] [varchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CityNo] [numeric](18, 0) NULL,
	[Yadi2018BhatiyaCityName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PinCode] [numeric](18, 0) NULL,
	[StateCode] [numeric](18, 0) NULL,
	[StateName] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[StatusNo] [int] NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_TEWayDetails] PRIMARY KEY CLUSTERED 
(
	[PKEWayNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]


 Error End ======================== Vriha iTech7/18/2019 12:00:59 PM

Error Start =========
 Invalid column name 'DeliveryLedgerNo'.
=====

Create PROCEDURE [dbo].[GetRackWiseBill]
@PkVoucherNo                numeric(18),
@Type						int

AS
Begin

SELECT     TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherDate, CASE WHEN (@Type = 1) 
                      THEN MStockItems_V_1.ItemName ELSE MStockItems_V_1.ItemNameLang END AS ItemName, MRateSetting.MRP, TStock.Quantity, TStock.GRWeight, 
                      TStock.TRWeight, TStock.PackagingCharges, TStock.NoOfBag, TStock.CessValue, TStock.OtherCharges AS Dhekharek, TStock.Rate, TStock.Amount, MUOM.UOMName, 
                      TStock.SGSTPercentage, TStock.SGSTAmount, TStock.DiscPercentage, TStock.DiscAmount, TStock.DiscRupees, TStock.DiscPercentage2, TStock.DiscAmount2, 
                      TStock.DiscRupees2, TStock.CGSTPercentage, TStock.CGSTAmount, TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, TStock.CessAmount, 
                      MLedgerDetails.GSTNO AS CustGSTNo, MLedgerDetails.PANNo AS CustPANNo, MLedgerDetails.FSSAI, MFirm.GSTNO AS CmpGSTNo, MLedger.StateCode, 
                      MItemMaster.HSNCode, TVoucherEntry.BilledAmount, CASE WHEN (@Type = 1) THEN LedgerName ELSE LedgerLangName END AS LedgerName, 
                      MLedger.ContactPerson, MLedgerDetails.PhNo1 AS CustPhNo, MLedgerDetails.MobileNo1 AS CustMoNo, CASE WHEN (@Type = 1) 
                      THEN MLedgerDetails.Address ELSE MLedgerDetails.AddressLang END AS CustAddress, MFirm.Address + ' / ' + MFirm.PinCode AS CmpAddress, 
                      MFirm.EmailID AS CmpEmailID, MFirm.PhoneNo1 + ' / ' + MFirm.PhoneNo2 AS CompPhoneNo, MFirm.FSSAINO AS CompFSSAINo, TVoucherEntry.Reference, 
                      TVoucherEntry.VoucherTime, TStock.NetAmount + TStock.CessValue + TStock.PackagingCharges + TStock.OtherCharges AS NetAmount, TStock.NetRate, 
                      TStock.DisplayItemName, TStock.Remarks AS RemarksItemlevel, '' AS TransporterName, TVoucherEntry.LRNo, MTransporterMode.TransModeName, 
                      TVoucherEntry.TransNoOfItems,
                          (SELECT     SettingValue
                            FROM          MSettings
                            WHERE      (PkSettingNo = 311)) AS DisplayTrans, TVoucherEntry.Remark, MState.StateName, MCity.CityName, MPayType.PayTypeName, 
                      MLedgerDetails_1.Address AS CustDeliveryAddress, mcity_1.CityName AS custDeliverycity, MRack.RackName, MRackDetails.ToQty
FROM         MCity AS mcity_1 RIGHT OUTER JOIN
                      TStock INNER JOIN
                      MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN
                      TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
                      MFirm ON TVoucherEntry.CompanyNo = MFirm.FirmNo INNER JOIN
                      MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                      dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems_V_1 ON TStock.ItemNo = MStockItems_V_1.ItemNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MLedgerDetails ON MLedgerDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo LEFT OUTER JOIN
                      MTransporterMode ON TVoucherEntry.TransportMode = MTransporterMode.TransModeNo INNER JOIN
                      MState ON MLedger.StateCode = MState.StateCode LEFT OUTER JOIN
                      MCity ON MLedgerDetails.CityNo = MCity.CityNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      MRack INNER JOIN
                      MRackDetails ON MRack.RackNo = MRackDetails.FkRackNo ON MItemMaster.GroupNo = MRackDetails.ItemNo LEFT OUTER JOIN
                      TDeliveryAddress ON TVoucherEntry.PkVoucherNo = TDeliveryAddress.FkVoucherno AND TVoucherEntry.LedgerNo = TDeliveryAddress.Ledgerno LEFT OUTER JOIN
                      MLedgerDetails AS MLedgerDetails_1 ON MLedgerDetails_1.LedgerDetailsNo = TDeliveryAddress.LedgerDetailsNo AND 
                      TDeliveryAddress.Ledgerno = MLedgerDetails_1.DeliveryLedgerNo ON mcity_1.CityNo = MLedgerDetails_1.CityNo
WHERE     (TVoucherEntry.PkVoucherNo = @PkVoucherNo)

ORDER BY TStock.PkStockTrnNo

END


 Error End ======================== Vriha iTech7/18/2019 12:01:00 PM

Error Start =========
 Column already has a DEFAULT bound to it.
Could not create constraint. See previous errors.
=====

ALTER TABLE MRateSetting ADD CONSTRAINT Stock DEFAULT 0 FOR Stock

ALTER TABLE MRateSetting ADD CONSTRAINT Stock2 DEFAULT 0 FOR Stock2

ALTER TABLE MRateSetting ADD CONSTRAINT Weight1 DEFAULT 0 FOR Weight1

ALTER TABLE MRateSetting ADD CONSTRAINT Weight2 DEFAULT 0 FOR Weight2

ALTER TABLE MRateSetting ADD CONSTRAINT SPPerc DEFAULT 0 FOR SPPerc

ALTER TABLE MRateSetting ADD CONSTRAINT LPPerc DEFAULT 0 FOR LPPerc


 Error End ======================== Vriha iTech7/18/2019 12:01:00 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_DBVersionLog'. Cannot insert duplicate key in object 'dbo.DBVersionLog'.
The statement has been terminated.
=====

IF NOT EXISTS(select ScriptNo from DBVersionLog where ScriptNo = 3)
BEGIN

UPDATE MSetting SET AppVersion = 'rKNKsixM4yg=';

INSERT INTO [DBVersionLog]
           ([ScriptNo]
           ,[ScriptDescription])
     VALUES
           (2
           ,'Updated application version to 1.0.1.0')
END


 Error End ======================== Vriha iTech7/18/2019 12:01:01 PM

Error Start =========
 Invalid object name 'dbo.GetGSTTaxDetailsHSNCodeWise'.
=====

ALTER PROCEDURE [dbo].[GetGSTTaxDetailsHSNCodeWise] 

	@FromDate datetime,
	@ToDate datetime,
	@VchType numeric(18)
	
AS
BEGIN
	Declare @PerTable Table(TempPer numeric(18,2),ColNo numeric(18))
declare @StrQry varchar(max)

 set @StrQry='SELECT   HSNCode,ItemGroupName + ''  ''+MItemMaster.ItemName As Itemname,UOMShortCode +'' - ''+ UOMShortCode as Uomname,
sum(TStock.Quantity) as Quantity, sum(tstock.Amount) as Amount,sum((tstock.Netamount)-(TStock.SGSTAmount+TStock.IGSTAmount+TStock.CessAmount+TStock.CGSTAmount)) as NetAmount,
sum(TStock.IGSTAmount) as IGSTAmount ,sum(TStock.CGSTAmount) as CGSTAmount ,sum(TStock.SGSTAmount) as SGSTAmount,sum(TStock.CessAmount) as CessAmount 
FROM TVoucherEntry AS TVoucherEntry_1 INNER JOIN
TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo  
inner join MItemMaster on TStock.itemno=MItemMaster.itemno
INNER JOIN MItemGroup on MItemGroup.ItemGroupNo=MItemMaster.groupno
inner join muom on tstock.FkUomNo=muom.uomno
WHERE TVoucherEntry_1.VoucherTypeCode='+cast(@VchType as varchar)+' and  VoucherDate>='''+cast(@FromDate as varchar)+''' and VoucherDate<='''+cast(@ToDate as varchar)+'''
and TVoucherEntry_1.iscancel= 0  group by HSNCode,ItemGroupName,ItemName,UOMShortCode,UOMShortCode

order by HSNCode'

 Exec(@StrQry) 
END


 Error End ======================== Vriha iTech7/18/2019 12:01:01 PM

Error Start =========
 Invalid object name 'dbo.GetGSTTaxDetailsCess'.
=====

ALTER PROCEDURE [dbo].[GetGSTTaxDetailsCess] 
	@FromDate datetime,
	@ToDate datetime,
	@Type numeric(18),
	@VchType numeric(18),
	@DiscLedg varchar(max),
	@ChargesLedg varchar(max),
	@RoundOffLedgNo numeric(18),
	@TaxTypeNo	numeric(18)
AS
BEGIN
	Declare @PerTable Table(TempPer numeric(18,2),ColNo numeric(18))
	Declare @ColName numeric(18,2),@Cnt numeric(18),@DocNo numeric(18),@Date datetime,@Amt numeric(18,2),@Per numeric(18,2),
			@Pk numeric(18),@TotTax numeric(18,2), @TotAmt numeric(18,2),@TotAmt2 numeric(18,2),@TaxToal numeric(18,2),@AmtTotal numeric(18,2),
			@FinalAmount numeric(18,2),@StrQry varchar(max),@TempPer numeric(18,2),@TaxAmt numeric(18,2),@TaxAmt2 numeric(18,2),@TaxAmt3 numeric(18,2),@TaxAmt4 numeric(18,2),@TempDate datetime,@GSTNO varchar(50),@HSNCode varchar(50),@StateName varchar(100),@UomName varchar(50),@ItemNo numeric(18)
	Declare @Month varchar(20),@MNo int ,@TDate datetime ,@Yr int,@FrDate datetime,@TempPk numeric(18),@TempColNo numeric(18),
			@SGSTAmount numeric(18,2),@SGSTAmount2 numeric(18,2),@SGSTAmount3 numeric(18,2),@SGSTAmount4 numeric(18,2),@TempDocNo numeric(18),@Disc numeric(18,2),@Charges numeric(18,2),@RndOff numeric(18,2),@LedgerName varchar(max)
	Declare @TVal Table(DocNo numeric(18),Date datetime,LedgerName varchar(max),GSTNO varchar(50),HSNCode varchar(50),StateName varchar(100),UomName varchar(50), FinalAmt numeric(18,2),Disc numeric(18,2),Charges numeric(18,2),RndOff numeric(18,2),SAmt1 numeric(18,2),TAmt1 numeric(18,2),TCAmt1 numeric(18,2),TIAmt1 numeric(18,2),TCeAmt1 numeric(18,2),
			SAmt2 numeric(18,2),TAmt2 numeric(18,2),TCAmt2 numeric(18,2),TIAmt2 numeric(18,2),TCeAmt2 numeric(18,2),SAmt3 numeric(18,2),TAmt3 numeric(18,2),TCAmt3 numeric(18,2),TIAmt3 numeric(18,2),TCeAmt3 numeric(18,2),SAmt4 numeric(18,2),
			TAmt4 numeric(18,2),TCAmt4 numeric(18,2),TIAmt4 numeric(18,2),TCeAmt4 numeric(18,2),SAmt5 numeric(18,2),TAmt5 numeric(18,2),TIAmt5 numeric(18,2),TCeAmt5 numeric(18,2),TCAmt5 numeric(18,2),TaxToal numeric(18,2),AmtTotal numeric(18,2),ItemNo numeric(18))
	Declare @TDisc Table(LedgNo numeric(18))
	Declare @TChrg Table(LedgNo numeric(18))
	

	set @Cnt=0  set @TempPk=0 set @TaxToal =0 set @AmtTotal =0
    set @Amt=0 set @Per=0 set @TotTax=0 set @TotAmt=0 set @Disc =0 set @Charges =0 set @RndOff =0
	 set @StrQry='' set @FrDate=@FromDate set @TempColNo=0  set @TempDocNo=0 set @TempDate='01-01-1900'



set @StrQry='Select distinct TStock.SGSTPercentage,0 FROM TVoucherEntry INNER JOIN
								  TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
								  WHERE TaxTypeNo= '+Cast(@TaxTypeNo as varchar)+' AND TVoucherEntry.VoucherTypeCode='+cast(@VchType as varchar)+'
			and TVoucherEntry.VoucherDate>='''+cast(@FromDate as varchar)+''' and TVoucherEntry.iscancel= 0 
and TVoucherEntry.VoucherDate<='''+cast(@ToDate as varchar)+''' order by TStock.SGSTPercentage'
--(TStock.SGSTPercentage <> 0) and

insert into @PerTable Exec(@StrQry) --select * from @PerTable

insert into @TDisc Exec('Select LedgerNo From MLedger Where LedgerNo in ('+ @DiscLedg +')')
insert into @TChrg Exec('Select LedgerNo From MLedger Where LedgerNo in ('+ @ChargesLedg +')')

Declare CurCol Cursor for Select TempPer from @PerTable

		open CurCol
		Fetch next from CurCol into @TempPer
		while (@@Fetch_Status=0)
		Begin
			
			
			set @Cnt=@Cnt+1	
			update 	@PerTable set ColNo=@Cnt where 	TempPer=@TempPer
			Fetch next from CurCol into @TempPer
		End
		Close CurCol Deallocate CurCol

select * from @PerTable
set @Cnt=0
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type =2 )
BEGIN
Declare InsValue Cursor for SELECT     TVoucherEntry_1.VoucherUserNo, TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage, TVoucherEntry_1.PkVoucherNo, 
                      TVoucherEntry_1.BilledAmount, TStock.NetAmount AS SAmt1, TStock.SGSTAmount AS TAmt,TStock.CGSTAmount AS TCAmt,TStock.IGSTAmount AS TIAmt, TStock.CessAmount AS TCeAmt,  (TStock.DiscAmount+TStock.DiscRupees) as Disc,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherDetails_3.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
HSNCode,TStock.Itemno,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
                            FROM          TVoucherEntry AS TVoucherEntry_2 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN
                                                       (SELECT LedgNo FROM @TChrg)) AND (TVoucherDetails_2.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) 
                     
				FROM TVoucherEntry AS TVoucherEntry_1 INNER JOIN
                     TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo  inner join MStockItems on TStock.itemno=MStockItems.itemno
 inner join MUOM On Muom.UOMNo=TStock.FkUomNo
				WHERE TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = 'false')
					  AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo --and TVoucherEntry_1.PkVoucherNo=14246
				--Group by TVoucherEntry_1.VoucherUserNo,MStockItems.HSNCode,TVoucherEntry_1.VoucherDate,TStock.SGSTPercentage,TVoucherEntry_1.PkVoucherNo,BilledAmount,TStock.NetAmount,TStock.SGSTAmount,TStock.CGSTAmount,TStock.DiscAmount,TStock.DiscRupees
				order by TVoucherEntry_1.VoucherUserNo,TStock.SGSTPercentage

		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@HSNCode,@ItemNo,@Charges
			While(@@Fetch_Status=0)
				Begin
						--Select @LedgerName=LedgerName FRom MLedger Where LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
						Select @LedgerName=LedgerName,@StateName=StateName,@GSTNO=Case When(IsNull(GSTNO,'NA')='') Then '' Else  IsNull(GSTNO,'') end FRom MLedger inner Join MLedgerDetails On MLedger.LedgerNo=MLedgerDetails.LedgerNo inner join MState on MLedgerDetails.Stateno=MState.Stateno Where MLedger.LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
					
							set @TempPk=@Pk
							insert into @TVal (DocNo ,Date ,LedgerName,GSTNO, FinalAmt,Disc ,Charges ,RndOff, HSNCode,StateName,Itemno,SAmt1,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2,TAmt2,TCAmt2,TIAmt2,TCeAmt2,SAmt3,TAmt3,TCAmt3,TIAmt3,TCeAmt3,SAmt4,TAmt4,TCAmt4,TIAmt4,TCeAmt4,SAmt5,TAmt5,TCAmt5,TIAmt5,TCeAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@GSTNO,@FinalAmount ,@Disc,@Charges,@RndOff,@HSNCode,@StateName,@ItemNo,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
							set @Cnt=@Cnt+1	

						select @TempColNo=ColNo from @PerTable where TempPer=@Per

						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @SGSTAmount , TCAmt1 = @SGSTAmount2 , TIAmt1 = @SGSTAmount3, TCeAmt1 = @SGSTAmount4 where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @SGSTAmount , TCAmt2 = @SGSTAmount2, TIAmt2 = @SGSTAmount3, TCeAmt2 = @SGSTAmount4  where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @SGSTAmount , TCAmt3 = @SGSTAmount2 , TIAmt3 = @SGSTAmount3 , TCeAmt3 = @SGSTAmount4  where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @SGSTAmount , TCAmt4 = @SGSTAmount2 , TIAmt4 = @SGSTAmount3, TCeAmt4 = @SGSTAmount4 where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 5)
						update @TVal set SAmt5 = @Amt , TAmt5 = @SGSTAmount , TCAmt5 = @SGSTAmount2 , TIAmt5 = @SGSTAmount3 , TCeAmt5 = @SGSTAmount4  where DocNo = @DocNo and Itemno=@ItemNo
						set @TaxToal =@TaxToal+@SGSTAmount+@SGSTAmount2+@SGSTAmount3+@SGSTAmount4
					   set @AmtTotal =@AmtTotal+@Amt
					   set @TempDocNo=@DocNo


--if (@@Fetch_Status=0)
					fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@HSNCode,@ItemNo,@Charges
				End

close InsValue deallocate InsValue
if(@TempPk<>0)
							BEGIN
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo and Itemno=@ItemNo
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
End
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type =1 )
BEGIN
Declare InsValue Cursor for SELECT    case when @VchType=15 then   TVoucherEntry_1.VoucherUserNo else TVoucherEntry_1.Reference end as VoucherUserNo, TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage, TVoucherEntry_1.PkVoucherNo, 
                      TVoucherEntry_1.BilledAmount, SUM(TStock.NetAmount) AS SAmt, SUM(TStock.SGSTAmount) AS TAmt,SUM(TStock.CGSTAmount) AS TCAmt,SUM(TStock.IGSTAmount) AS TCAmt,SUM(TStock.CessAmount) AS TCAmt,sum(TStock.DiscAmount+TStock.DiscRupees) as Disc,
--                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0) 
--                            FROM          TVoucherEntry INNER JOIN
--                                                   TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
--                            WHERE      (TVoucherDetails.LedgerNo IN
--                                                       (SELECT LedgNo FROM @TDisc )) AND (TVoucherDetails.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
                        
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherDetails_3.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
                            FROM          TVoucherEntry AS TVoucherEntry_2 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN
                                                       (SELECT LedgNo FROM @TChrg)) AND (TVoucherDetails_2.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) 
                     
				FROM TVoucherEntry AS TVoucherEntry_1 INNER JOIN
                     TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo 
				WHERE TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = 'false')
					  AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
				Group by TVoucherEntry_1.VoucherUserNo,Reference,TVoucherEntry_1.VoucherDate,TStock.SGSTPercentage,TVoucherEntry_1.PkVoucherNo,BilledAmount
				order by TVoucherEntry_1.VoucherUserNo,TStock.SGSTPercentage

		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@Charges
			While(@@Fetch_Status=0)
				Begin
						--Select @LedgerName=LedgerName FRom MLedger Where LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
						Select @LedgerName=LedgerName,@GSTNO=Case When(IsNull(GSTNO,'NA')='') Then '' Else  IsNull(GSTNO,'') end FRom MLedger inner Join MLedgerDetails On MLedger.LedgerNo=MLedgerDetails.LedgerNo Where MLedger.LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
					
                    if(@TempPk<>@Pk)
						BEgin
							if(@TempPk<>0)
							BEGIN								
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo							
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
--							if(@Cnt>2000)
--							BEGIn
--								Select * from @TVal
--								Delete from @TVal
--								set @Cnt=0
--							END
							set @TempPk=@Pk
							insert into @TVal (DocNo ,Date ,LedgerName,GSTNO, FinalAmt,Disc ,Charges ,RndOff ,SAmt1,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2,TAmt2,TCAmt2,TIAmt2,TCeAmt2,SAmt3,TAmt3,TCAmt3,TIAmt3,TCeAmt3,SAmt4,TAmt4,TCAmt4,TIAmt4,TCeAmt4,SAmt5,TAmt5,TCAmt5,TIAmt5,TCeAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@GSTNO,@FinalAmount ,@Disc,@Charges,@RndOff,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
							set @Cnt=@Cnt+1	
						End
						select @TempColNo=ColNo from @PerTable where TempPer=@Per

						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @SGSTAmount , TCAmt1 = @SGSTAmount2 , TIAmt1 = @SGSTAmount3, TCeAmt1 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @SGSTAmount , TCAmt2 = @SGSTAmount2 , TIAmt2 = @SGSTAmount3, TCeAmt2 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @SGSTAmount , TCAmt3 = @SGSTAmount2 , TIAmt3 = @SGSTAmount3 , TCeAmt3 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @SGSTAmount , TCAmt4 = @SGSTAmount2 , TIAmt4 = @SGSTAmount3, TCeAmt4 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 5)
							update @TVal set SAmt5 = @Amt , TAmt5 = @SGSTAmount , TCAmt5 = @SGSTAmount2 , TIAmt5 = @SGSTAmount3 , TCeAmt5 = @SGSTAmount4 where DocNo = @DocNo
						set @TaxToal =@TaxToal+@SGSTAmount+@SGSTAmount2+@SGSTAmount3+@SGSTAmount4
						set @AmtTotal =@AmtTotal+@Amt
						set @TempDocNo=@DocNo
					fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@Charges
				End

close InsValue deallocate InsValue
if(@TempPk<>0)
							BEGIN
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
End
--------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type=3)
Begin
	Declare InsValue Cursor for SELECT     Count(TVoucherEntry_1.PkVoucherNo) as DocNo, TVoucherEntry_1.VoucherDate, -1 as SGSTPercentage,
                      SUM(TVoucherEntry_1.BilledAmount) AS SAmt, 0 as  TAmt,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0) 
                            FROM          TVoucherEntry INNER JOIN
                                                   TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
                            WHERE      (TVoucherDetails.LedgerNo IN
                                                       (SELECT LedgNo FROM @TDisc)) AND (TVoucherEntry.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry.VoucherTypeCode=@VchType)) as Disc,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherEntry_3.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry_3.VoucherTypeCode=@VchType)) as RndOff,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
							 FROM  TVoucherEntry AS TVoucherEntry_2 INNER JOIN TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN (SELECT LedgNo FROM @TChrg)) AND (TVoucherEntry_2.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry_2.VoucherTypeCode=@VchType)) as Charges
                     
			FROM         TVoucherEntry AS TVoucherEntry_1 
								 WHERE      TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate AND (TVoucherEntry_1.IsCancel = 'false')
										AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
								Group by TVoucherEntry_1.VoucherDate					
			Union all
			SELECT     0 as DocNo,TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage,SUM(TStock.NetAmount) AS SAmt, SUM(TStock.SGSTAmount) AS TAmt,
									   0 as Disc ,0 as RndOff ,0 as Charges                     
			FROM         TVoucherEntry AS TVoucherEntry_1 INNER JOIN
								  TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo 
								 WHERE      TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = 'false')
										AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
								Group by TVoucherEntry_1.VoucherDate,TStock.SGSTPercentage
			order by VoucherDate,SGSTPercentage
		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Amt,@SGSTAmount,@Disc,@RndOff,@Charges
			While(@@Fetch_Status=0)
			Begin
				if(@Per=-1)
				Begin
					if(@TempDate<>'01-01-1900')
					Begin
						update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where Date = @TempDate
						set @AmtTotal =0 set @TaxToal =0 set @TempDate=@Date					
					End
					insert into @TVal (DocNo ,Date ,LedgerName,FinalAmt,Disc ,Charges ,RndOff ,SAmt1,TAmt1,SAmt2,TAmt2,SAmt3,TAmt3,SAmt4,TAmt4,SAmt5,TAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@Amt,@Disc,@Charges,@RndOff,0,0,0,0,0,0,0,0,0,0 )
				End
				Else
				Begin
					select @TempColNo=ColNo from @PerTable where TempPer=@Per
						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @SGSTAmount where Date = @Date
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @SGSTAmount where Date = @Date
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @SGSTAmount where Date = @Date
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @SGSTAmount where Date = @Date
						if (@TempColNo = 5)
							update @TVal set SAmt5 = @Amt , TAmt5 = @SGSTAmount where Date = @Date
						set @TaxToal =@TaxToal+@SGSTAmount
						set @AmtTotal =@AmtTotal+@Amt
						set @TempDocNo=@DocNo
						set @TempDate=@Date
				
				End
				fetch next from InsValue into @DocNo,@Date,@Per,@Amt,@SGSTAmount,@Disc,@RndOff,@Charges
			End
close InsValue deallocate InsValue
if(@TempDate<>'01-01-1900')
					Begin
						update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where Date = @TempDate
						set @AmtTotal =0 set @TaxToal =0 set @TempDate=@Date					
					End		

End
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type=3)
Begin
	Begin
			if((Select Count(*) from @PerTable)=1)			
			select 'Quarter-'+Cast(datepart (q,Date) as varchar) as 'Quarter',Sum(cast (DocNo as numeric)) as 'TotalBills', sum(FinalAmt) as 'FinalAmt' ,sum(Disc) as 'Disc',sum(Charges) as 'Charges',sum(RndOff) as 'RndOff',sum(SAmt1) as 'SAmt1',sum(TAmt1) as 'TAmt1',sum(AmtTotal)as 'AmtTotal' ,sum(TaxToal) as 'TaxToal' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=2)
			select 'Quarter-'+Cast(datepart (q,Date) as varchar) as 'Quarter',Sum(cast (DocNo as numeric)) as 'TotalBills', sum(FinalAmt) as 'FinalAmt' ,sum(Disc) as 'Disc',sum(Charges) as 'Charges',sum(RndOff) as 'RndOff',sum(SAmt1) as 'SAmt1',sum(TAmt1) as 'TAmt1',Sum(SAmt2) as 'SAmt2',sum(TAmt2) as 'TAmt2',sum(AmtTotal)as 'AmtTotal' ,sum(TaxToal) as 'TaxToal'  from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=3)
			select 'Quarter-'+Cast(datepart (q,Date) as varchar) as 'Quarter',Sum(cast (DocNo as numeric)) as 'TotalBills', sum(FinalAmt) as 'FinalAmt' ,sum(Disc) as 'Disc',sum(Charges) as 'Charges',sum(RndOff) as 'RndOff',sum(SAmt1) as 'SAmt1',sum(TAmt1) as 'TAmt1',Sum(SAmt2) as 'SAmt2',sum(TAmt2) as 'TAmt2' ,Sum(SAmt3) as 'SAmt3',sum(TAmt3) as 'TAmt3' ,sum(AmtTotal)as 'AmtTotal' ,sum(TaxToal) as 'TaxToal' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=4)
			select 'Quarter-'+Cast(datepart (q,Date) as varchar) as 'Quarter',Sum(cast (DocNo as numeric)) as 'TotalBills', sum(FinalAmt) as 'FinalAmt' ,sum(Disc) as 'Disc',sum(Charges) as 'Charges',sum(RndOff) as 'RndOff',sum(SAmt1) as 'SAmt1',sum(TAmt1) as 'TAmt1',Sum(SAmt2) as 'SAmt2',sum(TAmt2) as 'TAmt2' ,Sum(SAmt3) as 'SAmt3',sum(TAmt3) as 'TAmt3',Sum(SAmt4) as 'SAmt4',sum(TAmt4) as 'TAmt4'  ,sum(AmtTotal)as 'AmtTotal' ,sum(TaxToal) as 'TaxToal' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=5)
			select 'Quarter-'+Cast(datepart (q,Date) as varchar) as 'Quarter',Sum(cast (DocNo as numeric)) as 'TotalBills', sum(FinalAmt) as 'FinalAmt' ,sum(Disc) as 'Disc',sum(Charges) as 'Charges',sum(RndOff) as 'RndOff',sum(SAmt1) as 'SAmt1',sum(TAmt1) as 'TAmt1',Sum(SAmt2) as 'SAmt2',sum(TAmt2) as 'TAmt2' ,Sum(SAmt3) as 'SAmt3',sum(TAmt3) as 'TAmt3',Sum(SAmt4) as 'SAmt4',sum(TAmt4) as 'TAmt4',Sum(SAmt5) as 'SAmt5',sum(TAmt5) as 'TAmt5' ,sum(AmtTotal)as 'AmtTotal' ,sum(TaxToal) as 'TaxToal'  from @TVal  Group BY datepart (q,Date)
	End
End
---------------------------------------------------------------------------------------------------------------------------------------------------------
Else
Begin
	if(@Type=1 or @Type=2 )
	Begin
		
		if((Select Count(*) from @PerTable)=1)
		select Date,DocNo ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,AmtTotal ,TaxToal from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=2)
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2 ,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=3)
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 as AMT ,TAmt1 as SGST,TCAmt1 as CGST,TIAmt1 as IGST,TCeAmt1 as Cess,SAmt2 as AMT ,TAmt2 as SGST,TCAmt2 as CGST,TIAmt2 as IGST ,TCeAmt2 as Cess  ,SAmt3 as AMT ,TAmt3 as SGST ,TCAmt3 as CGST,TIAmt3 as IGST,TCeAmt3 as Cess,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) as AMT ,sum(TAmt1) as SGST,sum(TCAmt1) as CGST,sum(TIAmt1) as IGST,sum(TCeAmt1) as Cess,sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=4)
		--select Date,DocNo  , LedgerName,FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,SAmt4 ,TAmt4  ,AmtTotal,TaxToal from @TVal
		--union All select null as Date, null as DocNo ,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(SAmt4) ,sum(TAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2  ,SAmt3 ,TAmt3 ,TCAmt3,TIAmt3,TCeAmt3,SAmt4 ,TAmt4 ,TCAmt4,TIAmt4,TCeAmt4,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(TIAmt4),sum(TCeAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=5)
		select Date,DocNo  ,LedgerName, GSTNO,FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2  ,SAmt3 ,TAmt3 ,TCAmt3,TIAmt3,TCeAmt3,SAmt4 ,TAmt4 ,TCAmt4,TIAmt4,TCeAmt4,SAmt5 ,TAmt5 ,TCAmt5,TIAmt5,TCeAmt5,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(TIAmt4),sum(TCeAmt4),sum(SAmt5) ,sum(TAmt5),sum(TCAmt5),sum(TIAmt5),sum(TCeAmt5),sum(AmtTotal) ,sum(TaxToal) from @TVal
	End
  End	
END


 Error End ======================== Vriha iTech7/18/2019 12:01:01 PM

Error Start =========
 Invalid object name 'dbo.AddTDeliveryAddress'.
=====

ALTER PROCEDURE [dbo].[AddTDeliveryAddress]
     @PkSrNo                              numeric(18),
     @FkVoucherno                         numeric(18),
     @Ledgerno                            numeric(18),
     @LedgerDetailsNo                     numeric(18),
     @IsActive                            bit,
     @UserId                              int,
	 @UserDate					          datetime,
	 --@ModifiedBy					      varchar(500),
@Companyno                   int
   --  @StatusNo							  int
	
AS
IF EXISTS(select PkSrNo from TDeliveryAddress
          where
          FkVoucherno = @FkVoucherno)
     BEGIN
       --Update existing row
       UPDATE TDeliveryAddress
       SET
          FkVoucherno		= @FkVoucherno,
          Ledgerno			= @Ledgerno,
		  LedgerDetailsNo	= @LedgerDetailsNo,
          IsActive			= @IsActive,
          UserID			= @UserID,
          UserDate			= @UserDate,
          ModifiedBy		= isnull(ModifiedBy,'') + cast(@UserID as varchar)+'@'+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo			= 2

       WHERE
          FkVoucherno = @FkVoucherno

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TDeliveryAddress
       DBCC CHECKIDENT('TDeliveryAddress', RESEED, @Id)
       INSERT INTO TDeliveryAddress(
 
          FkVoucherno,
          Ledgerno,
		  LedgerDetailsNo,
          IsActive,
          UserID,
          UserDate,
CompanyNo,
          StatusNo	
)
       VALUES(

          @FkVoucherno,
          @Ledgerno,
		  @LedgerDetailsNo,
		  @IsActive,
		  @UserID,
		  @UserDate,
@CompanyNo,
          1
)

END


 Error End ======================== Vriha iTech7/18/2019 12:01:02 PM

Error Start =========
 There is already an object named 'GetChequePrintDetails' in the database.
=====

--<EndVersion = 1.0.0.0>

--<Version = 1.0.1.1>

Create Procedure [dbo].[GetChequePrintDetails]
@ChqPrintingNo	numeric(18)
AS
Begin
	SELECT     MLedger.LedgerName, TChequePrinting.ChequeDate, TVoucherEntry.BilledAmount As ChequeAmount, TChequePrinting.Remark1, TChequePrinting.Remark2, 
                      TChequePrinting.Remark3
FROM         TChequePrinting INNER JOIN
                      MLedger ON TChequePrinting.LedgerNo = MLedger.LedgerNo INNER JOIN
                      TVoucherEntry ON TChequePrinting.FKVoucherNo = TVoucherEntry.PkVoucherNo
WHERE     (TChequePrinting.PkSrNo = @ChqPrintingNo)	
End


 Error End ======================== Vriha iTech7/18/2019 12:01:02 PM

Error Start =========
 Invalid column name 'esflag'.
Invalid column name 'esflag'.
=====

Alter Procedure [dbo].[GetStockSummaryAllReport]
@CompNo		           numeric(18),
@FromDate	           datetime,
@ToDate		           datetime,
@ItStr		           varchar(max),
@EsFlag                int
As
declare @VType varchar(100),@SVType varchar(100),@SRVType varchar(100),@PVType varchar(100),@PRVType varchar(100)
declare @OPVType varchar(100),@PhVType varchar(100),@ProdVType varchar(100)
if(@EsFlag=0)
begin
        set @VType='15,9,12,13,8,36'
		set @SVType='15'
		set @SRVType='12'
		set @PVType='9'
		set @PRVType='13'
      set @OPVType='36'
       set @PhVType='8'
      set @ProdVType='0'
end
else if(@EsFlag=1)
begin
        set @VType='115,109,112,113,108,136'
        set @SVType='115'
        set @SRVType='112'
		set @PVType='109'
		set @PRVType='113'
  set @OPVType='136'
       set @PhVType='108'
      set @ProdVType='1'

end

SELECT   ItemNo,sum(PurQty) AS PurQty, sum(SaleQty)  AS SaleQty,sum(PurReturnQty) AS PurReturnQty,sum(SalesReturnQty) AS SalesReturnQty,
sum(OpnOutQty) AS OpnOutQty,sum (OpnInQty) AS OpnInQty,sum (PhyOutQty) AS PhyOutQty,sum (PhyInQty) AS PhyInQty,
ItemGroupName, ItemName, Barcode,UOMH,UOMName_H,UOML,UOMName_L,HSNCode ,sum(ProdOutQty) AS ProdOutQty,sum(ProdInQty) AS ProdInQty from
(
--------Opening Stock for Out or minus---------------

SELECT     0 as StockType,   b.ItemNo, 0 AS PurQty, 0  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,   
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H,  
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo 
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@VType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     a.VoucherDate < @FromDate AND a.IsCancel = 'False' --AND a.VoucherTypeCode IN (cast (@VType)
 and b.trncode=2
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,   
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

--------Opening Stock in or plus---------------
union all 

SELECT     0 as StockType,   b.ItemNo, 0 AS PurQty, 0  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,   
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H,  
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo 
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@VType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     a.VoucherDate < @FromDate AND a.IsCancel = 'False'-- AND a.VoucherTypeCode IN  (CAST(@VType as numeric)   ) 
 and b.trncode=1
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,   
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate


Union All

------------------- Sales -------------------
SELECT   1 as StockType,     b.ItemNo, 0 AS PurQty, 
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo,MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@SVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE        (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (15))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,   MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All

------------------- Pur Return -------------------
SELECT    1 as StockType,     b.ItemNo, 0 AS PurQty, 0 AS SaleQty, 
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo,MUOM_S.UOMName AS UOMName_S, 
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PRVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (13))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- Purchase -------------------
SELECT   1 as StockType, b.ItemNo, CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PurQty, 
0 AS SaleQty,0 AS PurReturnQty, 0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,MItemGroup.ItemGroupName,
MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H,MItemMASter.UOML,
MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False')-- AND (a.VoucherTypeCode IN (9))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML,MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- Sales Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@SRVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False')-- AND (a.VoucherTypeCode IN (12))
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- Physical stock entry minus Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PhVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 

WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (8)) 
and b.trncode=2
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate
Union All
------------------- Physical stock entry plus Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,CASe When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName!='GRAM'  then SUM(b.Quantity)   
When  MUOM_H.UOMName='KG' and MUOM_L.UOMName='GRAM' and MUOM_S.UOMName='GRAM' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End  AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PhVType,  ',') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 

WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = 'False') --AND (a.VoucherTypeCode IN (8))
 and b.trncode=1
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

union all 
SELECT     1 AS StockType, MItemMaster.ItemNo, 0 AS PurQty, 0 AS SaleQty, 0 AS PurReturnQty, 0 AS SalesReturnQty,0 as FkUomNo,'' AS UOMName_S,
                      MItemGroup.ItemGroupName, MItemMaster.ItemName, MItemMaster.Barcode, MItemMaster.UOMH, MUOM_H.UOMName AS UOMName_H, MItemMaster.UOML, 
                      MUOM_L.UOMName AS UOMName_L,
MItemMASter.HSNCode,RDate as VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,
 0 AS ProdOutQty,sum( MRecipeMain.ProdQty ) AS ProdInQty
FROM         MItemGroup INNER JOIN
                      MItemMaster ON MItemGroup.ItemGroupNo = MItemMaster.GroupNo INNER JOIN
                      MUOM ON MItemMaster.UOML = MUOM.UOMNo INNER JOIN
                      MUOM AS MUOM_H ON MItemMaster.UOMH = MUOM_H.UOMNo INNER JOIN
                      MUOM AS MUOM_L ON MItemMaster.UOML = MUOM_L.UOMNo INNER JOIN
                      MRecipeMain ON MItemMaster.ItemNo = MRecipeMain.FinishItemID
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on MRecipeMain.FinishItemID= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@ProdVType,  ',') AS Vch on MRecipeMain.esflag= CAST(vch.value AS varchar)
WHERE     (MRecipeMain.RecipeType = 2)-- and (MRecipeMain.RDate >= @FromDate) AND (MRecipeMain.RDate  <= @ToDate)
 AND (MRecipeMain.IsActive = 'True') 
GROUP BY MItemMaster.ItemNo, MItemMaster.UOML, MItemMaster.ItemName, MItemGroup.ItemGroupName, MUOM.UOMName, MItemMaster.Barcode, MItemMaster.UOMH, 
                      MUOM_H.UOMName, MItemMaster.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,RDate

union all 

SELECT     1 AS StockType, MItemMaster.ItemNo, 0 AS PurQty, 0 AS SaleQty, 0 AS PurReturnQty, 0 AS SalesReturnQty, 0 AS FkUomNo, '' AS UOMName_S, 
                      MItemGroup.ItemGroupName, MItemMaster.ItemName, MItemMaster.Barcode, MItemMaster.UOMH, MUOM_H.UOMName AS UOMName_H, MItemMaster.UOML, 
                      MUOM_L.UOMName AS UOMName_L, MItemMaster.HSNCode, MRecipeMain.RDate AS VoucherDate, 0 AS OpnOutQty, 0 AS OpnInQty, 0 AS PhyOutQty, 0 AS PhyInQty, 
                      sum(MRecipeSub.FinalQty) AS ProdOutQty,0 AS ProdInQty
FROM         MItemGroup INNER JOIN
                      MItemMaster ON MItemGroup.ItemGroupNo = MItemMaster.GroupNo INNER JOIN
                      MUOM ON MItemMaster.UOML = MUOM.UOMNo INNER JOIN
                      MUOM AS MUOM_H ON MItemMaster.UOMH = MUOM_H.UOMNo INNER JOIN
                      MUOM AS MUOM_L ON MItemMaster.UOML = MUOM_L.UOMNo INNER JOIN
                      MRecipeSub ON MItemMaster.ItemNo = MRecipeSub.RawProductID INNER JOIN
                      MRecipeMain ON MRecipeMain.MRecipeID = MRecipeSub.FKMRecipeID
INNER JOIN fn_Split (@ItStr,  ',') AS Bill_Itemno on MRecipeSub.RawProductID= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@ProdVType,  ',') AS Vch on MRecipeMain.esflag= CAST(vch.value AS varchar)
WHERE     (MRecipeMain.RecipeType = 2) and (MRecipeMain.RDate >= @FromDate) AND (MRecipeMain.RDate  <= @ToDate) AND (MRecipeMain.IsActive = 'True') 
GROUP BY MItemMaster.ItemNo, MItemMaster.UOML, MItemMaster.ItemName, MItemGroup.ItemGroupName, MUOM.UOMName, MItemMaster.Barcode, MItemMaster.UOMH, 
                      MUOM_H.UOMName, MItemMaster.UOML, MUOM_L.UOMName, MItemMaster.HSNCode, MRecipeMain.RDate


)AS tbl
GROUP BY ItemNo,ItemGroupName, ItemName, Barcode, UOMH,UOMName_H,UOML,UOMName_L,HSNCode
Order BY ItemGroupName, ItemName


 Error End ======================== Vriha iTech7/18/2019 12:01:02 PM

Error Start =========
 Invalid object name 'dbo.GetMultiBill'.
=====

ALTER PROCEDURE [dbo].[GetMultiBill]
@FromDate          datetime,
@ToDate            datetime,
@VchType           int,
@CompanyNo                   varchar(50),
@PartyNo                   varchar(max)


AS
Begin
declare @Type						int
set @Type=1
SELECT    TVoucherEntry.PkVoucherNo,TVoucherEntry.LedgerNo, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherDate, CASE WHEN (@Type = 1) 
                      THEN MStockItems_V_1.ItemName ELSE MStockItems_V_1.ItemNameLang END AS ItemName,MRateSetting.MRP, 
TStock.Quantity,TStock.GRWeight,TStock.TRWeight,
TStock.PackagingCharges,TStock.NoOfBag,TStock.CessValue,TStock.OtherCharges as Dhekharek,
 TStock.Rate, TStock.Amount,MUOM.UOMName, TStock.SGSTPercentage,TStock.SGSTAmount, 
                       TStock.DiscPercentage,TStock.DiscAmount,TStock.DiscRupees,TStock.DiscPercentage2,TStock.DiscAmount2,TStock.DiscRupees2, TStock.CGSTPercentage,
 TStock.CGSTAmount, TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, 
                      TStock.CessAmount, MLedgerDetails.GSTNO AS CustGSTNo, MLedgerDetails.PANNo AS CustPANNo,
MLedgerDetails.FSSAI,MFirm.GSTNO as CmpGSTNo, MLedger.StateCode,MItemMaster.HSNCode, TVoucherEntry.BilledAmount,MFirm.FSSAINo as CompFSSAINO, 
     CASE WHEN (@Type = 1) THEN LedgerName ELSE LedgerLangName END AS LedgerName,
                      MLedger.ContactPerson, MLedgerDetails.PhNo1 as CustPhNo, MLedgerDetails.MobileNo1 as CustMoNo,

         CASE WHEN (@Type = 1) THEN MLedgerDetails.Address ELSE MLedgerDetails.AddressLang end AS CustAddress,



 MFirm.Address AS CmpAddress, MFirm.EmailID AS CmpEmailID,MFirm.PhoneNo1 +' / '+ Mfirm.PhoneNo2 as CompPhoneNo,



 TVoucherEntry.Reference, TVoucherEntry.VoucherTime,(TStock.NetAmount + TStock.CessValue + TStock.PackagingCharges + TStock.OtherCharges)as NetAmount, TStock.NetRate,  TStock.DisplayItemName, TStock.Remarks as RemarksItemlevel,
                      '' AS TransporterName,MTransporterPayType.TransPayTypeName,TVoucherEntry.LRNo,MTransporterMode.TransModeName, TVoucherEntry.TransNoOfItems,  
               (SELECT     SettingValue   FROM   MSettings     WHERE      (PkSettingNo = 311)) AS DisplayTrans,TVoucherEntry.Remark, MState.StateName, MCity.CityName, MPayType.PayTypeName
FROM         MLedgerDetails INNER JOIN
                      TStock INNER JOIN  MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN 
                      TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN

                      MFirm ON TVoucherEntry.CompanyNo = MFirm.FirmNo INNER JOIN
                      MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                      dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems_V_1 ON TStock.ItemNo = MStockItems_V_1.ItemNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo ON MLedgerDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo   LEFT OUTER JOIN
 MTransporterMode ON TVoucherEntry.TransportMode = MTransporterMode.TransModeNo LEFT OUTER JOIN
                      MTransporterPayType ON TVoucherEntry.TransPayType = MTransporterPayType.TransPayTypeNo INNER JOIN
                      MState ON MLedger.StateCode = MState.StateCode INNER JOIN
                      MCity ON MLedgerDetails.CityNo = MCity.CityNo INNER JOIN
fn_Split (''+cast(@PartyNo as varchar(max))+ '','') AS Party_BILL on TVoucherEntry.LedgerNo= CAST(Party_BILL.value AS numeric) INNER JOIN

                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
    
WHERE      (TVoucherEntry.vouchertypecode = @VchType)
ORDER BY TStock.PkStockTrnNo

end


 Error End ======================== Vriha iTech7/18/2019 12:01:02 PM

Error Start =========
 Invalid object name 'dbo.GetVoucherDetailsByDays'.
=====

Alter PROCEDURE [dbo].[GetVoucherDetailsByDays]
@CurrDate datetime,
@CompNo numeric(18),
@MfgCompNo numeric(18)

AS  

if(@MfgCompNo=0)

SELECT     Convert(Varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntry.VoucherUserNo,MLedger.LedgerName AS LedgerName, MVoucherType.VoucherTypeName, TVoucherDetails.FKVoucherNo,
                     case when  TVoucherEntry.IsCancel='true' then 0 else   TVoucherDetails.Debit end  as [Debit Amount], 
                         case when  TVoucherEntry.IsCancel='true' then 0 else TVoucherDetails.Credit end AS [Credit Amount] --TVoucherEntry.VoucherTypeCode,TVoucherEntry.VoucherUserNo
FROM         TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode
WHERE      (TVoucherDetails.VoucherSrNo = 1) AND (Convert(varchar,TVoucherEntry.VoucherDate,101) = Convert(varchar,@CurrDate,101))
			 AND (TVoucherEntry.CompanyNo = @CompNo)--and TVoucherEntry.IsCancel='false'
union
SELECT     Convert(Varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntry.VoucherUserNo,'PHYSICAL STOCK' as LedgerName, MVoucherType.VoucherTypeName, TVoucherEntry.PKVoucherNo,0 as [Debit Amount],
			0 as [Credit Amount]
FROM         TVoucherEntry INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode
WHERE      (TVoucherEntry.VoucherTypeCode = 8) AND (Convert(varchar,TVoucherEntry.VoucherDate,101) = Convert(varchar,@CurrDate,101))
		and TVoucherEntry.IsCancel='false'	 AND (TVoucherEntry.CompanyNo = @CompNo)

else

	SELECT     Convert(Varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntryCompany.VoucherUserNo,MLedger.LedgerName AS LedgerName, MVoucherType.VoucherTypeName, TVoucherDetailsCompany.FKVoucherNo, 
 case when  TVoucherEntry.IsCancel='true' then 0 else  TVoucherDetailsCompany.Debit end as [Debit Amount], 
                      case when  TVoucherEntry.IsCancel='true' then 0 else  TVoucherDetailsCompany.Credit end AS [Credit Amount] --TVoucherEntry.VoucherTypeCode,TVoucherEntry.VoucherUserNo
FROM         TVoucherEntry INNER JOIN TVoucherEntryCompany ON TVoucherEntry.PKVoucherNo=TVoucherEntryCompany.FKVoucherNo INNER JOIN 
                      TVoucherDetailsCompany ON TVoucherEntryCompany.PKVoucherCompanyNo = TVoucherDetailsCompany.FKVoucherNo INNER JOIN
                      MLedger ON TVoucherDetailsCompany.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MVoucherType ON TVoucherEntryCompany.VoucherTypeCode = MVoucherType.VoucherTypeCode
WHERE      (TVoucherDetailsCompany.VoucherSrNo = 1) AND (Convert(varchar,TVoucherEntry.VoucherDate,101) = Convert(varchar,@CurrDate,101))
	and TVoucherEntry.IsCancel='false'	 	 AND (TVoucherEntryCompany.CompanyNo = @CompNo) AND TVoucherEntryCompany.MfgCompNo=@MfgCompNo



 Error End ======================== Vriha iTech7/18/2019 12:01:02 PM

Error Start =========
 The server principal "Logicall" is not able to access the database "Yadi2018" under the current security context.
=====

INSERT INTO [Yadi2018].[dbo].[MLanguage]
           ([LanguageName]
           ,[FontName]
           ,[FontSize]
           ,[FontBold]
           ,[CompanyNo]
           ,[StatusNo])
     VALUES
           ('Karnataka','Nudi 01 e',16,'False',1,3)

 Error End ======================== Vriha iTech7/18/2019 12:01:03 PM

Error Start =========
 Invalid column name 'DeliveryLedgerNo'.
=====

ALTER PROCEDURE [dbo].[GetBill]
@PkVoucherNo                numeric(18),
@Type						int

AS
Begin

SELECT        TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherDate, CASE WHEN (@Type = 1) 
                          THEN MStockItems_V_1.ItemName ELSE MStockItems_V_1.ItemNameLang END AS ItemName, MRateSetting.MRP, TStock.Quantity, TStock.GRWeight, 
                         TStock.TRWeight, TStock.PackagingCharges, TStock.NoOfBag, TStock.CessValue, TStock.OtherCharges AS Dhekharek, TStock.Rate, TStock.Amount, 
                         MUOM.UOMName, TStock.SGSTPercentage, TStock.SGSTAmount, TStock.DiscPercentage, TStock.DiscAmount, TStock.DiscRupees, TStock.DiscPercentage2, 
                         TStock.DiscAmount2, TStock.DiscRupees2, TStock.CGSTPercentage, TStock.CGSTAmount, TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, 
                         TStock.CessAmount, MLedgerDetails.GSTNO AS CustGSTNo, MLedgerDetails.PANNo AS CustPANNo, MLedgerDetails.FSSAI, MFirm.GSTNO AS CmpGSTNo, MUOM.UomLang,
                         MLedger.StateCode, MItemMaster.HSNCode, TVoucherEntry.BilledAmount, CASE WHEN (@Type = 1) THEN LedgerName ELSE LedgerLangName END AS LedgerName, 
                         MLedger.ContactPerson, MLedgerDetails.PhNo1 AS CustPhNo, MLedgerDetails.MobileNo1 AS CustMoNo, CASE WHEN (@Type = 1) 
                         THEN MLedgerDetails.Address ELSE MLedgerDetails.AddressLang END AS CustAddress, MFirm.Address + ' / ' + Mfirm.pincode AS CmpAddress, MFirm.EmailID AS CmpEmailID, 
                         MFirm.PhoneNo1 + ' / ' + MFirm.PhoneNo2 AS CompPhoneNo,MFirm.FSSAINo as CompFSSAINo, TVoucherEntry.Reference, TVoucherEntry.VoucherTime, 
                         TStock.NetAmount + TStock.CessValue + TStock.PackagingCharges + TStock.OtherCharges AS NetAmount, TStock.NetRate, TStock.DisplayItemName, 
                         TStock.Remarks AS RemarksItemlevel, '' AS TransporterName, TVoucherEntry.LRNo, MTransporterMode.TransModeName, TVoucherEntry.TransNoOfItems,
                             (SELECT        SettingValue
                               FROM            MSettings
                               WHERE        (PkSettingNo = 311)) AS DisplayTrans, TVoucherEntry.Remark, MState.StateName, MCity.CityName, MPayType.PayTypeName
							      ,MLedgerDetails_1.address as CustDeliveryAddress,Mcity_1.Cityname as custDeliverycity
FROM            TStock INNER JOIN
                         MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN
                         TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
                         MFirm ON TVoucherEntry.CompanyNo = MFirm.FirmNo INNER JOIN
                         MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                         dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems_V_1 ON TStock.ItemNo = MStockItems_V_1.ItemNo INNER JOIN
                         MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                         MLedgerDetails ON MLedgerDetails.LedgerNo = MLedger.LedgerNo  INNER JOIN
                         MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo LEFT OUTER JOIN
                         MTransporterMode ON TVoucherEntry.TransportMode = MTransporterMode.TransModeNo INNER JOIN
                         MState ON MLedger.StateCode = MState.StateCode Left outer JOIN
                         MCity ON MLedgerDetails.CityNo = MCity.CityNo INNER JOIN
                         MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
						 left outer JOIN
                         TDeliveryAddress ON  TVoucherEntry.PkVoucherNo = TDeliveryAddress.FkVoucherno AND
                          TVoucherEntry.LedgerNo = TDeliveryAddress.Ledgerno
						  Left outer join MLedgerDetails as MLedgerDetails_1
						   on MLedgerDetails_1.Ledgerdetailsno=TDeliveryAddress.Ledgerdetailsno 
						   and TDeliveryAddress.Ledgerno=MLedgerDetails_1.DeliveryLedgerNo
 Left outer join mcity as mcity_1 on MLedgerDetails_1.cityno=mcity_1.cityno
WHERE        (TVoucherEntry.PkVoucherNo = @PkVoucherNo)

ORDER BY TStock.PkStockTrnNo
END


 Error End ======================== Vriha iTech7/18/2019 12:01:04 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MSettings'. Cannot insert duplicate key in object 'dbo.MSettings'.
The statement has been terminated.
=====

INSERT INTO [MSettings]([PkSettingNo],[SettingKeyCode],[SettingTypeNo],[SettingValue],[SettingDescription],[StatusNo])
     VALUES(467,'SB_SalesMan',4,'True',NULL,2);

 Error End ======================== Vriha iTech7/18/2019 12:01:05 PM

Error Start =========
 Invalid column name 'DeliveryLedgerNo'.
=====
ALTER PROCEDURE [dbo].[GetBill]
@PkVoucherNo                numeric(18),
@Type						int

AS
Begin
SELECT        TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherDate, CASE WHEN (@Type = 1) 
                          THEN MStockItems_V_1.ItemName ELSE MStockItems_V_1.ItemNameLang END AS ItemName, MRateSetting.MRP, TStock.Quantity, TStock.GRWeight, 
                         TStock.TRWeight, TStock.PackagingCharges, TStock.NoOfBag, TStock.CessValue, TStock.OtherCharges AS Dhekharek, TStock.Rate, TStock.Amount, 
                         MUOM.UOMName, TStock.SGSTPercentage, TStock.SGSTAmount, TStock.DiscPercentage, TStock.DiscAmount, TStock.DiscRupees, TStock.DiscPercentage2, 
                         TStock.DiscAmount2, TStock.DiscRupees2, TStock.CGSTPercentage, TStock.CGSTAmount, TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, 
                         TStock.CessAmount, MLedgerDetails.GSTNO AS CustGSTNo, MLedgerDetails.PANNo AS CustPANNo, MLedgerDetails.FSSAI, MFirm.GSTNO AS CmpGSTNo, MUOM.UomLang,
                         MLedger.StateCode, MItemMaster.HSNCode, TVoucherEntry.BilledAmount, CASE WHEN (@Type = 1) THEN LedgerName ELSE LedgerLangName END AS LedgerName, 
                         MLedger.ContactPerson, MLedgerDetails.PhNo1 AS CustPhNo, MLedgerDetails.MobileNo1 AS CustMoNo, CASE WHEN (@Type = 1) 
                         THEN MLedgerDetails.Address ELSE MLedgerDetails.AddressLang END AS CustAddress, MFirm.Address + ' / ' + Mfirm.pincode AS CmpAddress, MFirm.EmailID AS CmpEmailID, 
                         MFirm.PhoneNo1 + ' / ' + MFirm.PhoneNo2 AS CompPhoneNo,MFirm.FSSAINo as CompFSSAINo, TVoucherEntry.Reference, TVoucherEntry.VoucherTime, 
                         TStock.NetAmount + TStock.CessValue + TStock.PackagingCharges + TStock.OtherCharges AS NetAmount, TStock.NetRate, TStock.DisplayItemName, 
                         TStock.Remarks AS RemarksItemlevel, '' AS TransporterName, TVoucherEntry.LRNo, MTransporterMode.TransModeName, TVoucherEntry.TransNoOfItems,
                             (SELECT        SettingValue
                               FROM            MSettings
                               WHERE        (PkSettingNo = 311)) AS DisplayTrans, TVoucherEntry.Remark, MState.StateName, MCity.CityName, MPayType.PayTypeName
							      ,MLedgerDetails_1.address as CustDeliveryAddress,Mcity_1.Cityname as custDeliverycity,tstock.hamali
FROM            TStock INNER JOIN
                         MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN
                         TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
                         MFirm ON TVoucherEntry.CompanyNo = MFirm.FirmNo INNER JOIN
                         MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                         dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems_V_1 ON TStock.ItemNo = MStockItems_V_1.ItemNo INNER JOIN
                         MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                         MLedgerDetails ON MLedgerDetails.LedgerNo = MLedger.LedgerNo  INNER JOIN
                         MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo LEFT OUTER JOIN
                         MTransporterMode ON TVoucherEntry.TransportMode = MTransporterMode.TransModeNo INNER JOIN
                         MState ON MLedger.StateCode = MState.StateCode Left outer JOIN
                         MCity ON MLedgerDetails.CityNo = MCity.CityNo INNER JOIN
                         MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
						 left outer JOIN
                         TDeliveryAddress ON  TVoucherEntry.PkVoucherNo = TDeliveryAddress.FkVoucherno AND
                          TVoucherEntry.LedgerNo = TDeliveryAddress.Ledgerno
						  Left outer join MLedgerDetails as MLedgerDetails_1
						   on MLedgerDetails_1.Ledgerdetailsno=TDeliveryAddress.Ledgerdetailsno 
						   and TDeliveryAddress.Ledgerno=MLedgerDetails_1.DeliveryLedgerNo
 Left outer join mcity as mcity_1 on MLedgerDetails_1.cityno=mcity_1.cityno
WHERE        (TVoucherEntry.PkVoucherNo = @PkVoucherNo)

ORDER BY TStock.PkStockTrnNo
END


 Error End ======================== Vriha iTech7/18/2019 12:01:05 PM

Error Start =========
 Incorrect syntax near the keyword 'PROCEDURE'.
Must declare the scalar variable "@LedgerDetailsNo".
Must declare the scalar variable "@CreditLimit".
Must declare the scalar variable "@LedgerDetailsNo".
Must declare the scalar variable "@LedgerDetailsNo".
=====

GO

--Created on 09/12/2011
create PROCEDURE [dbo].[AddMLedgerDetails2]
     @LedgerDetailsNo                           numeric(18),
     @LedgerNo                            numeric(18),
     @CreditLimit                         numeric(18,2),
     @Address                             varchar(300),
     @StateNo                             numeric(18),
     @CityNo                              numeric(18),
     @PinCode                             varchar(100),
     @PhNo1                               varchar(100),
     -- @PhNo2                               varchar(100),
     @MobileNo1                           varchar(100),
    -- @MobileNo2                           varchar(100),
     @EmailID                             varchar(100),
     @CustomerType                        numeric(18,0),
     --   @PANNo                               varchar(100),
   
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo						      numeric(18),
	-- @FSSAI								  varchar(100),
	 @AreaNo							  numeric(18),
	-- @AddressLang                         nvarchar(500),
    -- @AdharNo					          varchar(100),

    -- @RateTypeNo						  numeric(18),
   --  @DiscPer						      numeric(18),
    -- @DiscRs					      	  numeric(18),
   --  @AnyotherNo1					      varchar(100),
 -- @AccountNo                           varchar(150),
 --   @ReportName                          varchar(max),
  --   @AnyotherNo2				      	  varchar(100),
     @GSTNo				            	  varchar(100),
    @FSSAIDate                           datetime,
     @GSTDate                             datetime,
@Distance     numeric(18,2)
AS

IF EXISTS(select LedgerDetailsNo from MLedgerDetails
          where
          LedgerDetailsNo = @LedgerDetailsNo)
     BEGIN
       --Update existing row
       UPDATE MLedgerDetails
       SET
  --LedgerDetailsNo =@LedgerDetailsNo, 
     LedgerNo=0,
     CreditLimit=@CreditLimit, 
     Address=@Address ,    
     StateNo=@StateNo  ,
     CityNo=@CityNo,  
     PinCode=@PinCode ,  
     PhNo1 =@PhNo1,       
     MobileNo1 =@MobileNo1 ,   
     EmailID   =@EmailID,  
     CustomerType =@CustomerType,

     UserID =@UserID,       
     UserDate =@UserDate,    
	 CompanyNo	=@CompanyNo,	
 AreaNo=@AreaNo,			
   GSTNo=@GSTNo	,	
    FSSAIDate  =@FSSAIDate , 
     GSTDate   =@GSTDate,  
Distance =@Distance ,
DeliveryLedgerNo=@LedgerNo
       WHERE
          LedgerDetailsNo = @LedgerDetailsNo
		  --set @ReturnID=@LedgerNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @LedgerDetailsNo=IsNull(Max(LedgerdetailsNo+2),0) From MLedgerDetails
       DBCC CHECKIDENT('MLedgerdetails', RESEED, @Id)
	

 SET IDENTITY_INSERT MLedgerDetails ON
     BEGIN
       --Insert new row
       
       INSERT INTO MLedgerDetails(
         LedgerDetailsNo,   
          LedgerNo,
          CreditLimit,
          Address,
		  StateNo,
          CityNo,
          PinCode,
          PhNo1,
       --   PhNo2,
          MobileNo1,
        --  MobileNo2,
          EmailID,     
          CustomerType,
       --   PANNo,
        --  AccountNo,
        --  ReportName,      
          UserID,
          UserDate,
         -- StatusNo,
		  CompanyNo,  
		---  FSSAI,
	      AreaNo,
		--  AddressLang,
		--  RateTypeNo,
		--  DiscPer,
		--  DiscRs,
        --  AdharCardNo,
	    --  AnyotherNo1,
		 -- AnyotherNo2,
		  GSTNo,
		  FSSAIDate,
		  GSTDate,
Distance,
DeliveryLedgerNo
)
       VALUES(
         @LedgerDetailsNo,    
          0,
          @CreditLimit,
          @Address,
		  @StateNo,
          @CityNo,
          @PinCode,
          @PhNo1,
        --  @PhNo2,
          @MobileNo1,
        --  @MobileNo2,
          @EmailID,
          @CustomerType,
        --  @PANNo,
        --  @AccountNo,
        --  @ReportName,
          @UserID,
          @UserDate,
       --   1,
		  @CompanyNo,
		--  @FSSAI,
	      @AreaNo,
		--  @AddressLang,
		--  @RateTypeNo,
      --    @DiscPer,
      --    @DiscRs,
       --   @AdharNo,
		--  @AnyotherNo1,
		--  @AnyotherNo2,
		  @GSTNo,
		 @FSSAIDate,
		  @GSTDate,
@Distance,
@LedgerNo
)
end
END


 Error End ======================== Vriha iTech7/18/2019 12:01:05 PM

Error Start =========
 Incorrect syntax near 'GO'.
'CREATE/ALTER PROCEDURE' must be the first statement in a query batch.
=====
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
GO
--Created on 01/04/2019
ALTER PROCEDURE [dbo].[AddMRateSetting]
     @PkSrNo                              numeric(18),
   --  @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
     @MRP										numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                            numeric(18,4),
	 @BSaleRate                            numeric(18,4),
	 @CSaleRate                            numeric(18,4),
	 @DSaleRate                            numeric(18,4),
	 @ESaleRate                            numeric(18,4),
	 @StockConversion					  Numeric(18,2),
	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive								bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
if(cast(@FromDate as datetime) < cast('02-02-1900 00:00:00' as datetime))
begin
	set @FromDate= getdate()
end

IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET
          --FkBcdSrNo = @FkBcdSrNo,
          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
          MRP=@MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  PerOfRateVariation=@PerOfRateVariation,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT('MRateSetting', RESEED, @Id)
       INSERT INTO MRateSetting(
         -- FkBcdSrNo,
          ItemNo,
          FromDate,
          PurRate,
		  MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,
		  PerOfRateVariation,
		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          --@FkBcdSrNo,
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @PerOfRateVariation,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END
Update Mitemmaster set StatusNo=2 Where ItemNo =@ItemNo

 Error End ======================== Vriha iTech7/18/2019 12:01:05 PM

Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(170,2,'Cash Denomination Master',134,'Master.CashDenominationAE',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech12/17/2019 11:44:26 AM
Error Start =========
 Violation of PRIMARY KEY constraint 'PK_MMenuMaster'. Cannot insert duplicate key in object 'dbo.MMenuMaster'.
The statement has been terminated.
=====
INSERT INTO [MMenuMaster](SrNo, MenuID, MenuName, ControlMenu, NavigateURL, IsChildNode, IsAllow, ShortCutKey, ConstructorValue)VALUES(171,3,'Cash Denomination Master',134,'Utilities.CashSlip',NULL,1,NULL,NULL)

 Error End ======================== Vriha iTech12/17/2019 11:44:26 AM
Error Start =========
 Incorrect syntax near the keyword 'PROCEDURE'.
Must declare the scalar variable "@LedgerDetailsNo".
Must declare the scalar variable "@CreditLimit".
Must declare the scalar variable "@LedgerDetailsNo".
Must declare the scalar variable "@LedgerDetailsNo".
=====

GO

--Created on 09/12/2011
create PROCEDURE [dbo].[AddMLedgerDetails2]
     @LedgerDetailsNo                           numeric(18),
     @LedgerNo                            numeric(18),
     @CreditLimit                         numeric(18,2),
     @Address                             varchar(300),
     @StateNo                             numeric(18),
     @CityNo                              numeric(18),
     @PinCode                             varchar(100),
     @PhNo1                               varchar(100),
     -- @PhNo2                               varchar(100),
     @MobileNo1                           varchar(100),
    -- @MobileNo2                           varchar(100),
     @EmailID                             varchar(100),
     @CustomerType                        numeric(18,0),
     --   @PANNo                               varchar(100),
   
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo						      numeric(18),
	-- @FSSAI								  varchar(100),
	 @AreaNo							  numeric(18),
	-- @AddressLang                         nvarchar(500),
    -- @AdharNo					          varchar(100),

    -- @RateTypeNo						  numeric(18),
   --  @DiscPer						      numeric(18),
    -- @DiscRs					      	  numeric(18),
   --  @AnyotherNo1					      varchar(100),
 -- @AccountNo                           varchar(150),
 --   @ReportName                          varchar(max),
  --   @AnyotherNo2				      	  varchar(100),
     @GSTNo				            	  varchar(100),
    @FSSAIDate                           datetime,
     @GSTDate                             datetime,
@Distance     numeric(18,2)
AS

IF EXISTS(select LedgerDetailsNo from MLedgerDetails
          where
          LedgerDetailsNo = @LedgerDetailsNo)
     BEGIN
       --Update existing row
       UPDATE MLedgerDetails
       SET
  --LedgerDetailsNo =@LedgerDetailsNo, 
     LedgerNo=0,
     CreditLimit=@CreditLimit, 
     Address=@Address ,    
     StateNo=@StateNo  ,
     CityNo=@CityNo,  
     PinCode=@PinCode ,  
     PhNo1 =@PhNo1,       
     MobileNo1 =@MobileNo1 ,   
     EmailID   =@EmailID,  
     CustomerType =@CustomerType,

     UserID =@UserID,       
     UserDate =@UserDate,    
	 CompanyNo	=@CompanyNo,	
 AreaNo=@AreaNo,			
   GSTNo=@GSTNo	,	
    FSSAIDate  =@FSSAIDate , 
     GSTDate   =@GSTDate,  
Distance =@Distance ,
DeliveryLedgerNo=@LedgerNo
       WHERE
          LedgerDetailsNo = @LedgerDetailsNo
		  --set @ReturnID=@LedgerNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @LedgerDetailsNo=IsNull(Max(LedgerdetailsNo+2),0) From MLedgerDetails
       DBCC CHECKIDENT('MLedgerdetails', RESEED, @Id)
	

 SET IDENTITY_INSERT MLedgerDetails ON
     BEGIN
       --Insert new row
       
       INSERT INTO MLedgerDetails(
         LedgerDetailsNo,   
          LedgerNo,
          CreditLimit,
          Address,
		  StateNo,
          CityNo,
          PinCode,
          PhNo1,
       --   PhNo2,
          MobileNo1,
        --  MobileNo2,
          EmailID,     
          CustomerType,
       --   PANNo,
        --  AccountNo,
        --  ReportName,      
          UserID,
          UserDate,
         -- StatusNo,
		  CompanyNo,  
		---  FSSAI,
	      AreaNo,
		--  AddressLang,
		--  RateTypeNo,
		--  DiscPer,
		--  DiscRs,
        --  AdharCardNo,
	    --  AnyotherNo1,
		 -- AnyotherNo2,
		  GSTNo,
		  FSSAIDate,
		  GSTDate,
Distance,
DeliveryLedgerNo
)
       VALUES(
         @LedgerDetailsNo,    
          0,
          @CreditLimit,
          @Address,
		  @StateNo,
          @CityNo,
          @PinCode,
          @PhNo1,
        --  @PhNo2,
          @MobileNo1,
        --  @MobileNo2,
          @EmailID,
          @CustomerType,
        --  @PANNo,
        --  @AccountNo,
        --  @ReportName,
          @UserID,
          @UserDate,
       --   1,
		  @CompanyNo,
		--  @FSSAI,
	      @AreaNo,
		--  @AddressLang,
		--  @RateTypeNo,
      --    @DiscPer,
      --    @DiscRs,
       --   @AdharNo,
		--  @AnyotherNo1,
		--  @AnyotherNo2,
		  @GSTNo,
		 @FSSAIDate,
		  @GSTDate,
@Distance,
@LedgerNo
)
end
END


 Error End ======================== Vriha iTech12/17/2019 11:44:27 AM
Error Start =========
 Incorrect syntax near 'GO'.
'CREATE/ALTER PROCEDURE' must be the first statement in a query batch.
=====
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
GO
--Created on 01/04/2019
ALTER PROCEDURE [dbo].[AddMRateSetting]
     @PkSrNo                              numeric(18),
   --  @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
     @MRP										numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                            numeric(18,4),
	 @BSaleRate                            numeric(18,4),
	 @CSaleRate                            numeric(18,4),
	 @DSaleRate                            numeric(18,4),
	 @ESaleRate                            numeric(18,4),
	 @StockConversion					  Numeric(18,2),
	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive								bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
if(cast(@FromDate as datetime) < cast('02-02-1900 00:00:00' as datetime))
begin
	set @FromDate= getdate()
end

IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET
          --FkBcdSrNo = @FkBcdSrNo,
          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
          MRP=@MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  PerOfRateVariation=@PerOfRateVariation,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT('MRateSetting', RESEED, @Id)
       INSERT INTO MRateSetting(
         -- FkBcdSrNo,
          ItemNo,
          FromDate,
          PurRate,
		  MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,
		  PerOfRateVariation,
		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          --@FkBcdSrNo,
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @PerOfRateVariation,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END
Update Mitemmaster set StatusNo=2 Where ItemNo =@ItemNo

 Error End ======================== Vriha iTech12/17/2019 11:44:27 AM
