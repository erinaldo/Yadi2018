IF NOT EXISTS (SELECT * FROM sys.database_principals WHERE name = N'Logicall')
CREATE USER [Logicall] FOR LOGIN [Logicall] WITH DEFAULT_SCHEMA=[dbo]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TChequeNo]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TChequeNo](
	[PkChequeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ChequeUserNo] [numeric](18, 0) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[FromChequeNo] [numeric](18, 0) NULL,
	[ToChequeNo] [numeric](18, 0) NULL,
	[Remark] [varchar](max) NULL,
	[IsActive] [bit] NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_TChequeNo] PRIMARY KEY CLUSTERED 
(
	[PkChequeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MScheme]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MScheme](
	[SchemeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[SchemeTypeNo] [numeric](18, 0) NULL,
	[SchemeName] [varchar](500) NULL,
	[SchemeUserNo] [varchar](500) NULL,
	[SchemeDate] [datetime] NULL,
	[SchemePeriodFrom] [datetime] NULL,
	[SchemePeriodTo] [datetime] NULL,
	[SchemeRedPeriodFrom] [datetime] NULL,
	[SchemeRedPeriodTo] [datetime] NULL,
	[SchemeWorth] [varchar](500) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[DiscType] [numeric](18, 0) NULL,
	[IsActive] [int] NULL,
	[UserID] [numeric](18, 0) NOT NULL,
	[UserDate] [datetime] NULL,
	[SponcorNo] [numeric](18, 0) NULL,
	[CampaignID] [varchar](50) NULL,
	[IsIWScheme] [int] NULL,
	[CustomerType] [int] NULL,
 CONSTRAINT [PK_MScheme_1] PRIMARY KEY CLUSTERED 
(
	[SchemeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TDeleteVouchers]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TDeleteVouchers](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
	[ServerVoucherNo] [numeric](18, 0) NULL,
	[VoucherTypeCode] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TDeleteVouchers] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MStockDepartment]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MStockDepartment](
	[DepartmentNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[DepartmentName] [varchar](50) NULL,
	[ControlGroup] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MDepartment] PRIMARY KEY CLUSTERED 
(
	[DepartmentNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MRegistrationDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MRegistrationDetails](
	[RegDtlsNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[RegNo] [numeric](18, 0) NULL,
	[RegDate] [datetime] NULL,
	[RegTime] [datetime] NULL,
	[StatusNo] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MRegistrationDetails] PRIMARY KEY CLUSTERED 
(
	[RegDtlsNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMCashDenomination]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE  [dbo].[DeleteMCashDenomination] 
@CashDenominationNo                             numeric(18)


AS
Update MCashDenomination set IsActive=''False'' where CashDenominationNo = @CashDenominationNo
--       DELETE FROM MCashDenomination
--       WHERE
--          CashDenominationNo = @CashDenominationNo

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MDutiesTaxesInfo]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MDutiesTaxesInfo](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[TaxOnLedgerNo] [numeric](18, 0) NULL,
	[FromDate] [datetime] NULL,
	[CalculationMethod] [varchar](50) NULL,
	[Percentage] [numeric](18, 2) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MDutiesTaxesInfo] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TItemLevelDiscountDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TItemLevelDiscountDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ItemDiscNo] [numeric](18, 0) NULL,
	[ItemBrandDiscNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[DiscAmount] [numeric](18, 2) NULL,
	[FKStockTrnNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_TItemLevelDiscountDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MCashDenomination]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MCashDenomination](
	[CashDenominationNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[Note] [varchar](50) NULL,
	[RSType] [numeric](18, 0) NULL,
	[SerialNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MCashDenomination] PRIMARY KEY CLUSTERED 
(
	[CashDenominationNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMUOM1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'Create PROCEDURE [dbo].[AddMUOM1]
     @UOMNo                               numeric(18),
     @UOMName                             varchar(50),
     @UOMShortCode                        varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
     @GlobalCode						  numeric(18)
   --  @ModifiedBy                          text
AS
IF EXISTS(select UOMNo from MUOM
          where
          UOMNo = @UOMNo)
     BEGIN
       --Update existing row
       UPDATE MUOM
       SET
          UOMName = @UOMName,
          UOMShortCode = @UOMShortCode,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2,
		  CompanyNo=@CompanyNo,
		  GlobalCode=@GlobalCode
       WHERE
          UOMNo = @UOMNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(UOMNo),0) From MUOM
       DBCC CHECKIDENT(''MUOM'', RESEED, @Id)
       INSERT INTO MUOM(
          --UOMNo,
          UOMName,
          UOMShortCode,
          IsActive,
          UserID,
          UserDate,
          StatusNo,
		  CompanyNo,
		  GlobalCode
          --ModifiedBy
)
       VALUES(
          --@UOMNo,
          @UOMName,
          @UOMShortCode,
          @IsActive,
          @UserID,
          @UserDate,
          1,
		 @CompanyNo,
		 @GlobalCode
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TBarCodePrint]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TBarCodePrint](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[Quantity] [numeric](18, 0) NULL,
	[FKRateSettingNo] [numeric](18, 0) NULL,
	[MacNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TBarCodePrint] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TStock]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TStock](
	[PkStockTrnNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
	[FkVoucherTrnNo] [numeric](18, 0) NULL,
	[FkVoucherSrNo] [numeric](18, 0) NULL,
	[GroupNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[TrnCode] [numeric](18, 0) NULL,
	[GRWeight] [numeric](18, 2) NULL,
	[TRWeight] [numeric](18, 2) NULL,
	[Quantity] [numeric](18, 2) NULL,
	[BilledQuantity] [numeric](18, 2) NULL,
	[Rate] [numeric](18, 2) NULL,
	[Amount] [numeric](18, 2) NULL,
	[NetRate] [numeric](18, 2) NULL,
	[NetAmount] [numeric](18, 2) NULL,
	[SGSTPercentage] [numeric](18, 2) NULL,
	[SGSTAmount] [numeric](18, 2) NULL,
	[CGSTPercentage] [numeric](18, 2) NULL,
	[CGSTAmount] [numeric](18, 2) NULL,
	[IGSTPercentage] [numeric](18, 2) NULL,
	[IGSTAmount] [numeric](18, 2) NULL,
	[CessPercentage] [numeric](18, 2) NULL,
	[CessAmount] [numeric](18, 2) NULL,
	[AddTaxPercentage] [numeric](18, 2) NULL,
	[AddTaxAmount] [numeric](18, 2) NULL,
	[DiscPercentage] [numeric](18, 2) NULL,
	[DiscAmount] [numeric](18, 2) NULL,
	[DiscRupees] [numeric](18, 2) NULL,
	[DiscPercentage2] [numeric](18, 2) NULL,
	[DiscAmount2] [numeric](18, 2) NULL,
	[DiscRupees2] [numeric](18, 2) NULL,
	[FkUomNo] [numeric](18, 0) NULL,
	[FreeQty] [numeric](18, 2) NULL,
	[FreeUOMNo] [numeric](18, 0) NULL,
	[LandedRate] [numeric](18, 2) NULL,
	[FkGRNNo] [numeric](18, 0) NULL,
	[BatchNo] [varchar](50) NULL,
	[NoOfBag] [numeric](18, 0) NULL,
	[CessValue] [numeric](18, 2) NULL,
	[PackagingCharges] [numeric](18, 2) NULL,
	[IsVoucherLock] [bit] NULL,
	[FkItemTaxInfo2] [numeric](18, 0) NULL,
	[DisplayItemName] [varchar](500) NULL,
	[Remarks] [nvarchar](500) NULL,
	[FkStockBarCodeNo] [numeric](18, 0) NULL,
	[FkRateSettingNo] [numeric](18, 0) NULL,
	[FkItemTaxInfo] [numeric](18, 0) NULL,
	[FKAddItemTaxSettingNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
	[Freight] [numeric](18, 2) NULL,
	[OtherCharges] [numeric](18, 2) NULL,
	[SalesMan] [int] NULL,
	[Itype] [bit] NULL,
	[ContainerCharges] [numeric](18, 2) NULL,
	[ContainerChargesAmt] [numeric](18, 2) NULL,
	[PackagingChargesAmt] [numeric](18, 2) NULL,
	[Hamali] [numeric](18, 2) NULL,
 CONSTRAINT [PK_TStock] PRIMARY KEY CLUSTERED 
(
	[PkStockTrnNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TStock]') AND name = N'TStock_FKRateSettingNo')
CREATE NONCLUSTERED INDEX [TStock_FKRateSettingNo] ON [dbo].[TStock] 
(
	[FkRateSettingNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TStock]') AND name = N'TStock_FKVch')
CREATE NONCLUSTERED INDEX [TStock_FKVch] ON [dbo].[TStock] 
(
	[FKVoucherNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TStock]') AND name = N'TStock_ItemNo')
CREATE NONCLUSTERED INDEX [TStock_ItemNo] ON [dbo].[TStock] 
(
	[ItemNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TStock]') AND name = N'TStock_LandedRate')
CREATE NONCLUSTERED INDEX [TStock_LandedRate] ON [dbo].[TStock] 
(
	[LandedRate] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TDocketPrintingDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TDocketPrintingDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[DocketPrintingNo] [numeric](18, 0) NULL,
	[FkVoucherNo] [numeric](18, 0) NULL,
	[Remark] [varchar](500) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[Status] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TDocketPrintingDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MCustomerType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MCustomerType](
	[CustomerTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[CustomerTypeName] [varchar](500) NULL,
	[CustomerTypeDesc] [varchar](500) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MCustomerType] PRIMARY KEY CLUSTERED 
(
	[CustomerTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMItemGroup]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddMItemGroup]
     @ItemGroupNo                         numeric(18),
     @ItemGroupName                       varchar(50),
	 @LangGroupName					      nvarchar(200),
     @ControlGroup                        numeric(18),
	 @ControlSubGroup					  numeric(18),
     @IsActive                            bit,
     @UserId                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)

	
    
AS
IF EXISTS(select ItemGroupNo from MItemGroup
          where
          ItemGroupNo = @ItemGroupNo)
     BEGIN
       --Update existing row
       UPDATE MItemGroup
       SET
          ItemGroupName   = @ItemGroupName,
		  LangGroupName   = @LangGroupName,
          ControlGroup    = @ControlGroup,
		  ControlSubGroup = @ControlSubGroup,
          IsActive	      = @IsActive,
          UserId          =@UserId,
          UserDate        =@UserDate,
		  CompanyNo       =@CompanyNo,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo = 2
	
			 
       WHERE
         ItemGroupNo = @ItemGroupNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(ItemGroupNo),0) From MItemGroup
       DBCC CHECKIDENT(''MItemGroup'', RESEED, @Id)
       INSERT INTO MItemGroup(
          
          ItemGroupName,
		  LangGroupName,
          ControlGroup,
		  ControlSubGroup,
          IsActive,
          UserId,
          UserDate,
		  CompanyNo,
          StatusNo
		
		 
)
       VALUES(
         
          @ItemGroupName,
		  @LangGroupName,
          @ControlGroup,
		  @ControlSubGroup,
          @IsActive,
          @UserId,
          @UserDate,
		  @CompanyNo,
          1
		 
       
		
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOpeningLedgerBalance1]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'--Created On 26-July-2008
CREATE FUNCTION [dbo].[GetOpeningLedgerBalance1]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@BalType	int	
	)
RETURNS @TLedgerBal Table(OpAmt numeric(18,2))
AS
	BEGIN
	Declare @OpAmt numeric(18,2),@DrAmt numeric(18,2),@CrAmt numeric(18,2),@SignCode int
	Declare @BalAmt numeric(18,2),@Res int
	Declare @OpDt datetime,@TDate datetime
	
	Set @DrAmt = 0 Set @CrAmt = 0 set @OpAmt=0 set @Res=0 set @SignCode=0
	
	Select @OpDt= BooksBeginFrom FROM MCompany where CompanyNo = @CompNo
--UserDate From MLedger where LedgerNo=@LedgerNo	
	
	/*SELECT     @OpAmt=isnull(SUM(OpeningBalance),0)
	FROM         MLedger
	WHERE     (LedgerNo = @LedgerNo) */
	
	if(convert(datetime,@FromDate,101) < convert(datetime,@OpDt,101))
	set @OpAmt=0
	else
	set @Res=1
	
	if(@OpDt>=@FromDate And @OpDt <= @ToDate)
		set @Res =1 
	else if(convert(varchar,@FromDate,101) = convert(varchar,@OpDt,101) Or convert(varchar,@ToDate,101) = convert(varchar,@OpDt,101))
		set @Res =1 
	
if(@Res =1)
begin	
	Select @SignCode = SignCode From MLedger Where LedgerNo=@LedgerNo
	if(@SignCode = @BalType)	
		 Select @OpAmt= isNull((OpeningBalance),0) From MLedger Where LedgerNo=@LedgerNo
	else
		Select @OpAmt= isNull((-OpeningBalance),0) From MLedger Where LedgerNo=@LedgerNo 
end	

	if(@FromDate <= @OpDt)
	begin
	
	insert into @TLedgerBal values(@OpAmt)
	
	end
	else
	begin
	set @TDate=DateAdd(d,-1,@FromDate)
	SELECT    @DrAmt= SUM(TVoucherDetails.Debit), @CrAmt=SUM(TVoucherDetails.Credit)
FROM         TVoucherDetails INNER JOIN
                      TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo
WHERE     (TVoucherDetails.LedgerNo = @LedgerNo) AND (TVoucherEntry.VoucherDate >= @OpDt) AND 
                      (TVoucherEntry.VoucherDate <= @TDate) And (TVoucherEntry.CompanyNo = @CompNo)
GROUP BY MLedger.LedgerNo, MLedger.LedgerName
		--select @DrAmt=DrAmt,@CrAmt=CrAmt from GetLedgerBalance (@LedgerNo,@CompNo,@OpDt,@TDate,@BrID)--
	if(@BalType=1)
	begin
		Update @TLedgerBal set OpAmt  =(@DrAmt-@CrAmt)
	end
	else if(@BalType = 2)
	begin
		Update @TLedgerBal set OpAmt  =(@CrAmt-@DrAmt) 
	end	
	else
	begin
		Update @TLedgerBal set OpAmt  =(@DrAmt-@CrAmt)
	end
	
	                   
	select @BalAmt = OpAmt from @TLedgerBal --(@DrAmt - @CrAmt)+ @OpAmt  
	if(@BalAmt<>0)
	begin
	insert into @TLedgerBal values(@BalAmt)
	end

	end
	RETURN
	END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MCountry]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MCountry](
	[CountryNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[CountryName] [varchar](50) NULL,
	[CountryShortCode] [varchar](50) NULL,
	[CountryLangName] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MCountry] PRIMARY KEY CLUSTERED 
(
	[CountryNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCashSlip]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCashSlip](
	[CashSlipNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[DocketUserNo] [numeric](18, 0) NULL,
	[ToDate] [datetime] NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TCashSlip] PRIMARY KEY CLUSTERED 
(
	[CashSlipNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSchemeToDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSchemeToDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[SchemeDetailsNo] [numeric](18, 0) NULL,
	[SchemeNo] [numeric](18, 0) NULL,
	[BillAmount] [numeric](18, 2) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[Quantity] [numeric](18, 2) NULL,
	[Rate] [numeric](18, 2) NULL,
	[MRP] [numeric](18, 0) NULL,
	[Amount] [numeric](18, 2) NULL,
	[UomNo] [numeric](18, 0) NULL,
	[FkRateSettingNo] [numeric](18, 0) NULL,
	[DiscPercentage] [numeric](18, 2) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MSchemeToDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MCustomerSize]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MCustomerSize](
	[CustSizeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[CustSizeName] [varchar](50) NULL,
	[CustSizeDesc] [varchar](max) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_MCustomerSize] PRIMARY KEY CLUSTERED 
(
	[CustSizeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLedgerType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLedgerType](
	[LedgerTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LedgerTypeName] [varchar](50) NULL,
	[ShortName] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MLedgerType] PRIMARY KEY CLUSTERED 
(
	[LedgerTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherRefDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVoucherRefDetails](
	[PkRefTrnNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherTrnNo] [numeric](18, 0) NULL,
	[FkVoucherSrNo] [numeric](18, 0) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[RefNo] [numeric](18, 0) NULL,
	[TypeOfRef] [varchar](50) NULL,
	[DueDays] [numeric](18, 0) NULL,
	[DueDate] [datetime] NULL,
	[Amount] [numeric](18, 2) NULL,
	[DiscAmt] [numeric](18, 2) NULL,
	[SignCode] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[Modifiedby] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_TVoucherRefDetails] PRIMARY KEY CLUSTERED 
(
	[PkRefTrnNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherRefDetails]') AND name = N'TVoucherRefDetails_FkVoucherTrnNo')
CREATE NONCLUSTERED INDEX [TVoucherRefDetails_FkVoucherTrnNo] ON [dbo].[TVoucherRefDetails] 
(
	[FkVoucherTrnNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherRefDetails]') AND name = N'TVoucherRefDetails_RefNo')
CREATE NONCLUSTERED INDEX [TVoucherRefDetails_RefNo] ON [dbo].[TVoucherRefDetails] 
(
	[RefNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MRegistration]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MRegistration](
	[RegNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[MacID] [varchar](100) NULL,
	[HostName] [varchar](100) NULL,
	[MachineIP] [varchar](100) NULL,
	[IsActive] [bit] NULL,
	[IsManual] [bit] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MRegistration] PRIMARY KEY CLUSTERED 
(
	[RegNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMItemGroup]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
Create PROCEDURE  [dbo].[DeleteMItemGroup] 
@ItemGroupNo                       numeric(18)


AS
	Update MItemGroup set IsActive=''False'',StatusNo=2 Where ItemGroupNo = @ItemGroupNo
       /*DELETE FROM MStockGroup
       WHERE
          StockGroupNo = @StockGroupNo*/
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MAccYear]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MAccYear](
	[AccYearNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[AccYearName] [varchar](50) NULL,
	[FinancialYear] [varchar](50) NULL,
	[BooksBeginFrom] [datetime] NULL,
	[BooksEndOn] [datetime] NULL,
	[AssesmentYearName] [varchar](50) NULL,
	[DatabaseName] [varchar](50) NULL,
	[IsLocked] [bit] NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_MAccYear] PRIMARY KEY CLUSTERED 
(
	[AccYearNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMSubGroup]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE  [dbo].[DeleteMSubGroup] 
@SubGroupNo                         numeric(18)


AS

       DELETE FROM MSubGroup
       WHERE
          SubGroupNo = @SubGroupNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MCity]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MCity](
	[CityNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[CityName] [varchar](50) NULL,
	[CityShortCode] [varchar](10) NULL,
	[CityLangName] [nchar](50) NULL,
	[StateNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MCity] PRIMARY KEY CLUSTERED 
(
	[CityNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMItemTaxSetting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 18/01/2013
CREATE PROCEDURE [dbo].[AddMItemTaxSetting]
     @PkSrNo                              numeric(18),
     @TaxSettingName                      varchar(100),
     @TaxLedgerNo                         numeric(18),
     @SalesLedgerNo                       numeric(18),
--     @CalculationMethod                   varchar(50),
     @Percentage                          numeric(18,2),
     @CompanyNo                           numeric(18),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkSrNo from MItemTaxSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MItemTaxSetting
       SET
          TaxSettingName = @TaxSettingName,
          TaxLedgerNo = @TaxLedgerNo,
          SalesLedgerNo = @SalesLedgerNo,
        --  CalculationMethod = @CalculationMethod,
          Percentage = @Percentage,
          CompanyNo = @CompanyNo,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MItemTaxSetting
       DBCC CHECKIDENT(''MItemTaxSetting'', RESEED, @Id)
       INSERT INTO MItemTaxSetting(
          TaxSettingName,
          TaxLedgerNo,
          SalesLedgerNo,
        --  CalculationMethod,
          Percentage,
          CompanyNo,
          IsActive,
          UserID,
          UserDate,
          StatusNo
		--  VersionNo,
		 -- ServerItemTaxSettingNo
)
       VALUES(
          @TaxSettingName,
          @TaxLedgerNo,
          @SalesLedgerNo,
        --  @CalculationMethod,
          @Percentage,
          @CompanyNo,
          @IsActive,
          @UserID,
          @UserDate,
          1
		  --0,
          --0
)

END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MUOM]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MUOM](
	[UOMNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[UOMName] [varchar](50) NULL,
	[UOMShortCode] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[StatusNo] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UQC] [varchar](50) NULL,
	[UOMType] [numeric](18, 0) NULL,
	[UomLang] [varchar](50) NULL,
 CONSTRAINT [PK_MUOM] PRIMARY KEY CLUSTERED 
(
	[UOMNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSchemeAchievers]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSchemeAchievers](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[SchemeNo] [numeric](18, 0) NULL,
	[SchemeDetailsNo] [numeric](18, 0) NULL,
	[SlabAmount] [numeric](18, 2) NULL,
	[SlabDiscAmt] [numeric](18, 2) NULL,
	[SlabBalanceAmount] [numeric](18, 2) NULL,
	[IsItemDiscStatus] [bit] NULL,
	[IsActive] [bit] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MSchemeAchievers] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TDocketPrinting]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TDocketPrinting](
	[DocketPrintingNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[DocketUserNo] [numeric](18, 0) NULL,
	[FromDate] [datetime] NULL,
	[ToDate] [datetime] NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[Status] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TDocketPrinting] PRIMARY KEY CLUSTERED 
(
	[DocketPrintingNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSchemeFromDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSchemeFromDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[SchemeDetailsNo] [numeric](18, 0) NULL,
	[SchemeNo] [numeric](18, 0) NULL,
	[BillAmount] [numeric](18, 2) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[Quantity] [numeric](18, 0) NULL,
	[Rate] [numeric](18, 2) NULL,
	[MRP] [numeric](18, 0) NULL,
	[Amount] [numeric](18, 2) NULL,
	[UomNo] [numeric](18, 0) NULL,
	[FkRateSettingNo] [numeric](18, 0) NULL,
	[DistPercentage] [numeric](18, 2) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MSchemeFromDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMLedgerDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE  [dbo].[DeleteMLedgerDetails] 
@LedgerDetailsNo                          numeric(18)


AS

       DELETE FROM MLedgerDetails
       WHERE
          LedgerDetailsNo = @LedgerDetailsNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMItemMaster]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

--Created on 23/03/2019 UMESH
CREATE PROCEDURE [dbo].[AddMItemMaster]
     @ItemNo                              numeric(18),
     @ItemName                            varchar(50),
     @ItemShortName                       varchar(50),
     @Barcode                             varchar(50),
     @ShortCode                           varchar(50),
     @GroupNo                             numeric(18),
     @UOMH                                numeric(18),
     @UOML                                numeric(18),
     @UOMDefault                          numeric(18),
     @FkDepartmentNo                      numeric(18),
     @FkCategoryNo                        numeric(18),
     @MinLevel                            numeric(18),
     @MaxLevel                            numeric(18),
    -- @ReOrderLevelQty                     numeric(18),
     @LangFullDesc                        varchar(50),
     @LangShortDesc                       varchar(50),
     @CompanyNo                           numeric(18),
     @IsActive                            bit,
     @UserId                              numeric(18),
     @UserDate                            datetime,
    -- @ModifiedBy                          text,
     --@StatusNo                            int,
     @ControlUnder                        numeric(18),
     @FactorVal                           numeric(18),
     @Margin                              numeric(18),
     @CessValue                           numeric(18,2),
     @PackagingCharges                    numeric(18,2),
     @Dhekhrek                            numeric(18,2),
     @OtherCharges                        numeric(18,2),
     @HigherVariation                     numeric(18),
     @LowerVariation                      numeric(18),
     @HSNCode                             varchar(50),
     @FKStockGroupTypeNo                  numeric(18),
     @ESFlag                              bit,
     @ItemType                            int,
    -- @Stock                               numeric(18),
     @ContainerCharges                    numeric(18,2), 
@GSTSlab   bit,
     @ReturnID                            INT OUTPUT

AS
IF EXISTS(select ItemNo from MItemMaster
          where
          ItemNo = @ItemNo)
     BEGIN
       --Update existing row
       UPDATE MItemMaster
       SET
          ItemName = @ItemName,
          ItemShortName = @ItemShortName,
          Barcode = @Barcode,
          ShortCode = @ShortCode,
          GroupNo = @GroupNo,
         UOMH = @UOMH,
          UOML = @UOML,         UOMDefault = @UOMDefault,
          FkDepartmentNo = @FkDepartmentNo,
          FkCategoryNo = @FkCategoryNo,
          MinLevel = @MinLevel,
          MaxLevel = @MaxLevel,
          --ReOrderLevelQty = @ReOrderLevelQty,
          LangFullDesc = @LangFullDesc,
          LangShortDesc = @LangShortDesc,
          CompanyNo = @CompanyNo,
          IsActive = @IsActive,
          UserId = @UserId,
          UserDate = @UserDate,
          ModifiedBy =  isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo = 1,
          ControlUnder = @ControlUnder,
          FactorVal = @FactorVal,
          Margin = @Margin,
          CessValue = @CessValue,
          PackagingCharges = @PackagingCharges,
          Dhekhrek = @Dhekhrek,
          OtherCharges = @OtherCharges,
          HigherVariation = @HigherVariation,
          LowerVariation = @LowerVariation,
          HSNCode = @HSNCode,
          FKStockGroupTypeNo=@FKStockGroupTypeNo,
          ItemType=@ItemType,
          ESFlag=@ESFlag,
          ContainerCharges=@ContainerCharges,
GSTSlab=@GSTSlab
      --    Stock = @Stock
       WHERE
          ItemNo = @ItemNo
     SET @ReturnID =@ItemNo
     END
ELSE
     BEGIN
       --Insert new row
       INSERT INTO MItemMaster(
          ItemName,
          ItemShortName,
          Barcode,
          ShortCode,
          GroupNo,
          UOMH,
          UOML,
          UOMDefault,
          FkDepartmentNo,
          FkCategoryNo,
          MinLevel,
          MaxLevel,
        --  ReOrderLevelQty,
          LangFullDesc,
          LangShortDesc,
          CompanyNo,
          IsActive,
          UserId,
          UserDate,
        --  ModifiedBy,
          StatusNo,
          ControlUnder,
          FactorVal,
          Margin,
          CessValue,
          PackagingCharges,
          Dhekhrek,
          OtherCharges,
          HigherVariation,
          LowerVariation,
          HSNCode,
          FKStockGroupTypeNo,
          ItemType,
          ESFlag,
          ContainerCharges,GSTSlab
         -- Stock
)
       VALUES(
          @ItemName,
          @ItemShortName,
          @Barcode,
          @ShortCode,
          @GroupNo,
          @UOMH,
          @UOML,
          @UOMDefault,
          @FkDepartmentNo,
          @FkCategoryNo,
          @MinLevel,
          @MaxLevel,
        --  @ReOrderLevelQty,
          @LangFullDesc,
          @LangShortDesc,
          @CompanyNo,
          @IsActive,
          @UserId,
          @UserDate,
         -- @ModifiedBy,
1,
          @ControlUnder,
          @FactorVal,
          @Margin,
          @CessValue,
          @PackagingCharges,
          @Dhekhrek,
          @OtherCharges,
          @HigherVariation,
          @LowerVariation,
          @HSNCode,
          @FKStockGroupTypeNo,
          @ItemType,
          @ESFlag,
          @ContainerCharges,
@GSTSlab
         -- @Stock
)
     SET @ReturnID = SCOPE_IDENTITY()
END


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TChequeNoDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TChequeNoDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkChequeNo] [numeric](18, 0) NULL,
	[ChequeDetailsUserNo] [varchar](50) NULL,
	[FkVoucherTrnNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_TChequeNoDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSettingsType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSettingsType](
	[PkSettingTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[SettingTypeName] [varchar](100) NULL,
	[SettingShortCode] [varchar](50) NULL,
	[SettingTypeDescription] [varchar](max) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MSettingsType] PRIMARY KEY CLUSTERED 
(
	[PkSettingTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TGRN]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TGRN](
	[GRNNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[GRNUserNo] [numeric](18, 0) NULL,
	[GRNDate] [datetime] NULL,
	[GRNTime] [datetime] NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[RefNo] [varchar](50) NULL,
	[GRNAmount] [numeric](18, 2) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[IsCancel] [bit] NULL,
 CONSTRAINT [PK_TGRN] PRIMARY KEY CLUSTERED 
(
	[GRNNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MHelp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MHelp](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[HelpInfo] [varchar](max) NULL,
 CONSTRAINT [PK_MHelp] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTCashSlipDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE  [dbo].[DeleteTCashSlipDetails] 
@CashSlipDetailsNo                     numeric(18)


AS


DELETE FROM TCashSlipDetails 
       WHERE
          CashSlipDetailsNo = @CashSlipDetailsNo

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TGRNDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TGRNDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkGRNNo] [numeric](18, 0) NULL,
	[GRNSrNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[Quantity] [numeric](18, 2) NULL,
	[BilledQuantity] [numeric](18, 2) NULL,
	[Rate] [numeric](18, 2) NULL,
	[Amount] [numeric](18, 2) NULL,
	[NetRate] [numeric](18, 2) NULL,
	[NetAmount] [numeric](18, 2) NULL,
	[FkRateSettingNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[GodownNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_TGRNDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MFirmBank]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MFirmBank](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FirmNo] [numeric](18, 0) NULL,
	[BankNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_MFirmBank_1] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MHelpFormDtls]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MHelpFormDtls](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FormName] [varchar](100) NULL,
	[FKHelpInfo] [numeric](18, 0) NULL,
	[HelpHeader] [varchar](max) NULL,
	[HelpDesc] [varchar](max) NULL,
	[HelpDtls] [varchar](max) NULL,
 CONSTRAINT [PK_MHelpForms] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TFooterDiscountDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TFooterDiscountDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FooterDiscNo] [numeric](18, 0) NULL,
	[FooterDiscDetailsNo] [numeric](18, 0) NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
	[DiscAmount] [numeric](18, 2) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_TFooterDiscountDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TGRNInvoice]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TGRNInvoice](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkGRNNo] [numeric](18, 0) NULL,
	[FkVoucherNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_TGRNInvoice] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMFirm]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE [dbo].[AddMFirm]
     @FirmNo                               numeric(18),
     @FirmName                             nvarchar(250),
     @ShortName                            varchar(100),
     @Address                              nvarchar(max),
     @StateNo                              numeric(18),
     @StateCode                            numeric(18),
	 @CityNo							   numeric(18),
     @Pincode                              varchar(100),
     @EmailID                              varchar(100),
     @PhoneNo1			                       varchar(100),
     @PhoneNo2                             varchar(100),
     @MobileNo1                            varchar(100),
     @MobileNo2                            varchar(100),
     @TermAndCondition                     varchar(300),
     @GSTNo                                varchar(250),
     @FSSAINo							   varchar(250),
     @PANNo                                varchar(250),
     @AdharNo                              varchar(250),
     @AnyotherNo1                          varchar(250),
     @AnyotherNo2                          varchar(250),
     @GSTDate                              DateTime,
     @FSSAIDate                            DateTime,
     @IsType                               bit,
     @IsActive                             bit,
     @UserID                               int,
     @UserDate                             DateTime,
     @PrinterName                          varchar(50),
@CompanyType                                int,
     @ReturnID							   int output
AS
IF EXISTS(select FirmNo from MFirm
          where
          FirmNo = @FirmNo)
     BEGIN
       --Update existing row
       UPDATE MFirm
       SET
          FirmName		    = @FirmName,
          ShortName			= @ShortName,
          Address			= @Address,
          StateNo			= @StateNo,
          StateCode			= @StateCode,
          CityNo			= @CityNo,
		  PinCode			= @Pincode,
          EmailID		    = @EmailID,
          PhoneNo1		    = @PhoneNo1,
          PhoneNo2		   = @PhoneNo2,
          MobileNo1		   = @MobileNo1,
          MobileNo2		   = @MobileNo2,
          TermAndCondition = @TermAndCondition,
          GSTNo			   = @GSTNo,
          FSSAINo		   = @FSSAINo,
          PANCardNo		   = @PANNo,
          AdharCardNo		= @AdharNo,
          AnyotherNo1	   = @AnyotherNo1,
          AnyotherNo2      = @AnyotherNo2,
          GSTDate		   = @GSTDate,
          FSSAIDate		   = @FSSAIDate,
          IsType		   = @IsType,
          IsActive		   = @IsActive,
          UserID		   = @UserID,
          UserDate		   = @UserDate,
		  StatusNo=2,
		  PrinterName      =@PrinterName,
CompanyType=@CompanyType
       
       WHERE
          FirmNo = @FirmNo
     set @ReturnID=@FirmNo  


     END
ELSE
     BEGIN
       --Insert new row
       INSERT INTO MFirm(
          FirmName,
          ShortName,	
          Address,			
          StateNo,			
          StateCode,		
          CityNo,			
		  PinCode,		
          EmailID,		  
          PhoneNo1,		  
          PhoneNo2,		  
          MobileNo1,		  
          MobileNo2,		  
          TermAndCondition, 
          GSTNo,			 
          FSSAINo,		 
          PANCardNo,			 
          AdharCardNo,		  
          AnyotherNo1,	   
          AnyotherNo2,   
          GSTDate,		 
          FSSAIDate,		
          IsType,		
          IsActive,		 
          UserID,		
          UserDate,
          StatusNo,
		  PrinterName,
CompanyType		 
)
       VALUES(
          @FirmName,
          @ShortName,
          @Address,
          @StateNo,
          @StateCode,
          @CityNo,
		  @Pincode,
          @EmailID,
          @PhoneNo1,
          @PhoneNo2,
          @MobileNo1,
          @MobileNo2,
          @TermAndCondition,
          @GSTNo,
          @FSSAINo,
          @PANNo,
          @AdharNo,
          @AnyotherNo1,
          @AnyotherNo2,
          @GSTDate,
          @FSSAIDate,
          @IsType,
          @IsActive,
          @UserID,
          @UserDate,
		  1,
		  @PrinterName,@CompanyType	
)
set @ReturnID=Scope_Identity()

END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemTaxAll]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE Function [dbo].[GetItemTaxAll]
(
@PItemNo					numeric(18),
@POnDate					datetime,
@PGroupNo					numeric(18),
@PTaxTypeNo					numeric(18),
@PItemGroupNo					numeric(18)
)

RETURNS @TTax TABLE (
	PkSrNo numeric(18, 0),
	ItemNo numeric(18, 0) ,
	TaxLedgerNo numeric(18, 0) ,
	SalesLedgerNo numeric(18, 0) ,
	FromDate datetime ,
	CalculationMethod varchar(50) ,
	Percentage numeric(18,2) ,
	CompanyNo numeric(18, 0),
	GroupNo numeric(18,0),
	TaxTypeNo numeric(18,0),
	FkTaxSettingNo numeric(18))
AS
Begin

Declare @TempTbl TABLE (
	PkSrNo numeric(18, 0),
	ItemNo numeric(18, 0) ,
	TaxLedgerNo numeric(18, 0) ,
	SalesLedgerNo numeric(18, 0) ,
	FromDate datetime ,
	CalculationMethod varchar(50) ,
	Percentage numeric(18,2) ,
	CompanyNo numeric(18, 0),
	GroupNo numeric(18,0),
	TaxTypeNo numeric(18,0))

Declare @StrFilter varchar(max), @SqlQuery varchar(max), @VItemNo numeric(18, 0),@VGroupNo numeric(18,0)

Declare @PkSrNo numeric(18, 0),
	@ItemNo numeric(18, 0) ,
	@TaxLedgerNo numeric(18, 0) ,
	@SalesLedgerNo numeric(18, 0) ,
	@FromDate datetime ,
	@CalculationMethod varchar(50) ,
	@Percentage numeric(18,2) ,
	@CompanyNo numeric(18, 0),
    @GroupNo numeric(18,0),
	@TaxTypeNo numeric(18,0),
	@VTaxTypeNo numeric(18,0),
	@FKTaxSettingNo numeric(18)

SET @PkSrNo = 0
SET @ItemNo = 0
SET @TaxLedgerNo = 0
SET @SalesLedgerNo = 0
SET @FromDate = getdate()
SET @CalculationMethod = ''''
SET @Percentage = 0.00
SET @CompanyNo = 0
SET @VItemNo = 0
SET @GroupNo = 0
SET @VGroupNo = 0
SET @TaxTypeNo = 0
SET @VTaxTypeNo = 0

if (@PItemGroupNo is null)
	Declare CurRate Cursor For Select PkSrNo, ItemNo, TaxLedgerNo, SalesLedgerNo, FromDate, CalculationMethod, 
				Percentage, MItemTaxInfo.CompanyNo, MLEDGER.GroupNo, MLEDGERT.GroupNo AS TaxTypeNo,IsNull(FKTaxSettingNo,0)
                From MItemTaxInfo 
				INNER JOIN MLEDGER ON MItemTaxInfo.SalesLedgerNo = MLEDGER.LedgerNo
				INNER JOIN MLEDGER AS MLEDGERT ON MItemTaxInfo.TaxLedgerNo = MLEDGERT.LedgerNo
				WHERE ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end	
				AND MLEDGER.GroupNo=Case When @PGroupNo is null then MLEDGER.GroupNo else @PGroupNo end	
	            AND MLEDGERT.GroupNo=Case When @PTaxTypeNo is null then MLEDGERT.GroupNo else @PTaxTypeNo end
                Order by ItemNo,FromDate desc ,PkSrNo desc
else
	Declare CurRate Cursor For Select MItemTaxInfo.PkSrNo, MItemTaxInfo.ItemNo, MItemTaxInfo.TaxLedgerNo, MItemTaxInfo.SalesLedgerNo, MItemTaxInfo.FromDate, MItemTaxInfo.CalculationMethod, 
				MItemTaxInfo.Percentage, MItemTaxInfo.CompanyNo, MLEDGER.GroupNo, MLEDGERT.GroupNo AS TaxTypeNo,IsNull(MItemTaxInfo.FKTaxSettingNo,0)
                From MStockItems 
				INNER JOIN MItemTaxInfo ON MItemMaster.ItemNo = MItemTaxInfo.ItemNo
				INNER JOIN MLEDGER ON MItemTaxInfo.SalesLedgerNo = MLEDGER.LedgerNo
				INNER JOIN MLEDGER AS MLEDGERT ON MItemTaxInfo.TaxLedgerNo = MLEDGERT.LedgerNo
				WHERE MItemMaster.ItemNo=Case When @PItemNo is null then MItemMaster.ItemNo else @PItemNo end
				AND MItemMaster.GroupNo=Case When @PItemGroupNo is null then MItemMaster.GroupNo else @PItemGroupNo end		
				AND MLEDGER.GroupNo=Case When @PGroupNo is null then MLEDGER.GroupNo else @PGroupNo end	
	            AND MLEDGERT.GroupNo=Case When @PTaxTypeNo is null then MLEDGERT.GroupNo else @PTaxTypeNo end
				 Order by ItemNo,FromDate desc,MItemTaxInfo.PkSrNo desc 

Open CurRate 

Fetch CurRate into @PkSrNo, @ItemNo, @TaxLedgerNo, @SalesLedgerNo, @FromDate, @CalculationMethod, 
				 @Percentage, @CompanyNo,@GroupNo, @TaxTypeNo,@FKTaxSettingNo

DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin

    SET @isRecOK = 1

--------	if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
--------	Begin
--------        SET @isRecOK = 0
--------	End --if(isNUll(@PItemNo))
--------	
--------	if(@PGroupNo IS not NULL AND @PGroupNo != @GroupNo)
--------	Begin
--------        SET @isRecOK = 0
--------	End --if(isNUll(@PGroupNo))
--------
--------	if(@PTaxTypeNo IS not NULL AND @PTaxTypeNo != @TaxTypeNo)
--------	Begin
--------        SET @isRecOK = 0
--------	End --if(isNUll(@PTaxTypeNo))

	if (@POnDate is not NULL AND @FromDate > @POnDate)
	Begin
		 SET @isRecOK = 0
	End --if(isNUll(@POnDate))
	else if(getdate()<@FromDate)
	Begin
		SET @isRecOK = 0
	End

	if((@isRecOK = 1) AND (@VItemNo != @ItemNo OR @VGroupNo!=@GroupNo OR @VTaxTypeNo!=@TaxTypeNo))
	Begin
		set @VItemNo = @ItemNo  
		set @VGroupNo=@GroupNo
		set @VTaxTypeNo = @TaxTypeNo
		insert into @TTax values (@PkSrNo, @ItemNo, @TaxLedgerNo, @SalesLedgerNo,
                 @FromDate, @CalculationMethod, @Percentage, @CompanyNo,@GroupNo,@TaxTypeNo,@FKTaxSettingNo)
	End --if(@VItemNo != @ItemNo 
	
	Fetch CurRate into @PkSrNo, @ItemNo, @TaxLedgerNo, @SalesLedgerNo, @FromDate,
				 @CalculationMethod, @Percentage, @CompanyNo,@GroupNo,@TaxTypeNo,@FKTaxSettingNo
End --CurRate while(@@Fetch_Status = 0)

close CurRate deallocate CurRate 

Return
End
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRewardDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRewardDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[RewardNo] [numeric](18, 0) NULL,
	[SchemeNo] [numeric](18, 0) NULL,
	[SchemeDetailsNo] [numeric](18, 0) NULL,
	[SchemeType] [numeric](18, 0) NULL,
	[DiscPer] [numeric](18, 2) NULL,
	[DiscAmount] [numeric](18, 2) NULL,
	[SchemeAmount] [numeric](18, 2) NULL,
	[SchemeAcheiverNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TRewardDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCashSlipDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCashSlipDetails](
	[CashSlipDetailsNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[CashSlipNo] [numeric](18, 0) NULL,
	[Note] [varchar](50) NULL,
	[RSType] [varchar](50) NULL,
	[Pieces] [numeric](18, 0) NULL,
	[Amount] [numeric](18, 2) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[Status] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TCashSlipDetails] PRIMARY KEY CLUSTERED 
(
	[CashSlipDetailsNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSchemeAssign]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSchemeAssign](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[AssignDate] [datetime] NULL,
	[SchemeNo] [numeric](18, 0) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[PromoCode] [varchar](50) NULL,
	[NoOfTimes] [int] NULL,
	[IsSchemeUsed] [int] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MSchemeAssign] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMTaxType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE [dbo].[AddMTaxType]
     @TaxTypeNo                           numeric(18),
     @TaxTypeName                         varchar(50),
     @TaxTypeShortCode                    varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @ModifiedBy                          text
AS
IF EXISTS(select TaxTypeNo from MTaxType
          where
          TaxTypeNo = @TaxTypeNo)
     BEGIN
       --Update existing row
       UPDATE MTaxType
       SET
          TaxTypeName = @TaxTypeName,
          TaxTypeShortCode = @TaxTypeShortCode,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          TaxTypeNo = @TaxTypeNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(TaxTypeNo),0) From MTaxType
       DBCC CHECKIDENT(''MTaxType'', RESEED, @Id)
       INSERT INTO MTaxType(
          --TaxTypeNo,
          TaxTypeName,
          TaxTypeShortCode,
          IsActive,
          UserID,
          UserDate
          --ModifiedBy
)
       VALUES(
          --@TaxTypeNo,
          @TaxTypeName,
          @TaxTypeShortCode,
          @IsActive,
          @UserID,
          @UserDate
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSchemeAchieverDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSchemeAchieverDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[SchemeAchSrNo] [numeric](18, 0) NULL,
	[SchemeAchDate] [datetime] NULL,
	[SchemeAchieverNo] [numeric](18, 0) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[RefNo] [numeric](18, 0) NULL,
	[TypeOfRef] [numeric](18, 0) NULL,
	[Amount] [numeric](18, 2) NULL,
	[SignCode] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MSchemeAchieverDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFirmSaleVouchEntryDayDtls]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetFirmSaleVouchEntryDayDtls]
--Declare 
@VchNo int,
@CompNo numeric(18),
@FrDate datetime,
@ToDate datetime,
@Type numeric(18),
@Temp numeric(18),
@MfgCompNo numeric(18)

AS

--Set @VchNo=15
--Set @CompNo=1
--Set @FrDate=''20-Feb-2015''
--Set  @ToDate =''26-Feb-2015''
--SET @Type=2
--Set @Temp=0
--Set @MfgCompNo=1

Declare @TVchNo numeric(18)

if(@VchNo=15)
set @TVchNo=12
else if(@VchNo=9)
set @TVchNo=13
else if(@VchNo=12 or @VchNo=13)
begin
set @TVchNo=@VchNo
set @VchNo=-1
end

Begin
if(@Type=1)
Begin


SELECT DISTINCT TVoucherEntry_2.VoucherDate AS Date,
                          (SELECT     LedgerName
                            FROM          MLedger
                            WHERE      (LedgerNo = TVoucherDetailsCompany_3.LedgerNo)) AS Party, MVoucherType.VoucherTypeName,
                          (SELECT     COUNT(*) AS Expr1
                            FROM          TVoucherDetailsCompany INNER JOIN
                                                   TVoucherEntryCompany ON TVoucherDetailsCompany.FkVoucherNo = TVoucherEntryCompany.PKVoucherCompanyNo INNER JOIN
                                                   TVoucherEntry ON TVoucherEntryCompany.FkVoucherNo = TVoucherEntry.PkVoucherNo
                            WHERE      (TVoucherEntry.IsCancel = @Temp) AND (TVoucherEntry.VoucherTypeCode IN (@VchNo)) AND (TVoucherEntryCompany.MfgCompNo = @MfgCompNo) AND
                                                    (TVoucherEntry.VoucherDate >= @FrDate) AND (TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetailsCompany.SrNo = 501)) AS VoucherNo, 
                      TVoucherEntryCompany_3.VoucherUserNo AS BillNo,
                          (SELECT     ISNULL(SUM(TVoucherDetailsCompany_2.Debit + TVoucherDetailsCompany_2.Credit), 0) AS Expr1
                            FROM          TVoucherDetailsCompany AS TVoucherDetailsCompany_2 INNER JOIN
                                                   TVoucherEntryCompany AS TVoucherEntryCompany_2 ON 
                                                   TVoucherDetailsCompany_2.FkVoucherNo = TVoucherEntryCompany_2.PKVoucherCompanyNo INNER JOIN
                                                   TVoucherEntry AS TVoucherEntry_1 ON TVoucherEntryCompany_2.FkVoucherNo = TVoucherEntry_1.PkVoucherNo
                            WHERE      (TVoucherEntry_1.IsCancel = @Temp) AND (TVoucherEntry_1.PayTypeNo = TVoucherEntry_1.PayTypeNo) AND 
                                                   (TVoucherEntry_1.PkVoucherNo = TVoucherEntry_2.PkVoucherNo) AND (TVoucherEntryCompany_2.MfgCompNo = @MfgCompNo) AND 
                                                   (TVoucherDetailsCompany_2.SrNo = 501)) AS TotalAmount, CASE WHEN (TVoucherEntry_2.MixMode = 0) THEN MPayType.ShortName ELSE ''MX'' END AS Prefix,
                       1 AS VchTypeNo
FROM         TVoucherDetailsCompany AS TVoucherDetailsCompany_3 INNER JOIN
                      TVoucherEntryCompany AS TVoucherEntryCompany_3 ON TVoucherDetailsCompany_3.FkVoucherNo = TVoucherEntryCompany_3.PKVoucherCompanyNo INNER JOIN
                      TVoucherEntry AS TVoucherEntry_2 INNER JOIN
                      MVoucherType ON TVoucherEntry_2.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
                      MPayType ON TVoucherEntry_2.PayTypeNo = MPayType.PKPayTypeNo ON TVoucherEntryCompany_3.FkVoucherNo = TVoucherEntry_2.PkVoucherNo
WHERE     (TVoucherEntry_2.VoucherTypeCode IN (@VchNo)) AND (TVoucherEntry_2.VoucherDate >= @FrDate) AND (TVoucherEntry_2.VoucherDate <= @ToDate) AND 
                      (TVoucherDetailsCompany_3.SrNo = 501)  AND (TVoucherEntryCompany_3.MfgCompNo = @MfgCompNo) AND
                          ((SELECT     ISNULL(SUM( TVoucherDetailsCompany_1.Debit +  TVoucherDetailsCompany_1.Credit), 0) AS Expr1
                              FROM         TVoucherEntryCompany AS TVoucherEntryCompany_1 INNER JOIN
                                                    TVoucherDetailsCompany AS TVoucherDetailsCompany_1 ON 
                                                    TVoucherEntryCompany_1.PKVoucherCompanyNo = TVoucherDetailsCompany_1.FkVoucherNo INNER JOIN
                                                    TVoucherEntry AS TVoucherEntry_1 ON TVoucherEntryCompany_1.FkVoucherNo = TVoucherEntry_1.PkVoucherNo
                              WHERE     (TVoucherEntry_1.IsCancel = @Temp) AND (TVoucherEntry_1.PayTypeNo = TVoucherEntry_1.PayTypeNo) AND 
                                                    (TVoucherEntry_1.PkVoucherNo = TVoucherEntry_2.PkVoucherNo) AND (TVoucherDetailsCompany_1.SrNo = 501) AND 
                                                    (TVoucherEntryCompany_1.MfgCompNo = @MfgCompNo)) <> 0)
							
				


union 

SELECT DISTINCT TVoucherEntry_2.VoucherDate AS Date,
                          (SELECT     LedgerName
                            FROM          MLedger
                            WHERE      (LedgerNo = TVoucherDetailsCompany_3.LedgerNo)) AS Party, MVoucherType.VoucherTypeName,
                          (SELECT     COUNT(*) AS Expr1
                            FROM          TVoucherDetailsCompany INNER JOIN
                                                   TVoucherEntryCompany ON TVoucherDetailsCompany.FkVoucherNo = TVoucherEntryCompany.PKVoucherCompanyNo INNER JOIN
                                                   TVoucherEntry ON TVoucherEntryCompany.FkVoucherNo = TVoucherEntry.PkVoucherNo
                            WHERE      (TVoucherEntry.VoucherTypeCode IN (@TVchNo)) AND (TVoucherEntry.VoucherDate >= @FrDate) AND (TVoucherEntry.VoucherDate <= @ToDate) AND 
                                                   (TVoucherEntry.IsCancel = @Temp) AND (TVoucherDetailsCompany.SrNo = 501) AND (TVoucherEntryCompany.MfgCompNo = @MfgCompNo)) 
                      AS VoucherNo, TVoucherEntryCompany_3.VoucherUserNo AS BillNo,
                          (SELECT     ISNULL(SUM(TVoucherDetailsCompany_2.Debit + TVoucherDetailsCompany_2.Credit), 0) AS Expr1
                            FROM          TVoucherDetailsCompany AS TVoucherDetailsCompany_2 INNER JOIN
                                                   TVoucherEntryCompany AS TVoucherEntryCompany_2 ON 
                                                   TVoucherDetailsCompany_2.FkVoucherNo = TVoucherEntryCompany_2.PKVoucherCompanyNo INNER JOIN
                                                   TVoucherEntry AS TVoucherEntry_1 ON TVoucherEntryCompany_2.FkVoucherNo = TVoucherEntry_1.PkVoucherNo
                            WHERE      (TVoucherEntry_1.IsCancel = @Temp) AND (TVoucherEntry_1.PayTypeNo = TVoucherEntry_1.PayTypeNo) AND 
                                                   (TVoucherEntry_1.PkVoucherNo = TVoucherEntry_2.PkVoucherNo) AND (TVoucherDetailsCompany_2.SrNo = 501) AND 
                                                   (TVoucherEntryCompany_2.MfgCompNo = @MfgCompNo)) * - 1 AS TotalAmount, CASE WHEN (TVoucherEntry_2.MixMode = 0) 
                      THEN MPayType.ShortName ELSE ''MX'' END AS Prefix, 2 AS VchTypeNo
FROM         TVoucherDetailsCompany AS TVoucherDetailsCompany_3 INNER JOIN
                      TVoucherEntryCompany AS TVoucherEntryCompany_3 ON TVoucherDetailsCompany_3.FkVoucherNo = TVoucherEntryCompany_3.PKVoucherCompanyNo INNER JOIN
                      TVoucherEntry AS TVoucherEntry_2 INNER JOIN
                      MVoucherType ON TVoucherEntry_2.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
                      MPayType ON TVoucherEntry_2.PayTypeNo = MPayType.PKPayTypeNo ON TVoucherEntryCompany_3.FkVoucherNo = TVoucherEntry_2.PkVoucherNo
WHERE     (TVoucherEntry_2.VoucherTypeCode IN (@TVchNo)) AND (TVoucherEntry_2.VoucherDate >= @FrDate) AND (TVoucherEntry_2.VoucherDate <= @ToDate) AND 
                      (TVoucherDetailsCompany_3.SrNo = 501) AND (TVoucherEntryCompany_3.MfgCompNo = @MfgCompNo) AND
                          ((SELECT     ISNULL(SUM(TVoucherDetailsCompany_1.Debit + TVoucherDetailsCompany_1.Credit), 0) AS Expr1
                              FROM         TVoucherEntryCompany AS TVoucherEntryCompany_1 INNER JOIN
                                                    TVoucherDetailsCompany AS TVoucherDetailsCompany_1 ON 
                                                    TVoucherEntryCompany_1.PKVoucherCompanyNo = TVoucherDetailsCompany_1.FkVoucherNo INNER JOIN
                                                    TVoucherEntry AS TVoucherEntry_1 ON TVoucherEntryCompany_1.FkVoucherNo = TVoucherEntry_1.PkVoucherNo
                              WHERE     (TVoucherEntry_1.IsCancel = @Temp) AND (TVoucherEntry_1.PayTypeNo = TVoucherEntry_1.PayTypeNo) AND 
                                                    (TVoucherEntry_1.PkVoucherNo = TVoucherEntry_2.PkVoucherNo) AND (TVoucherDetailsCompany_1.SrNo = 501) AND 
                                                    (TVoucherEntryCompany_1.MfgCompNo = @MfgCompNo)) * - 1 <> 0)
ORDER BY VchTypeNo, Date, BillNo





End

if(@Type=2)

Begin
				SELECT     TVoucherEntry.VoucherDate AS Date, '''' AS Party, MVoucherType.VoucherTypeName, 0 AS VoucherNo, COUNT(TVoucherEntry.VoucherDate) AS TotalBills, 
									  SUM(TVoucherDetailsCompany.Debit + TVoucherDetailsCompany.Credit) AS TotalAmount, '''' AS Prefix, 1 AS VchTypeNo
				FROM         TVoucherEntry INNER JOIN
									  MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
									  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo INNER JOIN
									  TVoucherDetailsCompany ON TVoucherEntryCompany.PKVoucherCompanyNo = TVoucherDetailsCompany.FkVoucherNo
				WHERE     (TVoucherEntry.VoucherTypeCode IN (@VchNo)) AND (TVoucherEntry.VoucherDate >= @FrDate) AND (TVoucherEntry.VoucherDate <= @ToDate) AND 
									  (TVoucherEntry.IsCancel = @Temp) AND (TVoucherEntryCompany.MfgCompNo = @MfgCompNo) AND (TVoucherDetailsCompany.SrNo = 501) AND 
									  (TVoucherDetailsCompany.Debit + TVoucherDetailsCompany.Credit <> 0)
				GROUP BY TVoucherEntry.VoucherDate, MVoucherType.VoucherTypeName


union 

		SELECT     TVoucherEntry.VoucherDate AS Date, '''' AS Party, MVoucherType.VoucherTypeName, 0 AS VoucherNo, COUNT(TVoucherEntry.VoucherDate) AS TotalBills, 
							  SUM(TVoucherDetailsCompany.Debit + TVoucherDetailsCompany.Credit) * - 1 AS TotalAmount, '''' AS Prefix, 2 AS VchTypeNo
		FROM         TVoucherEntry INNER JOIN
							  MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
							  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo INNER JOIN
							  TVoucherDetailsCompany ON TVoucherEntryCompany.PKVoucherCompanyNo = TVoucherDetailsCompany.FkVoucherNo
		WHERE     (TVoucherEntry.VoucherTypeCode IN (@TVchNo)) AND (TVoucherEntry.VoucherDate >= @FrDate) AND (TVoucherEntry.VoucherDate <= @ToDate) AND 
							  (TVoucherEntry.IsCancel = @Temp) AND (TVoucherEntryCompany.MfgCompNo = @MfgCompNo) AND (TVoucherDetailsCompany.SrNo = 501) AND 
							  (TVoucherDetailsCompany.Debit + TVoucherDetailsCompany.Credit <> 0)
		GROUP BY TVoucherEntry.VoucherDate, MVoucherType.VoucherTypeName


ORDER BY VchTypeNo,Date
end

if(@Type=3)

Begin

			SELECT     MIN(TVoucherEntry.VoucherDate) AS Date, DATENAME(month, DATEADD(month, MONTH(TVoucherEntry.VoucherDate), 0) - 1) 
								  + '' -- '' + CAST(YEAR(TVoucherEntry.VoucherDate) % 100 AS varchar) AS Party, MVoucherType.VoucherTypeName, 0 AS VoucherNo, COUNT(TVoucherEntry.VoucherDate) 
								  AS TotalBills, SUM(TVoucherDetailsCompany.Debit + TVoucherDetailsCompany.Credit) AS TotalAmount, '''' AS Prefix, 1 AS VchTypeNo
			FROM         TVoucherEntry INNER JOIN
								  MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
								  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo INNER JOIN
								  TVoucherDetailsCompany ON TVoucherEntryCompany.PKVoucherCompanyNo = TVoucherDetailsCompany.FkVoucherNo
			WHERE     (TVoucherEntry.VoucherTypeCode IN (@VchNo)) AND (TVoucherEntry.VoucherDate >= @FrDate) AND (TVoucherEntry.VoucherDate <= @ToDate) AND 
								  (TVoucherEntry.IsCancel = @Temp) AND (TVoucherEntryCompany.MfgCompNo = @MfgCompNo) AND (TVoucherDetailsCompany.SrNo = 501) AND 
								  (TVoucherDetailsCompany.Debit + TVoucherDetailsCompany.Credit <> 0)
			GROUP BY YEAR(TVoucherEntry.VoucherDate), MONTH(TVoucherEntry.VoucherDate), MVoucherType.VoucherTypeName

union 

SELECT     MIN(TVoucherEntry.VoucherDate) AS Date, DATENAME(month, DATEADD(month, MONTH(TVoucherEntry.VoucherDate), 0) - 1) 
                      + '' -- '' + CAST(YEAR(TVoucherEntry.VoucherDate) % 100 AS varchar) AS Party, MVoucherType.VoucherTypeName, 0 AS VoucherNo, COUNT(TVoucherEntry.VoucherDate) 
                      AS TotalBills, SUM(TVoucherDetailsCompany.Debit + TVoucherDetailsCompany.Credit) * - 1 AS TotalAmount, '''' AS Prefix, 2 AS VchTypeNo
FROM         TVoucherEntry INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
                      TVoucherDetails AS TVoucherDetailsCompany ON TVoucherEntry.PkVoucherNo = TVoucherDetailsCompany.FkVoucherNo INNER JOIN
                      TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo
WHERE     (TVoucherEntry.VoucherTypeCode IN (@TVchNo)) AND (TVoucherEntry.VoucherDate >= @FrDate) AND (TVoucherEntry.VoucherDate <= @ToDate) AND 
                      (TVoucherEntry.IsCancel = @Temp) AND (TVoucherEntryCompany.MfgCompNo = @MfgCompNo) AND (TVoucherDetailsCompany.SrNo = 501) AND 
                      (TVoucherDetailsCompany.Debit + TVoucherDetailsCompany.Credit <> 0)
GROUP BY YEAR(TVoucherEntry.VoucherDate), MONTH(TVoucherEntry.VoucherDate), MVoucherType.VoucherTypeName

ORDER BY VchTypeNo, Date
end

if(@Type=4)

Begin

			SELECT     ''01-01-1900'' AS Date, ''Quarter-'' + CAST(DATEPART(q, MIN(TVoucherEntry.VoucherDate)) AS varchar) AS Party, MVoucherType.VoucherTypeName, 0 AS VoucherNo, 
								  COUNT(TVoucherEntryCompany.VoucherUserNo) AS TotalBills, SUM(TVoucherDetails_1.Debit + TVoucherDetails_1.Credit) AS TotalAmount, '''' AS Prefix, 
								  1 AS VchTypeNo
			FROM         TVoucherEntry INNER JOIN
								  MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
								  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo INNER JOIN
								  TVoucherDetailsCompany AS TVoucherDetails_1 ON TVoucherEntryCompany.PKVoucherCompanyNo = TVoucherDetails_1.FkVoucherNo
			WHERE     (TVoucherEntry.VoucherTypeCode IN (@VchNo)) AND (TVoucherEntry.VoucherDate >= @FrDate) AND (TVoucherEntry.VoucherDate <= @ToDate) AND 
								  (TVoucherEntry.IsCancel = @Temp) AND (TVoucherEntryCompany.MfgCompNo = @MfgCompNo) AND (TVoucherDetails_1.SrNo = 501) AND 
								  (TVoucherDetails_1.Debit + TVoucherDetails_1.Credit <> 0)
			GROUP BY YEAR(TVoucherEntry.VoucherDate), DATEPART(q, TVoucherEntry.VoucherDate), MVoucherType.VoucherTypeName
union 

		SELECT     ''01-01-1900'' AS Date, ''Quarter-'' + CAST(DATEPART(q, MIN(TVoucherEntry.VoucherDate)) AS varchar) AS Party, MVoucherType.VoucherTypeName, 0 AS VoucherNo, 
							  COUNT(TVoucherEntry.VoucherDate) AS TotalBills, SUM(TVoucherDetails_1.Debit + TVoucherDetails_1.Credit) * - 1 AS TotalAmount, '''' AS Prefix, 2 AS VchTypeNo
		FROM         TVoucherEntry INNER JOIN
							  MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
							  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo INNER JOIN
							  TVoucherDetailsCompany AS TVoucherDetails_1 ON TVoucherEntryCompany.PKVoucherCompanyNo = TVoucherDetails_1.FkVoucherNo
		WHERE     (TVoucherEntry.VoucherTypeCode IN (@TVchNo)) AND (TVoucherEntry.VoucherDate >= @FrDate) AND (TVoucherEntry.VoucherDate <= @ToDate) AND 
							  (TVoucherEntry.IsCancel = @Temp) AND (TVoucherEntryCompany.MfgCompNo = @MfgCompNo) AND (TVoucherDetails_1.SrNo = 501) AND 
							  (TVoucherDetails_1.Debit + TVoucherDetails_1.Credit <> 0)
		GROUP BY YEAR(TVoucherEntry.VoucherDate), DATEPART(q, TVoucherEntry.VoucherDate), MVoucherType.VoucherTypeName
order by VchTypeNo, Date, Party
end


End
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMFirm]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
create PROCEDURE  [dbo].[DeleteMFirm] 
@FirmNo                          numeric(18)


AS
Update MFirm set IsActive=''False'',StatusNo=2 where FirmNo = @FirmNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMTaxType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE  [dbo].[DeleteMTaxType] 
@TaxTypeNo                          numeric(18)


AS
Update MTaxType set IsActive=''False'',StatusNo=2 Where TaxTypeNo = @TaxTypeNo

--       DELETE FROM MTaxType
--       WHERE
--          TaxTypeNo = @TaxTypeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLanguageDictionary]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLanguageDictionary](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[EnglishVal] [varchar](50) NULL,
	[MarathiVal] [nvarchar](50) NULL,
	[HindiVal] [nvarchar](50) NULL,
	[KarnatakaVal] [nvarchar](50) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MLanguageDictionary] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateServerLedgerNo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE  [dbo].[UpdateServerLedgerNo] 
@LedgerNo                             numeric(18),
@StatusNo                             numeric(18),
@VersionNo                             numeric(18),
@ServerLedgerNo                       numeric(18)


AS

Update MLedger set StatusNo=@StatusNo,ServerLedgerNo=@ServerLedgerNo,VersionNo=@VersionNo where LedgerNo = @LedgerNo
--
--       DELETE FROM MCity
--       WHERE
--          CityNo = @CityNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGlobalItemRateAll]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'Create Function [dbo].[GetGlobalItemRateAll]
(
@PItemNo		           numeric(18),
@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18),FkBcdSrNo numeric(18) ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit)
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18),FkBcdSrNo numeric(18) ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18),PerOfRateVariation numeric(18, 2),IsActive bit)

--Declare @TRate TABLE (PkSrNo numeric(18),FkBcdSrNo numeric(18) ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),
--SaleRate numeric(18, 2),UOMNo numeric(18),QuantitySlabFrom numeric(18, 2),QuantitySlabTo numeric(18, 2), 
--GodownNo numeric(18), StockConversion numeric(18),PerOfRateVariation numeric(18, 2))
 
Declare @PkSrNo numeric(18) , @FkBcdSrNo numeric(18) , @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0 Set @FkBcdSrNo = 0 set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00

if(@PGroupNo is Null)
Declare CurRate Cursor For Select PkSrNo ,FkBcdSrNo,ItemNo,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive  From MGlobalRateSetting 
				 where IsActive=''true'' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND  FkBcdSrNo=Case When @PBarCodeNo is null then FkBcdSrNo else @PBarCodeNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,FkBcdSrNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MGlobalRateSetting.PkSrNo ,MGlobalRateSetting.FkBcdSrNo,MGlobalRateSetting.ItemNo,MGlobalRateSetting.FromDate ,MGlobalRateSetting.PurRate,MGlobalRateSetting.MRP,MGlobalRateSetting.ASaleRate,MGlobalRateSetting.BSaleRate,MGlobalRateSetting.CSaleRate,MGlobalRateSetting.DSaleRate,MGlobalRateSetting.ESaleRate ,
				 MGlobalRateSetting.UOMNo , MGlobalRateSetting.StockConversion ,
				 MGlobalRateSetting.PerOfRateVariation,MGlobalRateSetting.MKTQty,MGlobalRateSetting.IsActive  From MGlobalRateSetting INNER JOIN 
				 MGlobalStockItems ON MGlobalRateSetting.ItemNo=MGlobalStockItems.ItemNo
				 where MGlobalRateSetting.IsActive=''true'' AND  MGlobalRateSetting.ItemNo=Case When @PItemNo is null then MGlobalRateSetting.ItemNo else @PItemNo end 
				AND  MGlobalRateSetting.FkBcdSrNo=Case When @PBarCodeNo is null then MGlobalRateSetting.FkBcdSrNo else @PBarCodeNo end 
				AND MGlobalRateSetting.UOMNo=Case When @PUOMNo is null then MGlobalRateSetting.UOMNo else @PUOMNo end 
				AND MGlobalRateSetting.MRP=Case When @PMRP is null then MGlobalRateSetting.MRP else @PMRP end
				AND MGlobalStockItems.GroupNo=@PGroupNo
				 Order by MGlobalRateSetting.ItemNo,MGlobalRateSetting.FkBcdSrNo,MGlobalRateSetting.UOMNo,MGlobalRateSetting.MRP,MGlobalRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@FkBcdSrNo,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End --if(isNUll(@PItemNo))

		if(@PBarCodeNo is not NUll AND @PBarCodeNo != @FkBcdSrNo)
		Begin
			 SET @isRecOK = 0
		End --if(isNUll(@PBarCodeNo))

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End --if(isNUll(@PUOMNo))

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End --if(isNUll(@PMRP))
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End --if(isNUll(@POnDate))
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo  or @VBarCodeNo !=@FkBcdSrNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VBarCodeNo =@FkBcdSrNo 
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo ,@FkBcdSrNo,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive)
	End --if(@VItemNo != @ItemNo  or @VBarCode
	
	Fetch CurRate into @PkSrNo ,@FkBcdSrNo,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive
End --CurRate while(@@Fetch_Status = 0)

close CurRate deallocate CurRate 

--Select PkSrNo as ''PrSrNo'',FkBcdSrNo as ''BarcodeNo'',ItemNo as ''ItemNo'',FromDate as ''FrmDate'',PurRate as ''PurRate'',
--	   SaleRate as ''SaleRate'' , UOMNo as ''UOMNo'',QuantitySlabFrom  as ''QtyFrom'' ,QuantitySlabTo as ''QtyTo'', 
--	   GodownNo as ''GodownNo'', StockConversion as ''StockConversion'', PerOfRateVariation as ''PerOfRateVariation''
--From @TRate 
Return
End

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSuppCategory]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSuppCategory](
	[CategoryNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[CategoryName] [varchar](100) NULL,
	[CategoryDesc] [varchar](150) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MSuppCategory] PRIMARY KEY CLUSTERED 
(
	[CategoryNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MFirm]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MFirm](
	[FirmNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FirmLangName] [nvarchar](max) NULL,
	[FirmName] [nvarchar](250) NULL,
	[ShortName] [varchar](50) NULL,
	[Address] [nvarchar](max) NULL,
	[CityNo] [numeric](18, 0) NULL,
	[StateCode] [numeric](18, 0) NULL,
	[StateNo] [numeric](18, 0) NULL,
	[PinCode] [varchar](50) NULL,
	[PhoneNo1] [varchar](100) NULL,
	[PhoneNo2] [varchar](100) NULL,
	[MobileNo1] [varchar](50) NULL,
	[MobileNo2] [varchar](50) NULL,
	[EmailID] [nvarchar](max) NULL,
	[GSTNO] [varchar](50) NULL,
	[GSTDate] [datetime] NULL,
	[FSSAINO] [varchar](50) NULL,
	[FSSAIDate] [datetime] NULL,
	[PANCardNo] [varchar](50) NULL,
	[AdharCardNo] [varchar](50) NULL,
	[AnyotherNo1] [varchar](50) NULL,
	[AnyotherNo2] [varchar](50) NULL,
	[PrinterName] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[RegistrationNo] [numeric](18, 0) NULL,
	[FinancialYear] [datetime] NULL,
	[BooksBeginFrom] [datetime] NULL,
	[BooksEndOn] [datetime] NULL,
	[TinNo] [varchar](100) NULL,
	[NoOfDecimalPlaces] [int] NULL,
	[ModifiedBy] [varchar](500) NULL,
	[Narr_Head] [varchar](500) NULL,
	[Narr_Foot] [varchar](500) NULL,
	[Narr_Terms] [varchar](500) NULL,
	[CompanyType] [int] NULL,
	[StatusNo] [int] NULL,
	[IsType] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[TermAndCondition] [nvarchar](max) NULL,
	[EmailPass] [varchar](50) NULL,
 CONSTRAINT [PK_MFirm] PRIMARY KEY CLUSTERED 
(
	[FirmNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTPurchaseSetting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 26/12/2011
CREATE PROCEDURE [dbo].[AddTPurchaseSetting]
     @PkPurchaseSetting                      numeric(18),
     @PartyAccNo                          numeric(18),
     @TaxTypeNo                           numeric(18),
     @TransporterNo                           numeric(18),
     @Discount1No                         numeric(18),
     @Discount2No                         numeric(18),
	 @Discount3No                         numeric(18),
	 @Discount4No                         numeric(18),
     @Charges1No                          numeric(18),
     @Charges2No                          numeric(18),
	 @Charges3No                          numeric(18),
	 @Charges4No                          numeric(18),
     @RoundOfAccNo                        numeric(18),
	 @PurchaseAcc						  numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
     --@ModifiedBy                          varchar(50)
AS
IF EXISTS(select PkPurchaseSetting from TPurchaseSetting
          where
          PkPurchaseSetting = @PkPurchaseSetting)
     BEGIN
       --Update existing row
       UPDATE TPurchaseSetting
       SET
          PartyAccNo = @PartyAccNo,
          TaxTypeNo = @TaxTypeNo,
          TransporterNo = @TransporterNo,
          Discount1No = @Discount1No,
          Discount2No = @Discount2No,
		  Discount3No = @Discount3No,
          Discount4No = @Discount4No,
          Charges1No = @Charges1No,
          Charges2No = @Charges2No,
		  Charges3No = @Charges3No,
		  Charges4No = @Charges4No,
          RoundOfAccNo = @RoundOfAccNo,
		  PurchaseAcc = @PurchaseAcc,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          PkPurchaseSetting = @PkPurchaseSetting

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkPurchaseSetting),0) From TPurchaseSetting
       DBCC CHECKIDENT(''TSalesSetting'', RESEED, @Id)
       INSERT INTO TPurchaseSetting(
          PartyAccNo,
          TaxTypeNo,
          TransporterNo,
          Discount1No,
          Discount2No,
		  Discount3No,
          Discount4No,
          Charges1No,
          Charges2No,
          Charges3No,
          Charges4No,
          RoundOfAccNo,
		  PurchaseAcc,
          UserID,
          UserDate
          --ModifiedBy
)
       VALUES(
          @PartyAccNo,
          @TaxTypeNo,
          @TransporterNo,
          @Discount1No,
          @Discount2No,
          @Discount3No,
          @Discount4No,
          @Charges1No,
          @Charges2No,
          @Charges3No,
          @Charges4No,
          @RoundOfAccNo,
		  @PurchaseAcc,
          @UserID,
          @UserDate
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MStockCountType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MStockCountType](
	[CountTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[CountTypeName] [varchar](500) NULL,
	[DefaultValue] [datetime] NULL,
	[IsActive] [bit] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[UserID] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MStockCountType] PRIMARY KEY CLUSTERED 
(
	[CountTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLedger]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddMLedger]
     @LedgerNo                            numeric(18),
     @LedgerUserNo                        varchar(100),
     @LedgerName                          varchar(250),
     @GroupNo                             numeric(18),
	 @OpeningBalance					  numeric(18,2),
	 @SignCode							  numeric(18),
     @InvFlag                             bit,
     @MaintainBillByBill                  bit,
	 @IsActive                            bit,
     @ContactPerson                       varchar(100),
     @CompanyNo                           numeric(18),
	 @LedgerStatus						  int,
     @IsEnroll                            bit,
     @IsSendSMS                           bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @LedgerLangName					  nvarchar(500),
	 @TransporterNo						  numeric(18),
	 @IsHistoryMaintain					  bit,
     @StateCode							numeric(18),
     @ReturnID							  int output
AS
IF EXISTS(select LedgerNo from MLedger
          where
          LedgerNo = @LedgerNo)
     BEGIN
       --Update existing row
       UPDATE MLedger
       SET
          LedgerUserNo = @LedgerUserNo,
          LedgerName = @LedgerName,
          GroupNo = @GroupNo,
		  OpeningBalance=@OpeningBalance,
		  SignCode=@SignCode,
          InvFlag = @InvFlag,
          MaintainBillByBill = @MaintainBillByBill,
	      IsActive=@IsActive,
          ContactPerson = @ContactPerson,
          CompanyNo = @CompanyNo,
		  LedgerStatus = @LedgerStatus,
          IsEnroll = @IsEnroll,
          IsSendSMS = @IsSendSMS,
          UserID = @UserID,
          UserDate = @UserDate,
		  LedgerLangName=@LedgerLangName,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
		  TransporterNo=@TransporterNo,
		  IsHistoryMaintain = @IsHistoryMaintain,
          StateCode=@StateCode,
          StatusNo=2
       WHERE
          LedgerNo = @LedgerNo
		
		  set @ReturnID=@LedgerNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(LedgerNo),0) From MLedger
       DBCC CHECKIDENT(''MLedger'', RESEED, @Id)
	  --For Max Ledger User No 
	  Select @LedgerUserNo=IsNull(Max(Cast(LedgerUserNo as numeric)),0)+1 from MLedger Where GroupNo=@GroupNo

       INSERT INTO MLedger(
          LedgerUserNo,
          LedgerName,
          GroupNo,
		  OpeningBalance,
		  SignCode,
          InvFlag,
          MaintainBillByBill,
		  IsActive,
          ContactPerson,
          CompanyNo,
		  LedgerStatus,
          IsEnroll,
          IsSendSMS,
          UserID,
          UserDate,
          StatusNo,
		  VersionNo,
		  LedgerLangName,
	      TransporterNo,
		  IsHistoryMaintain,
			StateCode
         
)
       VALUES(
          @LedgerUserNo,
          @LedgerName,
          @GroupNo,
	      @OpeningBalance,
		  @SignCode,
          @InvFlag,
          @MaintainBillByBill,
		  @IsActive,
          @ContactPerson,
          @CompanyNo,
		  @LedgerStatus,
          @IsEnroll,
          @IsSendSMS,
          @UserID,
          @UserDate,
          1,
		  0,
		  @LedgerLangName,
		  @TransporterNo,
		  @IsHistoryMaintain,
			@StateCode
)
set @ReturnID=Scope_Identity()

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMTransporter]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 03/12/2011
CREATE PROCEDURE  [dbo].[DeleteMTransporter] 
@TransporterNo                      numeric(18)


AS
		Update MTransporter set IsActive=''False'',StatusNo=2 Where TransporterNo = @TransporterNo
       /*DELETE FROM MTransporter
       WHERE
          TransporterNo = @TransporterNo*/
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TChequePrinting]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TChequePrinting](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[PrintingUserNo] [numeric](18, 0) NULL,
	[PrintingDate] [datetime] NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
	[IsPurchase] [bit] NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[ByLedgerNo] [numeric](18, 0) NULL,
	[ChequeDate] [datetime] NULL,
	[ChequeNo] [varchar](50) NULL,
	[FKChequeNo] [numeric](18, 0) NULL,
	[Remark1] [varchar](150) NULL,
	[Remark2] [varchar](150) NULL,
	[Remark3] [varchar](150) NULL,
	[ChqStatusNo] [numeric](18, 0) NULL,
	[BankDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TChequePrinting] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MRateType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MRateType](
	[RateTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[RateType] [varchar](50) NULL,
	[ActualName] [varchar](50) NULL,
	[RateTypeShortCode] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_MRateType] PRIMARY KEY CLUSTERED 
(
	[RateTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLogin]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLogin](
	[LoginNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[UserID] [numeric](18, 0) NOT NULL,
	[LoginTime] [datetime] NULL,
	[LogoutTime] [datetime] NULL,
 CONSTRAINT [PK_MLogin] PRIMARY KEY CLUSTERED 
(
	[LoginNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMTransporter]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 31/01/2012
CREATE PROCEDURE [dbo].[AddMTransporter]
     @TransporterNo                       numeric(18),
     @TransporterName                     varchar(50),
     @TransportershortName                varchar(50),
     @ContactNo                           varchar(50),
     @ContactPerson                       varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select TransporterNo from MTransporter
          where
          TransporterNo = @TransporterNo)
     BEGIN
       --Update existing row
       UPDATE MTransporter
       SET
          TransporterName = @TransporterName,
          TransportershortName = @TransportershortName,
          ContactNo = @ContactNo,
          ContactPerson = @ContactPerson,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          TransporterNo = @TransporterNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(TransporterNo),0) From MTransporter
       DBCC CHECKIDENT(''MTransporter'', RESEED, @Id)
       INSERT INTO MTransporter(
          TransporterName,
          TransportershortName,
          ContactNo,
          ContactPerson,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          @TransporterName,
          @TransportershortName,
          @ContactNo,
          @ContactPerson,
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTPurchaseSetting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 26/12/2011
CREATE PROCEDURE  [dbo].[DeleteTPurchaseSetting] 
@PkPurchaseSetting                     numeric(18)


AS

       DELETE FROM TPurchaseSetting
       WHERE
          PkPurchaseSetting = @PkPurchaseSetting
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMLedger]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE  [dbo].[DeleteMLedger] 
@LedgerNo                           numeric(18)


AS

--IF Not Exists (Select LedgerNo From TVoucherDetails Where LedgerNo=@LedgerNo)

Update MLedger set IsActive=''False'',StatusNo=2 where LedgerNo = @LedgerNo
--       DELETE FROM MLedger
--       WHERE
--          LedgerNo = @LedgerNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCashBookDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetCashBookDetails]
@VchNo varchar(max),
@CompNo numeric(18),
@FromDate datetime,
@ToDate datetime,
@Type numeric(18)


AS
declare @sql varchar(max)
--if(@Type=1)

set @sql =''select * from (
SELECT    0 as vtype, 0 AS VoucherNo,TVoucherDetails.LedgerNo, 
sum (TVoucherDetails.Debit - Credit) as Debit ,0 as Credit , 0 as CompanyNo,'''''''' as Narration, '''''''' as Remark, 0 AS ChequeNo, 
0 as VoucherTypeCode,  case when ((select groupno from MLedger where ledgerno=TVoucherDetails.ledgerno )=28) then  MLedger.LedgerName else '''''''' end  AS BankName,
   '''''''' AS PartyBank, '''''''' AS PartyBranch, '''''''' AS ChequeDate,0 as ToChequeNo,'''''''' as Reference,'''''''' as VoucherDate, ''''Op.Bal'''' as Drname


FROM         TVoucherDetails INNER JOIN   TVoucherEntry ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo 
AND TVoucherDetails.FkVoucherNo IN
                          (SELECT     TVoucherDetails.FkVoucherNo
                            FROM          TVoucherDetails INNER JOIN
                                                   MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                                                   MGroup ON MLedger.GroupNo = MGroup.GroupNo
                            WHERE      (MGroup.GroupNo = 27)) inner join   MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN MGroup ON MLedger.GroupNo = MGroup.GroupNo   
 where TVoucherEntry.VoucherDate <''''''+cast(@FromDate as varchar)+'''''' and MGroup.GroupNo = 27 group by TVoucherDetails.LedgerNo,MLedger.LedgerName

union all 

SELECT    1 as vtype, TVoucherEntry.VoucherUserNo AS VoucherNo, TVoucherDetails.LedgerNo, 
TVoucherDetails.Debit, TVoucherDetails.Credit, TVoucherDetails.CompanyNo, TVoucherDetails.Narration, TVoucherEntry.Remark,TVoucherEntry.ChequeNo AS ChequeNo, 
 TVoucherEntry.VoucherTypeCode, case when ((select groupno from MLedger where ledgerno=TVoucherDetails.ledgerno ) =28)then  MLedger.LedgerName else '''''''' end  AS BankName,   '''''''' AS PartyBank, '''''''' AS PartyBranch, '''''''' AS ChequeDate,0 as ToChequeNo,
TVoucherEntry.Reference,TVoucherEntry.VoucherDate,
case when TVoucherDetails.Debit!=0 then MLedger.LedgerName else MLedger_1.LedgerName end  as Drname 
FROM         TVoucherDetails INNER JOIN
                      TVoucherEntry ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo AND TVoucherDetails.FkVoucherNo IN
                          (SELECT     TVoucherDetails.FkVoucherNo
                            FROM          TVoucherDetails INNER JOIN
                                                   MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                                                   MGroup ON MLedger.GroupNo = MGroup.GroupNo
                            WHERE      (MGroup.GroupNo = 27)) INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN MGroup ON MLedger.GroupNo = MGroup.GroupNo inner join 
                      MLedger AS MLedger_1 ON TVoucherDetails.LedgerNo = MLedger_1.LedgerNo
and (TVoucherEntry.VoucherDate >= ''''''+cast(@FromDate as varchar)+'''''') AND (TVoucherEntry.VoucherDate <=''''''+cast(@ToDate as varchar)+'''''') and   MGroup.GroupNo != 27 and 
(TVoucherEntry.VoucherTypeCode in (''+cast(@VchNo as varchar)+''))) as tbl1 order by vtype,VoucherDate''






--select * from (
--SELECT    0 as vtype, 0 AS VoucherNo, TVoucherDetails.LedgerNo, 
--sum (TVoucherDetails.Debit - Credit) as Debit ,0 as Credit , 0 as CompanyNo,'''' as Narration, '''' as Remark, 0 AS ChequeNo, 
--0 as VoucherTypeCode,  case when ((select groupno from MLedger where ledgerno=TVoucherDetails.ledgerno ) =28)then  MLedger.LedgerName else '''''''' end  AS BankName,   '''''''' AS PartyBank, '''''''' AS PartyBranch, '''''''' AS ChequeDate,0 as ToChequeNo,'''' as Reference,'''' as VoucherDate, '''' as Drname
--
--
--FROM         TVoucherDetails INNER JOIN   TVoucherEntry ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo 
--AND TVoucherDetails.FkVoucherNo IN
--                          (SELECT     TVoucherDetails.FkVoucherNo
--                            FROM          TVoucherDetails INNER JOIN
--                                                   MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
--                                                   MGroup ON MLedger.GroupNo = MGroup.GroupNo
--                            WHERE      (MGroup.GroupNo = 27)) inner join   MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN MGroup ON MLedger.GroupNo = MGroup.GroupNo   
-- where TVoucherEntry.VoucherDate <=''''+cast(@FromDate as varchar)+'''' and MGroup.GroupNo = 27 group by TVoucherDetails.LedgerNo,MLedger.LedgerName
--
--union all 
--
--SELECT    1 as vtype, TVoucherEntry.VoucherUserNo AS VoucherNo, TVoucherDetails.LedgerNo, 
--TVoucherDetails.Debit, TVoucherDetails.Credit, TVoucherDetails.CompanyNo, TVoucherDetails.Narration, TVoucherEntry.Remark,TVoucherEntry.ChequeNo AS ChequeNo, 
-- TVoucherEntry.VoucherTypeCode, case when ((select groupno from MLedger where ledgerno=TVoucherDetails.ledgerno ) =28)then  MLedger.LedgerName else '''''''' end  AS BankName,   '''''''' AS PartyBank, '''''''' AS PartyBranch, '''''''' AS ChequeDate,0 as ToChequeNo,
--TVoucherEntry.Reference,TVoucherEntry.VoucherDate,
--case when TVoucherDetails.Debit!=0 then MLedger.LedgerName else MLedger_1.LedgerName end  as Drname 
--
--FROM         TVoucherDetails INNER JOIN
--                      TVoucherEntry ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo AND TVoucherDetails.FkVoucherNo IN
--                          (SELECT     TVoucherDetails.FkVoucherNo
--                            FROM          TVoucherDetails INNER JOIN
--                                                   MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
--                                                   MGroup ON MLedger.GroupNo = MGroup.GroupNo
--                            WHERE      (MGroup.GroupNo = 27)) INNER JOIN
--                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN MGroup ON MLedger.GroupNo = MGroup.GroupNo inner join 
--                      MLedger AS MLedger_1 ON TVoucherDetails.LedgerNo = MLedger_1.LedgerNo
--and (TVoucherEntry.VoucherDate >= ''''+cast(@FromDate as varchar)+'''') AND 
--(TVoucherEntry.VoucherDate <=''''+cast(@ToDate as varchar)+'''')  and   MGroup.GroupNo != 27 and 
--(TVoucherEntry.VoucherTypeCode in (''''+cast(@VchNo as varchar)+''''))) as tbl1 order by vtype,VoucherDate



--''SELECT 0 AS SRNO, TVoucherEntry.VoucherDate as Date, TVoucherEntry.VoucherUserNo AS VoucherNo, MLedger.LedgerName AS FromAccount,MLedger_1.LedgerName AS ToAccount, 
--TVoucherDetails.Debit AS Amount,  TVoucherEntry.Remark, TVoucherEntry.Narration, TVoucherEntry.ChequeNo AS ChequeNo, 
-- TVoucherEntry.VoucherTypeCode,  case when ((select groupno from MLedger where ledgerno=TVoucherDetails.ledgerno ) =28)then  MLedger.LedgerName else '''''''' end  AS BankName,   '''''''' AS PartyBank, '''''''' AS PartyBranch, '''''''' AS ChequeDate,0 as ToChequeNo,TVoucherEntry.Reference
-- FROM   TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo 
--AND TVoucherDetails.SrNo = 501  INNER JOIN  TVoucherDetails as TVoucherDetails_2  ON TVoucherEntry.PkVoucherNo = TVoucherDetails_2.FkVoucherNo AND TVoucherDetails_2.vouchersrno =2 
-- INNER JOIN   MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN  MLedger AS MLedger_1 ON TVoucherDetails_2.LedgerNo = MLedger_1.LedgerNo 
--WHERE   (TVoucherEntry.VoucherDate >= ''''''+cast(@FromDate as varchar)+'''''') AND 
--			(TVoucherEntry.VoucherDate <=''''''+cast(@ToDate as varchar)+'''''') and 
-- (TVoucherEntry.VoucherTypeCode in (''+cast(@VchNo as varchar)+''))
-- order by TVoucherEntry.VoucherDate ,TVoucherEntry.VoucherTypeCode''

exec(@sql)




' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MNarration]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MNarration](
	[NarrationNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[NarrationName] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
 CONSTRAINT [PK_MNarration] PRIMARY KEY CLUSTERED 
(
	[NarrationNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MFooterDiscount]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MFooterDiscount](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FooterDiscUserNo] [numeric](18, 0) NULL,
	[FooterDiscDate] [datetime] NULL,
	[PeriodFrom] [datetime] NULL,
	[PeriodTo] [datetime] NULL,
	[DiscType] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[IsActive] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MFooterDiscount] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VatTaxDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'-- =============================================
-- Author:		<Author,,Name>
-- Alter date: <Alter Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[VatTaxDetails]
	-- Add the parameters for the stored procedure here
	@VType int,
	@CompNo int,
	@FromDate datetime,
	@ToDate datetime
AS
BEGIN
	
SELECT     TStock.TaxPercentage as [Vat %], SUM(TStock.Amount) AS Amount, SUM(TStock.TaxAmount) AS TaxAmt
FROM        TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                      TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo
WHERE     (TVoucherEntry.VoucherTypeCode = @VType) and TVoucherEntry.VoucherDate >= @FromDate
and TVoucherEntry.VoucherDate <= @ToDate AND (TVoucherEntry.CompanyNo = @CompNo)
GROUP BY TStock.TaxPercentage , TVoucherEntry.VoucherTypeCode --, TVoucherEntry.VoucherDate
ORDER BY TStock.TaxPercentage

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fn_Split]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'create  FUNCTION [dbo].[fn_Split](@text varchar(8000), @delimiter varchar(20) = '' '')
RETURNS @Strings TABLE
(   
  position int IDENTITY PRIMARY KEY,
  value varchar(8000)  
)
AS
BEGIN

DECLARE @index int
SET @index = -1

WHILE (LEN(@text) > 0)
  BEGIN 
    SET @index = CHARINDEX(@delimiter , @text) 
    IF (@index = 0) AND (LEN(@text) > 0) 
      BEGIN  
        INSERT INTO @Strings VALUES (@text)
          BREAK 
      END 
    IF (@index > 1) 
      BEGIN  
        INSERT INTO @Strings VALUES (LEFT(@text, @index - 1))  
        SET @text = RIGHT(@text, (LEN(@text) - @index)) 
      END 
    ELSE
      SET @text = RIGHT(@text, (LEN(@text) - @index))
    END
  RETURN
END' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TOtherStockDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TOtherStockDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
	[FKStockTrnNo] [numeric](18, 0) NULL,
	[FKOtherVoucherNo] [numeric](18, 0) NULL,
	[FKOtherStockTrnNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[Quantity] [numeric](18, 2) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_TOtherStockDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ViewCounterwiseReport]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[ViewCounterwiseReport]
@FromDate	datetime,
@ToDate		datetime

AS

Begin
Declare @TDaily Table(SrNo int,CounterName varchar(50),CashAmt numeric(18,2),CreditAmt numeric(18,2),
				CreditNote numeric(18,2),TotalAmt numeric(18,2),NoOfBill int)
Declare @SrNo int,@CounterName varchar(50),@CashAmt numeric(18,2),@CreditAmt numeric(18,2),
		@CreditNote numeric(18,2),@TotalAmt numeric(18,2),@NoOfBill int,@TempCounterName varchar(50),@VchNo numeric(18),
		@Amt numeric(18,2),@Cnt int,@Reference varchar(30),@CntrName varchar(50)
set @SrNo=1 set @TempCounterName='''' set @Cnt=0 

Declare Cur Cursor For 
	select TVoucherEntry.PKVoucherNo,TVoucherEntry.MacNo,TVoucherDetails.Debit
	from TVoucherEntry
	inner join TVoucherDetails
	on TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo
	where TVoucherEntry.VoucherDate>=@FromDate and TVoucherEntry.VoucherDate<=@ToDate and 
	TVoucherDetails.VoucherSrNo=1 and TVoucherEntry.VoucherTypeCode=15 
	order by TVoucherEntry.MacNo
Open Cur
Fetch Next From Cur Into @VchNo,@CounterName,@Amt
While(@@Fetch_Status = 0)
Begin
	if(@TempCounterName<>@CounterName)
	Begin
		 if(@Cnt=1)
			begin
            
 set @CreditNote = (select isnull(sum(TVoucherDetails.Debit),0)
	from TVoucherEntry
	inner join TVoucherDetails
	on TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo
	where TVoucherEntry.VoucherDate>=@FromDate and TVoucherEntry.VoucherDate<=@ToDate and 
	TVoucherEntry.VoucherTypeCode=2 and  TVoucherEntry.MacNo =@CntrName)
          

			insert into @TDaily values(@SrNo,@CntrName,@CashAmt,@CreditAmt,@CreditNote,@TotalAmt,@NoOfBill)
			set @SrNo = @SrNo + 1	
			END	
		set @TempCounterName=@CounterName 
		set @TotalAmt=0 set @NoOfBill =0 set @CreditAmt=0 set @CashAmt=0
		set @Cnt=1
	End
	
		if((SElect LedgerNo FRom TVoucherDetails Where FKVoucherNo=@VchNo AND VoucherSrNo=2)=1)
			set @CashAmt=@Amt+@CashAmt
		else
			set @CreditAmt=@Amt+@CreditAmt
		set @TotalAmt=@TotalAmt+@Amt
		set @NoOfBill =@NoOfBill +1
		set @CntrName =@CounterName
	Fetch Next From Cur Into @VchNo,@CounterName,@Amt
End
Close Cur Deallocate Cur
if(@Cnt=1)
Begin
	set @CreditNote = (select isnull(sum(TVoucherDetails.Debit),0)
	from TVoucherEntry
	inner join TVoucherDetails
	on TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo
	where TVoucherEntry.VoucherDate>=@FromDate and TVoucherEntry.VoucherDate<=@ToDate and 
	TVoucherEntry.VoucherTypeCode=2 and  TVoucherEntry.MacNo =@CntrName)

	insert into @TDaily values(@SrNo,@CntrName,@CashAmt,@CreditAmt,@CreditNote,@TotalAmt,@NoOfBill)
End
Select SrNo As ''SrNo'',CounterName As ''Counter Name'',CashAmt As ''Cash Amt'',CreditAmt AS ''Credit Amt'',
				CreditNote As ''Credit Note'',TotalAmt As ''Total Amt'',NoOfBill AS ''No Of Bill''  From  @TDaily
End
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MBranch]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MBranch](
	[BranchNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[BranchName] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MBranch] PRIMARY KEY CLUSTERED 
(
	[BranchNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemRateAll]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'

CREATE Function [dbo].[GetItemRateAll]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive=''true'' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive=''true'' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
				AND MItemMaster.GroupNo=@PGroupNo
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MPrinter]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MPrinter](
	[PrinterNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[PrinterName] [varchar](50) NULL,
	[MachineName] [varchar](50) NULL,
	[MachineIP] [varchar](50) NULL,
	[IsDefault] [bit] NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
 CONSTRAINT [PK_MPrinter] PRIMARY KEY CLUSTERED 
(
	[PrinterNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MBank]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MBank](
	[BankNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[BankName] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 2) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTVoucherEntry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE  [dbo].[DeleteTVoucherEntry] 
@PkVoucherNo                        numeric(18)


AS

       update  TVoucherEntry set IsVoucherLock=''true'',StatusNo=2
       WHERE
          PkVoucherNo = @PkVoucherNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MStockCountSchedule]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MStockCountSchedule](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[CountTypeNo] [numeric](18, 0) NULL,
	[CountScheduleDate] [datetime] NULL,
	[IsActive] [bit] NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MStockCountSchedule] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MUserMenuMaster]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MUserMenuMaster](
	[PKSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKUserId] [numeric](18, 0) NULL,
	[Master] [varchar](max) NULL,
	[Sales] [varchar](max) NULL,
	[Purchase] [varchar](max) NULL,
	[Accounts] [varchar](max) NULL,
	[Reports] [varchar](max) NULL,
	[Settings] [varchar](max) NULL,
	[Utilities] [varchar](max) NULL,
	[Hidden] [varchar](max) NULL,
	[StatusNo] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MUserMenuMaster] PRIMARY KEY CLUSTERED 
(
	[PKSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CancelTVoucherEntry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 31/12/2012
CREATE PROCEDURE  [dbo].[CancelTVoucherEntry] 
@PkVoucherNo                        numeric(18)


AS

--       update  TVoucherEntry set IsCancel=''true'',StatusNo=2
--       WHERE
--          PkVoucherNo = @PkVoucherNo

Update TVoucherEntry Set IsCancel=''true'' ,StatusNo=2 Where PkVoucherNo=@PkVoucherNo 
--Or PkVoucherNo=
--(Select FKReceiptVoucherNo From TVoucherPayTypeDetails Where FKSalesVoucherNo=@PkVoucherNo)
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TMRateStock]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'	-- =============================================
	-- Author:		<Author,,Name>
	-- Create date: <Create Date,,>
	-- Description:	<Description,,>
	-- =============================================
	CREATE PROCEDURE [dbo].[TMRateStock]
		-- Add the parameters for the stored procedure here
		@ITEMNO				 numeric(18),
		@Pksrno		 numeric(18),
		@MRP				 numeric(18,2),
		@UOMNO				 numeric(18),
		@ESFlag				 bit,
		@ASaleRate			 	 numeric(18,3),-----input value as quantity not rate //25-01-2018
		@StockConversion		 numeric(18,3)
	AS

Declare @temp		numeric(18,3)
	begin
	IF Exists (select pksrno from mratesetting where pksrno=@Pksrno and @ESFlag=''true'')
BEGIN
    select @temp=ISNULL (stock2,0) from  mratesetting where ITEMNO=@ITEMNO and  MRp=@MRP and UOMNO in (select uoml from mitemmaster where itemno=@ITEMNO )
	update mratesetting set 

	Stock2=@temp-(@ASaleRate)
	where MRp=@MRP and mratesetting.ITEMNO=@ITEMNO and UOMNO in (select uoml from mitemmaster where itemno=@ITEMNO )
END
ELSE  IF Exists (select pksrno from mratesetting where pksrno=@Pksrno and @ESFlag=''FALSE'')
BEGIN
    select @temp=ISNULL (stock,0) from  mratesetting where ITEMNO=@ITEMNO and  MRp=@MRP and UOMNO in (select uoml from mitemmaster where itemno=@ITEMNO )
	update mratesetting set 

	Stock=@temp-(@ASaleRate)
	where MRp=@MRP and mratesetting.ITEMNO=@ITEMNO and UOMNO in (select uoml from mitemmaster where itemno=@ITEMNO )

END

	END





' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMUOM]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE  [dbo].[DeleteMUOM] 
@UOMNo                              numeric(18)


AS
Update MUOM set IsActive=''False'',StatusNo=2 Where UOMNo = @UOMNo

--       DELETE FROM MUOM
--       WHERE
--          UOMNo = @UOMNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSign]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSign](
	[SignCode] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[CompanyNo] [numeric](18, 0) NOT NULL,
	[SignName] [varchar](150) NULL,
	[ShortName] [varchar](50) NULL,
 CONSTRAINT [PK_MSign] PRIMARY KEY CLUSTERED 
(
	[SignCode] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TQuotationDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TQuotationDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkQuotationNo] [numeric](18, 0) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[MRP] [numeric](18, 2) NULL,
	[Rate] [numeric](18, 2) NULL,
	[FkRateSettingNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[IsClose] [bit] NULL,
 CONSTRAINT [PK_TQuotationDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TQuotation]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TQuotation](
	[QuotationNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[QuotationUserNo] [numeric](18, 0) NULL,
	[QuotationDate] [datetime] NULL,
	[FromDate] [datetime] NULL,
	[ToDate] [datetime] NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_TQuotation] PRIMARY KEY CLUSTERED 
(
	[QuotationNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherChqCreditDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVoucherChqCreditDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
	[FkVoucherTrnNo] [numeric](18, 0) NULL,
	[ChequeNo] [varchar](50) NULL,
	[ChequeDate] [datetime] NULL,
	[BankNo] [numeric](18, 0) NULL,
	[BranchNo] [numeric](18, 0) NULL,
	[CreditCardNo] [varchar](50) NULL,
	[Amount] [numeric](18, 2) NULL,
	[IsPost] [bit] NULL,
	[PostFkVoucherNo] [numeric](18, 0) NULL,
	[PostFkVoucherTrnNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_TVoucherChqCreditDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMArea]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE  [dbo].[DeleteMArea] 
@AreaNo                             numeric(18)


AS
Update MArea set IsActive=''False'',StatusNo=2 where AreaNo = @AreaNo
--       DELETE FROM MArea
--       WHERE
--          AreaNo = @AreaNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLedger1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddMLedger1]
     @LedgerNo                            numeric(18),
     @LedgerUserNo                        varchar(100),
     @LedgerName                          varchar(250),
     @GroupNo                             numeric(18),
	 @OpeningBalance					  numeric(18,2),
	 @SignCode							  numeric(18),  
     @MaintainBillByBill                  bit,
	 @IsActive                            bit,
     @ContactPerson                       varchar(100),
     @CompanyNo                           numeric(18),
	 @LedgerStatus						  int,
     @IsEnroll                            bit,
     @IsSendSMS                           bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @TransporterNo                       numeric(18),
     @StateCode                           numeric(18),
	 @LedgerLangName					  varchar(100),
     @IsPartyWiseRate                     bit,
     @QuotationRate                       bit,
     @ContactPersonLang                   nvarchar(500),
     @IsSendEmail                         bit,
     @ReturnID							  int output
AS
IF EXISTS(select LedgerNo from MLedger
          where
          LedgerNo = @LedgerNo)
     BEGIN
       --Update existing row
       UPDATE MLedger
       SET
          LedgerUserNo = @LedgerUserNo,
          LedgerName = @LedgerName,
          GroupNo = @GroupNo,
		  OpeningBalance=@OpeningBalance,
		  SignCode=@SignCode,
          MaintainBillByBill = @MaintainBillByBill,
	      IsActive=@IsActive,
          ContactPerson = @ContactPerson,
          CompanyNo = @CompanyNo,
		  LedgerStatus = @LedgerStatus,
          IsEnroll = @IsEnroll,
          IsSendSMS = @IsSendSMS,
          UserID = @UserID,
          UserDate = @UserDate,
		  TransporterNo= @TransporterNo, 
          StateCode=@StateCode,   
          LedgerLangName=@LedgerLangName,
		  IsPartyWiseRate =  @IsPartyWiseRate,
          QuotationRate=  @QuotationRate, 
          ContactPersonLang=@ContactPersonLang,              
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2,
          IsSendEmail=@IsSendEmail

       WHERE
          LedgerNo = @LedgerNo
		  set @ReturnID=@LedgerNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(LedgerNo),0) From MLedger
       DBCC CHECKIDENT(''MLedger'', RESEED, @Id)
	  --For Max Ledger User No 
	  Select @LedgerUserNo=IsNull(Max(Cast(LedgerUserNo as numeric)),0)+1 from MLedger Where GroupNo=@GroupNo

       INSERT INTO MLedger(
          LedgerUserNo,
          LedgerName,
          GroupNo,
		  OpeningBalance,
		  SignCode,
          MaintainBillByBill,
		  IsActive,
          ContactPerson,
          CompanyNo,
		  LedgerStatus,
          IsEnroll,
          IsSendSMS,
          UserID,
          UserDate,
          TransporterNo,
          StateCode,
		  LedgerLangName,
          IsPartyWiseRate,
		  QuotationRate,
          ContactPersonLang,
          StatusNo,
          IsSendEmail
)
       VALUES(
          @LedgerUserNo,
          @LedgerName,
          @GroupNo,
		  @OpeningBalance,
		  @SignCode,
          @MaintainBillByBill,
		  @IsActive,
          @ContactPerson,
          @CompanyNo,
		  @LedgerStatus,
          @IsEnroll,
          @IsSendSMS,
          @UserID,
          @UserDate,
		  @TransporterNo,
		  @StateCode,
	      @LedgerLangName,
          @IsPartyWiseRate,
          @QuotationRate,
          @ContactPersonLang,
          1,
          @IsSendEmail
)
set @ReturnID=Scope_Identity()

END

/*--------------------------------------------------------------------------------------------------------------------------------------------------*/

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MTaxCalculationMethod]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MTaxCalculationMethod](
	[CalculationMethodNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[CalculationMethod] [varchar](50) NULL,
 CONSTRAINT [PK_MTaxCalculationMethod] PRIMARY KEY CLUSTERED 
(
	[CalculationMethodNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTBarCodePrint]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/12/2012
CREATE PROCEDURE [dbo].[AddTBarCodePrint]
     @PkSrNo                              numeric(18),
     @ItemNo                              numeric(18),
     @Quantity                            numeric(18),
	 @FKRateSettingNo					  numeric(18),
     @MacNo                               numeric(18),
     @UserID                              numeric(18)
AS
IF EXISTS(select PkSrNo from TBarCodePrint
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TBarCodePrint
       SET
          ItemNo = @ItemNo,
          Quantity = @Quantity,
		  FKRateSettingNo = @FKRateSettingNo,
          MacNo = @MacNo,
          UserID = @UserID
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TBarCodePrint
       DBCC CHECKIDENT(''TBarCodePrint'', RESEED, @Id)
       INSERT INTO TBarCodePrint(
          ItemNo,
          Quantity,
		  FKRateSettingNo,
          MacNo,
          UserID
)
       VALUES(
          @ItemNo,
          @Quantity,
		  @FKRateSettingNo,
          @MacNo,
          @UserID
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TstockGRDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TstockGRDetails](
	[PkTstockgrNo] [numeric](18, 0) NOT NULL,
	[FKstockTrnNo] [numeric](18, 0) NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
	[Remarks] [varchar](100) NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[IsActive] [bit] NULL,
	[StatusNo] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TstockGRDetails] PRIMARY KEY CLUSTERED 
(
	[PkTstockgrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMArea]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE [dbo].[AddMArea]
     @AreaNo                              numeric(18),
     @AreaName                            varchar(50),
     @AreaLangName                        nvarchar(100),
     @AreaShortCode                       varchar(50),
    -- @CountryNo                           numeric(18),
    -- @StateNo                             numeric(18),
   --  @RegionNo                            numeric(18),
   --  @CityNo                              numeric(18),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
     --@ModifiedBy                          text
AS
IF EXISTS(select AreaNo from MArea
          where
          AreaNo = @AreaNo)
     BEGIN
       --Update existing row
       UPDATE MArea
       SET
          AreaName = @AreaName,
          AreaLangName = @AreaLangName,
          AreaShortCode = @AreaShortCode,
         -- CountryNo = @CountryNo,
         -- StateNo = @StateNo,
         -- RegionNo = @RegionNo,
         -- CityNo = @CityNo,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
	      CompanyNo=@CompanyNo,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          AreaNo = @AreaNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(AreaNo),0) From MArea
       DBCC CHECKIDENT(''MArea'', RESEED, @Id)
       INSERT INTO MArea(
          AreaName,
          AreaLangName,
          AreaShortCode,
         -- CountryNo,
       --   StateNo,
        --  RegionNo,
        --  CityNo,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
          --ModifiedBy
)
       VALUES(
          @AreaName,
          @AreaLangName,
          @AreaShortCode,
        --  @CountryNo,
        --  @StateNo,
        --  @RegionNo,
        -- @CityNo,
          @IsActive,
          @UserID,
          @UserDate,
	      @CompanyNo,
          1
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MPayType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MPayType](
	[PKPayTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[PayTypeName] [varchar](100) NULL,
	[ShortName] [varchar](50) NULL,
	[DisplayName] [varchar](100) NULL,
	[IsActive] [bit] NULL,
	[ControlUnder] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NOT NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MPayType] PRIMARY KEY CLUSTERED 
(
	[PKPayTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTBarCodePrint]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/12/2012
CREATE PROCEDURE  [dbo].[DeleteTBarCodePrint] 
@MacNo	                           numeric(18),
@UserID								numeric(18)


AS

       DELETE FROM TBarCodePrint
       WHERE
          MacNo = @MacNo AND UserID = @UserID
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLedgerBalances]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLedgerBalances](
	[LedgerBalance] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[LocationNo] [numeric](18, 0) NULL,
	[MonthNo] [numeric](18, 0) NULL,
	[AccYearNo] [numeric](18, 0) NULL,
	[OpeningBalance] [numeric](18, 2) NULL,
	[ClosingBalance] [numeric](18, 2) NULL,
	[CreditBalance] [numeric](18, 2) NULL,
	[DebitBalance] [numeric](18, 2) NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_MLedgerBalances] PRIMARY KEY CLUSTERED 
(
	[LedgerBalance] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MVoucherType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MVoucherType](
	[VoucherTypeCode] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[VoucherTypeName] [varchar](250) NULL,
	[ControlVoucherType] [numeric](18, 0) NULL,
	[Abbr] [varchar](100) NULL,
	[StartingNo] [numeric](18, 0) NULL,
	[RestartNo] [numeric](18, 0) NULL,
	[CommanNarration] [int] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](500) NULL,
 CONSTRAINT [PK_MVoucherType] PRIMARY KEY CLUSTERED 
(
	[VoucherTypeCode] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MTaxFeatures]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MTaxFeatures](
	[PKSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKTaxFeature] [numeric](18, 0) NULL,
	[IsSetExcDealerDtls] [int] NULL,
	[IsFollowExcInv] [int] NULL,
	[IsSetVATDtls] [int] NULL,
	[IsSetServiceTaxDtls] [int] NULL,
	[IsSetTDSDtls] [int] NULL,
	[IsSetTCSDtls] [int] NULL,
	[IsSetFBTDtls] [int] NULL,
	[VATTINComposition] [nvarchar](50) NULL,
	[VATTINRegular] [nvarchar](50) NULL,
	[LocalSalesTaxNo] [nvarchar](50) NULL,
	[InterStateSalesTaxNo] [nvarchar](50) NULL,
	[PANOrIncomeTaxNo] [nvarchar](50) NULL,
 CONSTRAINT [PK_MTaxFeatures] PRIMARY KEY CLUSTERED 
(
	[PKSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSettings]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSettings](
	[PkSettingNo] [numeric](18, 0) NOT NULL,
	[SettingKeyCode] [varchar](100) NULL,
	[SettingTypeNo] [numeric](18, 0) NULL,
	[SettingValue] [nvarchar](max) NULL,
	[SettingDescription] [varchar](max) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MSettings] PRIMARY KEY CLUSTERED 
(
	[PkSettingNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MOtherBank]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MOtherBank](
	[BankNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[BankName] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 2) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MOtherBank] PRIMARY KEY CLUSTERED 
(
	[BankNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MItemDiscountDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MItemDiscountDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ItemBrandDiscNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[FkRateSettingNo] [numeric](18, 0) NULL,
	[DiscPercentage] [numeric](18, 2) NULL,
	[MRP] [numeric](18, 2) NULL,
	[IsActive] [bit] NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MItemDiscountDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetUomList]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE Function [dbo].[GetUomList]
(
@Barcode varchar(50),
@ItemNo numeric(18,0),
@MRPVal numeric(18,2)
)
Returns @UOM Table(UomNo numeric(18),UomName Varchar(200))
AS
Begin
--Declare @Uom Table(UomNo numeric(18),UomName Varchar(200))
Declare @UomNo numeric(18),@UomName Varchar(200)
if(@ItemNo<>0)

Declare Cur Cursor For SELECT DISTINCT MUOM.UOMName, MUOM.UOMNo
							FROM         MUOM INNER JOIN
							dbo.GetItemRateAll(@ItemNo, NULL, null, NULL,null) AS MRateSetting ON MUOM.UOMNo = MRateSetting.UOMNo
else
Begin
--Select @ItemNo=ItemNo From MStockBarCode Where BarCode=@Barcode
Declare Cur Cursor For SELECT DISTINCT MUOM.UOMName, MUOM.UOMNo
						 FROM         MUOM INNER JOIN
						  dbo.GetItemRateAll(@ItemNo, NULL,  null, NULL,NULL) AS MRateSetting ON MUOM.UOMNo = MRateSetting.UOMNo INNER JOIN
						  MItemMaster ON MRateSetting.itemno = MItemMaster.itemno
						WHERE     (MItemMaster.Barcode = @Barcode) 
End
Open Cur
Fetch Next From Cur Into @UomName,@UomNo
While(@@Fetch_Status =0 )
Begin
	
	Insert into @Uom values(@UomNo,@UomName)
	Fetch Next From Cur Into @UomName,@UomNo
End
Close Cur Deallocate Cur

--Select * From @Uom
Return 
End

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMState]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE  [dbo].[DeleteMState] 
@StateNo                            numeric(18)


AS
Update MState set IsActive=''False'',StatusNo=2 Where StateNo = @StateNo

--       DELETE FROM MState
--       WHERE
--          StateNo = @StateNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MTaxSettingOnTax]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MTaxSettingOnTax](
	[PKSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LedgerNo] [numeric](18, 0) NOT NULL,
	[TaxOnLedgerNo] [numeric](18, 0) NOT NULL,
	[FromDate] [datetime] NULL,
	[CalcMethod] [int] NULL,
	[TaxPercent] [numeric](18, 2) NULL,
	[CompanyNo] [numeric](18, 0) NOT NULL,
	[UserID] [numeric](18, 0) NOT NULL,
	[UserDate] [datetime] NOT NULL,
 CONSTRAINT [PK_MTaxSettingOnTax] PRIMARY KEY CLUSTERED 
(
	[PKSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOpeningLedgerBalanceOnly]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[GetOpeningLedgerBalanceOnly]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18)
	)
RETURNS @TLedgerBal Table(OpAmt numeric(18,2))
AS
BEGIN
	Declare @DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @BalAmt numeric(18,2),@Res int

	Set @DrAmt = 0 Set @CrAmt = 0 set @Res=0

	SELECT    @DrAmt= IsNull(SUM(TVoucherDetails.Debit),0), @CrAmt=IsNull(SUM(TVoucherDetails.Credit),0)
		FROM         TVoucherDetails INNER JOIN
							  TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo --INNER JOIN
							  --MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo
		WHERE     (TVoucherDetails.LedgerNo = @LedgerNo)  AND 
				  (TVoucherEntry.CompanyNo = @CompNo) AND (TVoucherEntry.IsCancel=''false'') AND
				  (TVoucherEntry.VoucherTypeCode = 36) -- 36 = OpeningBalance
	                   
	set @BalAmt = (@DrAmt - @CrAmt)
	insert into @TLedgerBal values(@BalAmt)
	
	RETURN
END


--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MPrintReportName]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MPrintReportName](
	[PkSrNO] [numeric](18, 0) NOT NULL,
	[ReportName] [varchar](50) NOT NULL,
	[LangReportName] [varchar](50) NOT NULL,
	[ButtonType] [numeric](18, 0) NOT NULL,
	[ButtonName] [varchar](50) NOT NULL,
	[VoucherTypecode] [numeric](18, 0) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MPrintReportName] PRIMARY KEY CLUSTERED 
(
	[PkSrNO] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFirmOpeningLedgerBalanceOnly]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetFirmOpeningLedgerBalanceOnly]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@MFGCompNo		numeric(18)
	--@BrID		numeric(18)
	)
RETURNS @TLedgerBal Table(OpAmt numeric(18,2))
AS
BEGIN
	Declare @DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @BalAmt numeric(18,2),@Res int
	Set @DrAmt = 0 Set @CrAmt = 0 set @Res=0

	SELECT     @DrAmt=ISNULL(SUM(TVoucherDetailsCompany.Debit), 0) ,@CrAmt= ISNULL(SUM(TVoucherDetailsCompany.Credit), 0) 
	FROM         TVoucherDetailsCompany INNER JOIN
						  TVoucherEntry INNER JOIN
						  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo ON 
						  TVoucherDetailsCompany.FkVoucherNo = TVoucherEntryCompany.PKVoucherCompanyNo --INNER JOIN
						  --MLedger ON TVoucherDetailsCompany.LedgerNo = MLedger.LedgerNo
	WHERE	  (TVoucherEntry.CompanyNo = @CompNo) AND 
			  (TVoucherEntry.IsCancel = ''false'') AND (TVoucherDetailsCompany.LedgerNo = @LedgerNo) AND 
			  (TVoucherEntryCompany.MfgCompNo = @MFGCompNo) AND (TVoucherEntry.VoucherTypeCode = 36) -- 36 = OpeningBalance


	set @BalAmt = (@DrAmt - @CrAmt)
	insert into @TLedgerBal values(@BalAmt)
	
	RETURN
END



--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MTypeOfRef]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MTypeOfRef](
	[RefTypeCode] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[TypeOfRef] [varchar](250) NULL,
 CONSTRAINT [PK_MTypeOfRef] PRIMARY KEY CLUSTERED 
(
	[RefTypeCode] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Temp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Temp](
	[BarcodeNo] [varchar](500) NULL,
	[Qty] [numeric](18, 2) NULL
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOpeningLedgerBalanceAll]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetOpeningLedgerBalanceAll]
	(
	@CompNo		numeric(18),
	@FromDate	datetime
	)
RETURNS @TLedgerBal Table(LedgerNo numeric(18), OpAmt numeric(18,2))
AS
BEGIN
	Declare @Res int
	Declare @TDate datetime
	
	set @Res=0
	set @TDate=DateAdd(d,-1,@FromDate)

	insert into @TLedgerBal 
	SELECT    TVoucherDetails.LedgerNo, IsNull(SUM(TVoucherDetails.Debit),0) - IsNull(SUM(TVoucherDetails.Credit),0) 
	FROM         TVoucherDetails INNER JOIN
						  TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo 
	WHERE     (TVoucherEntry.VoucherDate <= @TDate) And (TVoucherEntry.CompanyNo = @CompNo) and (TVoucherEntry.IsCancel=''false'')
	GROUP BY TVoucherDetails.LedgerNo

	RETURN
END


--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLanguage]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLanguage](
	[LanguageNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LanguageName] [varchar](50) NULL,
	[FontName] [varchar](50) NULL,
	[FontSize] [numeric](18, 0) NULL,
	[FontBold] [bit] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MLanguage] PRIMARY KEY CLUSTERED 
(
	[LanguageNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFirmOpeningLedgerBalanceAll]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetFirmOpeningLedgerBalanceAll]
	(
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@MFGCompNo		numeric(18)
	)
RETURNS @TLedgerBal Table(LedgerNo numeric(18), OpAmt numeric(18,2))
AS
BEGIN
	Declare @Res int
	Declare @TDate datetime
	
	Set @Res=0

	set @TDate=DateAdd(d,-1,@FromDate)

	insert into @TLedgerBal 
		SELECT     TVoucherDetailsCompany.LedgerNo, ISNULL(SUM(TVoucherDetailsCompany.Debit), 0) - ISNULL(SUM(TVoucherDetailsCompany.Credit), 0) 
		FROM         TVoucherDetailsCompany INNER JOIN
							  TVoucherEntry INNER JOIN
							  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo ON 
							  TVoucherDetailsCompany.FkVoucherNo = TVoucherEntryCompany.PKVoucherCompanyNo 
		WHERE   (TVoucherEntry.VoucherDate <= @TDate) AND (TVoucherEntry.CompanyNo = @CompNo) AND 
				(TVoucherEntry.IsCancel = ''false'') AND (TVoucherEntryCompany.MfgCompNo = @MFGCompNo)
		GROUP BY TVoucherDetailsCompany.LedgerNo
	
	RETURN
END



--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemRateAllAuto]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'

Create Function [dbo].[GetItemRateAllAuto]
(
@PItemNo		           numeric(18),
--@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18),
@PDepartmentNo				numeric(18),
@PCatNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18)*/ ,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,
Stock numeric(18, 2),Stock2 numeric(18, 2),Weight1 numeric(18, 2),Weight2 numeric(18, 2),LPPerc numeric(18, 2),SPPerc numeric(18, 2),Hamali numeric(18, 2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18)/*,FkBcdSrNo numeric(18) */,ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18,2),PerOfRateVariation numeric(18, 2),IsActive bit)

Declare @PkSrNo numeric(18) , /*@FkBcdSrNo numeric(18) , */ @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,@Stock numeric(18, 2),@Stock2 numeric(18, 2),
@Weight1 numeric(18, 2),@Weight2 numeric(18, 2),@LPPerc numeric(18, 2),@SPPerc numeric(18, 2),@Hamali numeric(18, 2),
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18,2) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4)

Set  @PkSrNo = 0-- Set @FkBcdSrNo = 0 
set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0 
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00
set @Stock=0 set @Stock2=0
set @Weight1=0 set @Weight2=0
set @Hamali=0
if(@PGroupNo is Null) and (@PDepartmentNo is Null)
Declare CurRate Cursor For Select PkSrNo ,ItemNo/*,MRateSetting.FkBcdSrNo*/,FromDate ,PurRate,MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive, Stock,Stock2,Weight1,Weight2,LPPerc,SPPerc,Hamali From MRateSetting 
				 where IsActive=''true'' AND  ItemNo=Case When @PItemNo is null then ItemNo else @PItemNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRP=Case When @PMRP is null then MRP else @PMRP end				
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
	Declare CurRate Cursor For Select MRateSetting.PkSrNo /*,MRateSetting.FkBcdSrNo*/,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive  ,MRateSetting.Stock,MRateSetting.Stock2,MRateSetting.Weight1,
MRateSetting.Weight2,MRateSetting.LPPerc,MRateSetting.SPPerc,MRateSetting.Hamali
 From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				 where MRateSetting.IsActive=''true'' AND  MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
AND MItemMaster.FkDepartmentNo=Case When @PDepartmentNo is null then MItemMaster.FkDepartmentNo else @PDepartmentNo end
				AND MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.Groupno else @PGroupNo  end
				 Order by MRateSetting.ItemNo/*,MRateSetting.FkBcdSrNo*/,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC 
Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 0
		End 

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 0
		End 

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 0
		End 
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 0
		End 
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 0
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo or @VUOMNo != @UOMNo or @VMRP!=@MRP ))
	Begin
		set @VItemNo = @ItemNo  
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali)
	End 
	
	Fetch CurRate into @PkSrNo /*,@FkBcdSrNo*/,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock,@Stock2,@Weight1,@Weight2,@LPPerc,@SPPerc,@Hamali
End 

close CurRate deallocate CurRate 

Return
End

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemClosingStockDatewise]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetItemClosingStockDatewise]
	(
    @MNo        int,
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@ItemNo		numeric(18),
	@Type		int,
	@No			numeric(18)
	)
--RETURNS @TStockMonth TABLE(MonthID int,MonthName varchar(20),InwQty numeric(18,2),InwAmt numeric(18,2),OutwQty numeric(18,2),OutwAmt numeric(18,2),ClosingQty numeric(18,2),ClosingAmt numeric(18,2))
Returns @TStockDays TABLE(Date DateTime,InwQty numeric(18,2),InwAmt numeric(18,2),OutwQty numeric(18,2),OutwAmt numeric(18,2),ClosingQty numeric(18,2),ClosingAmt numeric(18,2))
AS
BEGIN
Declare @ItemName varchar(max)
Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrAmt numeric(18,2),@DrQty numeric(18,2)
Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2)
Declare @Rate numeric(18,2),@BalAmt numeric(18,2)
Declare @Month varchar(20) , @VDate datetime -- ,@MNo int
Declare @FDate datetime, @TDate datetime ,@Yr int,@cnt int

set @ClosingQty = 0 set @BalAmt = 0
set @DrQty=0 set @DrAmt=0 set @CrQty = 0 set @CrAmt = 0
	SELECT @ItemName=Itemname FROM MStockItems where ItemNo = @ItemNo
	
	--Select @OpQty=OpBalQty,@OpAmt=OpBalAmount From MStockItems Where (CompanyNo =@CompNo) and (ItemNo = @ItemNo)
	SELECT     @OpAmt=isnull(SUM(OpQuantity*SaleRate),0), @OpQty=isnull(SUM(OpQuantity) ,0)
	FROM         MItemOpeningStock
	WHERE     (PkItemNo = @ItemNo)
	--SELECT     @OpAmt=isnull(SUM(OpAmount),0), @OpQty=isnull(SUM(OpQuantity) ,0)
	--FROM         MItemOpeningStock
	--WHERE     (PkItemNo = @ItemNo) AND (BranchCode = @BrID)		
	--insert into @TStockMonth values(0,''Opening Balance'',0,0,0,0,@OpQty,@OpAmt)
      insert into @TStockDays values('''',0,0,0,0,@OpQty,@OpAmt)
	


while(@FromDate <= @ToDate)
begin	
	set @Month =DateName("m",@FromDate)
	
	--set @MNo= Month(@FromDate)
	
	if(@MNo=1 Or @MNo=3 Or @MNo=5 Or @MNo=7 Or @MNo=8 Or @MNo=10 Or @MNo=12)
		begin
			if(Day(@FromDate) >=1 Or Day(@FromDate)<31)
				set @FDate = ''01-'' + cast(@MNo as varchar) + ''-'' + cast(Year(@FromDate) as varchar)
				set @TDate = ''31-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
		end
	else if(@MNo=4 Or @MNo=6 Or @MNo=9 Or @MNo=11 )
		begin
			if(Day(@FromDate) >=1 Or Day(@FromDate)<30)
				set @FDate = ''01-'' + cast(@MNo as varchar) + ''-'' + cast(Year(@FromDate) as varchar)
				set @TDate = ''30-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
		end
	else
		begin
			if(Year(@FromDate)%4=0)
				begin
					if(Day(@FromDate) >=1 Or Day(@FromDate)<29)
						set @FDate = ''01-Feb-'' + cast(Year(@FromDate) as varchar)
						set @TDate = ''29-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
				end
			else
				begin
					if(Day(@FromDate) >=1 Or Day(@FromDate)<28)
						set @FDate = ''01-Feb-'' + cast(Year(@FromDate) as varchar)
						set @TDate = ''28-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
				end
		end
		
	if(@TDate > @ToDate and @FDate < @FromDate)set @TDate=@ToDate
	Select @DrAmt=DrAmt,@DrQty=DrQty,@CrAmt=CrAmt,@CrQty=CrQty From GetClosingStock(@CompNo,@FDate,@TDate,@ItemNo,@Type,@No)
	--insert into @TStockMonth values(@MNo,@Month,@DrQty,@DrAmt,@CrQty,@CrAmt,@ClosingQty,@BalAmt)
	insert into @TStockDays values(@FDate,@DrQty,@DrAmt,@CrQty,@CrAmt,@ClosingQty,@BalAmt)
		
	if(Day(@FromDate) > 1) 
		set @FromDate = ''1-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
	
	set @FromDate =DateAdd(mm,1,@FromDate)
	set @OpQty = @ClosingQty
	set @OpAmt = @BalAmt
	set @DrQty=0 set @DrAmt=0 set @CrQty = 0 set @CrAmt = 0
end
RETURN
END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMRateSetting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/02/2012
CREATE PROCEDURE  [dbo].[DeleteMRateSetting] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MRateSetting
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDateWiseGroupBalance]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE function [dbo].[GetDateWiseGroupBalance] (@GroupNo as int, @CompanyNo as int,@VDate as datetime)
returns @retFindReports TABLE (Balance float)
AS
BEGIN
   DECLARE @DOAmt float,@COAmt float,@OAmt float,@DAmt float,
   @Balance float,@SignCode int,@ReturnVal float
--Debit Opening Balance
   SELECT @DOAmt=isnull(sum(OpeningBalance),0)
      FROM MLedger 
      WHERE GroupNo in(select GroupNo from MGroup where (GroupNo=@GroupNo 
      or ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)
      and CompanyNo=@CompanyNo and SignCode=1
--Credit Opening Balance
   SELECT @COAmt=isnull(sum(OpeningBalance),0)
      FROM MLedger 
      WHERE GroupNo in(select GroupNo from MGroup where (GroupNo=@GroupNo 
      or ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)
      and CompanyNo=@CompanyNo and SignCode=2
  set @OAmt=(isnull(@DOAmt,0)-isnull(@COAmt,0))
--Debit-Credit Amount
  set @DAmt=isnull((SELECT isnull(Sum(debit)-sum(credit),0) 
      FROM TVoucherDetails
      WHERE LedgerNo in(select LedgerNo from MLedger where GroupNo 
      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)and CompanyNo=@CompanyNo)  
      and FKvoucherno in (select PKVoucherno from TVoucherEntry 
      where CompanyNo=@CompanyNo and VoucherTypeCode not in(6,10,17) and VoucherDate<=@VDate and LedgerNo in(select LedgerNo from MLedger where GroupNo 
      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)))),0)
set @ReturnVal=isnull(@DAmt,0)+isnull(@OAmt,0)	
insert into @retFindReports(Balance)values(@ReturnVal)
return 
end
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOpeningLedgerBalanceOnlyAll]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[GetOpeningLedgerBalanceOnlyAll]
	(
	@CompNo		numeric(18)
	)
RETURNS @TLedgerBal Table(LedgerNo numeric(18), OpAmt numeric(18,2))
AS
BEGIN
	Declare @Res int

	Set @Res=0
	                   
	insert into @TLedgerBal
	SELECT    TVoucherDetails.LedgerNo, IsNull(SUM(TVoucherDetails.Debit),0) - IsNull(SUM(TVoucherDetails.Credit),0)
	FROM	  TVoucherDetails INNER JOIN
				TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo 
	WHERE     (TVoucherEntry.CompanyNo = @CompNo) AND (TVoucherEntry.IsCancel=''false'') AND
			  (TVoucherEntry.VoucherTypeCode = 36) -- 36 = OpeningBalance
	GROUP BY TVoucherDetails.LedgerNo
	
	RETURN
END
--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemwiseSalesDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetItemwiseSalesDetails]
	-- Add the parameters for the stored procedure here
	@FromDate datetime,
	@ToDate	datetime,
	@IsSuperMode bit,
	@ItemNo	varchar(max) ,
	@VchType varchar(max)
AS
Declare @StrQuery varchar(max)

BEGIN

if(@IsSuperMode=''true'')
set @StrQuery = '' SELECT TVoucherEntry.VoucherDate, TVoucherEntry.VoucherTime,MLedger.LedgerName, (SELECT     MItemGroup.ItemGroupName + '''' '''' + CASE WHEN (ItemShortName <> '''''''') THEN ItemShortName ELSE ItemName END AS Expr1
                            FROM          MItemMaster AS MItemMaster_1 INNER JOIN
                                                   MItemGroup ON MItemMaster_1.GroupNo = MItemGroup.ItemGroupNo
                            WHERE      (MItemMaster_1.ItemNo = MItemMaster.ItemNo)) As ItemName, TVoucherEntry.VoucherUserNo,case when (TVoucherEntry.IsCancel = ''''true'''') then 0 else (Case When (TvoucherEntry.VoucherTypeCode=''+@VchType+'') Then TStock.Quantity Else -TStock.Quantity End) end as Quantity, case when (TVoucherEntry.IsCancel = ''''true'''') then 0 else TStock.Rate end as Rate, 
				  CASE WHEN (TVoucherEntry.IsCancel = ''''true'''') THEN 0 ELSE (case When(''+@VchType+''=15) Then (TStock.DiscRupees) else (TStock.LandedRate) End) END AS DiscRupees ,
                  case when (TVoucherEntry.IsCancel = ''''true'''') then 0 else (Case When (TvoucherEntry.VoucherTypeCode=''+@VchType+'') Then TStock.Amount Else -TStock.Amount End) end as Amount , TStock.ItemNo, MItemGroup.ItemGroupName as stockGroupName,TVoucherEntry.IsCancel,(Case When (TvoucherEntry.VoucherTypeCode=''+@VchType+'') Then TStock.FreeQty Else -TStock.FreeQty End) AS FreeQty,(Case When (TvoucherEntry.VoucherTypeCode=''+@VchType+'') Then (TStock.Quantity+isnull(TStock.FreeQty,0)) Else -(TStock.Quantity+isnull(TStock.FreeQty,0)) End) as TotQty,Case When TVoucherEntry.VoucherTypeCode=''+@VchType+'' Then 1 Else 2 End As VoucherTypeCode,
                  MUOM.UOMShortCode as UOMName,MItemMaster.BarCode
				  FROM TVoucherEntry INNER JOIN
                  TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                  TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo INNER JOIN
                  MUOM ON TStock.FKUOMNo = MUOM.UOMNo INNER JOIN
                  MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                  MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo INNER JOIN
                  MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo 
				  WHERE (TStock.ItemNo IN (''+ @ItemNo +'')) AND TVoucherEntry.VoucherTypeCode in (''+@VchType+'',Case When ''+@VchType+''=15 Then 12 Else 13 End)
				  AND (TVoucherEntry.VoucherDate >= ''''''+ Cast(@FromDate as varchar) +'''''') AND (TVoucherEntry.VoucherDate <= ''''''+ Cast(@ToDate As varchar) +'''''')
				   order by VoucherTypeCode,MItemGroup.ItemGroupName, MItemMaster.ItemName,TVoucherEntry.VoucherDate'';

else
Begin
if(@VchType=''15'')
Begin
set @StrQuery = '' SELECT TVoucherEntry.VoucherDate, TVoucherEntry.VoucherTime,MLedger.LedgerName, (SELECT     MItemGroup.ItemGroupName + '''' '''' + CASE WHEN (ItemShortName <> '''''''') THEN ItemShortName ELSE ItemName END AS Expr1
                            FROM          MItemMaster AS MItemMaster_1 INNER JOIN
                                                   MItemGroup ON MItemMaster_1.GroupNo = MItemGroup.ItemGroupNo
                            WHERE      (MItemMaster_1.ItemNo = MItemMaster.ItemNo)) As ItemName, TVoucherEntry.VoucherUserNo,case when (TVoucherEntry.IsCancel = ''''true'''') then 0 else (case When(TVoucherEntry.VoucherTypeCode=15) Then TStock.Quantity else -TStock.Quantity End) end as Quantity, 
				  case when (TVoucherEntry.IsCancel = ''''true'''') then 0 else Case When(TStock.Rate>MRateSetting.MRP) then MRateSetting.MRP else TStock.Rate end end as Rate, 
				  CASE WHEN (TVoucherEntry.IsCancel = ''''true'''') THEN 0 ELSE (case When(''+@VchType+''=15) Then (TStock.DiscRupees) else (TStock.LandedRate) End) END AS DiscRupees,
                  case when (TVoucherEntry.IsCancel = ''''true'''') then 0 else((case When(TVoucherEntry.VoucherTypeCode=15) Then TStock.Quantity Else -TStock.Quantity End)*Case When(TStock.Rate>MRateSetting.MRP) then MRateSetting.MRP else TStock.Rate end) end  AS Amount, TStock.ItemNo, MItemGroup.ItemGroupName as stockGroupName,TVoucherEntry.IsCancel,TStock.FreeQty,(TStock.Quantity+isnull(TStock.FreeQty,0)) as TotQty,TVoucherEntry.VoucherTypeCode,
				  MUOM.UOMShortCode as UOMName,MItemMaster.BarCode
                  FROM TVoucherEntry INNER JOIN
                  TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                  MUOM ON TStock.FKUOMNo = MUOM.UOMNo INNER JOIN
                  TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo INNER JOIN
                   MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                  MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo INNER JOIN
                  MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo 
				  WHERE (TStock.ItemNo IN (''+ @ItemNo +'')) AND TVoucherEntry.VoucherTypeCode in (''+@VchType+'',12)
				  AND (TVoucherEntry.VoucherDate >= ''''''+ Cast(@FromDate as varchar) +'''''') AND (TVoucherEntry.VoucherDate <= ''''''+ Cast(@ToDate As varchar) +'''''')
				  order by VoucherTypeCode,MItemGroup.ItemGroupName,MItemMaster.ItemName,TVoucherEntry.VoucherDate'';
End
else
set @StrQuery = '' SELECT TVoucherEntry.VoucherDate, TVoucherEntry.VoucherTime,MLedger.LedgerName, (SELECT     MItemGroup.ItemGroupName + '''' '''' + CASE WHEN (ItemShortName <> '''''''') THEN ItemShortName ELSE ItemName END AS Expr1
                            FROM          MItemMaster AS MItemMaster_1 INNER JOIN
                                                   MItemGroup ON MItemMaster_1.GroupNo = MItemGroup.ItemGroupNo
                            WHERE      (MItemMaster_1.ItemNo = MItemMaster.ItemNo)) As ItemName, TVoucherEntry.VoucherUserNo,case when (TVoucherEntry.IsCancel = ''''true'''') then 0 else (case When(TVoucherEntry.VoucherTypeCode=9) Then TStock.Quantity Else -TStock.Quantity End) end as Quantity, 
				  case when (TVoucherEntry.IsCancel = ''''true'''') then 0 else  TStock.Rate end as Rate, 
				  CASE WHEN (TVoucherEntry.IsCancel = ''''true'''') THEN 0 ELSE (case When(''+@VchType+''=15) Then (TStock.DiscRupees) else (TStock.LandedRate) End) END AS DiscRupees
                  case when (TVoucherEntry.IsCancel = ''''true'''') then 0 else((case When(TVoucherEntry.VoucherTypeCode=9) Then TStock.Quantity Else -TStock.Quantity End)*TStock.Rate) end AS Amount, TStock.ItemNo, MItemGroup.ItemGroupName as stockGroupName,TVoucherEntry.IsCancel,(case When(TVoucherEntry.VoucherTypeCode=9) Then TStock.FreeQty Else -TStock.FreeQty End)As FreeQty,((case When(TVoucherEntry.VoucherTypeCode=9) Then TStock.Quantity Else -TStock.Quantity End)+isnull(TStock.FreeQty,0)) as TotQty,TVoucherEntry.VoucherTypeCode,
				  MUOM.UOMShortCode as UOMName,MItemMaster.BarCode
                  FROM TVoucherEntry INNER JOIN
                  TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                  TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo INNER JOIN
                   MUOM ON TStock.FKUOMNo = MUOM.UOMNo INNER JOIN
                   MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                  MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo INNER JOIN
                  MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo 
				  WHERE (TStock.ItemNo IN (''+ @ItemNo +'')) AND TVoucherEntry.VoucherTypeCode (''+@VchType+'',13)
				  AND (TVoucherEntry.VoucherDate >= ''''''+ Cast(@FromDate as varchar) +'''''') AND (TVoucherEntry.VoucherDate <= ''''''+ Cast(@ToDate As varchar) +'''''')
				  order by VoucherTypeCode, MItemGroup.ItemGroupName,MItemMaster.ItemName,TVoucherEntry.VoucherDate'';
End


Exec (@StrQuery) 

END


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLedgerDetails2]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
create PROCEDURE [dbo].[AddMLedgerDetails2]
     @LedgerDetailsNo                           numeric(18),
     @LedgerNo                            numeric(18),
     @CreditLimit                         numeric(18,2),
     @Address                             varchar(300),
     @StateNo                             numeric(18),
     @CityNo                              numeric(18),
     @PinCode                             varchar(100),
     @PhNo1                               varchar(100),
     -- @PhNo2                               varchar(100),
     @MobileNo1                           varchar(100),
    -- @MobileNo2                           varchar(100),
     @EmailID                             varchar(100),
     @CustomerType                        numeric(18,0),
     --   @PANNo                               varchar(100),
   
     @UserID                              numeric(18),
     @UserDate                            datetime,
         @CompanyNo                                                      numeric(18),
        -- @FSSAI                                                                  varchar(100),
         @AreaNo                                                          numeric(18),
        -- @AddressLang                         nvarchar(500),
    -- @AdharNo                                                  varchar(100),

    -- @RateTypeNo                                                  numeric(18),
   --  @DiscPer                                                      numeric(18),
    -- @DiscRs                                                        numeric(18),
   --  @AnyotherNo1                                              varchar(100),
 -- @AccountNo                           varchar(150),
 --   @ReportName                          varchar(max),
  --   @AnyotherNo2                                                varchar(100),
     @GSTNo                                                      varchar(100),
    @FSSAIDate                           datetime,
     @GSTDate                             datetime,
@Distance     numeric(18,2)
AS

IF EXISTS(select LedgerDetailsNo from MLedgerDetails
          where
          LedgerDetailsNo = @LedgerDetailsNo)
     BEGIN
       --Update existing row
       UPDATE MLedgerDetails
       SET
  --LedgerDetailsNo =@LedgerDetailsNo, 
     LedgerNo=0,
     CreditLimit=@CreditLimit, 
     Address=@Address ,    
     StateNo=@StateNo  ,
     CityNo=@CityNo,  
     PinCode=@PinCode ,  
     PhNo1 =@PhNo1,       
     MobileNo1 =@MobileNo1 ,   
     EmailID   =@EmailID,  
     CustomerType =@CustomerType,

     UserID =@UserID,       
     UserDate =@UserDate,    
         CompanyNo        =@CompanyNo,        
 AreaNo=@AreaNo,                        
   GSTNo=@GSTNo        ,        
    FSSAIDate  =@FSSAIDate , 
     GSTDate   =@GSTDate,  
Distance =@Distance ,
DeliveryLedgerNo=@LedgerNo
       WHERE
          LedgerDetailsNo = @LedgerDetailsNo
                  --set @ReturnID=@LedgerNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @LedgerDetailsNo=IsNull(Max(LedgerdetailsNo+2),0) From MLedgerDetails
       DBCC CHECKIDENT(''MLedgerdetails'', RESEED, @Id)
        

 SET IDENTITY_INSERT MLedgerDetails ON
     BEGIN
       --Insert new row
       
       INSERT INTO MLedgerDetails(
         LedgerDetailsNo,   
          LedgerNo,
          CreditLimit,
          Address,
                  StateNo,
          CityNo,
          PinCode,
          PhNo1,
       --   PhNo2,
          MobileNo1,
        --  MobileNo2,
          EmailID,     
          CustomerType,
       --   PANNo,
        --  AccountNo,
        --  ReportName,      
          UserID,
          UserDate,
         -- StatusNo,
                  CompanyNo,  
                ---  FSSAI,
              AreaNo,
                --  AddressLang,
                --  RateTypeNo,
                --  DiscPer,
                --  DiscRs,
        --  AdharCardNo,
            --  AnyotherNo1,
                 -- AnyotherNo2,
                  GSTNo,
                  FSSAIDate,
                  GSTDate,
Distance,
DeliveryLedgerNo
)
       VALUES(
         @LedgerDetailsNo,    
          0,
          @CreditLimit,
          @Address,
                  @StateNo,
          @CityNo,
          @PinCode,
          @PhNo1,
        --  @PhNo2,
          @MobileNo1,
        --  @MobileNo2,
          @EmailID,
          @CustomerType,
        --  @PANNo,
        --  @AccountNo,
        --  @ReportName,
          @UserID,
          @UserDate,
       --   1,
                  @CompanyNo,
                --  @FSSAI,
              @AreaNo,
                --  @AddressLang,
                --  @RateTypeNo,
      --    @DiscPer,
      --    @DiscRs,
       --   @AdharNo,
                --  @AnyotherNo1,
                --  @AnyotherNo2,
                  @GSTNo,
                 @FSSAIDate,
                  @GSTDate,
@Distance,
@LedgerNo
)
end
END' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLedgerItemWiseSalesDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'-- =============================================
-- Author:		<umesh dhus>
-- Alter date: <10-05-2018>
-- Description:	<ItemWisePurchase Details>
-- =============================================
--Created on 10-MAy-2018

CREATE PROCEDURE [dbo].[GetLedgerItemWiseSalesDetails]
	-- Add the parameters for the stored procedure here
	@FromDate datetime,
	@ToDate	datetime,
	@ItemNo	varchar(max),
	@LedgerNo varchar(max),
	@VoucherType varchar(max) 
AS
Declare @StrQuery varchar(max)
Declare @StrBillNo varchar(max)
BEGIN
	IF (@VoucherType = 15) 
		set @StrBillNo = '' CAST(TVoucherEntry.VoucherUserNo AS VARCHAR(50)) AS VoucherUserNo ''
	ELSE
		set @StrBillNo = '' CAST(TVoucherEntry.Reference AS VARCHAR(50)) AS VoucherUserNo ''
	
	set @StrQuery = '' SELECT TVoucherEntry.VoucherDate, TVoucherEntry.VoucherTime, CAST(MStockItems.ItemName AS varchar(300)) AS ItemName, 
						  '' + @StrBillNo + '', TStock.Quantity,TStock.FreeQty,(TStock.Quantity+isnull(TStock.FreeQty,0)) as TotQty, TStock.Rate, TStock.Amount, TStock.ItemNo, MItemGroup.itemGroupName as StockGroupName, 
						  MLedger.LedgerName FROM TVoucherEntry INNER JOIN
						  TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
						  TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo INNER JOIN
						  dbo.MStockItems_v(NULL,NULL,NULL,NULL,NULL,NULL,NULL) AS MStockItems ON TStock.ItemNo = MStockItems.ItemNo INNER JOIN
						  MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo INNER JOIN
						  MItemGroup ON MStockItems.GroupNo = MItemGroup.itemGroupNo INNER JOIN
						  MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo
						  WHERE     (TVoucherDetails.VoucherSrNo = 1) AND (TStock.ItemNo IN (''+@ItemNo+'')) AND (TVoucherDetails.LedgerNo IN (''+@LedgerNo+''))
						  AND (TVoucherEntry.VoucherDate >= ''''''+ Cast(@FromDate as varchar) +'''''') AND (TVoucherEntry.VoucherDate <= ''''''+ Cast(@ToDate As varchar) +'''''')
						  AND (TVoucherEntry.VoucherTypeCode IN (''+@VoucherType+'')) AND TVoucherEntry.IsCancel=''''false''''
						  ORDER BY MLedger.LedgerName, ItemName, TVoucherEntry.VoucherDate''
	
Exec (@StrQuery) 
END





' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLedgerBalance2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetLedgerBalance2]
(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime	
)
RETURNS @TLedger Table(LdgNo numeric(18),LdgName varchar(max),OpAmt numeric(18,2),DrAmt numeric(18,2),CrAmt numeric(18,2),ClAmt numeric(18,2))
AS

BEGIN
	Declare @OpAmt numeric(18,2),@ClAmt numeric(18,2)
	insert into @TLedger (LdgNo,LdgName,DrAmt,CrAmt)
		SELECT     MLedger.LedgerNo,MLedger.LedgerName AS LedgerName, IsNull(SUM(TVoucherDetails.Debit),0) AS Expr1, IsNull(SUM(TVoucherDetails.Credit),0) AS Expr2
FROM         TVoucherDetails INNER JOIN
                      TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo
WHERE     (TVoucherDetails.LedgerNo = @LedgerNo)  AND (TVoucherEntry.VoucherDate >= @FromDate) AND 
                      (TVoucherEntry.VoucherDate <= @ToDate) And (TVoucherEntry.CompanyNo = @CompNo)
GROUP BY MLedger.LedgerNo, MLedger.LedgerName, MLedger.LedgerUserNo



Select @OpAmt=IsNull(OpAmt,0) From GetOpeningLedgerBalance(@LedgerNo,@CompNo,@FromDate,@ToDate)
Update @TLedger set OpAmt =@OpAmt,ClAmt=(DrAmt-CrAmt)+@OpAmt

--If Does''nt Entry in Voucher Entry.
If((Select Count(*) From @TLedger)=0)
begin
	Declare @LedgName varchar(max)
	Select @LedgName = MLedger.LedgerName From MLedger Where LedgerNo=@LedgerNo
	insert into @TLedger values(@LedgerNo,@LedgName,@OpAmt,0,0,@OpAmt)
end
	RETURN
	END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCurrentLedgerBalanceExceptVoucher]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[GetCurrentLedgerBalanceExceptVoucher]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@PkVoucherNo	numeric(18)
	)
RETURNS @TLedgerBal Table(OpAmt numeric(18,2))
AS
BEGIN
	Declare @DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @BalAmt numeric(18,2),@Res int

	Set @DrAmt = 0 Set @CrAmt = 0 set @Res=0

	SELECT    @DrAmt= IsNull(SUM(TVoucherDetails.Debit),0), @CrAmt=IsNull(SUM(TVoucherDetails.Credit),0)
		FROM         TVoucherDetails INNER JOIN
							  TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo 
		WHERE     (TVoucherDetails.LedgerNo = @LedgerNo)  AND 
				  (TVoucherEntry.CompanyNo = @CompNo) AND (TVoucherEntry.IsCancel=''false'') AND
				  (TVoucherEntry.PKVoucherNo <> @PkVoucherNo)

	set @BalAmt = (@DrAmt - @CrAmt)
	insert into @TLedgerBal values(@BalAmt)
	
	RETURN
END

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLedgerBalanceByDaily]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetLedgerBalanceByDaily]
	(
	@MonthNo	int,
	@Year		int,
	@LedgerNo	numeric(18),
	@CompNo		numeric(18)
	)
RETURNS @TLedgerMonth TABLE(DateID int,DebitAmt numeric(18,2),CreditAmt numeric(18,2),ClosingAmt numeric(18,2))
AS
BEGIN
Declare @ItemName varchar(max)
Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrAmt numeric(18,2),@DrQty numeric(18,2)
Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2)
Declare @Rate numeric(18,2),@BalAmt numeric(18,2)
Declare @Month varchar(20),@MNo int
Declare @TDate datetime ,@FDate datetime,@Yr int,@cnt int


set @ClosingQty = 0 set @BalAmt = 0
set @DrAmt=0 set @CrAmt = 0

--Select @OpAmt=OpAmt From GetOpeningLedgerBalance(@LedgerNo,@CompNo,@FromDate,@ToDate,@BrID)

--insert into @TLedgerMonth values(0,0,0,@OpAmt)

set @MNo= @MonthNo--Month(@FromDate)
	set @Month =DateName("m",cast(@MonthNo as varchar)+''-1-''+cast(@Year as varchar))
	set @FDate =''1-''+ @Month+''-''+cast(@Year as varchar)
	
	
	if(@MNo=1 Or @MNo=3 Or @MNo=5 Or @MNo=7 Or @MNo=8 Or @MNo=10 Or @MNo=12)
		begin
			set @TDate = ''31-'' + @Month+ ''-'' + cast(@Year as varchar)
		end
	else if(@MNo=4 Or @MNo=6 Or @MNo=9 Or @MNo=11 )
		begin
			set @TDate = ''30-'' + @Month+ ''-'' + cast(@Year as varchar)
		end
	else
		begin
			if(@Year % 4=0)
				begin
					set @TDate = ''29-'' + @Month+ ''-'' + cast(@Year as varchar)
				end
			else
				begin
					set @TDate = ''28-'' + @Month+ ''-'' + cast(@Year as varchar)
				end
		end
		
--Select @OpAmt=OpAmt From GetOpeningLedgerBalance(@LedgerNo,@CompNo,@FDate,@TDate,@BrID)
--Select @OpAmt = isnull(OpeningBalance,0) From MLedger where LedgerNo = @LedgerNo
Select @OpAmt=OpAmt From GetOpeningLedgerBalance2(@LedgerNo,@CompNo,@FDate,@TDate)

insert into @TLedgerMonth values(0,0,0,@OpAmt)
	while(@FDate <=@TDate)
	begin
		
		 SELECT     @DrAmt = isNull(Sum(TVoucherDetails.Debit),0),@CrAmt=IsNull(Sum(TVoucherDetails.Credit),0)
FROM         TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode
WHERE       (TVoucherEntry.CompanyNo = @CompNo) And
			(TVoucherEntry.VoucherDate = @FDate)
			And (TVoucherDetails.LedgerNo = @LedgerNo)
			
			set @BalAmt=(@DrAmt-@CrAmt)+@OpAmt
			insert into @TLedgerMonth values(DatePart(d,@FDate),@DrAmt,@CrAmt,@BalAmt)
			set @DrAmt=0 set @CrAmt=0
			set @OpAmt=@BalAmt
		set @FDate=Dateadd(d,1,@FDate)
	End
RETURN
END
' 
END

GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDateRangeWiseGroupBalance1]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE function [dbo].[GetDateRangeWiseGroupBalance1] (@GroupNo as int, @CompanyNo as int,@FDate as datetime,@TDate as datetime)
returns @retFindReports TABLE (Oamt float,DAmt float,CAmt float,ClAmt float)
AS
BEGIN
   DECLARE @DOAmt float,@COAmt float,@OAmt float,@DAmt float,@CAmt float,@clamt float,
   @Balance float,@SignCode int,@ReturnVal float
--Debit Opening Balance
   SELECT @DOAmt=isnull(sum(OpeningBalance),0)
      FROM MLedger 
      WHERE GroupNo in(select GroupNo from MGroup where (GroupNo=@GroupNo 
      or ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)
      and CompanyNo=@CompanyNo and SignCode=1
--Credit Opening Balance
   SELECT @COAmt=isnull(sum(OpeningBalance),0)
      FROM MLedger 
      WHERE GroupNo in(select GroupNo from MGroup where (GroupNo=@GroupNo 
      or ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)
      and CompanyNo=@CompanyNo and SignCode=2
 set @OAmt=(isnull(@DOAmt,0)-isnull(@COAmt,0))
--VoucherEntries Up To From Date
 set @DAmt=isnull((SELECT isnull(Sum(debit),0)
      FROM TVoucherDetails
      WHERE LedgerNo in(select LedgerNo from MLedger where GroupNo 
      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)and CompanyNo=@CompanyNo)  
      and FKvoucherno in (select PKVoucherno from TVoucherEntry 
      where CompanyNo=@CompanyNo and VoucherTypeCode not in(6,10,17) and VoucherDate between @FDate and @TDate and LedgerNo in(select LedgerNo from MLedger where GroupNo 
      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)))),0)
  --set @OAmt=isnull(@DAmt,0)
--Debit-Credit Amount
 set @CAmt=isnull((SELECT isnull(Sum(credit),0)
      FROM TVoucherDetails
      WHERE LedgerNo in(select LedgerNo from MLedger where GroupNo 
      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)and CompanyNo=@CompanyNo)  
      and FKvoucherno in (select PKVoucherno from TVoucherEntry 
      where CompanyNo=@CompanyNo and VoucherTypeCode not in(6,10,17) and VoucherDate between @FDate and @TDate and LedgerNo in(select LedgerNo from MLedger where GroupNo 
      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)))),0)
 
set @ClAmt=isnull(@OAmt,0)+ isnull(@DAmt,0)-isnull(@CAmt,0)
insert into @retFindReports(OAmt,DAmt,CAmt,ClAmt) values (@OAmt,@DAmt,@CAmt,@ClAmt)
return 
end
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCurrentLedgerBalanceAll]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[GetCurrentLedgerBalanceAll]
	(
	@CompNo		numeric(18)
	)
RETURNS @TLedgerBal Table(LedgerNo Numeric(18), OpAmt numeric(18,2))
AS
BEGIN
	Declare @Res int

	Set @Res=0

	insert into @TLedgerBal 
	SELECT    TVoucherDetails.LedgerNo, IsNull(SUM(TVoucherDetails.Debit),0) - IsNull(SUM(TVoucherDetails.Credit),0)
		FROM         TVoucherDetails INNER JOIN
							  TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo 
		WHERE     (TVoucherEntry.CompanyNo = @CompNo) AND (TVoucherEntry.IsCancel=''false'')
	GROUP BY TVoucherDetails.LedgerNo
	
	RETURN
END


--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MItemNameDisplayType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MItemNameDisplayType](
	[ItemNameTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ItemNameType] [varchar](max) NULL,
	[Query1] [varchar](max) NULL,
	[Query2] [varchar](max) NULL,
	[Query3] [varchar](max) NULL,
	[StartIndex] [int] NULL,
	[Param1Value] [varchar](max) NULL,
	[Param2Value] [varchar](max) NULL,
	[PartyQuery] [varchar](max) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_ItemNameTypeDisplay] PRIMARY KEY CLUSTERED 
(
	[ItemNameTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TParkingBillDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TParkingBillDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ParkingBillNo] [numeric](18, 0) NULL,
	[Barcode] [varchar](50) NULL,
	[Qty] [numeric](18, 2) NULL,
	[Rate] [numeric](18, 2) NULL,
	[ItemDisc] [numeric](18, 2) NULL,
	[UOMNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[FkRateSettingNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[DiscAmt] [numeric](18, 2) NULL,
	[DiscPer] [numeric](18, 2) NULL,
 CONSTRAINT [PK_TParkingBillDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MNotification]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MNotification](
	[NotifyNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[NotifyType] [numeric](18, 0) NOT NULL,
	[NotifyMessage] [varchar](max) NULL,
	[NotifyDate] [datetime] NULL,
	[NotifyStatus] [int] NULL,
	[NotifyFileName] [varchar](300) NULL,
	[StatusNo] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MAlertNotification] PRIMARY KEY CLUSTERED 
(
	[NotifyNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDateRangeWiseGroupBalance]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE function [dbo].[GetDateRangeWiseGroupBalance] (@GroupNo as int, @CompanyNo as int,@FDate as datetime,@TDate as datetime)
returns @retFindReports TABLE (Balance float)
AS
BEGIN
   DECLARE @DOAmt float,@COAmt float,@OAmt float,@DAmt float,
   @Balance float,@SignCode int,@ReturnVal float
--VoucherEntries Up To From Date
  set @DAmt=isnull((SELECT isnull(Sum(debit)-sum(credit),0) 
      FROM TVoucherDetails
      WHERE LedgerNo in(select LedgerNo from MLedger where GroupNo 
      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)and CompanyNo=@CompanyNo)  
      and FKvoucherno in (select PKVoucherno from TVoucherEntry 
      where CompanyNo=@CompanyNo and VoucherTypeCode not in(6,10,17) and VoucherDate<=@FDate and LedgerNo in(select LedgerNo from MLedger where GroupNo 
      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)))),0)
  set @OAmt=isnull(@DAmt,0)
--Debit-Credit Amount
  set @DAmt=isnull((SELECT isnull(Sum(debit)-sum(credit),0) 
      FROM TVoucherDetails
      WHERE LedgerNo in(select LedgerNo from MLedger where GroupNo 
      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)and CompanyNo=@CompanyNo)  
      and FKvoucherno in (select PKVoucherno from TVoucherEntry 
      where CompanyNo=@CompanyNo and VoucherTypeCode not in(6,10,17) and VoucherDate between @FDate and @TDate and LedgerNo in(select LedgerNo from MLedger where GroupNo 
      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)))),0)
set @ReturnVal=isnull(@DAmt,0)+isnull(@OAmt,0)	
insert into @retFindReports(Balance)values(@ReturnVal)
return 
end
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFirmCurrentLedgerBalance]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[GetFirmCurrentLedgerBalance]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@MFGCompNo		numeric(18)
	)
RETURNS @TLedgerBal Table(OpAmt numeric(18,2))
AS
BEGIN
	Declare @DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @BalAmt numeric(18,2),@Res int
	Set @DrAmt = 0 Set @CrAmt = 0 set @Res=0

	SELECT     @DrAmt=ISNULL(SUM(TVoucherDetailsCompany.Debit), 0) ,@CrAmt= ISNULL(SUM(TVoucherDetailsCompany.Credit), 0) 
	FROM         TVoucherDetailsCompany INNER JOIN
						  TVoucherEntry INNER JOIN
						  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo ON 
						  TVoucherDetailsCompany.FkVoucherNo = TVoucherEntryCompany.PKVoucherCompanyNo 
	WHERE	  (TVoucherEntry.CompanyNo = @CompNo) AND 
			  (TVoucherEntry.IsCancel = ''false'') AND (TVoucherDetailsCompany.LedgerNo = @LedgerNo) AND 
			  (TVoucherEntryCompany.MfgCompNo = @MFGCompNo)

	set @BalAmt = (@DrAmt - @CrAmt)
	insert into @TLedgerBal values(@BalAmt)
	
	RETURN
END


--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRateSetting2]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE [dbo].[AddMRateSetting2]
     @PkSrNo                              numeric(18),
--   @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
	 @MRP				                  numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                           numeric(18,4),
	 @BSaleRate                           numeric(18,4),
	 @CSaleRate                           numeric(18,4),
	 @DSaleRate                           numeric(18,4),
	 @ESaleRate                           numeric(18,4),
	 @StockConversion					  Numeric(18,2),
--	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive							  bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
     @Weight1                             Numeric(18,2),  
     @Weight2                             Numeric(18,2),
     @LPPerc                             Numeric(18,2),  
     @SPPerc                             Numeric(18,2),
     @Hamali                             Numeric(18,2)
AS
if(cast(@FromDate as datetime) < cast(''02-02-1900 00:00:00'' as datetime))
begin
	set @FromDate= Convert(datetime,Cast(getdate() as varchar))
end
IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET

          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
	      MRP = @MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2,
          Weight1 = @Weight1,                              
          Weight2 = @Weight2,
          LPPerc = @LPPerc,                              
          SPPerc = @SPPerc,
          Hamali=@Hamali  
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT(''MRateSetting'', RESEED, @Id)
       INSERT INTO MRateSetting(
          ItemNo,
          FromDate,
          PurRate,
	      MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,

		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo,
          Weight1 ,                             
          Weight2,
          LPPerc,
          SPPerc,
          Hamali
)
       VALUES(
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1,
          @Weight1,                              
          @Weight2,
          @LPPerc,
          @SPPerc,
          @Hamali
)

END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFirmOpeningLedgerBalanceOnlyAll]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetFirmOpeningLedgerBalanceOnlyAll]
	(
	@CompNo		numeric(18),
	@MFGCompNo		numeric(18)
	)
RETURNS @TLedgerBal Table(LedgerNo numeric(18), OpAmt numeric(18,2))
AS
BEGIN
	Declare @Res int
	Set @Res=0

	insert into @TLedgerBal 
	SELECT     TVoucherDetailsCompany.LedgerNo , ISNULL(SUM(TVoucherDetailsCompany.Debit), 0) - ISNULL(SUM(TVoucherDetailsCompany.Credit), 0) 
	FROM         TVoucherDetailsCompany INNER JOIN
						  TVoucherEntry INNER JOIN
						  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo ON 
						  TVoucherDetailsCompany.FkVoucherNo = TVoucherEntryCompany.PKVoucherCompanyNo
	WHERE	  (TVoucherEntry.CompanyNo = @CompNo) AND 
			  (TVoucherEntry.IsCancel = ''false'') AND 
			  (TVoucherEntryCompany.MfgCompNo = @MFGCompNo) AND (TVoucherEntry.VoucherTypeCode = 36) -- 36 = OpeningBalance
	GROUP BY TVoucherDetailsCompany.LedgerNo
	
	RETURN
END



--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLedgerBalance1]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'--Created On 25-July-2008
CREATE FUNCTION [dbo].[GetLedgerBalance1]
(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,	
	@BalType	int	
)
RETURNS @TLedger Table(LdgNo numeric(18),LdgName varchar(max),DrAmt numeric(18,2),CrAmt numeric(18,2),ClAmt numeric(18,2))
AS
	BEGIN
	Declare @OpAmt numeric(18,2),@ClAmt numeric(18,2)
	insert into @TLedger (LdgNo,LdgName,DrAmt,CrAmt)
		SELECT     MLedger.LedgerNo, MLedger.LedgerName, SUM(TVoucherDetails.Debit) AS Expr1, SUM(TVoucherDetails.Credit) AS Expr2
FROM         TVoucherDetails INNER JOIN
                      TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo
WHERE     (TVoucherDetails.LedgerNo = @LedgerNo)  AND (TVoucherEntry.VoucherDate >= @FromDate) AND 
                      (TVoucherEntry.VoucherDate <= @ToDate) And (TVoucherEntry.CompanyNo = @CompNo)
GROUP BY MLedger.LedgerNo, MLedger.LedgerName

--Select @OpAmt=OpAmt From GetOpeningLedgerBalance1(@LedgerNo,@CompNo,@FromDate,@ToDate,@BalType)

--Select @OpAmt=OpAmt From GetOpeningLedgerBalance1(@LedgerNo,@CompNo,@FromDate,@ToDate,@BalType)
--SELECT     @OpAmt=case when SignCode=@BalType then isnull(OpeningBalance,0) else isnull(-OpeningBalance,0) end FROM MLedger WHERE (LedgerNo = @LedgerNo)
Select @OpAmt=OpAmt From GetOpeningLedgerBalance2(@LedgerNo,@CompNo,@FromDate,@ToDate)

--if(@BalType=1)
--Update @TLedger set DrAmt=DrAmt + @OpAmt
--else if (@BalType=1)
--Update @TLedger set CrAmt=CrAmt + @OpAmt

if(@BalType=1)
	begin
		Update @TLedger set ClAmt=(DrAmt-CrAmt)+@OpAmt 
	end
else if(@BalType = 2)
	begin
		Update @TLedger set ClAmt=(CrAmt-DrAmt)+@OpAmt 
	end	
else
	begin
		Update @TLedger set ClAmt=(DrAmt-CrAmt)+@OpAmt 
	end

--If Does''nt Entry in Voucher Entry.
If((Select Count(*) From @TLedger)=0)
begin
	Declare @LedgName varchar(max)
	Select @LedgName = LedgerName From MLedger Where LedgerNo=@LedgerNo
	--select @ClAmt = ClAmt from @TLedger
	--if(@ClAmt<>0)
	--begin
	insert into @TLedger values(@LedgerNo,@LedgName,0,0,@OpAmt)
	--end
end
	RETURN
	END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFirmCurrentLedgerBalanceAll]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[GetFirmCurrentLedgerBalanceAll]
	(
	@CompNo		numeric(18),
	@MFGCompNo		numeric(18)
	)
RETURNS @TLedgerBal Table(LedgerNo numeric(18), OpAmt numeric(18,2))
AS
BEGIN
	Declare @Res int
	Set @Res=0

	insert into @TLedgerBal 
	SELECT     TVoucherDetailsCompany.LedgerNo , ISNULL(SUM(TVoucherDetailsCompany.Debit), 0) - ISNULL(SUM(TVoucherDetailsCompany.Credit), 0) 
	FROM         TVoucherDetailsCompany INNER JOIN
						  TVoucherEntry INNER JOIN
						  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo ON 
						  TVoucherDetailsCompany.FkVoucherNo = TVoucherEntryCompany.PKVoucherCompanyNo
	WHERE	  (TVoucherEntry.CompanyNo = @CompNo) AND 
			  (TVoucherEntry.IsCancel = ''false'') AND 
			  (TVoucherEntryCompany.MfgCompNo = @MFGCompNo)
	GROUP BY TVoucherDetailsCompany.LedgerNo
	
	RETURN
END

--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TOtherStock]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TOtherStock](
	[PkOtherStockTrnNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
	[FkVoucherTrnNo] [numeric](18, 0) NULL,
	[FkVoucherSrNo] [numeric](18, 0) NULL,
	[GroupNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[TrnCode] [numeric](18, 0) NULL,
	[Quantity] [numeric](18, 2) NULL,
	[BilledQuantity] [numeric](18, 2) NULL,
	[Rate] [numeric](18, 2) NULL,
	[Amount] [numeric](18, 2) NULL,
	[NetRate] [numeric](18, 2) NULL,
	[NetAmount] [numeric](18, 2) NULL,
	[TaxPercentage] [numeric](18, 2) NULL,
	[TaxAmount] [numeric](18, 2) NULL,
	[DiscPercentage] [numeric](18, 2) NULL,
	[DiscAmount] [numeric](18, 2) NULL,
	[DiscRupees] [numeric](18, 2) NULL,
	[DiscPercentage2] [numeric](18, 2) NULL,
	[DiscAmount2] [numeric](18, 2) NULL,
	[DiscRupees2] [numeric](18, 2) NULL,
	[FkUomNo] [numeric](18, 0) NULL,
	[FkStockBarCodeNo] [numeric](18, 0) NULL,
	[FkRateSettingNo] [numeric](18, 0) NULL,
	[FkItemTaxInfo] [numeric](18, 0) NULL,
	[IsVoucherLock] [bit] NULL,
	[FreeQty] [numeric](18, 2) NULL,
	[FreeUOMNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
	[LandedRate] [numeric](18, 2) NULL,
	[BalanceQty] [numeric](18, 2) NULL,
	[IsComplete] [bit] NULL,
	[DisplayItemName] [varchar](max) NULL,
 CONSTRAINT [PK_TOtherStock] PRIMARY KEY CLUSTERED 
(
	[PkOtherStockTrnNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MState]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MState](
	[StateNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[StateName] [varchar](50) NULL,
	[StateShortCode] [varchar](50) NULL,
	[StateCode] [numeric](18, 0) NOT NULL,
	[StateLangName] [nchar](50) NULL,
	[CountryNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MState] PRIMARY KEY CLUSTERED 
(
	[StateNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMStockBarcode]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/02/2012
CREATE PROCEDURE  [dbo].[DeleteMStockBarcode] 
@PkStockBarcodeNo                             numeric(18)


AS

       DELETE FROM MStockBarcode
       WHERE
          PkStockBarcodeNo = @PkStockBarcodeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSetting]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSetting](
	[LastPrint] [numeric](18, 0) NOT NULL,
	[AppVersion] [varchar](50) NULL,
	[CompanyNo] [numeric](18, 0) NULL
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLedger]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLedger](
	[LedgerNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LedgerUserNo] [varchar](100) NULL,
	[LedgerName] [varchar](250) NULL,
	[ContactPerson] [varchar](100) NULL,
	[LedgerLangName] [nvarchar](500) NULL,
	[GroupNo] [numeric](18, 0) NULL,
	[OpeningBalance] [numeric](18, 2) NULL,
	[SignCode] [numeric](18, 0) NULL,
	[StateCode] [numeric](18, 0) NULL,
	[MaintainBillByBill] [bit] NULL,
	[IsActive] [bit] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[LedgerStatus] [int] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[StatusNo] [int] NULL,
	[IsEnroll] [bit] NULL,
	[IsSendSMS] [bit] NULL,
	[ContactPersonLang] [nvarchar](500) NULL,
	[TransporterNo] [numeric](18, 0) NULL,
	[IsPartyWiseRate] [bit] NULL,
	[QuotationRate] [bit] NULL,
	[IsSendEmail] [bit] NULL,
 CONSTRAINT [PK_MLedger] PRIMARY KEY CLUSTERED 
(
	[LedgerNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MLedger]') AND name = N'IX_MLedger')
CREATE NONCLUSTERED INDEX [IX_MLedger] ON [dbo].[MLedger] 
(
	[LedgerNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TOtherVoucherEntry]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TOtherVoucherEntry](
	[PkOtherVoucherNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[VoucherTypeCode] [numeric](18, 0) NULL,
	[VoucherUserNo] [numeric](18, 0) NULL,
	[VoucherDate] [datetime] NULL,
	[VoucherTime] [datetime] NULL,
	[Narration] [varchar](50) NULL,
	[Reference] [varchar](50) NULL,
	[ChequeNo] [numeric](18, 0) NULL,
	[ClearingDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[BilledAmount] [numeric](18, 2) NULL,
	[ChallanNo] [varchar](50) NULL,
	[Remark] [varchar](50) NULL,
	[InwardLocationCode] [numeric](18, 0) NULL,
	[MacNo] [numeric](18, 0) NULL,
	[IsCancel] [bit] NULL,
	[PayTypeNo] [numeric](18, 0) NULL,
	[RateTypeNo] [numeric](18, 0) NULL,
	[TaxTypeNo] [numeric](18, 0) NULL,
	[IsVoucherLock] [bit] NULL,
	[VoucherStatus] [int] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[OrderType] [numeric](18, 0) NULL,
	[ReturnAmount] [numeric](18, 2) NULL,
	[Visibility] [numeric](18, 2) NULL,
	[DiscPercent] [numeric](18, 2) NULL,
	[DiscAmt] [numeric](18, 2) NULL,
	[StatusNo] [int] NULL,
	[MixMode] [int] NULL,
	[IsItemLevelDisc] [bit] NULL,
	[IsFooterLevelDisc] [bit] NULL,
	[SchemeDisc] [numeric](18, 2) NULL,
	[DistDisc] [numeric](18, 2) NULL,
	[CashDisc] [numeric](18, 2) NULL,
	[Charges] [numeric](18, 2) NULL,
	[SubTotal] [numeric](18, 2) NULL,
	[TotalTax] [numeric](18, 2) NULL,
	[RoundOff] [numeric](18, 2) NULL,
	[OtherTax] [numeric](18, 2) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[IsComplete] [bit] NULL,
	[VersionNo] [numeric](18, 0) NULL,
	[ServerOtherVoucherNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TOtherVoucherEntry] PRIMARY KEY CLUSTERED 
(
	[PkOtherVoucherNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteAllTOtherVoucherEntry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'Create PROCEDURE  [dbo].[DeleteAllTOtherVoucherEntry] 
@PkOtherVoucherNo                   numeric(18)


AS

DELETE FROM TOtherStock WHERE FKVoucherNo = @PkOtherVoucherNo
DELETE FROM TOtherVoucherEntry WHERE PkOtherVoucherNo = @PkOtherVoucherNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MBrandSponsor]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MBrandSponsor](
	[SponsorNo] [numeric](18, 0) NOT NULL,
	[BrandSponsorName] [varchar](50) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[Remark] [varchar](max) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[GlobalSponsorNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MBrandSponsor] PRIMARY KEY CLUSTERED 
(
	[SponsorNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTOtherVoucherEntry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 17/05/2014
CREATE PROCEDURE  [dbo].[DeleteTOtherVoucherEntry] 
@PkOtherVoucherNo                   numeric(18)


AS

--       DELETE FROM TOtherVoucherEntry
--       WHERE
--          PkOtherVoucherNo = @PkOtherVoucherNo
Update TOtherVoucherEntry set VoucherStatus=12,StatusNo=2 Where PkOtherVoucherNo = @PkOtherVoucherNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MTransaction]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MTransaction](
	[Trno] [nchar](10) NOT NULL,
	[TransactionMode] [nvarchar](max) NULL,
	[IsActive] [bit] NULL
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSalesman]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSalesman](
	[SalesmanNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[SalesmanName] [varchar](50) NULL,
	[SalesmanUserNo] [numeric](18, 0) NULL,
	[Address] [varchar](max) NULL,
	[PinCode] [varchar](50) NULL,
	[PhoneNo] [varchar](50) NULL,
	[Mobile] [varchar](50) NULL,
	[Disc] [numeric](18, 2) NULL,
	[Rupees] [numeric](18, 2) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_MSalesman] PRIMARY KEY CLUSTERED 
(
	[SalesmanNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateServerOtherVoucherNo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE  [dbo].[UpdateServerOtherVoucherNo] 


@StatusNo                             numeric(18),
@VersionNo                             numeric(18),
@PkOtherVoucherNo                             numeric(18),
@ServerOtherVoucherNo                             numeric(18)


AS

Update TOtherVoucherEntry set StatusNo=@StatusNo,ServerOtherVoucherNo=@ServerOtherVoucherNo,VersionNo=@VersionNo  where PkOtherVoucherNo = @PkOtherVoucherNo
--
--       DELETE FROM MCity
--       WHERE
--          CityNo = @CityNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MMenuMaster]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MMenuMaster](
	[SrNo] [numeric](18, 0) NOT NULL,
	[MenuID] [numeric](18, 0) NULL,
	[MenuName] [nvarchar](100) NULL,
	[ControlMenu] [numeric](18, 0) NULL,
	[NavigateURL] [nvarchar](50) NULL,
	[IsChildNode] [int] NULL,
	[IsAllow] [int] NULL,
	[ShortCutKey] [varchar](50) NULL,
	[ConstructorValue] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MMenuMaster] PRIMARY KEY CLUSTERED 
(
	[SrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MOtherSettings]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MOtherSettings](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[SettingsKeyCode] [varchar](50) NULL,
 CONSTRAINT [PK_MOtherSettings] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddTVoucherDetails]
     @PkVoucherTrnNo                      numeric(18),
     @FkVoucherNo                         numeric(18),
     @VoucherSrNo                         numeric(18),
     @SignCode                            numeric(18),
     @LedgerNo                            numeric(18),
     @Debit                               numeric(18,2),
     @Credit                              numeric(18,2),
	 @SrNo								  numeric(18),
	 @CompanyNo							  numeric(18),
	 @Narration							  varchar(max),
	 @ReturnID							  int output
AS
IF EXISTS(select PkVoucherTrnNo from TVoucherDetails
          where
          PkVoucherTrnNo = @PkVoucherTrnNo)
     BEGIN
       --Update existing row
       UPDATE TVoucherDetails
       SET
          FkVoucherNo = @FkVoucherNo,
          VoucherSrNo = @VoucherSrNo,
          SignCode = @SignCode,
          LedgerNo = @LedgerNo,
          Debit = @Debit,
          Credit = @Credit,
		  CompanyNo = @CompanyNo,
		  SrNo = @SrNo,
		  Narration=@Narration,
		  StatusNo = 2
       WHERE
          PkVoucherTrnNo = @PkVoucherTrnNo
       set @ReturnID=@PkVoucherTrnNo    

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkVoucherTrnNo),0) From TVoucherDetails
       DBCC CHECKIDENT(''TVoucherDetails'', RESEED, @Id)
       INSERT INTO TVoucherDetails(
          FkVoucherNo,
          VoucherSrNo,
          SignCode,
          LedgerNo,
          Debit,
          Credit,
		  CompanyNo,
		  SrNo,
	      Narration,
		  StatusNo
)
       VALUES(
          @FkVoucherNo,
          @VoucherSrNo,
          @SignCode,
          @LedgerNo,
          @Debit,
          @Credit,
		  @CompanyNo,
		  @SrNo,
		  @Narration,
		  1
)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MStockItemBalanceTemp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MStockItemBalanceTemp](
	[ItemNo] [numeric](18, 0) NOT NULL,
	[MRP] [numeric](18, 2) NOT NULL,
	[GodownNo] [numeric](18, 0) NOT NULL,
	[UserID] [numeric](18, 0) NOT NULL,
	[PrevStock] [numeric](18, 2) NULL,
	[CurrentStock] [numeric](18, 2) NULL,
 CONSTRAINT [PK_MStockItemBalanceTemp] PRIMARY KEY CLUSTERED 
(
	[ItemNo] ASC,
	[MRP] ASC,
	[GodownNo] ASC,
	[UserID] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllItemClosingStock]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetAllItemClosingStock]
(
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime
)
 RETURNS @retFindReports TABLE (Balance float)

--RETURNS @TStock TABLE (ItemNo int,ItemName varchar(max),Quantity numeric(18,2),Rate numeric(18,2),Amount numeric(18,2))
AS
	BEGIN
Declare @TStock TABLE (ItemNo int,ItemName varchar(max),Quantity numeric(18,2),Rate numeric(18,2),Amount numeric(18,2))
		Declare @ItemName varchar(max)
Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrAmt numeric(18,2),@DrQty numeric(18,2)
Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2),@DrRate numeric(18,2),@CrRate numeric(18,2)
Declare @Rate numeric(18,2),@BalAmt numeric(18,2),@ItemNo numeric(18),@Balance float
set @Rate = 0

Declare Cursor1 cursor for SELECT ItemNo FROM MStockItems
Open Cursor1
Fetch next from Cursor1 into @ItemNo
while (@@Fetch_Status=0)
	begin
		SELECT @ItemName=Itemname FROM MStockItems_V(NULL,NULL,NULL,NULL,NULL,NULL,NULL) where ItemNo = @ItemNo

		 --Get Branchwise Item Opening Stock Amount And Quantity   
		 Select @OpQty=OpQty,@OpAmt=OpAmt From GetOpeningStock(@CompNo,@FromDate,@ItemNo,0,0)  

		select @DrAmt=DrAmt,@DrQty=DrQty,@CrAmt=CrAmt,@CrQty=CrQty From GetClosingStock(@CompNo,@FromDate,@ToDate,@ItemNo,0,0)
		      

		               
		set @ClosingQty=(@DrQty-@CrQty)+@OpQty
			if (@DrQty+@OpQty)<>0 
				--set @Rate=(@DrAmt+@OpAmt)/@ClosingQty
				set @Rate=round((@DrAmt+@OpAmt)/(@DrQty+@OpQty),2)
				--set @Rate=((@DrAmt-@CrAmt)+@OpAmt)/@ClosingQty
			else
				if @DrQty=0
					begin
						set @Rate=0
					end
				--else
				--	set @Rate=1
			set @BalAmt=round(isnull((@ClosingQty*@Rate),0),2) 
			--set @Rate = @DrRate - @CrRate                  
			--set @BalAmt = (@DrAmt - @CrAmt)+ @OpAmt
		Insert into @TStock values(@ItemNo,@ItemName,@ClosingQty,abs(@Rate),@BalAmt)
		Fetch next from Cursor1 into @ItemNo
	end
	Close Cursor1
	Deallocate Cursor1

select @Balance = sum(Amount) from @TStock
if(@Balance<0)
 set @Balance = 0
insert into @retFindReports(Balance)values(@Balance)

	RETURN
	END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TDeliveryAddress]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TDeliveryAddress](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherno] [numeric](18, 0) NULL,
	[Ledgerno] [numeric](18, 0) NULL,
	[LedgerDetailsNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserId] [int] NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](500) NULL,
	[StatusNo] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TDeliveryAddress] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetClosingStockItemWise]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'--Created On 6-Nov-2008
CREATE FUNCTION [dbo].[GetClosingStockItemWise]
	(	
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	
	@Type		int,
	@No			numeric(18)
	)
RETURNS @TStockMonth TABLE(ItemID int,ItemName varchar(max), OpQty numeric(18,2), OpAmt numeric(18,2),InwQty numeric(18,2),InwAmt numeric(18,2),OutwQty numeric(18,2),OutwAmt numeric(18,2),ClosingQty numeric(18,2),ClosingAmt numeric(18,2))
AS
BEGIN
Declare @ItemName varchar(max)
Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrAmt numeric(18,2),@DrQty numeric(18,2)--,@OpDt datetime
Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2)
Declare @Rate numeric(18,5),@BalAmt numeric(18,2),@ItemNo	numeric(18)
Declare @Month varchar(20) ,@MNo int
Declare @TDate datetime ,@Yr int,@cnt int


Declare CurAll Cursor  for Select ItemNo From MStockItems where CompanyNo= @CompNo Order by ItemName --AllItems
Open CurAll
Fetch Next From CurAll into @ItemNo
while(@@Fetch_Status = 0)
begin
	set @ClosingQty = 0 set @BalAmt = 0 set @Rate = 0
set @DrQty=0 set @DrAmt=0 set @CrQty = 0 set @CrAmt = 0

	SELECT @ItemName= Itemname FROM MStockItems_v(NULL,NULL,NULL,NULL,NULL,NULL,NULL) where ItemNo = @ItemNo
--	
--	Select @OpQty=OpBalQty,@OpAmt=OpBalAmount From MStockItems Where (CompanyNo =@CompNo) and (ItemNo = @ItemNo)
--	
--	SELECT     @OpAmt=isnull(SUM(OpBalAmount),0), @OpQty=isnull(SUM(OpBalQty) ,0)
--	FROM         MStockItems
--	WHERE     (ItemNo = @ItemNo)

	--SELECT     @OpAmt=isnull(SUM(OpAmount),0), @OpQty=isnull(SUM(OpQuantity) ,0)
	--FROM         MItemOpeningStock
	--WHERE     (PkItemNo = @ItemNo) 
--   
	---insert into @TStockMonth values(0,''Opening Balance'',0,0,0,0,@OpQty,@OpAmt)
	--select @OpDt=BooksBeginFrom from MCompany
Select @OpQty=OpQty, @OpAmt=OpAmt from GetOpeningStock(@CompNo,@FromDate, @ItemNo,@Type,@No)

	Select @DrAmt=DrAmt,@DrQty=DrQty,@CrAmt=CrAmt,@CrQty=CrQty From GetClosingStock(@CompNo,@FromDate,@ToDate,@ItemNo,@Type,@No)
	set @ClosingQty=(@DrQty-@CrQty)+@OpQty 
	if (@DrQty+@OpQty)<>0 
		set @Rate=(@DrAmt+@OpAmt)/(@DrQty+@OpQty)

	else
		if @DrQty=0
			begin
				set @Rate=0
			end
		--else
		--	set @Rate=1
		
	set @BalAmt=round(isnull((@ClosingQty*@Rate),0),2) 
		
	insert into @TStockMonth values(@ItemNo,@ItemName,@OpQty,@OpAmt,@DrQty,@DrAmt,@CrQty,@CrAmt,@ClosingQty,@BalAmt)
	
	set @OpQty = 0
	set @OpAmt = 0
	set @DrQty=0 set @DrAmt=0 set @CrQty = 0 set @CrAmt = 0

Fetch Next From CurAll into @ItemNo
end
Close CurAll Deallocate CurAll

RETURN
END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemClosingStock]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetItemClosingStock]
(
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@ItemNo		numeric(18),
	@Type		int,
	@No			numeric(18)
)
RETURNS @TStock TABLE (ItemNo int,ItemName varchar(max),Quantity numeric(18,2),Rate numeric(18,2),Amount numeric(18,2))
AS
	BEGIN
		Declare @ItemName varchar(max)
Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrAmt numeric(18,2),@DrQty numeric(18,2)
Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2),@DrRate numeric(18,2),@CrRate numeric(18,2)
Declare @Rate numeric(18,5),@BalAmt numeric(18,2)
set @Rate = 0

SELECT @ItemName=Itemname FROM MStockItems_V(NULL,NULL,NULL,NULL,NULL,NULL,NULL) where ItemNo = @ItemNo

 --Get Branchwise Item Opening Stock Amount And Quantity   
 Select @OpQty=IsNull(OpQty,0),@OpAmt=OpAmt From GetOpeningStock(@CompNo,@FromDate,@ItemNo,@Type,@No)  
--Select @OpQty=OpBalQty,@OpAmt=OpBalAmount From MStockItems where(CompanyNo = @CompNo) AND (ItemNo = @ItemNo)

select @DrAmt=DrAmt,@DrQty=abs(DrQty),@CrAmt=CrAmt,@CrQty=CrQty From GetClosingStock(@CompNo,@FromDate,@ToDate,@ItemNo,@Type,@No)


set @ClosingQty=(abs(@DrQty)-@CrQty)+@OpQty
	if (@DrQty+@OpQty)<>0 
		--set @Rate=(@DrAmt+@OpAmt)/@ClosingQty
		set @Rate=(@DrAmt+@OpAmt)/(@DrQty+@OpQty)
		--set @Rate=round(((@DrAmt-@CrAmt)+@OpAmt)/@ClosingQty, 2)
	else
		if @DrQty=0
			begin
				set @Rate=0
			end
		--else
		--	set @Rate=1
	set @BalAmt=round(isnull((@ClosingQty*@Rate),0),2) 
	--set @Rate = @DrRate - @CrRate                  
--	set @BalAmt = (@DrAmt - @CrAmt)+ @OpAmt
Insert into @TStock values(@ItemNo,@ItemName,@ClosingQty,abs(@Rate),@BalAmt)
	
	RETURN
	END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MBarcodePrefix]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MBarcodePrefix](
	[PkPrefixBarcodeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[PrefixBarcode] [varchar](50) NULL,
	[MainGroupNo] [numeric](18, 0) NULL,
	[BrandNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[DepartmentNo] [numeric](18, 0) NULL,
	[CategoryNo] [numeric](18, 0) NULL,
	[SalesTaxSettingNo] [numeric](18, 0) NULL,
	[PurchaseTaxSettingNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_BarcodePrefix] PRIMARY KEY CLUSTERED 
(
	[PkPrefixBarcodeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLedgerDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddMLedgerDetails]
     @LedgerDetailsNo                           numeric(18),
     @LedgerNo                            numeric(18),
     @CreditLimit                         numeric(18,2),
     @CreditDays                          numeric(18),
     @Address                             varchar(300),
     @StateNo                             numeric(18),
     @CityNo                              numeric(18),
     @PinCode                             varchar(100),
     @PhNo1                               varchar(100),
     @PhNo2                               varchar(100),
     @MobileNo1                           varchar(100),
     @MobileNo2                           varchar(100),
     @EmailID                             varchar(100),
     @CustomerType                        numeric(18,0),
     @PANNo                               varchar(100),
     @AccountNo                           varchar(150),
     @ReportName                          varchar(max),
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo						      numeric(18),
	 @FSSAI								  varchar(100),
	 @AreaNo							  numeric(18),
	 @AddressLang                         nvarchar(500),
     @RateTypeNo						  numeric(18),
     @DiscPer						      numeric(18),
     @DiscRs					      	  numeric(18),
     @AdharNo					          varchar(100),
     @AnyotherNo1					      varchar(100),
     @AnyotherNo2				      	  varchar(100),
     @GSTNo				            	  varchar(100),
     @FSSAIDate                           datetime,
     @GSTDate                             datetime,
	 @Distance							  numeric(18,2)
AS
IF EXISTS(select LedgerDetailsNo from MLedgerDetails
          where
          LedgerDetailsNo = @LedgerDetailsNo)
     BEGIN
       --Update existing row
       UPDATE MLedgerDetails
       SET
          LedgerNo = @LedgerNo,
          CreditLimit=@CreditLimit,
          CreditDays=@CreditDays, 
          Address = @Address,
	      StateNo=@StateNo,
          CityNo = @CityNo,
          PinCode = @PinCode,
          PhNo1 = @PhNo1,
          PhNo2 = @PhNo2,
          MobileNo1 = @MobileNo1,
          MobileNo2 = @MobileNo2,
          EmailID = @EmailID,
          CustomerType = @CustomerType,
          PANNo=@PANNo,
          AccountNo=@AccountNo,
          
         ReportName=@ReportName,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo = @CompanyNo,
		  FSSAI = @FSSAI,	
	      AreaNo = @AreaNo,
          ModifiedBy =  isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2,
		  AddressLang=@AddressLang ,
		  RateTypeNo=@RateTypeNo,
		  DiscPer	=@DiscPer,
		  DiscRs	=@DiscRs,
		  AdharCardNo=@AdharNo,
          AnyotherNo1=@AnyotherNo1,
          AnyotherNo2=@AnyotherNo2,
		  GSTNo=@GSTNo,
          FSSAIDate=@FSSAIDate,
		  GSTDate=@GSTDate,
		  Distance = @Distance

       WHERE
          LedgerDetailsNo = @LedgerDetailsNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(LedgerDetailsNo),0) From MLedgerDetails
       DBCC CHECKIDENT(''MLedgerDetails'', RESEED, @Id)
       INSERT INTO MLedgerDetails(
          LedgerNo,
          CreditLimit,
          CreditDays,
          Address,
		  StateNo,
          CityNo,
          PinCode,
          PhNo1,
          PhNo2,
          MobileNo1,
          MobileNo2,
          EmailID,     
          CustomerType,
          PANNo,
          AccountNo,
          ReportName,      
          UserID,
          UserDate,
          StatusNo,
		  CompanyNo,  
		  FSSAI,
	      AreaNo,
		  AddressLang,
		  RateTypeNo,
		  DiscPer,
		  DiscRs,
          AdharCardNo,
	      AnyotherNo1,
		  AnyotherNo2,
		  GSTNo,
		  FSSAIDate,
		  GSTDate,
		  Distance
)
       VALUES(
          @LedgerNo,
          @CreditLimit,
          @CreditDays,
          @Address,
		  @StateNo,
          @CityNo,
          @PinCode,
          @PhNo1,
          @PhNo2,
          @MobileNo1,
          @MobileNo2,
          @EmailID,
          @CustomerType,
          @PANNo,
          @AccountNo,
          @ReportName,
          @UserID,
          @UserDate,
          1,
		  @CompanyNo,
		  @FSSAI,
	      @AreaNo,
		  @AddressLang,
		  @RateTypeNo,
          @DiscPer,
          @DiscRs,
          @AdharNo,
		  @AnyotherNo1,
		  @AnyotherNo2,
		  @GSTNo,
		  @FSSAIDate,
		  @GSTDate,
		  @Distance
)

END

------------------------------------------------------------------------------------------------------------------------------------------------------------------

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSubTaxType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSubTaxType](
	[SubTaxTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[SubTaxTypeName] [varchar](50) NULL,
	[SubTaxTypeShortCode] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_MSubTaxType] PRIMARY KEY CLUSTERED 
(
	[SubTaxTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LedgerBookBillWise]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE  PROCEDURE [dbo].[LedgerBookBillWise]
@FromDate          datetime,
@ToDate            datetime,
@VchType           int,
@CompanyNo                   varchar(50),
@PartyNo                   varchar(max)
AS

--Set  @FromDate=''1-1-2013''
--Set @ToDate=''10-Nov-2015''
--Set @VchType=15
--Set @CompanyNo=''1''
--Set @PartyNo=''7897''




Declare @StrQry varchar(max)
declare @TempTable Table(PayTypeNo numeric(18), VoucherDate datetime, BillNo varchar(250), VoucherTypeCode numeric(18), BillAmount numeric(18,2), PayType varchar(50), recvDate datetime, recvAmount numeric(18,2), cheaqueNo varchar(50), RefNo numeric(18), TypeofRef varchar(25), LedgerName varchar(250), LedgerNo numeric(18), OpenBal numeric(18,2), DiscAmt numeric(18,2),Remark varchar(max))
declare @TempOpTable Table(OpBal numeric(18,2), Ledger numeric(18))
declare @VchDate datetime, @ledgNo numeric(18)
declare @RefNumber numeric(18), @opB numeric(18,2)
declare @strOp varchar(max),@VType varchar(10)
--Declare @AdjOpBal numeric(18,2),@OpAdjBal numeric(18,2),@TotOpBal numeric(18,2),@OpBal numeric(18,2)



if(@VchType=15)
        set @VType=''15,30,12''
else 
        set @VType=''9,31,13''

--set @strOp = '' select isnull(case when MLedger.Signcode = 2 then OpeningBalance else OpeningBalance*-1 end ,0) +
--sum(TVoucherdetails.Credit) - sum(TVoucherdetails.Debit) as opBal,
--MLedger.ledgerno from mledger INNER JOIN TVoucherDetails ON TVoucherDetails.LedgerNo = MLedger.LedgerNo 
--INNER JOIN Tvoucherentry ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
--where TVoucherEntry.VoucherDate <= ''''''+cast(@FromDate as varchar)+'''''' and MLedger.LedgerNo in (''+cast(@PartyNo as varchar)+'')
--group by MLedger.ledgerno, OpeningBalance, MLedger.Signcode''
--insert into @TempOpTable EXEC(@strOp)

set @StrQry =  ''SELECT TVoucherEntry.PayTypeNo, TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherTypeCode, '' +
 '' (SELECT     CASE WHEN TVoucherDetails.Debit <> 0 THEN TVoucherDetails.Debit ELSE TVoucherDetails.Credit END AS Expr1) AS billamount, '''''''' as PayTypeName,'''''''' AS recvDate,  0 AS recvamount, '' +
 '' (Select Case When TCC.ChequeNo<>'''''''' Then TCC.ChequeNo Else TCC.CreditCardNo End From TVoucherChqCreditDetails TCC Where TCC.FkVoucherNo=TVoucherEntry.PKVoucherno) ,0 as RefNo, 0 as TypeOfRef,  MLedger.LedgerName,MLedger.LedgerNo, 0 as OpenBal,  0 As DiscAmt,'' +
'' Case When (TVoucherEntry.VoucherTypeCode=15 Or TVoucherEntry.VoucherTypeCode=9) Then '''''''' Else TVoucherEntry.Remark End AS Remark '' +
'' from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo  INNER JOIN MVoucherType ON  TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN '' +
 '' fn_Split (''''''+(@PartyNo)+ '''''','''','''' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric) INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) where  TVoucherEntry.VoucherTypeCode in (36) and  TVoucherEntry.VoucherDate < ''''''+cast(@FromDate as varchar)+'''''' and TVoucherEntry.iscancel=''''false''''  ''+


'' union all SELECT TVoucherEntry.PayTypeNo, TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherTypeCode, ''+
                      '' (SELECT     CASE WHEN TVoucherDetails.Debit <> 0 THEN TVoucherDetails.Debit ELSE TVoucherDetails.Credit END AS Expr1) AS billamount, ''+
                      '' MPayType.PayTypeName, TVoucherEntry_1.VoucherDate AS recvDate, ''+
                      --'' (SELECT     CASE WHEN TVoucherDetails_1.Debit <> 0 THEN IsNull(TVoucherDetails_1.Debit,0) ELSE IsNull(TVoucherDetails_1.Credit,0) END AS Expr1) AS recvamount, '' +
                      '' TVoucherRefDetails.Amount-ISNULL(TVoucherRefDetails.DiscAmt,0) AS recvamount, '' +
                      '' (Select Case When TCC.ChequeNo<>'''''''' Then TCC.ChequeNo Else TCC.CreditCardNo End From TVoucherChqCreditDetails TCC Where TCC.FkVoucherNo=TVoucherEntry.PKVoucherno) , '' + 
                      '' TVoucherRefDetails.RefNo, TVoucherRefDetails.TypeOfRef, MLedger.LedgerName,MLedger.LedgerNo, 0 as OpenBal, ''+
                                          '' ISNULL(TVoucherRefDetails.DiscAmt,0) As DiscAmt,Case When (TVoucherEntry.VoucherTypeCode=15 Or TVoucherEntry.VoucherTypeCode=9) Then ''''Bill No:'''' + TVoucherEntry.Reference Else TVoucherEntry.Remark End AS Remark '' +
                                '' FROM TVoucherEntry INNER JOIN ''+
                      '' TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN ''+
                      '' MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN ''+
                      '' TVoucherRefDetails ON TVoucherRefDetails.FkVoucherTrnNo = TVoucherDetails.PkVoucherTrnNo LEFT OUTER JOIN ''+
                      '' TVoucherDetails AS TVoucherDetails_1 ON TVoucherDetails_1.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo LEFT OUTER JOIN ''+
                      '' TVoucherEntry AS TVoucherEntry_1 ON TVoucherDetails_1.FkVoucherNo = TVoucherEntry_1.PkVoucherNo ''+
                                          '' INNER JOIN MLedger on Mledger.LedgerNo = TVoucherDetails.LedgerNo''+
                                '' WHERE TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate>= ''''''+cast(@FromDate as varchar)+'''''' and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+'''''' AND TVoucherEntry.VoucherTypeCode in(''+ @VType +'') and ''+
                                '' TVoucherEntry.companyNo in(''+cast(@CompanyNo as varchar)+'') and (TVoucherDetails.VoucherSrNo = 1) AND (TVoucherDetails.LedgerNo IN (''+cast(@PartyNo as varchar(5000))+''))''+ 
                                --cash bill
'' union all SELECT TVoucherEntry.PayTypeNo, TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherTypeCode, ''+
                      '' (SELECT     CASE WHEN TVoucherDetails.Debit <> 0 THEN TVoucherDetails.Debit ELSE TVoucherDetails.Credit END AS Expr1) AS billamount, ''+
                      '' MPayType.PayTypeName, TVoucherEntry.VoucherDate AS recvDate, ''+                     
                      '' (SELECT     CASE WHEN TVoucherDetails.Debit <> 0 THEN TVoucherDetails.Debit ELSE TVoucherDetails.Credit END AS Expr1) AS recvamount, '' +
                      '' (Select Case When TCC.ChequeNo<>'''''''' Then TCC.ChequeNo Else TCC.CreditCardNo End From TVoucherChqCreditDetails TCC Where TCC.FkVoucherNo=TVoucherEntry.PKVoucherno) , '' + 
                      '' 0 as RefNo, 0 as TypeOfRef, MLedger.LedgerName,MLedger.LedgerNo, 0 as OpenBal, ''+
                                          '' 0 As DiscAmt,Case When (TVoucherEntry.VoucherTypeCode=15 Or TVoucherEntry.VoucherTypeCode=9) Then '''''''' Else TVoucherEntry.Remark End AS Remark '' +
                                '' FROM TVoucherEntry INNER JOIN ''+
                      '' TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN ''+
                      '' MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo  ''+
                
                                          '' INNER JOIN MLedger on Mledger.LedgerNo = TVoucherDetails.LedgerNo''+
                                '' WHERE TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate>= ''''''+cast(@FromDate as varchar)+'''''' and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+'''''' AND TVoucherEntry.VoucherTypeCode in(15,9) and ''+
                                '' TVoucherEntry.companyNo in(''+cast(@CompanyNo as varchar)+'') and (TVoucherDetails.VoucherSrNo = 1) and TVoucherEntry.paytypeno!=3 AND (TVoucherDetails.LedgerNo IN (''+cast(@PartyNo as varchar(max))+''))''+ 

                                '' UNION ALL  SELECT TVoucherEntry.PayTypeNo,TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherTypeCode, 0 AS billamount, '' +
'' '''''''' as PayTypeName,TVoucherEntry.VoucherDate AS recvDate,   (SELECT     CASE WHEN TVoucherDetails.Debit <> 0 THEN TVoucherDetails.Debit ELSE TVoucherDetails.Credit END AS Expr1)  AS recvamount, '' +
'' (Select Case When TCC.ChequeNo<>'''''''' Then TCC.ChequeNo Else TCC.CreditCardNo End From TVoucherChqCreditDetails TCC Where TCC.FkVoucherNo=TVoucherEntry.PKVoucherno) , ''+
'' 0 as RefNo, 0 as TypeOfRef, MLedger.LedgerName,MLedger.LedgerNo, 0 as OpenBal,  0 As DiscAmt,Case When (TVoucherEntry.VoucherTypeCode=15 Or TVoucherEntry.VoucherTypeCode=9) Then '''''''' Else TVoucherEntry.Remark End AS Remark ''+
'' from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo  INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN '' +
'' fn_Split (''''''+cast(@PartyNo as varchar(max))+ '''''','''','''') AS Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric) INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) '' +
'' where  TVoucherEntry.VoucherTypeCode in (13) and TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate>= ''''''+cast(@FromDate as varchar)+'''''' and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+'''''' AND PkVoucherTrnNo  NOT IN (SELECT FkVoucherTrnNo FROM TVOUCHERREFDETAILS ) '' +
                                '' UNION ALL SELECT TVoucherEntry.PayTypeNo,TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherTypeCode, 0 AS billamount, '''''''' as PayTypeName,TVoucherEntry.VoucherDate AS recvDate,   (SELECT     CASE WHEN TVoucherDetails.Debit <> 0 THEN TVoucherDetails.Debit ELSE TVoucherDetails.Credit END AS Expr1)  AS recvamount, ''+
 '' (Select Case When TCC.ChequeNo<>'''''''' Then TCC.ChequeNo Else TCC.CreditCardNo End From TVoucherChqCreditDetails TCC Where TCC.FkVoucherNo=TVoucherEntry.PKVoucherno) , 0 as RefNo, 0 as TypeOfRef, MLedger.LedgerName,MLedger.LedgerNo, 0 as OpenBal,  0 As DiscAmt, '' +
'' Case When TVoucherEntry.VoucherTypeCode=15  Then '''' Advance '''' + TVoucherEntry.Remark Else '''' Advance ,'''' +TVoucherEntry.Remark End AS Remark '' +
'' from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo  INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN fn_Split (''''''+cast(@PartyNo as varchar(max))+  '''''','''','''' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric) INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) ''+
'' where  TVoucherEntry.VoucherTypeCode in (31,30) and  TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate>= ''''''+cast(@FromDate as varchar)+'''''' and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+'''''' AND PkVoucherTrnNo  NOT IN (SELECT FkVoucherTrnNo FROM TVOUCHERREFDETAILS ) ''+

'' union all SELECT 0 as PayTypeNo,'''''''' as VoucherDate, 0 as VoucherUserNo, TVoucherEntry.VoucherTypeCode, (SELECT     CASE WHEN sum(TVoucherDetails.Debit) <> 0 THEN sum(TVoucherDetails.Debit) ELSE sum(TVoucherDetails.Credit) END AS Expr1)  AS billamount, '''''''' as PayTypeName,'''''''' AS recvDate,   (SELECT     CASE WHEN sum(TVoucherDetails.Debit) <> 0 THEN sum(TVoucherDetails.Debit) ELSE sum(TVoucherDetails.Credit) END AS Expr1)  AS recvamount, '''''''' , '' +
 '' 0 as RefNo, 0 as TypeOfRef, MLedger.LedgerName,MLedger.LedgerNo, 0 as OpenBal,  0 As DiscAmt, Case When TVoucherEntry.VoucherTypeCode=15  Then '''' Opening ''''  Else '''' Opening '''' End AS Remark '' +
'' from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode '' +
'' INNER JOIN fn_Split (''''''+cast(@PartyNo as varchar(max))+ '''''','''','''') AS Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric) INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) '' +
'' where  TVoucherEntry.VoucherTypeCode in (15,9) and  TVoucherEntry.VoucherDate < ''''''+cast(@FromDate as varchar)+'''''' and TVoucherEntry.iscancel=0 AND PkVoucherTrnNo   IN (SELECT FkVoucherTrnNo FROM TVOUCHERREFDETAILS ) '' +
'' group by LedgerName,MLedger.LedgerNo,TVoucherEntry.VoucherTypeCode '' +

                                '' ORDER BY TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo'' --, TVoucherRefDetails.RefNo, TVoucherEntry_1.VoucherDate, TVoucherEntry_1.VoucherUserNo ''
--select @StrQry

insert into @TempTable Exec(@StrQry)

declare cur cursor for select VoucherDate,RefNo from @TempTable where TypeofRef=''3''
Open cur
Fetch Next From cur Into @VchDate,@RefNumber
While(@@Fetch_Status=0)
BEGIN
        update @TempTable set VoucherDate=@VchDate where RefNo=@RefNumber and TypeofRef=''2''
        Fetch Next From cur Into @VchDate,@RefNumber
END
close cur
deallocate cur

--declare cur cursor for select distinct LedgerNo from @TempTable 
--Open cur
--Fetch Next From cur Into @ledgNo
--While(@@Fetch_Status=0)
--BEGIN
--set @TotOpBal=0
--Select @OpBal=OpAmt from GetOpeningLedgerBalanceOnly(@ledgNo, @CompanyNo)
--Select @AdjOpBal=isNull(Sum(case when (signcode=1) then isNull(Amount,0) else isNull(Amount,0)*-1 end),0) from TVoucherRefDetails where LedgerNo=@ledgNo and TypeOfRef=5 AND REFNO <> 0
--Select @OpAdjBal=isNull(Sum(case when (signcode=2) then isNull(Amount,0) else isNull(Amount,0)*-1 end),0) from TVoucherRefDetails where LedgerNo=@ledgNo and TypeOfRef=5 AND REFNO = 0
--set @TotOpBal=@OpBal+@AdjOpBal+@OpAdjBal
--        update @TempTable set OpenBal=isnull(@TotOpBal,0) where LedgerNo=@ledgNo
--        Fetch Next From cur Into @ledgNo
--END
--close cur
--deallocate cur

update @TempTable set recvDate=NULL,recvAmount=0 where TypeofRef=''3'' 
update @TempTable set cheaqueNo=NULL where PayTypeNo<>4 ANd cheaqueNo=''''
update @TempTable set BillAmount=NULL where TypeofRef=''2'' or TypeofRef=''5'' 
update @TempTable set cheaqueNo=BillNo, PayType=''Sales Return'' where TypeofRef=''2'' and VoucherTypeCode=12
update @TempTable set BillNo=NULL where TypeofRef=''2'' 
update @TempTable set BillNo=''Old Bal.'',Remark =''Adj. Old Opening Bal''where TypeofRef=''5'' 
--update @TempTable set PayType=''Credit Note'' where VoucherTypeCode=12
select * from @TempTable order by VoucherDate,RefNo,recvDate,BillNo

--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMLanguageDictionary]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 25/05/2013
CREATE PROCEDURE  [dbo].[DeleteMLanguageDictionary] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MLanguageDictionary
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLedgerRateSetting]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLedgerRateSetting](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[UOMNo] [numeric](18, 0) NULL,
	[Rate] [numeric](18, 2) NULL,
	[MRP] [numeric](18, 2) NULL,
	[DiscPercentage] [numeric](18, 2) NULL,
	[DiscAmount] [numeric](18, 2) NULL,
	[CompNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MLedgerRateSettings] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MRateSetting]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MRateSetting](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[FromDate] [datetime] NULL,
	[PurRate] [numeric](18, 4) NULL,
	[MRP] [numeric](18, 4) NULL,
	[UOMNo] [numeric](18, 0) NULL,
	[ASaleRate] [numeric](18, 4) NULL,
	[BSaleRate] [numeric](18, 4) NULL,
	[CSaleRate] [numeric](18, 4) NULL,
	[DSaleRate] [numeric](18, 4) NULL,
	[ESaleRate] [numeric](18, 4) NULL,
	[StockConversion] [numeric](18, 2) NULL,
	[MKTQty] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
	[Stock2] [numeric](18, 3) NULL,
	[Stock] [numeric](18, 3) NULL,
	[PerOfRateVariation] [numeric](18, 0) NULL,
	[Weight1] [numeric](18, 2) NULL,
	[Weight2] [numeric](18, 2) NULL,
	[SPPerc] [numeric](18, 2) NULL,
	[LPPerc] [numeric](18, 2) NULL,
	[Hamali] [numeric](18, 2) NULL,
 CONSTRAINT [PK_MRateSetting] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MRateSetting]') AND name = N'IX_MRateSetting_1')
CREATE NONCLUSTERED INDEX [IX_MRateSetting_1] ON [dbo].[MRateSetting] 
(
	[ItemNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MRateSetting]') AND name = N'MRateSetting_MRP')
CREATE NONCLUSTERED INDEX [MRateSetting_MRP] ON [dbo].[MRateSetting] 
(
	[MRP] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MRateSetting]') AND name = N'MRateSetting_UOMNo')
CREATE NONCLUSTERED INDEX [MRateSetting_UOMNo] ON [dbo].[MRateSetting] 
(
	[UOMNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStockAllItemQty]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetStockAllItemQty]
@CompNo		           numeric(18),
@FromDate	           datetime,
@ToDate		           datetime,
@ItStr		            varchar(max),
@Itype                numeric(18)



AS
Declare @ItemNo		numeric(18)
Declare @TStock TABLE (ItemNo int,ItemName varchar(max),OpQty numeric(18,2),InwardQty numeric(18,2),OutwardQty numeric(18,2),Quantity numeric(18,2))
Declare @ItemTable TABLE(ItemNo numeric(18))
Declare @ItemName varchar(max),@OpQty numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2),@DrQty numeric(18,2),@StrQry varchar(max),@ItNo numeric(18),@StrItem varchar(max),@StrVchType varchar(max)
set @OpQty=0  set @DrQty=0  set @CrQty=0 set @StrQry='''' 
set @StrItem=''''


if(@ItStr<>'''')
	begin
		set @StrItem=''(TStock.ItemNo in (''+@ItStr+'')) AND '' 
		--insert into @ItemTable  Exec (@StrQry) 
    end
else
    begin
		set @StrItem='' ''
    end

if(@Itype=0)
begin 
set @StrVchType=''and TVoucherEntry.vouchertypecode in(15,12,13,9,8)''
end
else
begin 
set @StrVchType=''and TVoucherEntry.vouchertypecode in(115,112,113,109,108)''
end

set @StrQry=''Select Tbl1.ItemNo,(SELECT     MItemGroup.ItemGroupName + '''' '''' + CASE WHEN (ItemShortName <> '''''''') THEN ItemShortName ELSE ItemName END AS Expr1
                            FROM          MItemMaster AS MItemMaster_1 INNER JOIN
                                                   MItemGroup ON MItemMaster_1.GroupNo = MItemGroup.ItemGroupNo
                            WHERE      (MItemMaster_1.ItemNo = Tbl1.ItemNo)) As ItemName, Sum(OpQty) As OpQty, abs(Sum(InQty)) As InwardQty, abs(Sum(OutQty)) As OutwardQty, 
Sum(OpQty + abs(InQty) - abs(OutQty)) As Quantity,MItemMaster.Barcode From
(
SELECT  TStock.ItemNo,
         sum(case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity,0) 
                 else isnull(TStock.BilledQuantity,0)*-1 end) as OpQty,
        0.00 as InQty, 0.00 as OutQty
FROM    TVoucherEntry INNER JOIN
        TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
WHERE   '' + @StrItem + '' (TVoucherEntry.VoucherDate < ''''''+cast(@FromDate as varchar)+'''''')  and TVoucherEntry.IsCancel=''''false'''' '' + @StrVchType + ''
Group by TStock.itemno
UNION ALL
SELECT  TStock.ItemNo,
         0.00 as OpQty,
         sum(case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity,0) 
                 else 0.00 end ) as InQty,
         sum(case when (TStock.TrnCode = 2) then isnull(TStock.BilledQuantity,0)*-1 
                 else 0.00 end) as OutQty
FROM    TVoucherEntry INNER JOIN
        TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
WHERE    '' + @StrItem + '' (TVoucherEntry.VoucherDate >= ''''''+cast(@FromDate as varchar)+'''''') AND 
        (TVoucherEntry.VoucherDate <= ''''''+cast(@ToDate as varchar)+'''''')  and TVoucherEntry.IsCancel=''''false'''' '' + @StrVchType + ''
Group by TStock.itemno
) As Tbl1 
INNER JOIN  MItemMaster ON MItemMaster.ItemNo = Tbl1.ItemNo
Group BY Tbl1.ItemNo, MItemMaster.ItemName ,MItemMaster.Barcode
order by ItemName ''

Exec(@StrQry)

--Select Tbl1.ItemNo,(SELECT     MItemGroup.ItemGroupName + '' '' + CASE WHEN (ItemShortName <> '''') THEN ItemShortName ELSE ItemName END AS Expr1
--                            FROM          MItemMaster AS MItemMaster_1 INNER JOIN
--                                                   MItemGroup ON MItemMaster_1.GroupNo = MItemGroup.ItemGroupNo
--                            WHERE      (MItemMaster_1.ItemNo = Tbl1.ItemNo)) As ItemName, Sum(OpQty) As OpQty, abs(Sum(InQty)) As InwardQty, abs(Sum(OutQty)) As OutwardQty, 
--Sum(OpQty + abs(InQty) - abs(OutQty)) As Quantity,MItemMaster.Barcode From
--(
--SELECT  TStock.ItemNo,
--         sum(case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity,0) 
--                 else isnull(TStock.BilledQuantity,0)*-1 end) as OpQty,
--        0.00 as InQty, 0.00 as OutQty
--FROM    TVoucherEntry INNER JOIN
--        TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
--WHERE  TStock.itype=1 and  (TStock.ItemNo in (46637,46639,46640,46592,46587,46609,46608,46590,46607)) AND  (TVoucherEntry.VoucherDate < ''Jan  1 2018 12:00AM'')  and TVoucherEntry.IsCancel=''false''
--Group by TStock.itemno
--UNION ALL
--SELECT  TStock.ItemNo,
--         0.00 as OpQty,
--         sum(case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity,0) 
--                 else 0.00 end ) as InQty,
--         sum(case when (TStock.TrnCode = 2) then isnull(TStock.BilledQuantity,0)*-1 
--                 else 0.00 end) as OutQty
--FROM    TVoucherEntry INNER JOIN
--        TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
--WHERE  TStock.itype=1 and  (TStock.ItemNo in (46637,46639,46640,46592,46587,46609,46608,46590,46607)) AND  (TVoucherEntry.VoucherDate >= ''Jan  1 2018 12:00AM'') AND 
--        (TVoucherEntry.VoucherDate <= ''Jan 11 2019 12:00AM'')  and TVoucherEntry.IsCancel=''false''
--Group by TStock.itemno
--) As Tbl1 
--INNER JOIN  MItemMaster ON MItemMaster.ItemNo = Tbl1.ItemNo
--Group BY Tbl1.ItemNo, MItemMaster.ItemName ,MItemMaster.Barcode
--order by ItemName 

	RETURN

------------------------------------------------------------------------------------------------------------------------------------------------------------------

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTOtherStock]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 17/05/2014
CREATE PROCEDURE  [dbo].[DeleteTOtherStock] 
@PkOtherStockTrnNo                  numeric(18)


AS

       DELETE FROM TOtherStock
       WHERE
          PkOtherStockTrnNo = @PkOtherStockTrnNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TEstimate]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TEstimate](
	[PkSrNo] [numeric](18, 0) NOT NULL,
	[Fke] [numeric](18, 0) NULL,
	[Fks] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TVoucherPart] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMGroup]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 10/12/2011
CREATE PROCEDURE  [dbo].[DeleteMGroup] 
@GroupNo                            numeric(18)


AS
		Update MGroup set IsActive=''False'' Where GroupNo = @GroupNo
       /*DELETE FROM MGroup
       WHERE
          GroupNo = @GroupNo*/
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MBarcodeSettings]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MBarcodeSettings](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[SettingNo] [numeric](18, 0) NULL,
	[BarcodeTemplateNo] [numeric](18, 0) NULL,
	[SettingValue] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MBarcodeSettings] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MUOMConversion]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MUOMConversion](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LowerUOM] [varchar](50) NULL,
	[LowerUomNo] [numeric](18, 0) NULL,
	[HigherUOM] [varchar](50) NULL,
	[HigherUomNo] [numeric](18, 0) NULL,
	[Factor] [numeric](18, 2) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[Status] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MMainUOM] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MUserBranchMaster]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MUserBranchMaster](
	[PKSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKUserId] [numeric](18, 0) NULL,
	[Branch] [varchar](max) NULL,
 CONSTRAINT [PK_MUserBranchMaster] PRIMARY KEY CLUSTERED 
(
	[PKSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LedgerBookSummary]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE  PROCEDURE [dbo].[LedgerBookSummary] --exec LedgerBookSummary ''01-Apr-2018'',''01-Apr-2019'',15,1,''104''
@FromDate          datetime,
@ToDate            datetime,
@VchType           int,
@CompanyNo		   varchar(50),
@PartyNo		   varchar(max)
AS

Declare @StrQry varchar(max)
if (@VchType=15)
begin
set @StrQry = 
--'' SELECT TVoucherEntry.PayTypeNo, TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherTypeCode, '' +
-- ''(SELECT  TVoucherDetails.Debit  AS Expr1) AS billamount, MPayType.PayTypeName as PayTypeName,TVoucherEntry.VoucherDate AS recvDate,   '' +
--'' (SELECT     TVoucherDetails.Credit  AS Expr1) AS recvamount,  (Select Case When TCC.ChequeNo<>'''''''' Then TCC.ChequeNo '' +
--'' Else TCC.CreditCardNo End From TVoucherChqCreditDetails TCC Where TCC.FkVoucherNo=TVoucherEntry.PKVoucherno) ,'' +
-- ''   MLedger.LedgerName,MLedger.LedgerNo, '' +
--''  TVoucherEntry.Remark '' +
--''  AS Remark ,TVoucherEntry.NARRATION  from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo '' +
--'' INNER JOIN MVoucherType ON  TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode '' +
--'' left join MPayType on MPayType.PKPayTypeNo=TVoucherEntry.paytypeno '' +
--'' INNER JOIN  fn_Split (''''''+(@PartyNo)+ '''''','''','''' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric) ''+  '' INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) '' +
--'' WHERE TVoucherEntry.VoucherTypeCode not in(111,109,115,130,131,136,107,112,113) and TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate>= ''''''+cast(@FromDate as varchar)+''''''and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+''''''''+
--'' ORDER BY TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo ''

''SELECT 0 as PayTypeNo, ''''''+cast(@FromDate as varchar)+'''''' as VoucherDate, 0 as VoucherUserNo, 0 as VoucherTypeCode,
 sum(TVoucherDetails.Debit) AS billamount, ''''Opening '''' as PayTypeName,''''''+cast(@FromDate as varchar)+'''''' AS recvDate,    sum(TVoucherDetails.Credit ) AS recvamount,
'''''''' as cheque ,   MLedger.LedgerName,MLedger.LedgerNo,   ''''Opening''''  AS Remark ,''''Opening Balance'''' as NARRATION 
 from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo 
 INNER JOIN MVoucherType ON  TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode 
 left join MPayType on MPayType.PKPayTypeNo=TVoucherEntry.paytypeno 
INNER JOIN  fn_Split (''''''+(@PartyNo)+ '''''','''','''' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric)
  INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric)  
WHERE TVoucherEntry.VoucherTypeCode not in(111,109,115,130,131,136,107,112,113) 
and TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate<''''''+cast(@FromDate as varchar)+''''''
group by  MLedger.LedgerName,MLedger.LedgerNo  union all''+

'' SELECT TVoucherEntry.PayTypeNo, TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherTypeCode, '' +
 ''(SELECT  TVoucherDetails.Debit  AS Expr1) AS billamount, MPayType.PayTypeName as PayTypeName,TVoucherEntry.VoucherDate AS recvDate,   '' +
'' (SELECT     TVoucherDetails.Credit  AS Expr1) AS recvamount,  (Select Case When TCC.ChequeNo<>'''''''' Then TCC.ChequeNo '' +
'' Else TCC.CreditCardNo End From TVoucherChqCreditDetails TCC Where TCC.FkVoucherNo=TVoucherEntry.PKVoucherno) ,'' +
 ''   MLedger.LedgerName,MLedger.LedgerNo, '' +
''  TVoucherEntry.Remark '' +
''  AS Remark ,TVoucherEntry.NARRATION  from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo '' +
'' INNER JOIN MVoucherType ON  TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode '' +
'' left join MPayType on MPayType.PKPayTypeNo=TVoucherEntry.paytypeno '' +
'' INNER JOIN  fn_Split (''''''+(@PartyNo)+ '''''','''','''' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric) ''+  '' INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) '' +
'' WHERE TVoucherEntry.VoucherTypeCode not in(111,109,115,130,131,136,107,112,113) and TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate>= ''''''+cast(@FromDate as varchar)+''''''and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+''''''''

end
else  if (@VchType=9)

begin
set @StrQry = 
''SELECT 0 as PayTypeNo, ''''''+cast(@FromDate as varchar)+'''''' as VoucherDate, 0 as VoucherUserNo, 0 as VoucherTypeCode,
 sum(TVoucherDetails.Credit) AS billamount, ''''Opening '''' as PayTypeName,''''''+cast(@FromDate as varchar)+'''''' AS recvDate,    sum(TVoucherDetails.Debit ) AS recvamount,
'''''''' as cheque ,   MLedger.LedgerName,MLedger.LedgerNo,   ''''Opening''''  AS Remark ,''''Opening Balance'''' as NARRATION 
 from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo 
 INNER JOIN MVoucherType ON  TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode 
 left join MPayType on MPayType.PKPayTypeNo=TVoucherEntry.paytypeno 
INNER JOIN  fn_Split (''''''+(@PartyNo)+ '''''','''','''' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric)
  INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric)  
WHERE TVoucherEntry.VoucherTypeCode not in(111,109,115,130,131,136,107,112,113) 
and TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate<''''''+cast(@FromDate as varchar)+''''''
group by  MLedger.LedgerName,MLedger.LedgerNo  union all''+
'' SELECT TVoucherEntry.PayTypeNo, TVoucherEntry.VoucherDate,TVoucherEntry.Reference as VoucherUserNo, TVoucherEntry.VoucherTypeCode, '' +
 ''(SELECT  TVoucherDetails.Credit  AS Expr1) AS billamount, MPayType.PayTypeName  as PayTypeName,TVoucherEntry.VoucherDate AS recvDate,   '' +
'' (SELECT     TVoucherDetails.Debit  AS Expr1) AS recvamount,  (Select Case When TCC.ChequeNo<>'''''''' Then TCC.ChequeNo '' +
'' Else TCC.CreditCardNo End From TVoucherChqCreditDetails TCC Where TCC.FkVoucherNo=TVoucherEntry.PKVoucherno) , '' +
 ''  MLedger.LedgerName,MLedger.LedgerNo, '' +
''  TVoucherEntry.Remark '' +
''  AS Remark ,TVoucherEntry.NARRATION  from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo '' +
'' INNER JOIN MVoucherType ON  TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode '' +
'' left join MPayType on MPayType.PKPayTypeNo=TVoucherEntry.paytypeno '' +
'' INNER JOIN  fn_Split (''''''+(@PartyNo)+ '''''','''','''' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric) ''+  '' INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) '' +
'' WHERE TVoucherEntry.VoucherTypeCode not in(111,109,115,130,131,136,107,112,113) and  TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate>= ''''''+cast(@FromDate as varchar)+''''''and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+''''''''
--'' ORDER BY TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo ''
end
else  if (@VchType=109)

begin
set @StrQry = 
''SELECT 0 as PayTypeNo, ''''''+cast(@FromDate as varchar)+'''''' as VoucherDate, 0 as VoucherUserNo, 0 as VoucherTypeCode,
 sum(TVoucherDetails.Credit) AS billamount, ''''Opening '''' as PayTypeName,''''''+cast(@FromDate as varchar)+'''''' AS recvDate,    sum(TVoucherDetails.Debit ) AS recvamount,
'''''''' as cheque ,   MLedger.LedgerName,MLedger.LedgerNo,   ''''Opening''''  AS Remark ,''''Opening Balance'''' as NARRATION 
 from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo 
 INNER JOIN MVoucherType ON  TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode 
 left join MPayType on MPayType.PKPayTypeNo=TVoucherEntry.paytypeno 
INNER JOIN  fn_Split (''''''+(@PartyNo)+ '''''','''','''' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric)
  INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric)  
WHERE TVoucherEntry.VoucherTypeCode not in(11,9,15,30,31,36,7,12,13) 
and TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate<''''''+cast(@FromDate as varchar)+''''''
group by  MLedger.LedgerName,MLedger.LedgerNo  union all''+
'' SELECT TVoucherEntry.PayTypeNo, TVoucherEntry.VoucherDate,TVoucherEntry.Reference as VoucherUserNo, TVoucherEntry.VoucherTypeCode, '' +
 ''(SELECT  TVoucherDetails.Credit  AS Expr1) AS billamount, MPayType.PayTypeName  as PayTypeName,TVoucherEntry.VoucherDate AS recvDate,   '' +
'' (SELECT     TVoucherDetails.Debit  AS Expr1) AS recvamount,  (Select Case When TCC.ChequeNo<>'''''''' Then TCC.ChequeNo '' +
'' Else TCC.CreditCardNo End From TVoucherChqCreditDetails TCC Where TCC.FkVoucherNo=TVoucherEntry.PKVoucherno) , '' +
 ''  MLedger.LedgerName,MLedger.LedgerNo, '' +
''  TVoucherEntry.Remark '' +
''  AS Remark ,TVoucherEntry.NARRATION  from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo '' +
'' INNER JOIN MVoucherType ON  TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode '' +
'' left join MPayType on MPayType.PKPayTypeNo=TVoucherEntry.paytypeno '' +
'' INNER JOIN  fn_Split (''''''+(@PartyNo)+ '''''','''','''' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric) ''+  '' INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) '' +
'' WHERE TVoucherEntry.VoucherTypeCode not in(11,9,15,30,31,36,7,12,13) and  TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate>= ''''''+cast(@FromDate as varchar)+''''''and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+''''''''
--'' ORDER BY TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo ''
end
else if (@VchType=115)
begin
set @StrQry = 
''SELECT 0 as PayTypeNo, ''''''+cast(@FromDate as varchar)+'''''' as VoucherDate, 0 as VoucherUserNo, 0 as VoucherTypeCode,
 sum(TVoucherDetails.Debit) AS billamount, ''''Opening '''' as PayTypeName,''''''+cast(@FromDate as varchar)+'''''' AS recvDate,    sum(TVoucherDetails.Credit ) AS recvamount,
'''''''' as cheque ,   MLedger.LedgerName,MLedger.LedgerNo,   ''''Opening''''  AS Remark ,''''Opening Balance'''' as NARRATION 
 from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo 
 INNER JOIN MVoucherType ON  TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode 
 left join MPayType on MPayType.PKPayTypeNo=TVoucherEntry.paytypeno 
INNER JOIN  fn_Split (''''''+(@PartyNo)+ '''''','''','''' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric)
  INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric)  
WHERE TVoucherEntry.VoucherTypeCode not in(11,9,15,30,31,36,7,12,13) 
and TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate<''''''+cast(@FromDate as varchar)+''''''
group by  MLedger.LedgerName,MLedger.LedgerNo  union all''+
'' SELECT TVoucherEntry.PayTypeNo, TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherTypeCode, '' +
 ''(SELECT  TVoucherDetails.Debit  AS Expr1) AS billamount, MPayType.PayTypeName as PayTypeName,TVoucherEntry.VoucherDate AS recvDate,   '' +
'' (SELECT     TVoucherDetails.Credit  AS Expr1) AS recvamount,  (Select Case When TCC.ChequeNo<>'''''''' Then TCC.ChequeNo '' +
'' Else TCC.CreditCardNo End From TVoucherChqCreditDetails TCC Where TCC.FkVoucherNo=TVoucherEntry.PKVoucherno) ,'' +
 ''   MLedger.LedgerName,MLedger.LedgerNo, '' +
''  TVoucherEntry.Remark '' +
''  AS Remark ,TVoucherEntry.NARRATION  from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo '' +
'' INNER JOIN MVoucherType ON  TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode '' +
'' left join MPayType on MPayType.PKPayTypeNo=TVoucherEntry.paytypeno '' +
'' INNER JOIN  fn_Split (''''''+(@PartyNo)+ '''''','''','''' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric) ''+  '' INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) '' +
'' WHERE TVoucherEntry.VoucherTypeCode not in(11,9,15,30,31,36,7,12,13) and TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate>= ''''''+cast(@FromDate as varchar)+''''''and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+''''''''
--'' ORDER BY TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo ''
end

Exec(@StrQry)

-- SELECT TVoucherEntry.PayTypeNo, TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherTypeCode, (SELECT  TVoucherDetails.Debit  AS Expr1) AS billamount, '''' as PayTypeName,TVoucherEntry.VoucherDate AS recvDate,    (SELECT     TVoucherDetails.Credit  AS Expr1) AS recvamount,  (Select Case When TCC.ChequeNo<>'''' Then TCC.ChequeNo  Else TCC.CreditCardNo End From TVoucherChqCreditDetails TCC Where TCC.FkVoucherNo=TVoucherEntry.PKVoucherno) ,   MLedger.LedgerName,MLedger.LedgerNo,   TVoucherEntry.Remark   AS Remark ,TVoucherEntry.NARRATION 
-- from  TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FkVoucherNo  INNER JOIN MVoucherType ON  TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode  INNER JOIN  fn_Split (''252'','','' )As Party_BILL on TVoucherDetails.LedgerNo= CAST(Party_BILL.value AS numeric)  INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric)  WHERE TVoucherEntry.IsCancel=0 And TVoucherEntry.VoucherDate>= ''Apr  1 2018 12:00AM''and TVoucherEntry.VoucherDate<=''Aug  1 2018 12:00AM'' ORDER BY TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo 





' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMGroup]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 10/12/2011
CREATE PROCEDURE [dbo].[AddMGroup]
     @GroupNo                             numeric(18),
     @GroupName                           varchar(50),
     @ControlGroup                        numeric(18),
     @SignCode                            numeric(18),
     @IsActive                            bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime
     --@ModifiedBy                          varchar(50)
AS
IF EXISTS(select GroupNo from MGroup
          where
          GroupNo = @GroupNo)
     BEGIN
       --Update existing row
       UPDATE MGroup
       SET
          GroupName = @GroupName,
          ControlGroup = @ControlGroup,
          SignCode = @SignCode,
          IsActive = @IsActive,
		  UserID = @UserID,
          UserDate = @UserDate,
		  StatusNo = 2,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          GroupNo = @GroupNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(GroupNo),0) From MGroup
       DBCC CHECKIDENT(''MGroup'', RESEED, @Id)
       INSERT INTO MGroup(
          GroupName,
          ControlGroup,
          SignCode,
          IsActive,
		  StatusNo,
		  UserID,
          UserDate
         -- ModifiedBy
)
       VALUES(
          @GroupName,
          @ControlGroup,
          @SignCode,
          @IsActive,
		  1,
		  @UserID,
          @UserDate
         -- @ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPackingListDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPackingListDetails](
	[PackingListNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[Quantity] [numeric](18, 2) NULL,
	[BagNo] [varchar](50) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[GroupNo] [numeric](18, 0) NULL,
	[FkStockTrnNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_TPackingListDetails] PRIMARY KEY CLUSTERED 
(
	[PackingListNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGroup]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MGroup](
	[GroupNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[GroupName] [varchar](50) NULL,
	[ControlGroup] [numeric](18, 0) NULL,
	[SignCode] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[StatusNo] [int] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_MGroup] PRIMARY KEY CLUSTERED 
(
	[GroupNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MTransporterMode]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MTransporterMode](
	[TransModeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[TransModeName] [varchar](50) NULL,
 CONSTRAINT [PK_MTransporterMode] PRIMARY KEY CLUSTERED 
(
	[TransModeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MUserLevel]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MUserLevel](
	[UserLevelNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[UserLevelName] [varchar](50) NULL,
	[UserLevelShortCode] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](50) NULL
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MUserDesignation]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MUserDesignation](
	[UserDesignationNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[UserDesignationName] [varchar](50) NULL,
	[UserDesignationShortCode] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteReceiptEntry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE  [dbo].[DeleteReceiptEntry] 
@FromDate   datetime,
@PayType    numeric(18)



AS
Declare @Pk numeric(18)
Declare CurTemp Cursor for Select  TVoucherEntry.PkVoucherNo  FROM         TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
						where VoucherDate=@FromDate 
						and VoucherTypeCode=11 and TVoucherEntry.PayTypeNo=@PayType

open CurTemp
fetch next from CurTemp into @Pk
while(@@Fetch_Status=0)
begin
	delete from TVoucherEntry where PkVoucherNo=@Pk
	delete from TVoucherDetails where FkVoucherNo=@Pk
	fetch next from CurTemp into @Pk
End 

close CurTemp deallocate CurTemp
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MRegion]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MRegion](
	[RegionNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[RegionName] [varchar](50) NULL,
	[RegionShortCode] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MRegion] PRIMARY KEY CLUSTERED 
(
	[RegionNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherEntryFormDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVoucherEntryFormDetails](
	[PkVoucherFormNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherNo] [numeric](18, 0) NULL,
	[VoucherFormDate] [datetime] NULL,
	[FormNo] [varchar](100) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TVoucherEntryFormDetails] PRIMARY KEY CLUSTERED 
(
	[PkVoucherFormNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MTransporterPayType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MTransporterPayType](
	[TransPayTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[TransPayTypeName] [varchar](50) NULL,
	[TypeNo] [int] NULL,
 CONSTRAINT [PK_MTransporterPayType] PRIMARY KEY CLUSTERED 
(
	[TransPayTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMItemMaster]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE  [dbo].[DeleteMItemMaster] 
@ItemNo                       numeric(18)


AS
	Update MItemMaster set IsActive=''False'',StatusNo=2 Where ItemNo = @ItemNo
       /*DELETE FROM MStockGroup
       WHERE
          StockGroupNo = @StockGroupNo*/
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TStockGodown]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TStockGodown](
	[PKStockGodownNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKStockTrnNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[GodownNo] [numeric](18, 0) NULL,
	[Qty] [numeric](18, 2) NULL,
	[ActualQty] [numeric](18, 2) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TStockGodown] PRIMARY KEY CLUSTERED 
(
	[PKStockGodownNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TStockGodown]') AND name = N'TStockGodown_FKStockTrnNo')
CREATE NONCLUSTERED INDEX [TStockGodown_FKStockTrnNo] ON [dbo].[TStockGodown] 
(
	[FKStockTrnNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MItemMaster]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MItemMaster](
	[ItemNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ItemName] [varchar](250) NULL,
	[ItemShortName] [varchar](250) NULL,
	[Barcode] [varchar](50) NULL,
	[ShortCode] [varchar](50) NULL,
	[GroupNo] [numeric](18, 0) NULL,
	[UOMH] [numeric](18, 0) NULL,
	[UOML] [numeric](18, 0) NULL,
	[UOMDefault] [numeric](18, 0) NULL,
	[FkDepartmentNo] [numeric](18, 0) NULL,
	[FkCategoryNo] [numeric](18, 0) NULL,
	[MinLevel] [numeric](18, 0) NULL,
	[MaxLevel] [numeric](18, 0) NULL,
	[ReOrderLevelQty] [numeric](18, 2) NULL,
	[LangFullDesc] [nvarchar](max) NULL,
	[LangShortDesc] [nvarchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[StatusNo] [int] NULL,
	[ControlUnder] [numeric](18, 0) NULL,
	[FactorVal] [numeric](18, 3) NULL,
	[Margin] [numeric](18, 2) NULL,
	[CessValue] [numeric](18, 2) NULL,
	[PackagingCharges] [numeric](18, 2) NULL,
	[Dhekhrek] [numeric](18, 2) NULL,
	[OtherCharges] [numeric](18, 2) NULL,
	[HigherVariation] [numeric](18, 2) NULL,
	[LowerVariation] [numeric](18, 2) NULL,
	[HSNCode] [varchar](50) NULL,
	[FKStockGroupTypeNo] [numeric](18, 0) NULL,
	[ESFlag] [bit] NULL,
	[ItemType] [int] NULL,
	[ContainerCharges] [numeric](18, 2) NULL,
	[GSTSlab] [bit] NULL,
 CONSTRAINT [PK_MStockItems] PRIMARY KEY CLUSTERED 
(
	[ItemNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemMaster]') AND name = N'IX_MItemMaster')
CREATE NONCLUSTERED INDEX [IX_MItemMaster] ON [dbo].[MItemMaster] 
(
	[UOMH] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemMaster]') AND name = N'IX_MItemMaster_1')
CREATE NONCLUSTERED INDEX [IX_MItemMaster_1] ON [dbo].[MItemMaster] 
(
	[UOML] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemMaster]') AND name = N'MStockItems_ControlUnder')
CREATE NONCLUSTERED INDEX [MStockItems_ControlUnder] ON [dbo].[MItemMaster] 
(
	[ControlUnder] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemMaster]') AND name = N'MStockItems_Factorval')
CREATE NONCLUSTERED INDEX [MStockItems_Factorval] ON [dbo].[MItemMaster] 
(
	[FactorVal] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemMaster]') AND name = N'MStockItems_GroupNo')
CREATE NONCLUSTERED INDEX [MStockItems_GroupNo] ON [dbo].[MItemMaster] 
(
	[GroupNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemMaster]') AND name = N'MStockItems_ItemNo')
CREATE NONCLUSTERED INDEX [MStockItems_ItemNo] ON [dbo].[MItemMaster] 
(
	[ItemNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemMaster]') AND name = N'MStockItems_ItemShortCode')
CREATE NONCLUSTERED INDEX [MStockItems_ItemShortCode] ON [dbo].[MItemMaster] 
(
	[ItemShortName] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemMaster]') AND name = N'MStockItems_UOMDefault')
CREATE NONCLUSTERED INDEX [MStockItems_UOMDefault] ON [dbo].[MItemMaster] 
(
	[UOMDefault] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemClosingStockMonthlyRtype]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetItemClosingStockMonthlyRtype]
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@ItemStr	Varchar(max),
	@Type		int,
	@No			numeric(18),
	@RType      int
AS
Declare @TStockMonth TABLE(ItemNo numeric(18),ItemName varchar(500),MonthID int,MonthName varchar(Max),OpnQty numeric(18,2),InwQty numeric(18,2),InwAmt numeric(18,2),OutwQty numeric(18,2),OutwAmt numeric(18,2),ClosingQty numeric(18,2),ClosingAmt numeric(18,2))

Declare @ItemName varchar(max)
Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrAmt numeric(18,2),@DrQty numeric(18,2)
Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2)
Declare @Rate numeric(18,5),@BalAmt numeric(18,2)
Declare @Month varchar(Max) ,@MNo int
Declare @TDate datetime ,@Yr int,@cnt int
Declare @ItemTable Table(ItemNo numeric(18),ItemName varchar(max))
Declare @ItemNo numeric(18)
Declare @StrQry varchar(max)
set @ClosingQty = 0 set @BalAmt = 0 set @Rate = 0
set @DrQty=0 set @DrAmt=0 set @CrQty = 0 set @CrAmt = 0

set @StrQry=''Select Tbl1.ItemNo, (SELECT     MItemGroup.ItemGroupName + '''' '''' + CASE WHEN (ItemShortName <> '''''''') THEN ItemShortName ELSE ItemName END AS Expr1
                            FROM          MItemMaster AS MItemMaster_1 INNER JOIN
                                                   MItemGroup ON MItemMaster_1.GroupNo = MItemGroup.ItemGroupNo
                            WHERE      (MItemMaster_1.ItemNo = Tbl1.ItemNo)) As ItemName, 
                     mnth as MonthID, DateName( month , DateAdd( month , Mnth , 0 ) - 1 ) + '''' -- '''' + Cast(Yr as varchar) As MonthName,
                     Sum(OpQty) As OpnQty, abs(Sum(InQty)) As InwQty, abs(Sum(InAmt)) As InwAmt, abs(Sum(OutQty)) As OutwQty, 
                     abs(Sum(OutAmt)) As OutwAmt, Sum(OpQty + InQty + OutQty) As ClosingQty, 0.00 As ClosingAmt From
(
SELECT  TStock.ItemNo,
         sum(case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity,0) 
                 else isnull(TStock.BilledQuantity,0)*-1 end) as OpQty,
        0.00 as InQty, 0.00 as OutQty, 0.00 As InAmt, 0.00 OutAmt, Month(''''''+cast(@FromDate as varchar)+'''''') as Mnth, Year(''''''+cast(@FromDate as varchar)+'''''') as Yr
FROM    TVoucherEntry INNER JOIN
        TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
WHERE   TStock.ItemNo In('' + @ItemStr + '') AND (TVoucherEntry.VoucherDate < ''''''+cast(@FromDate as varchar)+'''''')  and TVoucherEntry.IsCancel=''''false''''
Group by TStock.itemno
UNION ALL
SELECT  TStock.ItemNo,
         0.00 as OpQty,
         sum(case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity,0) 
                 else 0.00 end ) as InQty,
         sum(case when (TStock.TrnCode = 2) then isnull(TStock.BilledQuantity,0)*-1 
                 else 0.00 end) as OutQty, 
         sum(case when (TStock.TrnCode = 1) then isnull(TStock.Amount,0) 
                 else 0.00 end ) As InAmt, 
         sum(case when (TStock.TrnCode = 2) then isnull(TStock.Amount,0) 
                 else 0.00 end) OutAmt, Month(TVoucherEntry.VoucherDate) as Mnth,
         Year(TVoucherEntry.VoucherDate) as Yr
FROM    TVoucherEntry INNER JOIN
        TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
WHERE   TStock.ItemNo In('' + @ItemStr + '') AND (TVoucherEntry.VoucherDate >= ''''''+cast(@FromDate as varchar)+'''''') AND 
        (TVoucherEntry.VoucherDate <= ''''''+cast(@ToDate as varchar)+'''''')  and TVoucherEntry.IsCancel=''''false''''
Group by TStock.ItemNo, Year(TVoucherEntry.VoucherDate), Month(TVoucherEntry.VoucherDate)
) As Tbl1 
INNER JOIN MItemMaster ON MItemMaster.ItemNo = Tbl1.ItemNo
Group BY Tbl1.ItemNo, MItemMaster.ItemName, Mnth, Yr
order by ItemName , Yr, Mnth ''


exec (@StrQry)
--------	SELECT @ItemName=Itemname FROM MStockItems_V(NULL,NULL,NULL,NULL,NULL,NULL,NULL) 
--------					 where ItemNo = @ItemNo
------
--------set @StrQry=''SELECT ItemNo, Itemname FROM MStockItems_V(NULL,NULL,NULL,NULL,NULL,NULL,NULL) 
--------					 where ItemNo In(''+@ItemStr+'')''
------set @StrQry=''SELECT DISTINCT  MStockItems.ItemNo,   (SELECT  MStockGroup.StockGroupName + '''' '''' + CASE WHEN (ItemShortCode <> '''''''') THEN ItemShortCode ELSE ItemName END FROM  MStockItems AS MStockItems_1 INNER JOIN MStockGroup ON MStockItems_1.GroupNo = MStockGroup.StockGroupNo 
------                     WHERE (MStockItems_1.ItemNo = MStockItems.ItemNo)) AS ItemName
------                     FROM  MStockItems  where ItemNo In(''+@ItemStr+'')
------                     ORDER BY ItemName''
------
------insert into @ItemTable  Exec (@StrQry) 
------Declare CurItem cursor for Select ItemNo,Itemname from @ItemTable
------open CurItem
------fetch next from CurItem into @ItemNo,@Itemname
------while(@@Fetch_Status = 0)
------begin
------
--------if(@RType=1)
--------Begin	
------	--insert into @TStockMonth values(@ItemNo,@ItemName,Null,Null,null,null,null,null,null,null,null)
--------End
------	insert into @TStockMonth Select @ItemNo,@ItemName,MonthID,MonthName,opnQty,InwQty,InwAmt,outwQty,outwAmt,ClosingQty,ClosingAmt From GetItemClosingStockMonthly (1,@FromDate,@ToDate, @ItemNo, 0, 0 )
------fetch next from CurItem into @ItemNo,@Itemname
------end
------Close CurItem Deallocate CurItem
------
------
------Select * From @TStockMonth

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMItemTaxSetting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 18/01/2013
CREATE PROCEDURE  [dbo].[DeleteMItemTaxSetting] 
@PkSrNo                             numeric(18)


AS

       Update MItemTaxSetting set IsActive=''false''
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TReward]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TReward](
	[RewardNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherNo] [numeric](18, 0) NULL,
	[VoucherUserNo] [numeric](18, 0) NULL,
	[TotalBillAmount] [numeric](18, 2) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[ToalDiscAmount] [numeric](18, 2) NULL,
	[FkVoucherTrnNo] [numeric](18, 0) NULL,
	[RedemptionStatusNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_TReword] PRIMARY KEY CLUSTERED 
(
	[RewardNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGSTTaxDetailsHSNCodeWise]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetGSTTaxDetailsHSNCodeWise] 

	@FromDate datetime,
	@ToDate datetime,
	@VchType numeric(18)
	
AS
BEGIN
	Declare @PerTable Table(TempPer numeric(18,2),ColNo numeric(18))
declare @StrQry varchar(max)
--	Declare @ColName numeric(18,2),@Cnt numeric(18),@DocNo numeric(18),@Date datetime,@Amt numeric(18,2),@Per numeric(18,2),
--			@Pk numeric(18),@TotTax numeric(18,2), @TotAmt numeric(18,2),@TotAmt2 numeric(18,2),@TaxToal numeric(18,2),@AmtTotal numeric(18,2),
--			@FinalAmount numeric(18,2),@StrQry varchar(max),@TempPer numeric(18,2),@TaxAmt numeric(18,2),@TaxAmt2 numeric(18,2),@TempDate datetime,@GSTNO varchar(50),@HSNCode varchar(50),@UomName varchar(50),@ItemNo numeric(18)
--	Declare @Month varchar(20),@MNo int ,@TDate datetime ,@Yr int,@FrDate datetime,@TempPk numeric(18),@TempColNo numeric(18),
--			@TaxAmount numeric(18,2),@TaxAmount2 numeric(18,2),@TempDocNo numeric(18),@Disc numeric(18,2),@Charges numeric(18,2),@RndOff numeric(18,2),@LedgerName varchar(max)
--	Declare @TVal Table(DocNo numeric(18),Date datetime,LedgerName varchar(max),GSTNO varchar(50),HSNCode varchar(50),UomName varchar(50),ItemNo numeric(18), FinalAmt numeric(18,2),Disc numeric(18,2),Charges numeric(18,2),RndOff numeric(18,2),SAmt1 numeric(18,2),TAmt1 numeric(18,2),TCAmt1 numeric(18,2),
--			SAmt2 numeric(18,2),TAmt2 numeric(18,2),TCAmt2 numeric(18,2),SAmt3 numeric(18,2),TAmt3 numeric(18,2),TCAmt3 numeric(18,2),SAmt4 numeric(18,2),
--			TAmt4 numeric(18,2),TCAmt4 numeric(18,2),SAmt5 numeric(18,2),TAmt5 numeric(18,2),TCAmt5 numeric(18,2),TaxToal numeric(18,2),AmtTotal numeric(18,2))
--	Declare @TDisc Table(LedgNo numeric(18))
--	Declare @TChrg Table(LedgNo numeric(18))
--	set @Cnt=0  set @TempPk=0 set @TaxToal =0 set @AmtTotal =0
--    set @Amt=0 set @Per=0 set @TotTax=0 set @TotAmt=0 set @Disc =0 set @Charges =0 set @RndOff =0
--	 set @StrQry='''' set @FrDate=@FromDate set @TempColNo=0  set @TempDocNo=0 set @TempDate=''01-01-1900''
--
--set @StrQry=''Select distinct TStock.TaxPercentage,0 FROM TVoucherEntry INNER JOIN
--								  TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
--								  WHERE TaxTypeNo= ''+Cast(@TaxTypeNo as varchar)+'' AND TVoucherEntry.VoucherTypeCode=''+cast(@VchType as varchar)+''
--			and TVoucherEntry.VoucherDate>=''''''+cast(@FromDate as varchar)+'''''' and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+'''''' order by TStock.TaxPercentage''
----(TStock.TaxPercentage <> 0) and
--insert into @PerTable Exec(@StrQry) --select * from @PerTable
--insert into @TDisc Exec(''Select LedgerNo From MLedger Where LedgerNo in (''+ @DiscLedg +'')'')
--insert into @TChrg Exec(''Select LedgerNo From MLedger Where LedgerNo in (''+ @ChargesLedg +'')'')
--
--Declare CurCol Cursor for Select TempPer from @PerTable
--		open CurCol
--		Fetch next from CurCol into @TempPer
--		while (@@Fetch_Status=0)
--		Begin
--			set @Cnt=@Cnt+1	
--			update 	@PerTable set ColNo=@Cnt where 	TempPer=@TempPer
--			Fetch next from CurCol into @TempPer
--		End
--		Close CurCol Deallocate CurCol
--
--select * from @PerTable
--set @Cnt=0 ,VoucherDate
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 					
 set @StrQry=''SELECT   HSNCode,ItemGroupName + ''''  ''''+MItemMaster.ItemName As Itemname,UOMShortCode +'''' - ''''+ UOMShortCode as Uomname,
sum(TStock.Quantity) as Quantity, sum(tstock.Amount) as Amount,sum((tstock.Netamount)-(TStock.SGSTAmount+TStock.IGSTAmount+TStock.CessAmount+TStock.CGSTAmount)) as NetAmount,
sum(TStock.IGSTAmount) as IGSTAmount ,sum(TStock.CGSTAmount) as CGSTAmount ,sum(TStock.SGSTAmount) as SGSTAmount,sum(TStock.CessAmount) as CessAmount 
FROM TVoucherEntry AS TVoucherEntry_1 INNER JOIN
TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo  
inner join MItemMaster on TStock.itemno=MItemMaster.itemno
INNER JOIN MItemGroup on MItemGroup.ItemGroupNo=MItemMaster.groupno
inner join muom on tstock.FkUomNo=muom.uomno
WHERE TVoucherEntry_1.VoucherTypeCode=''+cast(@VchType as varchar)+'' and  VoucherDate>=''''''+cast(@FromDate as varchar)+'''''' and VoucherDate<=''''''+cast(@ToDate as varchar)+''''''
and TVoucherEntry_1.iscancel= 0  group by HSNCode,ItemGroupName,ItemName,UOMShortCode,UOMShortCode

order by HSNCode''

 Exec(@StrQry) 
END

------------------------------------------------------------------------------------------------------------------------------------------------------------------

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLedgerDistDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLedgerDistDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[DistAgentName] [varchar](250) NULL,
	[MobileNo] [varchar](50) NULL,
	[Remark] [varchar](max) NULL,
	[StatusNo] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MLedgerDistDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TWeighingBarCodePrint]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TWeighingBarCodePrint](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[BarCode] [varchar](50) NULL,
	[ActualQuantity] [numeric](18, 2) NULL,
	[Quantity] [numeric](18, 0) NULL,
	[FKRateSettingNo] [numeric](18, 0) NULL,
	[MacNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TWeighingBarCodePrint] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStockMRPwise]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE Procedure [dbo].[GetStockMRPwise]
@FromDate			datetime,
@ToDate				datetime,
@ItStr				varchar(max),
@RateType			int,
@IsIncludeTax		int,
@IsViewStockZero	int
AS
Begin

Declare @StrItem varchar(max),@StrQuery varchar(max),@StrWhere varchar(500),@RateStr varchar(max),
		@StrOp varchar(150),@StrIn varchar(150),@StrOut varchar(150)
set @StrItem='''' set @StrWhere=''''
if(@RateType=1) set @RateStr=''ASaleRate''
else if(@RateType=2) set @RateStr=''BSaleRate''
else if(@RateType=3) set @RateStr=''PurRate''
else if(@RateType=4) set @RateStr=''MRP''

if(@IsViewStockZero=1)
		set @StrWhere ='' having Sum(OpQty + abs(InQty) - abs(OutQty))<>0 ''

if(@IsIncludeTax=0)
Begin
	set @StrOp=''Sum(OpAmt)''
	set @StrIn=''Sum(InAmt)''
	set @StrOut=''Sum(OutAmt)''
End
else
Begin
	set @StrOp=''Sum(OpAmt+OpTaxAmt)''
	set @StrIn=''Sum(InAmt+InTaxAmt)''
	set @StrOut=''Sum(OutAmt+OutTaxAmt)''
End
if(@ItStr<>'''')
	set @StrItem=''(TStock.ItemNo in (''+@ItStr+'')) AND '' 
else	
	set @StrItem='' ''

set @StrQuery=''Select Tbl1.ItemNo,(SELECT     MItemGroup.ItemGroupName + '''' '''' + CASE WHEN (ItemShortName <> '''''''') 
THEN ItemShortName ELSE ItemName END AS Expr1 FROM MItemMaster AS MItemMaster_1 INNER JOIN 
MItemGroup ON MItemMaster_1.GroupNo = MItemGroup.ItemGroupNo WHERE (MItemMaster_1.ItemNo = Tbl1.ItemNo)) As ItemName,MRP, 
Sum(OpQty) As OpQty,''+@StrOp+'' As OpAmt, abs(Sum(InQty)) As InwardQty,abs(''+@StrIn+'') As InwardAmt, abs(Sum(OutQty)) As OutwardQty,abs(''+@StrOut+'') As OutwardAmt,   
Sum(OpQty + abs(InQty) - abs(OutQty)) ClQty,(''+ @StrOp +'' + abs(''+@StrIn+'')) - abs(''+@StrOut+'') As ClAmt From  
(SELECT  TStock.ItemNo, 
sum(case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity,0) else isnull(TStock.BilledQuantity,0)*-1 end) as OpQty,
sum(case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity,0) else isnull(TStock.BilledQuantity,0)*-1 end * MRS.''+@RateStr+'') as OpAmt,
sum(((case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity,0) else isnull(TStock.BilledQuantity ,0)*-1 end * MRS.''+@RateStr+'' ) * TStock.SGSTPercentage)/100) as OpTaxAmt,
0.00 as InQty,0.00 as InAmt,0.00 as InTaxAmt, 0.00 as OutQty,0.00 as OutAmt,0.00 as OutTaxAmt,MRateSetting.MRP  FROM TVoucherEntry INNER JOIN TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo 
INNER JOIN MRateSetting ON TStock.FKRateSettingNo=MRateSetting.PkSrNo 
INNER JOIN MRateSetting MRS ON MRS.ItemNo=MRateSetting.ItemNo AND MRS.MRP=MRateSetting.MRP  
INNER JOIN MItemMaster ON MItemMaster.ItemNo=TStock.ItemNo AND MRS.UOMNo=MItemMaster.UomDefault


WHERE   '' + @StrItem + '' (TVoucherEntry.VoucherDate < ''''''+cast(@FromDate as varchar)+'''''') 
and TVoucherEntry.IsCancel=''''false'''' AND MRS.isActive=''''true''''  Group by TStock.itemno  ,MRateSetting.MRP
UNION ALL  
SELECT  TStock.ItemNo, 0.00 as OpQty,0.00 AS OpAmt,0.00 AS OpTaxAmt,
sum(case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity ,0) else 0.00 end ) as InQty, 
sum(case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity,0)else 0.00 end * MRS.''+@RateStr+'' ) as InAmt, 
sum(((case when (TStock.TrnCode = 1) then isnull(TStock.BilledQuantity,0)else 0.00 end *MRS.''+@RateStr+'' )*TStock.SGSTPercentage)/100) as InTaxAmt, 
sum(case when (TStock.TrnCode = 2) then isnull(TStock.BilledQuantity,0)*-1  else 0.00 end) as OutQty,
sum(case when (TStock.TrnCode = 2) then isnull(TStock.BilledQuantity,0)*-1  else 0.00 end * MRS.''+@RateStr+'' ) as OutAmt,
sum(((case when (TStock.TrnCode = 2) then isnull(TStock.BilledQuantity,0)*-1  else 0.00 end *MRS.''+@RateStr+'')*TStock.SGSTPercentage)/100) as OutTaxAmt,MRateSetting.MRP 
FROM  TVoucherEntry INNER JOIN TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo  
INNER JOIN MRateSetting ON TStock.FKRateSettingNo=MRateSetting.PkSrNo
INNER JOIN MRateSetting MRS ON MRS.ItemNo=MRateSetting.ItemNo AND MRS.MRP=MRateSetting.MRP  
INNER JOIN MItemMaster ON MItemMaster.ItemNo=TStock.ItemNo AND MRS.UOMNo=MItemMaster.UomDefault


WHERE   '' + @StrItem + '' (TVoucherEntry.VoucherDate >= ''''''+cast(@FromDate as varchar)+'''''') AND  (TVoucherEntry.VoucherDate <= ''''''+cast(@ToDate as varchar)+'''''') 
and TVoucherEntry.IsCancel=''''false'''' AND MRS.isActive=''''true''''  Group by TStock.itemno,MRateSetting.MRP  ) As Tbl1   
INNER JOIN  MItemMaster ON MItemMaster.ItemNo = Tbl1.ItemNo  
Group BY Tbl1.ItemNo, MItemMaster.ItemName,MRP   ''+ @StrWhere +''
order by ItemName ''
--Select @StrQuery
Exec(@StrQuery)
End
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGroupBalance]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE function [dbo].[GetGroupBalance]
 (@GroupNo as int, @CompanyNo as int,@FromDate datetime,@ToDate datetime,@BalType int)
--returns Balance 

returns Numeric(18,2)
AS
BEGIN
Declare @retFindReports TABLE (Balance float)
   DECLARE @DOAmt float,@COAmt float,@OAmt float,@DAmt float,
   @Balance float,@SignCode int,@ReturnVal float,@LedgerNo numeric(18),@OStock numeric(18,2)

Declare CurLedg Cursor For Select LedgerNo From MLedger Where GroupNo in 
									(SELECT GroupNo FROM MGroup where GroupNo = @GroupNo or ControlGroup = @GroupNo)
		Open curLedg
		Fetch Next From CurLedg Into @LedgerNo
		While(@@Fetch_Status = 0)
		begin
			Select @DAmt = dbo.GetLedgerBalanceVal(@LedgerNo,@CompanyNo,@FromDate,@ToDate)
			
			set @ReturnVal= sum(isnull(@DAmt,0)) --+isnull(@OAmt,0)	
			insert into @retFindReports(Balance)values(@ReturnVal)

			Fetch Next From CurLedg Into @LedgerNo
		end
		Close curLedg
		Deallocate curLedg


--set @ReturnVal=isnull(@DAmt,0)+isnull(@OAmt,0)
select @Balance = sum(Balance) from @retFindReports

if (@GroupNo=6)
Begin
	SELECT    @OStock=isnull(SUM(0),0) FROM MStockItems GROUP BY CompanyNo HAVING (CompanyNo = @CompanyNo)
	set @Balance=@Balance+@OStock
END
--insert into @result(Balance)values(@Balance)
--select sum(Balance) from retFindReports
return isnull(@Balance,0)

end

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MItemTaxSetting]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MItemTaxSetting](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[TaxSettingName] [varchar](100) NULL,
	[TaxLedgerNo] [numeric](18, 0) NULL,
	[SalesLedgerNo] [numeric](18, 0) NULL,
	[Percentage] [numeric](18, 2) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MItemTaxSetting] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemRateAllWithStock]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE Function [dbo].[GetItemRateAllWithStock]
(
@PItemNo		           numeric(18),
@PBarCodeNo			   numeric(18),
@PUOMNo	               numeric(18),
@PMRP				   numeric(18,4),
@POnDate		           datetime,
@PGroupNo				numeric(18)
)
RETURNS @TRate TABLE  (PkSrNo numeric(18),ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2)
,UOMNo numeric(18), StockConversion numeric(18),PerOfRateVariation numeric(18, 2),MKTQty numeric(18,0),IsActive bit,Stock numeric(18,2))
AS
Begin
Declare @TempTbl TABLE (PkSrNo numeric(18),ItemNo numeric(18),FromDate datetime,PurRate numeric(18,2),MRP numeric(18,2),
ASaleRate numeric(18, 2),BSaleRate numeric(18, 2),CSaleRate numeric(18, 2),DSaleRate numeric(18, 2),ESaleRate numeric(18, 2),
UOMNo numeric(18), StockConversion numeric(18),PerOfRateVariation numeric(18, 2),IsActive bit, Stock numeric(18,2))


Declare @PkSrNo numeric(18) ,  @ItemNo numeric(18) , 
@FromDate datetime , @PurRate numeric(18,2), @MRP numeric(18,2),@IsActive bit,
@ASaleRate numeric(18, 2),@BSaleRate numeric(18, 2),@CSaleRate numeric(18, 2),@DSaleRate numeric(18, 2),@ESaleRate numeric(18, 2),
@UOMNo numeric(18) ,@StockConversion numeric(18) , @PerOfRateVariation numeric(18, 2),@MKTQty numeric(18, 0),
@StrFilter varchar(max),@SqlQuery varchar(max), @VItemNo numeric(18), 
@VBarCodeNo numeric(18), @VUOMNo numeric(18),@VMRP numeric(18,4),@Stock numeric(18,2)

Set  @PkSrNo = 0 set @MKTQty=0 set @MRP=0.00
Set  @ItemNo = 0 Set @FromDate = 0 Set  @PurRate  = 0 
Set  @ASaleRate = 0 Set  @BSaleRate = 0 Set  @CSaleRate = 0 Set  @DSaleRate = 0 Set  @ESaleRate = 0 Set  @UOMNo  = 0 
Set  @StockConversion = 0 
Set  @PerOfRateVariation = 0
Set @VItemNo = 0  Set @Stock=0
set @VBarCodeNo=0 set @VUOMNo =0 set @VMRP=0.00

if(@PGroupNo is Null)
Declare CurRate Cursor For Select PkSrNo ,MRateSetting.ItemNo,FromDate ,PurRate,MRateSetting.MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive --,
--                Sum(Isnull(MStockItemBalance.CurrentStock,0))/StockConversion
--				AS Stock
                 From MRateSetting 
--LEFT OUTER join MStockItemBalance On MRateSetting.ItemNo = MStockItemBalance.ItemNo and MRateSetting.MRP = MStockItemBalance.MRP
				 where 
                MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
--				AND  FkBcdSrNo=Case When @PBarCodeNo is null then FkBcdSrNo else @PBarCodeNo end 
				AND UOMNo=Case When @PUOMNo is null then UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
				Group by PkSrNo ,MRateSetting.ItemNo,FromDate ,PurRate,MRateSetting.MRP,ASaleRate,BSaleRate,CSaleRate,DSaleRate,ESaleRate ,
				 UOMNo , StockConversion ,
				 PerOfRateVariation,MKTQty,IsActive
				 Order by ItemNo,UOMNo,MRP,FromDate DESC, PkSrNo DESC 
else
Declare CurRate Cursor For Select MRateSetting.PkSrNo ,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive --,
----				 Sum(Isnull(MStockItemBalance.CurrentStock,0))/StockConversion    ///change by priyanka
----				 AS Stock

			     From MRateSetting INNER JOIN 
				 MItemMaster ON MRateSetting.ItemNo=MItemMaster.ItemNo
				--	left outer join MStockItemBalance On MRateSetting.ItemNo = MStockItemBalance.ItemNo and MRateSetting.MRP = MStockItemBalance.MRP
				 where 
                MRateSetting.ItemNo=Case When @PItemNo is null then MRateSetting.ItemNo else @PItemNo end 
--				AND  MRateSetting.FkBcdSrNo=Case When @PBarCodeNo is null then MRateSetting.FkBcdSrNo else @PBarCodeNo end 
				AND MRateSetting.UOMNo=Case When @PUOMNo is null then MRateSetting.UOMNo else @PUOMNo end 
				AND MRateSetting.MRP=Case When @PMRP is null then MRateSetting.MRP else @PMRP end
				AND MItemMaster.GroupNo=@PGroupNo
				Group by MRateSetting.PkSrNo ,MRateSetting.ItemNo,MRateSetting.FromDate ,MRateSetting.PurRate,MRateSetting.MRP,MRateSetting.ASaleRate,MRateSetting.BSaleRate,MRateSetting.CSaleRate,MRateSetting.DSaleRate,MRateSetting.ESaleRate ,
				 MRateSetting.UOMNo , MRateSetting.StockConversion ,
				 MRateSetting.PerOfRateVariation,MRateSetting.MKTQty,MRateSetting.IsActive
				 Order by MRateSetting.ItemNo,MRateSetting.UOMNo,MRateSetting.MRP,MRateSetting.FromDate DESC, PkSrNo DESC Open CurRate 

Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock
DECLARE @isRecOK int

while(@@Fetch_Status = 0)
Begin
		SET @isRecOK = 1
	    if(@PItemNo IS not NULL AND @PItemNo != @ItemNo)
		Begin
            SET @isRecOK = 2
		End --if(isNUll(@PItemNo))

--		if(@PBarCodeNo is not NUll AND @PBarCodeNo != @FkBcdSrNo)
--		Begin
--			 SET @isRecOK = 3
--		End --if(isNUll(@PBarCodeNo))

		if( @PUOMNo is not NUll AND @PUOMNo != @UOMNo)
		Begin
			 SET @isRecOK = 4
		End --if(isNUll(@PUOMNo))

		if( @PMRP is not NUll AND @PMRP != @MRP)
		Begin
			 SET @isRecOK = 5
		End --if(isNUll(@PMRP))
		
		if(@POnDate is not NUll AND @FromDate > @POnDate)
		Begin
			 SET @isRecOK = 6
		End --if(isNUll(@POnDate))
		else if(getdate()<@FromDate)
		Begin
			SET @isRecOK = 7
		End
 
	if((@isRecOK = 1) AND 
       (@VItemNo != @ItemNo  or @VUOMNo != @UOMNo or @VMRP!=@MRP) AND (@IsActive = ''True'')) -- @Stock > 0 or 
	Begin
		set @VItemNo = @ItemNo  
--		set @VBarCodeNo =@FkBcdSrNo 
		set @VUOMNo = @UOMNo 
		set @VMRP=@MRP
		
		insert into @TRate values (@PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,@UOMNo, 
								   @StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock)
	End --if(@VItemNo != @ItemNo  or @VBarCode
	
	Fetch CurRate into @PkSrNo ,@ItemNo,@FromDate,@PurRate,@MRP,@ASaleRate,@BSaleRate,@CSaleRate,@DSaleRate,@ESaleRate ,
								  @UOMNo ,@StockConversion ,@PerOfRateVariation,@MKTQty,@IsActive,@Stock
End --CurRate while(@@Fetch_Status = 0)

close CurRate deallocate CurRate 


Return
End


' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGroupBalance1]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE function [dbo].[GetGroupBalance1]
 (@GroupNo as int, @CompanyNo as int,@FromDate datetime,@ToDate datetime,@BalType int)
--returns Balance 

returns Numeric(18,2)
AS
BEGIN
Declare @retFindReports TABLE (Balance float)
   DECLARE @DOAmt float,@COAmt float,@OAmt float,@DAmt float,
   @Balance float,@SignCode int,@ReturnVal float,@LedgerNo numeric(18)
--Debit Opening Balance
--   SELECT @DOAmt=isnull(sum(OpeningBalance),0)
--      FROM MLedger 
--      WHERE GroupNo in(select GroupNo from MGroup where (GroupNo=@GroupNo 
--      or ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)
--      and CompanyNo=@CompanyNo and SignCode=1
--Credit Opening Balance
--   SELECT @COAmt=isnull(sum(OpeningBalance),0)
--      FROM MLedger 
--      WHERE GroupNo in(select GroupNo from MGroup where (GroupNo=@GroupNo 
--      or ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)
--      and CompanyNo=@CompanyNo and SignCode=2
--  set @OAmt=(isnull(@DOAmt,0)-isnull(@COAmt,0))
--Debit-Credit Amount
--  set @DAmt=isnull((SELECT isnull(Sum(debit)-sum(credit),0) 
--      FROM TVoucherDetails
--      WHERE LedgerNo in(select LedgerNo from MLedger where GroupNo 
--      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
--      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)and CompanyNo=@CompanyNo)  
--      and companyno=@companyNo and voucherno in (select Voucherno from TVoucherEntry 
--      where CompanyNo=@CompanyNo and VoucherTypeCode not in(6,10,17) and LedgerNo in(select LedgerNo from MLedger where GroupNo 
--      in(select GroupNo from MGroup where (GroupNo=@GroupNo or 
--      ControlGroup=@GroupNo) and CompanyNo=@CompanyNo)) and VoucherDate > @FromDate and  VoucherDate < @ToDate)),0)

Declare CurLedg Cursor For Select LedgerNo From MLedger Where GroupNo in 
									(SELECT GroupNo FROM MGroup where GroupNo = @GroupNo or ControlGroup = @GroupNo)
		Open curLedg
		Fetch Next From CurLedg Into @LedgerNo
		While(@@Fetch_Status = 0)
		begin
			--Select @DAmt = ClAmt From	GetLedgerBalance1(@LedgerNo,@CompanyNo,@FromDate,@ToDate,@BalType)
			Select @DAmt = dbo.GetLedgerBalanceVal(@LedgerNo,@CompanyNo,@FromDate,@ToDate)
			set @ReturnVal= sum(isnull(@DAmt,0)) --+isnull(@OAmt,0)	
			insert into @retFindReports(Balance)values(@ReturnVal)

			Fetch Next From CurLedg Into @LedgerNo
		end
		Close curLedg
		Deallocate curLedg


--set @ReturnVal=isnull(@DAmt,0)+isnull(@OAmt,0)
select @Balance = sum(Balance) from @retFindReports
--insert into @result(Balance)values(@Balance)
--select sum(Balance) from retFindReports
return isnull(@Balance,0)

--return
end

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRackWiseBill]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
Create PROCEDURE [dbo].[GetRackWiseBill]
@PkVoucherNo                numeric(18),
@Type						int

AS
Begin

SELECT     TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherDate, CASE WHEN (@Type = 1) 
                      THEN MStockItems_V_1.ItemName ELSE MStockItems_V_1.ItemNameLang END AS ItemName, MRateSetting.MRP, TStock.Quantity, TStock.GRWeight, 
                      TStock.TRWeight, TStock.PackagingCharges, TStock.NoOfBag, TStock.CessValue, TStock.OtherCharges AS Dhekharek, TStock.Rate, TStock.Amount, MUOM.UOMName, 
                      TStock.SGSTPercentage, TStock.SGSTAmount, TStock.DiscPercentage, TStock.DiscAmount, TStock.DiscRupees, TStock.DiscPercentage2, TStock.DiscAmount2, 
                      TStock.DiscRupees2, TStock.CGSTPercentage, TStock.CGSTAmount, TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, TStock.CessAmount, 
                      MLedgerDetails.GSTNO AS CustGSTNo, MLedgerDetails.PANNo AS CustPANNo, MLedgerDetails.FSSAI, MFirm.GSTNO AS CmpGSTNo, MLedger.StateCode, 
                      MItemMaster.HSNCode, TVoucherEntry.BilledAmount, CASE WHEN (@Type = 1) THEN LedgerName ELSE LedgerLangName END AS LedgerName, 
                      MLedger.ContactPerson, MLedgerDetails.PhNo1 AS CustPhNo, MLedgerDetails.MobileNo1 AS CustMoNo, CASE WHEN (@Type = 1) 
                      THEN MLedgerDetails.Address ELSE MLedgerDetails.AddressLang END AS CustAddress, MFirm.Address + '' / '' + MFirm.PinCode AS CmpAddress, 
                      MFirm.EmailID AS CmpEmailID, MFirm.PhoneNo1 + '' / '' + MFirm.PhoneNo2 AS CompPhoneNo, MFirm.FSSAINO AS CompFSSAINo, TVoucherEntry.Reference, 
                      TVoucherEntry.VoucherTime, TStock.NetAmount + TStock.CessValue + TStock.PackagingCharges + TStock.OtherCharges AS NetAmount, TStock.NetRate, 
                      TStock.DisplayItemName, TStock.Remarks AS RemarksItemlevel, '''' AS TransporterName, TVoucherEntry.LRNo, MTransporterMode.TransModeName, 
                      TVoucherEntry.TransNoOfItems,
                          (SELECT     SettingValue
                            FROM          MSettings
                            WHERE      (PkSettingNo = 311)) AS DisplayTrans, TVoucherEntry.Remark, MState.StateName, MCity.CityName, MPayType.PayTypeName, 
                      MLedgerDetails_1.Address AS CustDeliveryAddress, mcity_1.CityName AS custDeliverycity, MRack.RackName, MRackDetails.ToQty
FROM         MCity AS mcity_1 RIGHT OUTER JOIN
                      TStock INNER JOIN
                      MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN
                      TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
                      MFirm ON TVoucherEntry.CompanyNo = MFirm.FirmNo INNER JOIN
                      MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                      dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems_V_1 ON TStock.ItemNo = MStockItems_V_1.ItemNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MLedgerDetails ON MLedgerDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo LEFT OUTER JOIN
                      MTransporterMode ON TVoucherEntry.TransportMode = MTransporterMode.TransModeNo INNER JOIN
                      MState ON MLedger.StateCode = MState.StateCode LEFT OUTER JOIN
                      MCity ON MLedgerDetails.CityNo = MCity.CityNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      MRack INNER JOIN
                      MRackDetails ON MRack.RackNo = MRackDetails.FkRackNo ON MItemMaster.GroupNo = MRackDetails.ItemNo LEFT OUTER JOIN
                      TDeliveryAddress ON TVoucherEntry.PkVoucherNo = TDeliveryAddress.FkVoucherno AND TVoucherEntry.LedgerNo = TDeliveryAddress.Ledgerno LEFT OUTER JOIN
                      MLedgerDetails AS MLedgerDetails_1 ON MLedgerDetails_1.LedgerDetailsNo = TDeliveryAddress.LedgerDetailsNo AND 
                      TDeliveryAddress.Ledgerno = MLedgerDetails_1.DeliveryLedgerNo ON mcity_1.CityNo = MLedgerDetails_1.CityNo
WHERE     (TVoucherEntry.PkVoucherNo = @PkVoucherNo)

ORDER BY TStock.PkStockTrnNo

END

/*---------------------------------------------------------------------------------------------------------------------------------------------------*/

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRateSetting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/04/2019
CREATE PROCEDURE [dbo].[AddMRateSetting]
     @PkSrNo                              numeric(18),
   --  @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
     @MRP										numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                            numeric(18,4),
	 @BSaleRate                            numeric(18,4),
	 @CSaleRate                            numeric(18,4),
	 @DSaleRate                            numeric(18,4),
	 @ESaleRate                            numeric(18,4),
	 @StockConversion					  Numeric(18,2),
	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive								bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
if(cast(@FromDate as datetime) < cast(''02-02-1900 00:00:00'' as datetime))
begin
	set @FromDate= getdate()
end

IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET
          --FkBcdSrNo = @FkBcdSrNo,
          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
          MRP=@MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  PerOfRateVariation=@PerOfRateVariation,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT(''MRateSetting'', RESEED, @Id)
       INSERT INTO MRateSetting(
         -- FkBcdSrNo,
          ItemNo,
          FromDate,
          PurRate,
		  MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,
		  PerOfRateVariation,
		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          --@FkBcdSrNo,
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @PerOfRateVariation,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END
Update Mitemmaster set StatusNo=2 Where ItemNo =@ItemNo


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLocation]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLocation](
	[LocationNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LocationName] [varchar](50) NULL,
	[LocationShortCode] [varchar](50) NULL,
	[CountryNo] [numeric](18, 0) NULL,
	[StateNo] [numeric](18, 0) NULL,
	[CityNo] [numeric](18, 0) NULL,
	[RegionNo] [numeric](18, 0) NULL,
	[ControlGroup] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MLocation] PRIMARY KEY CLUSTERED 
(
	[LocationNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MBarcodeTemplate]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MBarcodeTemplate](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[TemplateName] [varchar](50) NULL,
	[Size] [varchar](50) NULL,
	[NoOfColumn] [int] NULL,
	[DefaultScript] [varchar](max) NULL,
	[ScriptData] [varchar](max) NULL,
	[PrinterName] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MBarcodeTemplate] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TParkingBill]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TParkingBill](
	[ParkingBillNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[BillNo] [numeric](18, 0) NULL,
	[BillDate] [datetime] NULL,
	[BillTime] [datetime] NULL,
	[PersonName] [varchar](50) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[IsBill] [bit] NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[IsCancel] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[StatusNo] [int] NULL,
	[Discount] [numeric](18, 2) NULL,
	[Charges] [numeric](18, 2) NULL,
	[Charges2] [numeric](18, 2) NULL,
	[Remark] [varchar](500) NULL,
	[RateTypeNo] [numeric](18, 0) NULL,
	[TaxTypeNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TParkingBill] PRIMARY KEY CLUSTERED 
(
	[ParkingBillNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTVoucherJournalEntry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 21/07/2015
CREATE PROCEDURE  [dbo].[DeleteTVoucherJournalEntry] 
@PKSrNo                             numeric(18)


AS

       DELETE FROM TVoucherJournalEntry
       WHERE
          PKSrNo = @PKSrNo

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MItemTaxInfo]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MItemTaxInfo](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKTaxSettingNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[TaxLedgerNo] [numeric](18, 0) NULL,
	[SalesLedgerNo] [numeric](18, 0) NULL,
	[FromDate] [datetime] NULL,
	[Percentage] [numeric](18, 2) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[StatusNo] [int] NULL,
	[CalculationMethod] [varchar](50) NULL,
 CONSTRAINT [PK_MItemTaxInfo] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemTaxInfo]') AND name = N'IX_MItemTaxInfo')
CREATE NONCLUSTERED INDEX [IX_MItemTaxInfo] ON [dbo].[MItemTaxInfo] 
(
	[ItemNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemTaxInfo]') AND name = N'IX_MItemTaxInfo_1')
CREATE NONCLUSTERED INDEX [IX_MItemTaxInfo_1] ON [dbo].[MItemTaxInfo] 
(
	[SalesLedgerNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemTaxInfo]') AND name = N'IX_MItemTaxInfo_2')
CREATE NONCLUSTERED INDEX [IX_MItemTaxInfo_2] ON [dbo].[MItemTaxInfo] 
(
	[TaxLedgerNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStockAllBrandQty]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetStockAllBrandQty]
@CompNo		           numeric(18),
@FromDate	           datetime,
@ToDate		           datetime,
@ItStr		            varchar(max),
@Itype                numeric(18)



AS
Declare @ItemNo		numeric(18)
Declare @TStock TABLE (ItemNo int,ItemName varchar(max),OpQty numeric(18,2),InwardQty numeric(18,2),OutwardQty numeric(18,2),Quantity numeric(18,2))
Declare @ItemTable TABLE(ItemNo numeric(18))
Declare @ItemName varchar(max),@OpQty numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2),@DrQty numeric(18,2),@StrQry varchar(max),@ItNo numeric(18),@StrItem varchar(max),@StrVchType varchar(max)
set @OpQty=0  set @DrQty=0  set @CrQty=0 set @StrQry='''' 
set @StrItem=''''


if(@ItStr<>'''')
	begin
		set @StrItem=''  MItemMaster.GroupNo IN (''+@ItStr+'') and  '' 
		--insert into @ItemTable  Exec (@StrQry) 
    end
else
    begin
		set @StrItem='' ''
    end

if(@Itype=0)
begin 
set @StrVchType=''and TVoucherEntry.vouchertypecode in(15,12,13,9,8)''
end
else
begin 
set @StrVchType=''and TVoucherEntry.vouchertypecode in(115,112,113,109,108)''
end

set @StrQry=''Select Tbl1.ItemNo,Tbl1.ItemGroupName As ItemName, Sum(OpQty) As OpQty, abs(Sum(InQty)) As InwardQty, abs(Sum(OutQty)) As OutwardQty, 
Sum(OpQty + abs(InQty) - abs(OutQty)) As Quantity,''''0'''' as Barcode From
(
SELECT    MItemGroup.ItemGroupNo as ItemNo , MItemGroup.ItemGroupName , SUM(CASE WHEN (TStock.TrnCode = 1) THEN isnull(TStock.BilledQuantity, 0) ELSE isnull(TStock.BilledQuantity, 0) * - 1 END) AS OpQty, 0.00 AS InQty, 
                      0.00 AS OutQty
FROM         TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo INNER JOIN
                      MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                      MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo
WHERE   '' + @StrItem + '' (TVoucherEntry.VoucherDate < ''''''+cast(@FromDate as varchar)+'''''')  and TVoucherEntry.IsCancel=''''false'''' '' + @StrVchType + ''
GROUP BY MItemGroup.ItemGroupNo , MItemGroup.ItemGroupName 
UNION ALL
SELECT     MItemGroup.ItemGroupNo as ItemNo, MItemGroup.ItemGroupName , 0.00 AS OpQty, SUM(CASE WHEN (TStock.TrnCode = 1) THEN isnull(TStock.BilledQuantity, 0) ELSE 0.00 END) AS InQty, 
                      SUM(CASE WHEN (TStock.TrnCode = 2) THEN isnull(TStock.BilledQuantity, 0) * - 1 ELSE 0.00 END) AS OutQty
FROM         TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo INNER JOIN
                      MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                      MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo
WHERE    '' + @StrItem + '' (TVoucherEntry.VoucherDate >= ''''''+cast(@FromDate as varchar)+'''''') AND 
        (TVoucherEntry.VoucherDate <= ''''''+cast(@ToDate as varchar)+'''''')  and TVoucherEntry.IsCancel=''''false'''' '' + @StrVchType + ''
GROUP BY MItemGroup.ItemGroupNo, MItemGroup.ItemGroupName 
) As Tbl1 
Group BY Tbl1.ItemNo,Tbl1.ItemGroupName
order by ItemName  ''

Exec(@StrQry)


	RETURN

/*---------------------------------------------------------------------------------------------------------------------------------------------------*/

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherJournalEntry]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVoucherJournalEntry](
	[PKSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
	[FKReceiptVoucherNo] [numeric](18, 0) NULL,
	[FKJournalVoucherNo] [numeric](18, 0) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[Amount] [numeric](18, 2) NULL,
	[JVAmount] [numeric](18, 2) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_TVoucherJournalEntry] PRIMARY KEY CLUSTERED 
(
	[PKSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRateSetting3]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 08/02/2012
Create PROCEDURE [dbo].[AddMRateSetting3]
     @PkSrNo                              numeric(18),
     @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
     @MRP										numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                            numeric(18,4),
	 @BSaleRate                            numeric(18,4),
	 @CSaleRate                            numeric(18,4),
	 @DSaleRate                            numeric(18,4),
	 @ESaleRate                            numeric(18,4),
	 @StockConversion					  Numeric(18,2),
	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive								bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
	 @ReturnID							  int output
AS
if(cast(@FromDate as datetime) < cast(''02-02-1900 00:00:00'' as datetime))
begin
	set @FromDate= getdate()
end

IF EXISTS(select PkSrNo from MRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MRateSetting
       SET
          FkBcdSrNo = @FkBcdSrNo,
          ItemNo = @ItemNo,
          FromDate = @FromDate,
          PurRate = @PurRate,
          MRP=@MRP,
		  UOMNo=@UOMNo,                               
		  ASaleRate = @ASaleRate,
		  BSaleRate = @BSaleRate,
		  CSaleRate = @CSaleRate,
		  DSaleRate = @DSaleRate,
		  ESaleRate = @ESaleRate,
		  StockConversion=@StockConversion,
		  PerOfRateVariation=@PerOfRateVariation,
		  MKTQty=@MKTQty,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo
	      set @ReturnID=@PkSrNo    

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MRateSetting
       DBCC CHECKIDENT(''MRateSetting'', RESEED, @Id)
       INSERT INTO MRateSetting(
          FkBcdSrNo,
          ItemNo,
          FromDate,
          PurRate,
		  MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,
		  PerOfRateVariation,
		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          @FkBcdSrNo,
          @ItemNo,
          @FromDate,
          @PurRate,
		  @MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @PerOfRateVariation,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCurrentLedgerBalance]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[GetCurrentLedgerBalance]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18)
	)
RETURNS @TLedgerBal Table(OpAmt numeric(18,2))
AS
BEGIN
	Declare @DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @BalAmt numeric(18,2),@Res int

	Set @DrAmt = 0 Set @CrAmt = 0 set @Res=0

	SELECT    @DrAmt= IsNull(SUM(TVoucherDetails.Debit),0), @CrAmt=IsNull(SUM(TVoucherDetails.Credit),0)
		FROM         TVoucherDetails INNER JOIN
							  TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo 
		WHERE     (TVoucherDetails.LedgerNo = @LedgerNo)  AND 
				  (TVoucherEntry.CompanyNo = @CompNo) AND (TVoucherEntry.IsCancel=''false'')

	set @BalAmt = (@DrAmt - @CrAmt)
	insert into @TLedgerBal values(@BalAmt)
	
	RETURN
END
--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MItemGroup]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MItemGroup](
	[ItemGroupNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ItemGroupName] [varchar](50) NULL,
	[LangGroupName] [nvarchar](200) NULL,
	[ControlGroup] [numeric](18, 0) NULL,
	[ControlSubGroup] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
	[Margin] [numeric](18, 2) NULL,
 CONSTRAINT [PK_MItemGroup] PRIMARY KEY CLUSTERED 
(
	[ItemGroupNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MItemGroup]') AND name = N'IX_MItemGroup')
CREATE NONCLUSTERED INDEX [IX_MItemGroup] ON [dbo].[MItemGroup] 
(
	[ItemGroupNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRecipeSub]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
Create PROCEDURE [dbo].[AddMRecipeSub]
 @SRecipeID             int,
 @FKMRecipeID           int,
 @RawGroupNo            int,
 @RawProductID          int, 
 @Qty                   decimal(18,2),
 @ProductQty            numeric(18,2),
 @UomNo                 int,
 @Wastageper            decimal(18,2),
 @WastagePerQty         decimal(18,2),
 @FinalQty              decimal(18,2),
 @IsActive              bit

AS
IF EXISTS(select SRecipeID from MRecipeSub
          where
          SRecipeID = @SRecipeID) 
     BEGIN
       --Update existing row
       UPDATE MRecipeSub
       SET

        FKMRecipeID=@FKMRecipeID,
		RawGroupNo=@RawGroupNo,
		RawProductID=@RawProductID,
		Qty=@Qty,
		UomNo=@UomNo,
        ProductQty=@ProductQty,
		Wastageper=@Wastageper,
		WastagePerQty=@WastagePerQty,
		FinalQty=@FinalQty, 
        IsActive=@IsActive

       WHERE
          SRecipeID = @SRecipeID 

     END
ELSE
	BEGIN
		   --Insert new row
		   Declare @Id numeric
		   SELECT @Id=IsNull(Max(SRecipeID),0) From MRecipeSub
		   DBCC CHECKIDENT(''MRecipeSub'', RESEED, @Id)
		   INSERT INTO MRecipeSub
(
			FKMRecipeID, 
			RawGroupNo,
			RawProductID, 
			Qty, 
			UomNo, 
            ProductQty,
			Wastageper, 
			WastagePerQty, 
			FinalQty, 
			IsActive			  
)
VALUES
(
			@FKMRecipeID,
			@RawGroupNo,
			@RawProductID,
			@Qty,
			@UomNo,
            @ProductQty,
			@Wastageper,
			@WastagePerQty,
			@FinalQty,
			@IsActive
)
	END

/****** -------------------------------------------------------------------------------------------******/


/****** -------------------------------------------------------------------------------------------******/






























' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllItemClosingStock1]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetAllItemClosingStock1]
(
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime
)
 RETURNS @retFindReports TABLE (Balance numeric(18,2))

--RETURNS @TStock TABLE (ItemNo int,ItemName varchar(max),Quantity numeric(18,2),Rate numeric(18,2),Amount numeric(18,2))
AS
	BEGIN
Declare @TStock TABLE (ItemNo int,ItemName varchar(max),Quantity numeric(18,2),Rate numeric(18,2),Amount numeric(18,2))
		Declare @ItemName varchar(max)
Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrQty numeric(18,2)
Declare @CrQty numeric(18,2),@ClosingQty numeric(18,2),@DrRate numeric(18,2),@CrRate numeric(18,2)
Declare @Rate numeric(18,2),@BalAmt numeric(18,2),@ItemNo numeric(18),@Balance numeric(18,2),@TrnDr int,@TrnCr int,
		@DrAmt numeric(18,2),@CrAmt numeric(18,2)
set @Rate = 0 set @TrnDr=1 set @TrnCr=2

SELECT     @DrAmt=isnull(Sum(abs(TStock.Amount)),0)
	FROM     TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                      TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo 
	WHERE     (TStock.TrnCode = @TrnDr) AND  
	(TVoucherEntry.VoucherDate >= @FromDate) AND 
	(TVoucherEntry.VoucherDate <= @ToDate)And TVoucherEntry.CompanyNo=@CompNo


 SELECT    @CrAmt=isnull(Sum(abs(TStock.Amount)),0)
FROM       TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                      TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo 
WHERE     (TStock.TrnCode = @TrnCr) AND
			(TVoucherEntry.VoucherDate >= @FromDate) AND 
                      (TVoucherEntry.VoucherDate <= @ToDate) And TVoucherEntry.CompanyNo=@CompNo

set @BalAmt=@DrAmt-@CrAmt
set @Balance=@BalAmt
if(@Balance<0)
 set @Balance = 0
insert into @retFindReports(Balance)values(@Balance)

	RETURN
	END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MStockLocation]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MStockLocation](
	[StockLocationNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[StockLocationName] [varchar](50) NULL,
	[GodownNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MStockLocation] PRIMARY KEY CLUSTERED 
(
	[StockLocationNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MRack]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MRack](
	[RackNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[RackName] [varchar](50) NULL,
	[RackCode] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MRack] PRIMARY KEY CLUSTERED 
(
	[RackNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMFirm1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[AddMFirm1]
     @FirmNo                               numeric(18),
     @FirmName                             nvarchar(250),
     @ShortName                            varchar(100),
     @Address                              nvarchar(max),
     @StateNo                              numeric(18),
     @StateCode                            numeric(18),
	 @CityNo							   numeric(18),
     @Pincode                              varchar(100),
     @EmailID                              varchar(100),
     @PhoneNo1			                       varchar(100),
     @PhoneNo2                             varchar(100),
     @MobileNo1                            varchar(100),
     @MobileNo2                            varchar(100),
     @TermAndCondition                     varchar(300),
     @GSTNo                                varchar(250),
     @FSSAINo							   varchar(250),
     @PANNo                                varchar(250),
     @AdharNo                              varchar(250),
     @AnyotherNo1                          varchar(250),
     @AnyotherNo2                          varchar(250),
     @GSTDate                              DateTime,
     @FSSAIDate                            DateTime,
     @IsType                               bit,
     @IsActive                             bit,
     @UserID                               int,
     @UserDate                             DateTime,
     @PrinterName                          varchar(50)
     
AS
SET IDENTITY_INSERT MFirm ON

BEGIN
       --Insert new row
       INSERT INTO MFirm(
         FirmNo,   
          FirmName,
          ShortName,	
          Address,			
          StateNo,			
          StateCode,		
          CityNo,			
		  PinCode,		
          EmailID,		  
          PhoneNo1,		  
          PhoneNo2,		  
          MobileNo1,		  
          MobileNo2,		  
          TermAndCondition, 
          GSTNo,			 
          FSSAINo,		 
          PANCardNo,			 
          AdharCardNo,		  
          AnyotherNo1,	   
          AnyotherNo2,   
          GSTDate,		 
          FSSAIDate,		
          IsType,		
          IsActive,		 
          UserID,		
          UserDate,
          StatusNo,
		  PrinterName		 
)
       VALUES(
          @FirmNo,   
          @FirmName,
          @ShortName,
          @Address,
          @StateNo,
          @StateCode,
          @CityNo,
		  @Pincode,
          @EmailID,
          @PhoneNo1,
          @PhoneNo2,
          @MobileNo1,
          @MobileNo2,
          @TermAndCondition,
          @GSTNo,
          @FSSAINo,
          @PANNo,
          @AdharNo,
          @AnyotherNo1,
          @AnyotherNo2,
          @GSTDate,
          @FSSAIDate,
          @IsType,
          @IsActive,
          @UserID,
          @UserDate,
		  1,
		  @PrinterName	
)


END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MBarcodeDefault]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MBarcodeDefault](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[PrinterTypeNo] [numeric](18, 0) NULL,
	[BarcodeTemplateNo] [numeric](18, 0) NULL,
	[DefaultScript] [varchar](max) NULL,
	[Column1] [varchar](max) NULL,
	[Column2] [varchar](max) NULL,
	[Column3] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MBarcodeDefault] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLedgerDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLedgerDetails](
	[LedgerDetailsNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[Address] [varchar](300) NULL,
	[StateNo] [numeric](18, 0) NULL,
	[CityNo] [numeric](18, 0) NULL,
	[PinCode] [varchar](50) NULL,
	[PhNo1] [varchar](50) NULL,
	[PhNo2] [varchar](50) NULL,
	[MobileNo1] [varchar](50) NULL,
	[MobileNo2] [varchar](50) NULL,
	[EmailID] [varchar](50) NULL,
	[DOB] [datetime] NULL,
	[QualificationNo] [numeric](18, 0) NULL,
	[OccupationNo] [numeric](18, 0) NULL,
	[CustomerType] [numeric](18, 0) NULL,
	[CreditDays] [numeric](18, 0) NULL,
	[CreditLimit] [numeric](18, 2) NULL,
	[PANNo] [varchar](50) NULL,
	[VATNo] [varchar](50) NULL,
	[CSTNo] [varchar](50) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[StatusNo] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[FSSAIDate] [datetime] NULL,
	[GSTNO] [varchar](50) NULL,
	[AdharCardNo] [varchar](50) NULL,
	[GSTDate] [datetime] NULL,
	[FSSAI] [varchar](50) NULL,
	[AreaNo] [numeric](18, 0) NULL,
	[CustTaxTypeNo] [numeric](18, 0) NULL,
	[AccountNo] [varchar](150) NULL,
	[AddressLang] [nvarchar](500) NULL,
	[BillPrintType] [numeric](18, 0) NULL,
	[RateTypeNo] [numeric](18, 0) NULL,
	[DiscRs] [numeric](18, 0) NULL,
	[DiscPer] [numeric](18, 0) NULL,
	[AnyotherNo1] [varchar](50) NULL,
	[AnyotherNo2] [varchar](50) NULL,
	[ReportName] [varchar](max) NULL,
	[Distance] [numeric](18, 2) NULL,
	[DeliveryLedgerNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MAddress] PRIMARY KEY CLUSTERED 
(
	[LedgerDetailsNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MStockCategory]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MStockCategory](
	[CategoryNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[CategoryName] [varchar](50) NULL,
	[ControlGroup] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[DepartmentNo] [numeric](18, 0) NULL,
	[UserId] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MCategory] PRIMARY KEY CLUSTERED 
(
	[CategoryNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MRackDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MRackDetails](
	[RackDetailsNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[UOMLNo] [numeric](18, 0) NULL,
	[FkRackNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[ToQty] [numeric](18, 2) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MRackDetails] PRIMARY KEY CLUSTERED 
(
	[RackDetailsNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MFooterDiscountDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MFooterDiscountDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FooterDiscNo] [numeric](18, 0) NULL,
	[Amount] [numeric](18, 2) NULL,
	[DiscPercentage] [numeric](18, 2) NULL,
	[DiscAmount] [numeric](18, 2) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MFooetrDicountDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MReportPrinterSettings]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MReportPrinterSettings](
	[PkSrNo] [numeric](18, 0) NOT NULL,
	[ReportName] [varchar](50) NULL,
	[ReportClassName] [varchar](50) NULL,
	[PrinterNo] [numeric](18, 0) NULL,
	[PageSizeName] [varchar](50) NULL,
	[IsScript] [bit] NULL,
 CONSTRAINT [PK_MReportPrinterSettings] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMUOM]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE [dbo].[AddMUOM]
     @UOMNo                               numeric(18),
     @UOMName                             varchar(50),
     @UOMShortCode                        varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
     @UOMType                             numeric(18)
   --  @ModifiedBy                          text
AS
IF EXISTS(select UOMNo from MUOM
          where
          UOMNo = @UOMNo)
     BEGIN
       --Update existing row
       UPDATE MUOM
       SET
          UOMName = @UOMName,
          UOMShortCode = @UOMShortCode,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2,
		  CompanyNo=@CompanyNo,
          UOMType=@UOMType
       WHERE
          UOMNo = @UOMNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(UOMNo),0) From MUOM
       DBCC CHECKIDENT(''MUOM'', RESEED, @Id)
       INSERT INTO MUOM(
          --UOMNo,
          UOMName,
          UOMShortCode,
          IsActive,
          UserID,
          UserDate,
          StatusNo,
		  CompanyNo,
          UOMType
--	      VersionNo,
--          ServerUomNo
          --ModifiedBy
)
       VALUES(
          --@UOMNo,
          @UOMName,
          @UOMShortCode,
          @IsActive,
          @UserID,
          @UserDate,
          1,
		 @CompanyNo,
         @UOMType
--         0,
--         0
          --@ModifiedBy
)

END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLedgerGroup]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLedgerGroup](
	[LedgerGroupNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LedgerName] [varchar](250) NULL,
	[LedgerLangName] [nvarchar](500) NULL,
	[GroupNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MLedgerGroup] PRIMARY KEY CLUSTERED 
(
	[LedgerGroupNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetDrCrBalByVchTypeOrMonth]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetDrCrBalByVchTypeOrMonth]
(
	@VchNo int,
	@MonthNo int,
	@CompanyNo numeric(18),
	@FrDate Datetime,
	@ToDate Datetime
)
RETURNS @TBal Table(DrBal numeric(18,2),CrBal numeric(18,2),ClosingBal numeric(18,2))
AS
	BEGIN
	Declare @DrBal numeric(18,2),@CrBal numeric(18,2)
	--Declare @FrDate datetime,@ToDate datetime
	
	--SELECT      = BooksBeginFrom,@ToDate = BooksEndOn FROM MCompany WHERE (CompanyNo = @CompanyNo)
	
if(@VchNo = 15 or @VchNo = 9)
Begin 
		
			SELECT   @DrBal=  ISNULL(SUM(TVoucherDetails.Credit), 0) , @CrBal = ISNULL(SUM(TVoucherDetails.Debit), 0)
			FROM         TVoucherEntry INNER JOIN
			TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo
			WHERE     (MONTH(TVoucherEntry.VoucherDate) = @MonthNo) AND (TVoucherEntry.VoucherTypeCode = @VchNo) AND 
			(TVoucherEntry.VoucherDate >= @FrDate) And (TVoucherEntry.VoucherDate <= @ToDate)
			And (TVoucherEntry.CompanyNo= @CompanyNo) And (TVoucherDetails.VoucherSrNo = 1)
	end 
Else 
	Begin 
	
			SELECT   @DrBal=  ISNULL(SUM(TVoucherDetails.Debit), 0) , @CrBal = ISNULL(SUM(TVoucherDetails.Credit), 0)
			FROM         TVoucherEntry INNER JOIN
			TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo
			WHERE     (MONTH(TVoucherEntry.VoucherDate) = @MonthNo) AND (TVoucherEntry.VoucherTypeCode = @VchNo) AND 
			(TVoucherEntry.VoucherDate >= @FrDate) And (TVoucherEntry.VoucherDate <= @ToDate)
			And (TVoucherEntry.CompanyNo= @CompanyNo) And (TVoucherDetails.VoucherSrNo = 1)
end 

Insert into @TBal values(@DrBal,@CrBal,0)		
	RETURN
	END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherEntry]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVoucherEntry](
	[PkVoucherNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[VoucherTypeCode] [numeric](18, 0) NULL,
	[VoucherUserNo] [numeric](18, 0) NULL,
	[VoucherDate] [datetime] NULL,
	[VoucherTime] [datetime] NULL,
	[Narration] [varchar](50) NULL,
	[Reference] [varchar](50) NULL,
	[ChequeNo] [numeric](18, 0) NULL,
	[ClearingDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[BilledAmount] [numeric](18, 2) NULL,
	[ChallanNo] [varchar](50) NULL,
	[Remark] [varchar](max) NULL,
	[InwardLocationCode] [numeric](18, 0) NULL,
	[MacNo] [numeric](18, 0) NULL,
	[IsCancel] [bit] NULL,
	[PayTypeNo] [numeric](18, 0) NULL,
	[RateTypeNo] [numeric](18, 0) NULL,
	[TaxTypeNo] [numeric](18, 0) NULL,
	[TaxInvoiceTypeNo] [numeric](18, 0) NULL,
	[IsVoucherLock] [bit] NULL,
	[VoucherStatus] [int] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[OrderType] [numeric](18, 0) NULL,
	[ReturnAmount] [numeric](18, 2) NULL,
	[Visibility] [numeric](18, 2) NULL,
	[DiscPercent] [numeric](18, 2) NULL,
	[DiscAmt] [numeric](18, 2) NULL,
	[StatusNo] [int] NULL,
	[MixMode] [int] NULL,
	[IsItemLevelDisc] [bit] NULL,
	[IsFooterLevelDisc] [bit] NULL,
	[PrintCount] [int] NULL,
	[BrokerNo] [numeric](18, 0) NULL,
	[SuppCategory] [numeric](18, 0) NULL,
	[EffectiveDate] [datetime] NULL,
	[IsBillMulti] [numeric](18, 2) NULL,
	[TransporterCode] [numeric](18, 0) NULL,
	[TransPayType] [numeric](18, 0) NULL,
	[LRNo] [varchar](50) NULL,
	[TransportMode] [numeric](18, 0) NULL,
	[TransNoOfItems] [numeric](18, 2) NULL,
	[VersionNo] [numeric](18, 0) NULL,
	[ServerVoucherNo] [numeric](18, 0) NULL,
	[ChrgesTaxPerce] [numeric](18, 2) NULL,
	[IsTaxFree] [bit] NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[StateCode] [numeric](18, 0) NULL,
	[TaxAmount] [numeric](18, 0) NULL,
	[PkRefNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TVoucherEntry] PRIMARY KEY CLUSTERED 
(
	[PkVoucherNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherEntry]') AND name = N'IX_TVoucherEntry')
CREATE NONCLUSTERED INDEX [IX_TVoucherEntry] ON [dbo].[TVoucherEntry] 
(
	[VoucherTypeCode] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherEntry]') AND name = N'IX_TVoucherEntry_1')
CREATE NONCLUSTERED INDEX [IX_TVoucherEntry_1] ON [dbo].[TVoucherEntry] 
(
	[VoucherUserNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherEntry]') AND name = N'IX_TVoucherEntry_2')
CREATE NONCLUSTERED INDEX [IX_TVoucherEntry_2] ON [dbo].[TVoucherEntry] 
(
	[LedgerNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherEntryDeleted]'))
EXEC dbo.sp_executesql @statement = N'CREATE TRIGGER [dbo].[TVoucherEntryDeleted]
    ON [dbo].[TVoucherEntry]
    After DELETE
AS
Begin Try 
Declare @VoucherNo numeric(18),@VchTypeCode numeric(18),@CompanyNo numeric(18),@SVoucherNo numeric(18)
	SELECT @VoucherNo=deleted.PKVoucherNo,@VchTypeCode=deleted.VoucherTypeCode,@CompanyNo=deleted.CompanyNo,
	 @SVoucherNo =ServerVoucherNo FROM deleted
    
	Exec AddTDeleteVouchers 0,@VoucherNo,@SVoucherNo ,@VchTypeCode ,@CompanyNo
End Try
Begin Catch

End Catch
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllVouchEntryDtlsByDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetAllVouchEntryDtlsByDate]
(
	@MonthNo int,
	@CompNo numeric(18),
	@FrDate datetime,
	@ToDate datetime,	
	@Type int,
	@No numeric(18)
	
)
RETURNS @TVchDate Table(VchTypeNo numeric(18),VchDate varchar(20),LdgName varchar(max),VchTypeName varchar(max),VchNo numeric(18),VchUserNo varchar(50),DrAmt numeric(18,2),CrAmt numeric(18,2))
AS
	BEGIN
	if(@Type=10)--Ledger Voucher Display.
	begin
 insert into @TVchDate
 SELECT     TVoucherEntry.VoucherTypeCode,CONVERT(varchar(11), TVoucherEntry.VoucherDate, 105) AS VchDate, MLedger.LedgerName, (Select VoucherTypeName From MVoucherType Where (VoucherTypeCode = TVoucherEntry.VoucherTypeCode)) As VoucherTypeName, TVoucherDetails.FKVoucherNo,TVoucherEntry.VoucherUserNo, TVoucherDetails.Debit, 
                      TVoucherDetails.Credit
FROM         TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode
WHERE      (MONTH(TVoucherEntry.VoucherDate) = @MonthNo)
			And (TVoucherEntry.CompanyNo = @CompNo) And
		(TVoucherEntry.VoucherDate >= @FrDate) And (TVoucherEntry.VoucherDate <= @ToDate)
			And (TVoucherDetails.LedgerNo = @No) --and TVoucherDetails.VoucherSrNo = 1
	end
	 
	 
	RETURN
	END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MStockGroupType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MStockGroupType](
	[StockGroupTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[StockGroupTypeName] [varchar](50) NULL,
	[StatusNo] [int] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_MStockGroupType] PRIMARY KEY CLUSTERED 
(
	[StockGroupTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRewardFrom]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRewardFrom](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[RewardNo] [numeric](18, 0) NULL,
	[RewardDetailsNo] [numeric](18, 0) NULL,
	[SchemeDetailsNo] [numeric](18, 0) NULL,
	[SchemeFromNo] [numeric](18, 0) NULL,
	[FkStockNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TRewardFrom] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLedgerGroupDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLedgerGroupDetails](
	[LedgerGrpDetailsNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LedgerGroupNo] [numeric](18, 0) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MLedgerGroupDetails] PRIMARY KEY CLUSTERED 
(
	[LedgerGrpDetailsNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OpeningStock]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[OpeningStock]
	(
	@CompNo		numeric(18),
	@FromDate	datetime
	)
RETURNS @TStockBal Table(OpAmt numeric(18,2)) --OpQty numeric(18,2),
AS
	BEGIN
	Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrAmt numeric(18,2),@DrQty numeric(18,2)
Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2)
Declare @Rate numeric(18,2),@BalAmt numeric(18,2)
Declare @OpDt datetime,@TrnDr int,@TrnCr int
Declare @VType int,@VNo numeric(18)--@IsJobWork int,@JobWorkCo numeric(18),
Declare @DAmt numeric(18,2),@DQty Numeric(18,2),@CAmt numeric(18,2),@CQty Numeric(18,2)
Declare @Cnt int
set @VType=0 set @VNo=0--set @IsJobWork=0 set @JobWorkCo=0 
set @Cnt=0
	set @ClosingQty = 0 set @BalAmt = 0
set @DrQty=0 set @DrAmt=0 set @CrQty = 0 set @CrAmt = 0
set @TrnDr = 1 set @TrnCr = 2

--if(@Type =0)--Stock Summary
--begin
	Select @OpDt=@FromDate --UserDate From MBranch where PKBranchCode=@BrID	
	set @OpAmt=0 set @OpQty =0
	--SELECT     @OpAmt=isnull(SUM(OpQuantity*SaleRate),0), @OpQty=isnull(SUM(OpQuantity) ,0)
	--FROM         MItemOpeningStock
	
	if(@FromDate <= @OpDt)
	begin
	
	insert into @TStockBal values(@OpAmt)
	set @Cnt=1
	end
	else
	begin
		Declare CurDr Cursor For 	
		SELECT     isnull(TStock.Amount,0), isNull(abs(TStock.BilledQuantity),0) --isnull(TStock.Quantity,0)
		,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--@DrAmt=isnull(SUM(TStock.Amount),0) , @DrQty=isnull(SUM(TStock.Quantity) ,0)
		FROM    TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                      TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo 
		WHERE  (TStock.TrnCode = @TrnDr)  AND 
			(TVoucherEntry.VoucherDate >= @OpDt) AND 
                      (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate))
                      
		Declare CurCr Cursor For
		SELECT     isnull(TStock.Amount,0),  isNull(abs(TStock.BilledQuantity),0)--isnull(TStock.Quantity,0)
			,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--@CrAmt=isnull(SUM(TStock.Amount),0) , @CrQty=isnull(SUM(TStock.Quantity),0) 
		FROM       TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                      TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo 
		WHERE  (TStock.TrnCode = @TrnCr) AND 
		(TVoucherEntry.VoucherDate >= @OpDt) AND 
        (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate)) 
            
     
	insert into @TStockBal values(@BalAmt)
	end
--end
if(@Cnt=0)
begin
--Open Debit Cursor
Open CurDr
	Fetch Next From CurDr Into @DAmt,@DQty,@VType,@VNo
	While (@@Fetch_status=0)
	begin
		set @DrAmt=@DrAmt+@DAmt
		set @DrQty=@DrQty+@DQty
		Fetch Next From CurDr Into @DAmt,@DQty,@VType,@VNo
	end
	Close CurDr Deallocate CurDr

set @VType=0 set @VNo=0	
--Open Credit Cursor
Open CurCr
	Fetch Next From CurCr Into @CAmt,@CQty,@VType,@VNo
	While (@@Fetch_status=0)
	begin
		set @CrAmt=@CrAmt+@CAmt
		set @CrQty=@CrQty+@CQty
		Fetch Next From CurCr Into @CAmt,@CQty,@VType,@VNo
	end
	Close CurCr Deallocate CurCr
	
set @ClosingQty=(@DrQty-@CrQty)+@OpQty
	                   
	set @BalAmt = (@DrAmt - @CrAmt)+ @OpAmt  
	insert into @TStockBal values(@BalAmt)
end
	RETURN
	END

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGodownSetting]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MGodownSetting](
	[PkGodownSettingNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkBcdSrNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[UOMNo] [numeric](18, 0) NULL,
	[QuantitySlabFrom] [numeric](18, 2) NULL,
	[QuantitySlabTo] [numeric](18, 2) NULL,
	[GodownNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_MGodownSetting] PRIMARY KEY CLUSTERED 
(
	[PkGodownSettingNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOpeningLedgerBalance2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE  FUNCTION [dbo].[GetOpeningLedgerBalance2]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime
	)
RETURNS @TLedgerBal Table(OpAmt numeric(18,2))
AS
	BEGIN
	Declare @OpAmt numeric(18,2),@DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @BalAmt numeric(18,2),@Res int
	Declare @TDate datetime
	
	Set @DrAmt = 0 Set @CrAmt = 0 set @OpAmt=0 set @Res=0

	set @TDate=DateAdd(d,-1,@FromDate)

	SELECT    @DrAmt= IsNull(SUM(TVoucherDetails.Debit),0), @CrAmt=IsNull(SUM(TVoucherDetails.Credit),0)
		FROM         TVoucherDetails INNER JOIN
			     TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo 
		WHERE     (TVoucherDetails.LedgerNo = @LedgerNo)  AND 
			  (TVoucherEntry.VoucherDate <= @TDate) And (TVoucherEntry.CompanyNo = @CompNo) and (TVoucherEntry.IsCancel=''false'')
	                   
	set @BalAmt = (@DrAmt - @CrAmt)+ @OpAmt  
	insert into @TLedgerBal values(@BalAmt)
	
RETURN
END
--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRewardTo]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRewardTo](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[RewardNo] [numeric](18, 0) NULL,
	[RewardDetailsNo] [numeric](18, 0) NULL,
	[SchemeDetailsNo] [numeric](18, 0) NULL,
	[SchemeToNo] [numeric](18, 0) NULL,
	[FkStockNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TRewardTo] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOpeningLedgerBalance]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'--Created On 26-July-2008
CREATE FUNCTION [dbo].[GetOpeningLedgerBalance]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime
	--@BrID		numeric(18)
	)
RETURNS @TLedgerBal Table(OpAmt numeric(18,2))
AS
BEGIN
	Declare @OpAmt numeric(18,2),@DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @BalAmt numeric(18,2),@Res int
	Declare @TDate datetime
	
	Set @DrAmt = 0 Set @CrAmt = 0 set @OpAmt=0 set @Res=0

	set @TDate=DateAdd(d,-1,@FromDate)
	SELECT    @DrAmt= IsNull(SUM(TVoucherDetails.Debit),0), @CrAmt=IsNull(SUM(TVoucherDetails.Credit),0)
		FROM         TVoucherDetails INNER JOIN
			     TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo 
		WHERE     (TVoucherDetails.LedgerNo = @LedgerNo)  AND 
			  (TVoucherEntry.VoucherDate <= @TDate) And (TVoucherEntry.CompanyNo = @CompNo) and (TVoucherEntry.IsCancel=''false'')
			   
	set @BalAmt = (@DrAmt - @CrAmt)+ @OpAmt  
	insert into @TLedgerBal values(@BalAmt)
	
	RETURN
END
--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TEWayDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TEWayDetails](
	[PKEWayNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherNo] [int] NULL,
	[EWayNo] [varchar](50) NULL,
	[VoucherUserNo] [numeric](18, 0) NULL,
	[EWayDate] [datetime] NULL,
	[ModeNo] [numeric](18, 0) NULL,
	[Distance] [numeric](18, 2) NULL,
	[TransportNo] [numeric](18, 0) NULL,
	[VehicleNo] [varchar](50) NULL,
	[LRNo] [varchar](50) NULL,
	[LRDate] [datetime] NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[LedgerName] [varchar](max) NULL,
	[Address] [varchar](max) NULL,
	[CityNo] [numeric](18, 0) NULL,
	[CityName] [varchar](50) NULL,
	[PinCode] [numeric](18, 0) NULL,
	[StateCode] [numeric](18, 0) NULL,
	[StateName] [varchar](50) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[StatusNo] [int] NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_TEWayDetails] PRIMARY KEY CLUSTERED 
(
	[PKEWayNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MItemBrandDiscount]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MItemBrandDiscount](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[ItemDiscNo] [numeric](18, 0) NULL,
	[StockGroupNo] [numeric](18, 0) NULL,
	[DiscPercentage] [numeric](18, 2) NULL,
	[IsActive] [bit] NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MItemBrandDiscount] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MRecipeMain]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MRecipeMain](
	[MRecipeID] [int] IDENTITY(1,1) NOT NULL,
	[DocNo] [int] NULL,
	[ItemType] [varchar](50) NULL,
	[GroupNo] [int] NULL,
	[FinishItemID] [int] NULL,
	[PackingSize] [decimal](18, 2) NULL,
	[RDate] [datetime] NULL,
	[Qty] [numeric](18, 2) NULL,
	[ProdQty] [numeric](18, 2) NULL,
	[UomNo] [numeric](18, 0) NULL,
	[RecipeType] [numeric](18, 0) NULL,
	[FkRecipeID] [numeric](18, 0) NULL,
	[IsLock] [bit] NULL,
	[IsActive] [bit] NULL,
	[UserID] [int] NULL,
	[UserDate] [datetime] NULL,
	[ModifiedOn] [varchar](max) NULL,
	[ESFlag] [bit] NULL,
 CONSTRAINT [PK_MRecipeMain] PRIMARY KEY CLUSTERED 
(
	[MRecipeID] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMBarcode]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE [dbo].[AddMBarcode]
     @BarcodeNo                           numeric(18),
     @BarcodeName                         varchar(50),
     @Group1No                            numeric(18),
     @Group2No                            numeric(18),
     @DepartmentNo                        numeric(18),
     @CategoryNo                          numeric(18),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime
     --@ModifiedBy                          text
AS
IF EXISTS(select BarcodeNo from MBarcode
          where
          BarcodeNo = @BarcodeNo)
     BEGIN
       --Update existing row
       UPDATE MBarcode
       SET
          BarcodeName = @BarcodeName,
          Group1No = @Group1No,
          Group2No = @Group2No,
          DepartmentNo = @DepartmentNo,
          CategoryNo = @CategoryNo,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          BarcodeNo = @BarcodeNo
--Hi
     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(BarcodeNo),0) From MBarcode
       DBCC CHECKIDENT(''MBarcode'', RESEED, @Id)
       INSERT INTO MBarcode(
          --BarcodeNo,
          BarcodeName,
          Group1No,
          Group2No,
          DepartmentNo,
          CategoryNo,
          IsActive,
          UserID,
          UserDate
          --ModifiedBy
)
       VALUES(
          --@BarcodeNo,
          @BarcodeName,
          @Group1No,
          @Group2No,
          @DepartmentNo,
          @CategoryNo,
          @IsActive,
          @UserID,
          @UserDate
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetVoucherName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetVoucherName]
	(
	@VchNo Numeric(18),
	@VchTypeNo Numeric(18)
	)
RETURNS @Temp Table(strFrName varchar(max),VchName varchar(max))
AS
	BEGIN
		Declare	@strFrName varchar(max),@VchName varchar(max)
            set @VchName =''''
            
            if (@VchTypeNo = 1)
            begin
                set @strFrName = ''ContraEntryAE.aspx?''
                set @VchName = ''Contra''
            end
            else if (@VchTypeNo = 4)
			begin
				set @strFrName = ''SalesDeliveryChallanAE.aspx?''
				set @VchName = ''Delivery Note''
            end
			else if (@VchTypeNo = 5)
			begin
				set @strFrName = ''Journal.aspx?''
				set @VchName = ''Journal Entry''
            end
            else if (@VchTypeNo = 7)
			begin
				set @strFrName = ''PaymentEntryAE.aspx?''
				set @VchName = ''Payment''
            end
            else if (@VchTypeNo = 8)
			begin
				set @strFrName = ''PhysicalStockEntryAE.aspx?''
				set @VchName = ''Physical Stock''
            end
            
            else if (@VchTypeNo = 9)
            begin
                if ((SELECT COUNT(*) FROM ROrderInvoice INNER JOIN TInvoiceHeader ON ROrderInvoice.FKInvoiceNo = TInvoiceHeader.PKInvoiceNo WHERE (TInvoiceHeader.FKVoucherNo = @VchNo)) <> 0)
                begin
					set @strFrName = ''PurchaseInvoiceAgPOAE.aspx?''
					set @VchName = ''Purchase Invoice Against PO''
                end
                else if ((SELECT COUNT(*) FROM TInvoiceHeader INNER JOIN RGRNInvoice ON TInvoiceHeader.PKInvoiceNo = RGRNInvoice.FKInvoiceNo WHERE (TInvoiceHeader.FKVoucherNo = @VchNo)) <> 0)
                begin
					set @strFrName = ''PurchaseInvoiceAgGRNAE.aspx?''
					set @VchName = ''Purchase Invoice Against GRN''
                end
                else
                begin
					set @strFrName = ''PurchaseEntryAE.aspx?''
					set @VchName = ''Purchase''
                end
            end
            else if (@VchTypeNo = 10)
			begin
				set @strFrName = ''OrderEntryAE.aspx?OrderType=2&''
				set @VchName = ''Purchase Order''
            end
            else if (@VchTypeNo = 11)
			begin
				set @strFrName = ''ReceiptEntryAE.aspx?''
				set @VchName = ''Receipt''
            end
            else if (@VchTypeNo = 13)
			begin
				set @strFrName = ''RejectionInEntryAE.aspx?''
				set @VchName = ''Rejection In''
            end
            else if (@VchTypeNo = 14)
			begin
				set @strFrName = ''RejectionOutAgGRNAE.aspx?''
				set @VchName = ''Rejection Out Against GRN''
            end
            else if (@VchTypeNo = 16)
            begin
                if ((SELECT COUNT(*) FROM ROrderInvoice INNER JOIN TInvoiceHeader ON ROrderInvoice.FKInvoiceNo = TInvoiceHeader.PKInvoiceNo WHERE (TInvoiceHeader.FKVoucherNo = @VchNo)) <> 0)
                begin
					set @strFrName = ''SalesInvoiceAgSOAE.aspx?''
					set @VchName = ''Sales Invoice Against SO''
                end
                else if ((SELECT COUNT(*) FROM TDeliChallanHeader WHERE (FKVoucherNo = @VchNo)) != 0)
                begin
					set @strFrName = ''DeliveryChallanAE.aspx?''
					set @VchName = ''Sales Delivery Challan''
                end
                else if ((SELECT COUNT(*) FROM RChallanInvoice INNER JOIN TInvoiceHeader ON RChallanInvoice.InvoiceNo = TInvoiceHeader.PKInvoiceNo WHERE (TInvoiceHeader.FKVoucherNo = @VchNo)) <> 0)
                begin
					set @strFrName = ''SalesInvoiceAgDeliChallanAE.aspx?''
					set @VchName = ''Sales Inv Against Delv Challan''
                end
                else
                begin
					set @strFrName = ''"SalesEntryAE.aspx?''
					set @VchName = ''Sales''
                end
            end
            else if (@VchTypeNo = 17)
			begin
				set @strFrName = ''OrderEntryAE.aspx?OrderType=1&''
				set @VchName = ''Sales Order''
            end
            else if (@VchTypeNo = 18)
			begin
				set @strFrName = ''StockJournalEntryAE.aspx?''
				set @VchName = ''Stock Journal''
            end
            else if (@VchTypeNo = 19)
            begin
                if ((SELECT COUNT(*) FROM MGRNMaster WHERE (FKVoucherNo = @VchNo) AND (GRNType = 1)) != 0)
                begin
					set @strFrName = ''GRNEntryAE.aspx?''
					set @VchName = ''GRN Entry''
                end
                else if ((SELECT COUNT(*) FROM MGRNMaster WHERE (FKVoucherNo = @VchNo ) AND (GRNType = 2)) != 0)
                begin
					set @strFrName = ''GRNElecHWEntryAE.aspx?''
					set @VchName = ''GRN Elect/HW''
                end
            end


			else if (@VchTypeNo = 19)
				set @VchName = ''Internal Transfer''
			
else if (@VchTypeNo = 20)	set @VchName = ''Delivery Challan''
else if (@VchTypeNo = 21)	set @VchName = ''Purchase Voucher''
else if (@VchTypeNo = 22)	set @VchName = ''Sales Voucher''
else if (@VchTypeNo = 23)	set @VchName = ''Stock Inward''
else if (@VchTypeNo = 24) set @VchName = ''Stock Outward''
else if (@VchTypeNo = 25)	set @VchName = ''CashDepositeInBank''
else if (@VchTypeNo = 26)	set @VchName = ''CashWithdrawalFromBank''
else if (@VchTypeNo = 27)	set @VchName = ''Cash Receipt''
else if (@VchTypeNo = 28)	set @VchName = ''Bank Receipt''
else if (@VchTypeNo = 29)	set @VchName = ''Bank Payment''
  insert into @Temp values(@strFrName,@VchName) 
	RETURN
	END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MRecipeSub]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MRecipeSub](
	[SRecipeID] [int] IDENTITY(1,1) NOT NULL,
	[FKMRecipeID] [int] NULL,
	[RawGroupNo] [int] NULL,
	[RawProductID] [int] NULL,
	[UomNo] [int] NULL,
	[Qty] [decimal](18, 2) NULL,
	[ProductQty] [numeric](18, 2) NULL,
	[Wastageper] [decimal](18, 2) NULL,
	[WastagePerQty] [decimal](18, 2) NULL,
	[FinalQty] [decimal](18, 2) NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_MRecipeSub] PRIMARY KEY CLUSTERED 
(
	[SRecipeID] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[GetItemInfo]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[GetItemInfo]
AS
SELECT     MStockItems_V_1.ItemNo, MStockItems_V_1.ItemName, dbo.MCompany.CompanyName, Brand.StockGroupName AS BrandName, 
                      Category.StockGroupName AS CategoryName, dbo.MStockBarcode.Barcode, Brand.StockGroupNo AS BrandNo, Category.StockGroupNo AS CategoryNo, 
                      Department.StockGroupName AS DepartmentName, Department.StockGroupNo AS DepartmentNo
FROM         dbo.MStockGroup AS Brand INNER JOIN
                      dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems_V_1 ON Brand.StockGroupNo = MStockItems_V_1.GroupNo INNER JOIN
                      dbo.MStockGroup AS Category ON MStockItems_V_1.GroupNo1 = Category.StockGroupNo INNER JOIN
                      dbo.MCompany ON MStockItems_V_1.CompanyNo = dbo.MCompany.CompanyNo INNER JOIN
                      dbo.MStockBarcode ON MStockItems_V_1.ItemNo = dbo.MStockBarcode.ItemNo INNER JOIN
                      dbo.MStockGroup AS Department ON MStockItems_V_1.FKStockDeptNo = Department.StockGroupNo
WHERE     (MStockItems_V_1.ItemNo <> 1)
' 
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'GetItemInfo', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[8] 2[29] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Brand"
            Begin Extent = 
               Top = 6
               Left = 240
               Bottom = 114
               Right = 402
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "MStockItems_V_1"
            Begin Extent = 
               Top = 0
               Left = 538
               Bottom = 242
               Right = 721
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Category"
            Begin Extent = 
               Top = 56
               Left = 21
               Bottom = 164
               Right = 183
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "MCompany"
            Begin Extent = 
               Top = 330
               Left = 38
               Bottom = 438
               Right = 279
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "MStockBarcode"
            Begin Extent = 
               Top = 150
               Left = 210
               Bottom = 258
               Right = 379
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Department"
            Begin Extent = 
               Top = 6
               Left = 759
               Bottom = 114
               Right = 921
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 11
         Width = 284
         Width = 1500
         Width' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'GetItemInfo'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane2' , N'SCHEMA',N'dbo', N'VIEW',N'GetItemInfo', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N' = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'GetItemInfo'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'GetItemInfo', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'GetItemInfo'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MOccupation]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MOccupation](
	[OccupationNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[OccupationName] [varchar](50) NULL,
	[ShortName] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MOccupation] PRIMARY KEY CLUSTERED 
(
	[OccupationNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLedger2]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
Create PROCEDURE [dbo].[AddMLedger2]
     @LedgerNo                            numeric(18),
     @LedgerUserNo                        varchar(100),
     @LedgerName                          varchar(250),
     @GroupNo                             numeric(18),
	 @OpeningBalance					  numeric(18,2),
	 @SignCode							  numeric(18),  
     @MaintainBillByBill                  bit,
	 @IsActive                            bit,
     @ContactPerson                       varchar(100),
     @CompanyNo                           numeric(18),
	 @LedgerStatus						  int,
     @IsEnroll                            bit,
     @IsSendSMS                           bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @TransporterNo                       numeric(18),
     @StateCode                           numeric(18),
	 @LedgerLangName					  varchar(100),
     @IsPartyWiseRate                     bit,
     @QuotationRate                       bit,
     @ContactPersonLang                   nvarchar(500)
     
AS
SET IDENTITY_INSERT MLedger ON
     BEGIN
       
       INSERT INTO MLedger(
          LedgerNo,    
          LedgerUserNo,
          LedgerName,
          GroupNo,
		  OpeningBalance,
		  SignCode,
          MaintainBillByBill,
		  IsActive,
          ContactPerson,
          CompanyNo,
		  LedgerStatus,
          IsEnroll,
          IsSendSMS,
          UserID,
          UserDate,
          TransporterNo,
          StateCode,
		  LedgerLangName,
          IsPartyWiseRate,
		  QuotationRate,
          ContactPersonLang,
          StatusNo
)
       VALUES(
        @LedgerNo,    
          @LedgerUserNo,
          @LedgerName,
          @GroupNo,
		  @OpeningBalance,
		  @SignCode,
          @MaintainBillByBill,
		  @IsActive,
          @ContactPerson,
          @CompanyNo,
		  @LedgerStatus,
          @IsEnroll,
          @IsSendSMS,
          @UserID,
          @UserDate,
		  @TransporterNo,
		  @StateCode,
	      @LedgerLangName,
          @IsPartyWiseRate,
          @QuotationRate,
          @ContactPersonLang,
          1
)


END


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMBarcode]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE  [dbo].[DeleteMBarcode] 
@BarcodeNo                          numeric(18)


AS
Update MBarcode set IsActive=''False'' Where BarcodeNo = @BarcodeNo

--       DELETE FROM MBarcode
--       WHERE
--          BarcodeNo = @BarcodeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MTransporter]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MTransporter](
	[TransporterNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[TransporterName] [varchar](50) NULL,
	[TransportershortName] [varchar](50) NULL,
	[ContactNo] [varchar](50) NULL,
	[ContactPerson] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
	[TransporterLangName] [nvarchar](500) NULL,
 CONSTRAINT [PK_MTransporter_1] PRIMARY KEY CLUSTERED 
(
	[TransporterNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MUser]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MUser](
	[UserCode] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[UsersUserCode] [varchar](10) NULL,
	[UserName] [varchar](250) NULL,
	[Password] [varchar](50) NULL,
	[UserAddress] [varchar](250) NULL,
	[PhoneNo] [varchar](50) NULL,
	[UserType] [int] NULL,
	[CityCode] [numeric](18, 0) NULL,
	[IsClose] [int] NULL,
	[FkAccYearNo] [numeric](18, 0) NULL,
	[FkCompanyNo] [numeric](18, 0) NULL,
	[FkLocationNo] [numeric](18, 0) NULL,
	[ModifiedBy] [varchar](500) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MUser] PRIMARY KEY CLUSTERED 
(
	[UserCode] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemCount]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'--Created on 26-Apr-2012
CREATE FUNCTION [dbo].[GetItemCount]
(
	@VoucherNo numeric(18)

)
RETURNS @TItems Table(ItemCount numeric(18))
AS
	BEGIN
	Declare @ICount numeric(18)

	SELECT @ICount=COUNT(*) 
	FROM TVoucherDetails INNER JOIN
    TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo
	WHERE (TVoucherDetails.FkVoucherNo = @VoucherNo)
		Insert into @TItems values (@ICount)

	RETURN
	END
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MTaxOnTax]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MTaxOnTax](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[TaxTypeNo] [numeric](18, 0) NULL,
	[IsAdnlTax] [bit] NULL,
	[AdnlTaxTypeNo] [numeric](18, 0) NULL
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MArea]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MArea](
	[AreaNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[AreaName] [varchar](50) NULL,
	[AreaShortCode] [varchar](50) NULL,
	[AreaLangName] [nvarchar](100) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MArea] PRIMARY KEY CLUSTERED 
(
	[AreaNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTSalesSetting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/05/2012
CREATE PROCEDURE  [dbo].[DeleteTSalesSetting] 
@PkSalesSetting                     numeric(18)


AS

       DELETE FROM TSalesSetting
       WHERE
          PkSalesSetting = @PkSalesSetting
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MPayTypeLedger]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MPayTypeLedger](
	[PkPayTypeLedgerNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[PayTypeNo] [numeric](18, 0) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
	[ChargesPerce] [numeric](18, 2) NULL,
 CONSTRAINT [PK_MPayTypeLedger] PRIMARY KEY CLUSTERED 
(
	[PkPayTypeLedgerNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MTaxOnTaxSetting]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MTaxOnTaxSetting](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[TaxSettingNo] [numeric](18, 0) NULL,
	[AdnlTaxSettingNo] [numeric](18, 0) NULL,
	[TaxTypeNo] [numeric](18, 0) NULL,
	[AdnlTaxTypeNo] [numeric](18, 0) NULL
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMArea1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
Create PROCEDURE [dbo].[AddMArea1]
     @AreaNo                              numeric(18),
     @AreaName                            varchar(50),
     @AreaLangName                        nvarchar(100),
     @AreaShortCode                       varchar(50),
   
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
     
AS

   SET IDENTITY_INSERT MArea ON  

     BEGIN
      
       INSERT INTO MArea(
AreaNo,
          AreaName,
          AreaLangName,
          AreaShortCode,
        
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
          --ModifiedBy
)
       VALUES(
@AreaNo,
          @AreaName,
          @AreaLangName,
          @AreaShortCode,
       
          @IsActive,
          @UserID,
          @UserDate,
	      @CompanyNo,
          1
         
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MQualification]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MQualification](
	[QualificationNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[QualificationName] [varchar](50) NULL,
	[ShortName] [varchar](50) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MQualification] PRIMARY KEY CLUSTERED 
(
	[QualificationNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTSalesSetting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11-May-2012
CREATE PROCEDURE [dbo].[AddTSalesSetting]
	@PkSalesSetting		numeric(18),
	@PartyAccNo		numeric(18),
	@TaxTypeNo		numeric(18),
	@TransporterNo		numeric(18),
	@Discount1No		numeric(18),
	@Discount2No		numeric(18),
	@Discount3No		numeric(18),
	@Discount4No		numeric(18),
	@Charges1No		numeric(18),
	@Charges2No		numeric(18),
	@Charges3No		numeric(18),
	@Charges4No		numeric(18),
	@RoundOfAccNo		numeric(18),
	@StopOnRate		bit,
	@StopOnQty		bit,
	@IsBarCodeDisplay		bit,
	@AllowsDuplicatesItems		bit,
	@ItemNameType		numeric(18),
	@UserID		numeric(18),
	@UserDate		datetime
 AS 
 IF EXISTS ( Select PkSalesSetting From TSalesSetting 
	 Where 
	 PkSalesSetting =@PkSalesSetting ) 
	  BEGIN 
--Update existing row 
	 UPDATE TSalesSetting 
	 SET 

	PartyAccNo=@PartyAccNo,
	TaxTypeNo=@TaxTypeNo,
	TransporterNo=@TransporterNo,
	Discount1No=@Discount1No,
	Discount2No=@Discount2No,
	Discount3No=@Discount3No,
	Discount4No=@Discount4No,
	Charges1No=@Charges1No,
	Charges2No=@Charges2No,
	Charges3No=@Charges3No,
	Charges4No=@Charges4No,
	RoundOfAccNo=@RoundOfAccNo,
	StopOnRate=@StopOnRate,
	StopOnQty=@StopOnQty,
	IsBarCodeDisplay=@IsBarCodeDisplay,
	AllowsDuplicatesItems=@AllowsDuplicatesItems,
	ItemNameType=@ItemNameType,
	UserID=@UserID,
	UserDate=@UserDate
	Where 
	 PkSalesSetting=@PkSalesSetting
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(PkSalesSetting),0) From TSalesSetting 
	  DBCC CHECKIDENT(''TSalesSetting'', RESEED, @Id) 
	  INSERT INTO TSalesSetting( 
	PartyAccNo,
	TaxTypeNo,
	TransporterNo,
	Discount1No,
	Discount2No,
	Discount3No,
	Discount4No,
	Charges1No,
	Charges2No,
	Charges3No,
	Charges4No,
	RoundOfAccNo,
	StopOnRate,
	StopOnQty,
	IsBarCodeDisplay,
	AllowsDuplicatesItems,
	ItemNameType,
	UserID,
	UserDate 
)
	  VALUES(
	@PartyAccNo,
	@TaxTypeNo,
	@TransporterNo,
	@Discount1No,
	@Discount2No,
	@Discount3No,
	@Discount4No,
	@Charges1No,
	@Charges2No,
	@Charges3No,
	@Charges4No,
	@RoundOfAccNo,
	@StopOnRate,
	@StopOnQty,
	@IsBarCodeDisplay,
	@AllowsDuplicatesItems,
	@ItemNameType,
	@UserID,
	@UserDate
	)
	END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MItemDiscount]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MItemDiscount](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[DiscUserNo] [numeric](18, 0) NULL,
	[MfgCompanyNo] [numeric](18, 0) NULL,
	[DiscDate] [datetime] NULL,
	[PeriodFrom] [datetime] NULL,
	[PeriodTo] [datetime] NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[IsActive] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
 CONSTRAINT [PK_MItemDiscount] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ViewDailyStockSummary]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[ViewDailyStockSummary]
@CompNo		           numeric(18),
@FromDate			 datetime
AS
Declare @TStock TABLE (ItemNo int,ItemName varchar(max),Quantity numeric(18,2))
Declare @ItemNo numeric(18),@ItemName varchar(max),
		@OpQty numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2),@DrQty numeric(18,2)


--SELECT MStockItems.ItemNo, MStockItems.ItemName,SUM(CASE WHEN (Tstock.TrnCode = 1) THEN Tstock.Quantity ELSE - Tstock.Quantity END) AS Quantity
--FROM         TStock INNER JOIN
--                      dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems ON TStock.ItemNo = MStockItems.ItemNo
--GROUP BY TStock.CompanyNo,MStockItems.ItemNo,MStockItems.ItemName,TStock.FKVoucherNo
--HAVING      (SUM(CASE WHEN (TrnCode = 1) THEN Quantity ELSE - Quantity END) <= 0) AND TStock.CompanyNo=@CompNo 
--	AND TStock.FKVoucherNo not in (Select PKVoucherNo From TVoucherEntry Where IsCancel=''true'')

--Declare CurAll Cursor  for Select Distinct MStockItems.ItemNo, MStockItems.ItemName FROM TStock INNER JOIN
--                dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems ON TStock.ItemNo = MStockItems.ItemNo
--				where TStock.CompanyNo= @CompNo
--	Open CurAll	
--	Fetch Next From CurAll into @ItemNo,@ItemName
--
--	while(@@Fetch_Status = 0)
--	begin
--	
--	Select @OpQty=IsNull(OpQty,0) From GetOpeningStock(@CompNo,@FromDate,@ItemNo,0,0)  
--	select @DrQty=abs(DrQty),@CrQty=CrQty From GetClosingStock(@CompNo,@FromDate,@FromDate,@ItemNo,0,0)
--	set @ClosingQty=(@DrQty-@CrQty)+@OpQty
--	if(@ClosingQty<=0)
--	insert into @TStock values(@ItemNo,@ItemName,@ClosingQty)
--	Fetch Next From CurAll into @ItemNo,@ItemName
--	end
--Close CurAll Deallocate CurAll
--
--Select * from @TStock
--	RETURN
SELECT     MStockItems.ItemNo, (SELECT     MStockGroup.StockGroupName + '' '' + CASE WHEN (ItemShortCode <> '''') THEN ItemShortCode ELSE ItemName END AS Expr1
                            FROM          MStockItems AS MStockItems_1 INNER JOIN
                                                   MStockGroup ON MStockItems_1.GroupNo = MStockGroup.StockGroupNo
                            WHERE      (MStockItems_1.ItemNo = MStockItems.ItemNo))
 As ItemName, ISNULL(Tab1.Qty, 0) AS Quantity
FROM         (SELECT     TStock.ItemNo, ISNULL(SUM(CASE WHEN trncode = 1 THEN quantity ELSE - quantity END)+ 
 ISNULL(SUM(CASE WHEN trncode = 1 THEN FreeQty ELSE - FreeQty END), 0), 0) AS Qty
                       FROM          TStock INNER JOIN
                                              TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
                       WHERE      (TVoucherEntry.IsCancel = ''false'') AND (TVoucherEntry.VoucherDate <= @FromDate)
                       GROUP BY TStock.ItemNo) AS Tab1 RIGHT OUTER JOIN
                       MStockItems ON Tab1.ItemNo = MStockItems.ItemNo
WHERE     (Tab1.Qty <= 0) AND (MStockItems.CompanyNo = @CompNo)
ORDER BY ItemName
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MPayTypeDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MPayTypeDetails](
	[PKPayTypeDetailsNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKPayTypeNo] [numeric](18, 0) NULL,
	[ColLabel] [varchar](100) NULL,
	[ColName] [varchar](100) NULL,
	[IsComplsory] [bit] NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MPayTypeDetails] PRIMARY KEY CLUSTERED 
(
	[PKPayTypeDetailsNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLedgerDetails1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddMLedgerDetails1]
     @LedgerDetailsNo                           numeric(18),
     @LedgerNo                            numeric(18),
     @CreditLimit                         numeric(18,2),
     @Address                             varchar(300),
     @StateNo                             numeric(18),
     @CityNo                              numeric(18),
     @PinCode                             varchar(100),
     @PhNo1                               varchar(100),
     @PhNo2                               varchar(100),
     @MobileNo1                           varchar(100),
     @MobileNo2                           varchar(100),
     @EmailID                             varchar(100),
     @CustomerType                        numeric(18,0),
     @PANNo                               varchar(100),
     @AccountNo                           varchar(150),
     @ReportName                          varchar(max),
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo						      numeric(18),
	 @FSSAI								  varchar(100),
	 @AreaNo							  numeric(18),
	 @AddressLang                         nvarchar(500),
     @RateTypeNo						  numeric(18),
     @DiscPer						      numeric(18),
     @DiscRs					      	  numeric(18),
     @AdharNo					          varchar(100),
     @AnyotherNo1					      varchar(100),
     @AnyotherNo2				      	  varchar(100),
     @GSTNo				            	  varchar(100),
     @FSSAIDate                           datetime,
     @GSTDate                             datetime
AS
 SET IDENTITY_INSERT MLedgerDetails ON
     BEGIN
       --Insert new row
       
       INSERT INTO MLedgerDetails(
         LedgerDetailsNo,   
          LedgerNo,
          CreditLimit,
          Address,
		  StateNo,
          CityNo,
          PinCode,
          PhNo1,
          PhNo2,
          MobileNo1,
          MobileNo2,
          EmailID,     
          CustomerType,
          PANNo,
          AccountNo,
          ReportName,      
          UserID,
          UserDate,
          StatusNo,
		  CompanyNo,  
		  FSSAI,
	      AreaNo,
		  AddressLang,
		  RateTypeNo,
		  DiscPer,
		  DiscRs,
          AdharCardNo,
	      AnyotherNo1,
		  AnyotherNo2,
		  GSTNo,
		  FSSAIDate,
		  GSTDate
)
       VALUES(
         @LedgerDetailsNo,    
          @LedgerNo,
          @CreditLimit,
          @Address,
		  @StateNo,
          @CityNo,
          @PinCode,
          @PhNo1,
          @PhNo2,
          @MobileNo1,
          @MobileNo2,
          @EmailID,
          @CustomerType,
          @PANNo,
          @AccountNo,
          @ReportName,
          @UserID,
          @UserDate,
          1,
		  @CompanyNo,
		  @FSSAI,
	      @AreaNo,
		  @AddressLang,
		  @RateTypeNo,
          @DiscPer,
          @DiscRs,
          @AdharNo,
		  @AnyotherNo1,
		  @AnyotherNo2,
		  @GSTNo,
		  @FSSAIDate,
		  @GSTDate
)

END


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVoucherDetails](
	[PkVoucherTrnNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherNo] [numeric](18, 0) NULL,
	[VoucherSrNo] [numeric](18, 0) NULL,
	[SignCode] [numeric](18, 0) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[Debit] [numeric](18, 2) NULL,
	[Credit] [numeric](18, 2) NULL,
	[SrNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[Narration] [varchar](max) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_TVoucherDetails] PRIMARY KEY CLUSTERED 
(
	[PkVoucherTrnNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherDetails]') AND name = N'IX_TVoucherDetails')
CREATE NONCLUSTERED INDEX [IX_TVoucherDetails] ON [dbo].[TVoucherDetails] 
(
	[LedgerNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherDetails]') AND name = N'TVoucherDetails_FkVoucherNo')
CREATE NONCLUSTERED INDEX [TVoucherDetails_FkVoucherNo] ON [dbo].[TVoucherDetails] 
(
	[FkVoucherNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFirmOpeningLedgerBalance]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetFirmOpeningLedgerBalance]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@MFGCompNo		numeric(18)
	--@BrID		numeric(18)
	)
RETURNS @TLedgerBal Table(OpAmt numeric(18,2))
AS
BEGIN
	--Declare @OpAmt numeric(18,2),@DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @BalAmt numeric(18,2),@Res int
	--Declare @OpDt datetime,@TDate datetime
	Declare @TDate datetime
	
	Set @DrAmt = 0 Set @CrAmt = 0 set @Res=0

	set @TDate=DateAdd(d,-1,@FromDate)

	SELECT     @DrAmt=ISNULL(SUM(TVoucherDetailsCompany.Debit), 0) ,@CrAmt= ISNULL(SUM(TVoucherDetailsCompany.Credit), 0) 
	FROM         TVoucherDetailsCompany INNER JOIN
						  TVoucherEntry INNER JOIN
						  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo ON 
						  TVoucherDetailsCompany.FkVoucherNo = TVoucherEntryCompany.PKVoucherCompanyNo --INNER JOIN
						  --MLedger ON TVoucherDetailsCompany.LedgerNo = MLedger.LedgerNo
	WHERE     --(TVoucherEntry.VoucherDate >= @OpDt) AND 
			(TVoucherEntry.VoucherDate <= @TDate) AND (TVoucherEntry.CompanyNo = @CompNo) AND 
						  (TVoucherEntry.IsCancel = ''false'') AND (TVoucherDetailsCompany.LedgerNo = @LedgerNo) AND (TVoucherEntryCompany.MfgCompNo = @MFGCompNo)


	set @BalAmt = (@DrAmt - @CrAmt) 
	insert into @TLedgerBal values(@BalAmt)
	
	RETURN
END



--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherPayTypeDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVoucherPayTypeDetails](
	[PKVoucherPayTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKSalesVoucherNo] [numeric](18, 0) NULL,
	[FKReceiptVoucherNo] [numeric](18, 0) NULL,
	[FKVoucherTrnNo] [numeric](18, 0) NULL,
	[FKPayTypeNo] [numeric](18, 0) NULL,
	[Amount] [numeric](18, 2) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
	[ChargesPerce] [numeric](18, 2) NULL,
	[ChargesAmount] [numeric](18, 2) NULL,
 CONSTRAINT [PK_TVoucherEntryPayTypeDetails] PRIMARY KEY CLUSTERED 
(
	[PKVoucherPayTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMItemTaxInfo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddMItemTaxInfo]
     @PkSrNo                              numeric(18),
     @ItemNo                              numeric(18),
     @TaxLedgerNo                         numeric(18),
	 @SalesLedgerNo						  numeric(18),
     @FromDate                            datetime,
--     @CalculationMethod                   varchar(50),
     @Percentage                          numeric(18,2),
     @CompanyNo                           numeric(18),
	 @FKTaxSettingNo					  numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
     --@ModifiedBy                          varchar(50)
AS

IF EXISTS(select PkSrNo from MItemTaxInfo
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MItemTaxInfo
       SET
          ItemNo = @ItemNo,
          TaxLedgerNo = @TaxLedgerNo,
		  SalesLedgerNo=@SalesLedgerNo,
          --FromDate = @FromDate,
--          CalculationMethod = @CalculationMethod,
          Percentage = @Percentage,
          CompanyNo = @CompanyNo,
		  FKTaxSettingNo = @FKTaxSettingNo,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE 

	BEGIN
	   --Insert new row
	   Declare @Id numeric
	   SELECT @Id=IsNull(Max(PkSrNo),0) From MItemTaxInfo
	   DBCC CHECKIDENT(''MItemTaxInfo'', RESEED, @Id)
	   INSERT INTO MItemTaxInfo(
		  ItemNo,
		  TaxLedgerNo,
		  SalesLedgerNo,
		  FromDate,
--		  CalculationMethod,
		  Percentage,
		  CompanyNo,
		  FKTaxSettingNo,
		  UserID,
		  UserDate,
          StatusNo
		 -- ModifiedBy
       )
	   VALUES(
		  @ItemNo,
		  @TaxLedgerNo,
		  @SalesLedgerNo,
		  @FromDate,
--		  @CalculationMethod,
		  @Percentage,
		  @CompanyNo,
		  @FKTaxSettingNo,
		  @UserID,
		  @UserDate,
          1
		  --@ModifiedBy
       )

	 
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSchemeDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSchemeDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[SchemeNo] [numeric](18, 0) NULL,
	[DiscPercentage] [numeric](18, 2) NULL,
	[DiscAmount] [numeric](18, 2) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MSchemeDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMItemTaxInfo2]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/24/2019--umesh
CREATE PROCEDURE [dbo].[AddMItemTaxInfo2]
     @PkSrNo                              numeric(18),
     @ItemNo                              numeric(18),
     @TaxLedgerNo                         numeric(18),
	 @SalesLedgerNo						  numeric(18),
     @FromDate                            datetime,
     @CalculationMethod                   varchar(50),
     @Percentage                          numeric(18,2),
     @CompanyNo                           numeric(18),
	 @FKTaxSettingNo					  numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
     --@ModifiedBy                          varchar(50)
AS

BEGIN
	   --Insert new row
	     Declare @Id numeric
	   SELECT @Id=IsNull(Max(PkSrNo),0) From MItemTaxInfo
	   DBCC CHECKIDENT(''MItemTaxInfo'', RESEED, @Id)
	   INSERT INTO MItemTaxInfo(
          -- PkSrNo,     
		  ItemNo,
		  TaxLedgerNo,
		  SalesLedgerNo,
		  FromDate,
		  CalculationMethod,
		  Percentage,
		  CompanyNo,
		  FKTaxSettingNo,
		  UserID,
		  UserDate,
          StatusNo
		 -- ModifiedBy
       )
	   VALUES(
          -- @PkSrNo,
		  @ItemNo,
		  @TaxLedgerNo,
		  @SalesLedgerNo,
		  @FromDate,
		  @CalculationMethod,
		  @Percentage,
		  @CompanyNo,
		  @FKTaxSettingNo,
		  @UserID,
		  @UserDate,
          1
		  --@ModifiedBy
       )

	 
END


/*---------------------------------------------------------------------------------------------------------------------------------------------------*/


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMItemTaxInfo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE  [dbo].[DeleteMItemTaxInfo] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MItemTaxInfo
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MStockItemsIngredient]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MStockItemsIngredient](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[IngredientValue] [varchar](300) NULL,
	[NutritionHeadValue] [varchar](300) NULL,
	[ReceipeHead1] [varchar](300) NULL,
	[ReceipeHead2] [varchar](300) NULL,
	[ReceipeHead3] [varchar](300) NULL,
	[LangReceipeHead1] [varchar](300) NULL,
	[LangReceipeHead2] [varchar](300) NULL,
	[LangReceipeHead3] [varchar](300) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MStockItemsIngredient] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRateSetting4]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 08/02/2012
---use in itemmaster save
Create PROCEDURE [dbo].[AddMRateSetting4]
     @PkSrNo                              numeric(18),
--     @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @FromDate                            datetime,
     @PurRate                             numeric(18,4),
	@MRP				numeric(18,4),
	 @UOMNo                               numeric(18),
	 @ASaleRate                            numeric(18,4),
	 @BSaleRate                            numeric(18,4),
	 @CSaleRate                            numeric(18,4),
	 @DSaleRate                            numeric(18,4),
	 @ESaleRate                            numeric(18,4),
	 @StockConversion					  Numeric(18,2),
--	 @PerOfRateVariation				  numeric(18),
     @MKTQty						      numeric(18),
	 @IsActive							  bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
SET IDENTITY_INSERT MRateSetting ON
     BEGIN
       --Insert new row
      
       INSERT INTO MRateSetting(
          PkSrNo,    
          ItemNo,
          FromDate,
          PurRate,
			MRP,
		  UOMNo,
		  ASaleRate,
		  BSaleRate,
		  CSaleRate,
		  DSaleRate,
		  ESaleRate,
		  StockConversion,

		  MKTQty,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
         @PkSrNo,   
          @ItemNo,
          @FromDate,
          @PurRate,
		@MRP,
		  @UOMNo,
          @ASaleRate,
          @BSaleRate,
          @CSaleRate,
          @DSaleRate,
          @ESaleRate,
		  @StockConversion,
		  @MKTQty,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MSchemeType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MSchemeType](
	[SchemeTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[SchemeTypeName] [varchar](500) NULL,
	[SchemeTypeDesc] [varchar](500) NULL,
	[InitalChar] [varchar](500) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MSchemeType] PRIMARY KEY CLUSTERED 
(
	[SchemeTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMItemGroup1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
Create PROCEDURE [dbo].[AddMItemGroup1]
     @ItemGroupNo                         numeric(18),
     @ItemGroupName                       varchar(50),
	 @LangGroupName					      nvarchar(200),
     @ControlGroup                        numeric(18),
	 @ControlSubGroup					  numeric(18),
     @IsActive                            bit,
     @UserId                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)

	
    
AS
SET IDENTITY_INSERT MItemGroup ON
     BEGIN
      
       INSERT INTO MItemGroup(
          ItemGroupNo,  
          ItemGroupName,
		  LangGroupName,
          ControlGroup,
		  ControlSubGroup,
          IsActive,
          UserId,
          UserDate,
		  CompanyNo,
          StatusNo
		
		 
)
       VALUES(
         @ItemGroupNo , 
          @ItemGroupName,
		  @LangGroupName,
          @ControlGroup,
		  @ControlSubGroup,
          @IsActive,
          @UserId,
          @UserDate,
		  @CompanyNo,
          1
		 
       
		
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MStockItemsReceipe]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MStockItemsReceipe](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[IngredientNo] [numeric](18, 0) NULL,
	[ReceipeDesc] [varchar](300) NULL,
	[LangReceipeDesc] [varchar](300) NULL,
	[SequenceNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MStockItemsReceipe] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemClosingStockMonthly]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetItemClosingStockMonthly]
	(	
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@ItemNo		numeric(18),
	@Type		int,
	@No			numeric(18)
	)
RETURNS @TStockMonth TABLE(MonthID int,MonthName varchar(Max),OpnQty numeric(18,2),InwQty numeric(18,2),InwAmt numeric(18,2),OutwQty numeric(18,2),OutwAmt numeric(18,2),ClosingQty numeric(18,2),ClosingAmt numeric(18,2))
AS
BEGIN
Declare @ItemName varchar(max)
Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrAmt numeric(18,2),@DrQty numeric(18,2)
Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2)
Declare @Rate numeric(18,5),@BalAmt numeric(18,2)
Declare @Month varchar(Max) ,@MNo int
Declare @TDate datetime ,@Yr int,@cnt int


set @ClosingQty = 0 set @BalAmt = 0 set @Rate = 0
set @DrQty=0 set @DrAmt=0 set @CrQty = 0 set @CrAmt = 0
--	SELECT @ItemName=Itemname FROM MStockItems_V(NULL,NULL,NULL,NULL,NULL,NULL,NULL) 
--					 where ItemNo = @ItemNo

	
	--Select @OpQty=OpBalQty,@OpAmt=OpBalAmount From MStockItems Where (CompanyNo =@CompNo) and (ItemNo = @ItemNo)
	
	--SELECT     @OpAmt=isnull(SUM(OpBalAmount),0), @OpQty=isnull(SUM(OpBalQty) ,0)
	--FROM         MStockItems
	--WHERE     (ItemNo = @ItemNo)
   --SELECT     @OpAmt=isnull(SUM(OpAmount),0), @OpQty=isnull(SUM(OpQuantity) ,0)
	--FROM         MItemOpeningStock
	--WHERE     (PkItemNo = @ItemNo) 
	
	Select @OpQty=OpQty, @OpAmt=OpAmt from GetOpeningStock(@CompNo,@FromDate,@ItemNo,@Type,@No)
	
	--insert into @TStockMonth values(0,''Opening Balance'',@OpQty,@OpAmt,0,0,@OpQty,@OpAmt)

while(@FromDate	<= @ToDate)
begin
	set @Month =DateName("m",@FromDate)+''-''+substring(cast(year(@FromDate) as varchar),3,2)
	set @MNo= Month(@FromDate)
	
	if(@MNo=1 Or @MNo=3 Or @MNo=5 Or @MNo=7 Or @MNo=8 Or @MNo=10 Or @MNo=12)
		begin
			if(Day(@FromDate) >=1 Or Day(@FromDate)<31)
				set @TDate = ''31-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
		end
	else if(@MNo=4 Or @MNo=6 Or @MNo=9 Or @MNo=11 )
		begin
			if(Day(@FromDate) >=1 Or Day(@FromDate)<30)
				set @TDate = ''30-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
		end
	else
		begin
			if(Year(@FromDate)%4=0)
				begin
					if(Day(@FromDate) >=1 Or Day(@FromDate)<29)
						set @TDate = ''29-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
				end
			else
				begin
					if(Day(@FromDate) >=1 Or Day(@FromDate)<28)
						set @TDate = ''28-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
				end
		end
		
	if(@TDate > @ToDate)set @TDate=@ToDate
	
	Select @DrAmt=DrAmt,@DrQty=abs(DrQty),@CrAmt=CrAmt,@CrQty=CrQty From GetClosingStock(@CompNo,@FromDate,@TDate,@ItemNo,@Type,@No)
	set @ClosingQty=(@DrQty-@CrQty)+@OpQty 
	if (@DrQty+@OpQty)<>0 
		--set @Rate=(@DrAmt+@OpAmt)/@ClosingQty
		set @Rate=(@DrAmt+@OpAmt)/(@DrQty+@OpQty)
		--set @Rate=round(((@DrAmt-@CrAmt)+@OpAmt)/@ClosingQty, 2)
	else
		if @DrQty=0
			begin
				set @Rate=0
			end
		--else
		--	set @Rate=1
		
	set @BalAmt=round(isnull((@ClosingQty*@Rate),0),2) 
	
	insert into @TStockMonth values(@MNo,@Month,@OpQty,@DrQty,@DrAmt,@CrQty,@CrAmt,@ClosingQty,@BalAmt)
		
	if(Day(@FromDate) > 1) 
		set @FromDate = ''1-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
	
	set @FromDate =DateAdd(mm,1,@FromDate)
	set @OpQty = @ClosingQty
	set @OpAmt = @BalAmt
	set @DrQty=0 set @DrAmt=0 set @CrQty = 0 set @CrAmt = 0
end
RETURN
END


' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMItemMaster1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 10/11/2017
CREATE PROCEDURE [dbo].[AddMItemMaster1]
     @ItemNo                              numeric(18),
     @ItemName                            varchar(50),
     @ItemShortName                       varchar(50),
     @Barcode                             varchar(50),
     @ShortCode                           varchar(50),
     @GroupNo                             numeric(18),
     @UOMH                                numeric(18),
     @UOML                                numeric(18),
     @UOMDefault                          numeric(18),
     @FkDepartmentNo                      numeric(18),
     @FkCategoryNo                        numeric(18),
     @MinLevel                            numeric(18),
     @MaxLevel                            numeric(18),
   
     @LangFullDesc                        varchar(50),
     @LangShortDesc                       varchar(50),
     @CompanyNo                           numeric(18),
     @IsActive                            bit,
     @UserId                              numeric(18),
     @UserDate                            datetime,
    -- @ModifiedBy                          text,
     @StatusNo                            int,
     @ControlUnder                        numeric(18),
     @FactorVal                           numeric(18),
     @Margin                              numeric(18),
     @CessValue                           numeric(18,2),
     @PackagingCharges                    numeric(18),
     @Dhekhrek                            numeric(18),
     @OtherCharges                        numeric(18),
     @HigherVariation                     numeric(18),
     @LowerVariation                      numeric(18),
     @HSNCode                             varchar(50),
     @FKStockGroupTypeNo                  numeric(18),
     @ESFlag                              bit,
     @ReOrderLevelQty                      numeric(18,2)
    -- @Stock                               numeric(18),
    
AS
 SET IDENTITY_INSERT MItemMaster ON
     BEGIN
       --Insert new row
       INSERT INTO MItemMaster(
          ItemNo,   
          ItemName,
          ItemShortName,
          Barcode,
          ShortCode,
          GroupNo,
          UOMH,
          UOML,
          UOMDefault,
          FkDepartmentNo,
          FkCategoryNo,
          MinLevel,
          MaxLevel,
        --  ReOrderLevelQty,
          LangFullDesc,
          LangShortDesc,
          CompanyNo,
          IsActive,
          UserId,
          UserDate,
        --  ModifiedBy,
          StatusNo,
          ControlUnder,
          FactorVal,
          Margin,
          CessValue,
          PackagingCharges,
          Dhekhrek,
          OtherCharges,
          HigherVariation,
          LowerVariation,
          HSNCode,
          FKStockGroupTypeNo,
          ESFlag,
          ReOrderLevelQty     
         -- Stock
)
       VALUES(
          @ItemNo,      
          @ItemName,
          @ItemShortName,
          @Barcode,
          @ShortCode,
          @GroupNo,
          @UOMH,
          @UOML,
          @UOMDefault,
          @FkDepartmentNo,
          @FkCategoryNo,
          @MinLevel,
          @MaxLevel,
        --  @ReOrderLevelQty,
          @LangFullDesc,
          @LangShortDesc,
          @CompanyNo,
          @IsActive,
          @UserId,
          @UserDate,
         -- @ModifiedBy,
          @StatusNo,
          @ControlUnder,
          @FactorVal,
          @Margin,
          @CessValue,
          @PackagingCharges,
          @Dhekhrek,
          @OtherCharges,
          @HigherVariation,
          @LowerVariation,
          @HSNCode,
          @FKStockGroupTypeNo,
          @ESFlag,
          @ReOrderLevelQty     
         -- @Stock
)
     
END


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVoucherChequeDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVoucherChequeDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FkVoucherTrnNo] [numeric](18, 0) NULL,
	[ClearingDate] [datetime] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_TVoucherChequeDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMItemTaxInfo1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddMItemTaxInfo1]
     @PkSrNo                              numeric(18),
     @ItemNo                              numeric(18),
     @TaxLedgerNo                         numeric(18),
	 @SalesLedgerNo						  numeric(18),
     @FromDate                            datetime,
     @CalculationMethod                   varchar(50),
     @Percentage                          numeric(18,2),
     @CompanyNo                           numeric(18),
	 @FKTaxSettingNo					  numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
     --@ModifiedBy                          varchar(50)
AS

IF EXISTS(select PkSrNo from MItemTaxInfo
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MItemTaxInfo
       SET
          ItemNo = @ItemNo,
          TaxLedgerNo = @TaxLedgerNo,
		  SalesLedgerNo=@SalesLedgerNo,
          FromDate = @FromDate,
          CalculationMethod = @CalculationMethod,
          Percentage = @Percentage,
          CompanyNo = @CompanyNo,
		  FKTaxSettingNo = @FKTaxSettingNo,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE 

	BEGIN
	   --Insert new row
	   Declare @Id numeric
	   SELECT @Id=IsNull(Max(PkSrNo),0) From MItemTaxInfo
	   DBCC CHECKIDENT(''MItemTaxInfo'', RESEED, @Id)
	   INSERT INTO MItemTaxInfo(
		  ItemNo,
		  TaxLedgerNo,
		  SalesLedgerNo,
		  FromDate,
		  CalculationMethod,
		  Percentage,
		  CompanyNo,
		  FKTaxSettingNo,
		  UserID,
		  UserDate,
          StatusNo
		 -- ModifiedBy
       )
	   VALUES(
		  @ItemNo,
		  @TaxLedgerNo,
		  @SalesLedgerNo,
		  @FromDate,
		  @CalculationMethod,
		  @Percentage,
		  @CompanyNo,
		  @FKTaxSettingNo,
		  @UserID,
		  @UserDate,
          1
		  --@ModifiedBy
       )

	 
END

------------------------------------------------------------------------------------------------------------------------------------------------------------------

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MStockItemsNutrition]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MStockItemsNutrition](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[IngredientNo] [numeric](18, 0) NULL,
	[NutritionNo] [numeric](18, 0) NULL,
	[NutritionValue] [varchar](300) NULL,
	[NutritionUOM] [varchar](50) NULL,
	[SequenceNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MStockItemsNutrition] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TDeliveryChallan]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TDeliveryChallan](
	[PkVoucherNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[VoucherTypeCode] [numeric](18, 0) NULL,
	[VoucherUserNo] [numeric](18, 0) NULL,
	[VoucherDate] [datetime] NULL,
	[VoucherTime] [datetime] NULL,
	[Narration] [varchar](50) NULL,
	[Reference] [varchar](50) NULL,
	[ChequeNo] [numeric](18, 0) NULL,
	[ClearingDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[BilledAmount] [numeric](18, 2) NULL,
	[ChallanNo] [varchar](50) NULL,
	[Remark] [varchar](max) NULL,
	[InwardLocationCode] [numeric](18, 0) NULL,
	[MacNo] [numeric](18, 0) NULL,
	[IsCancel] [bit] NULL,
	[PayTypeNo] [numeric](18, 0) NULL,
	[RateTypeNo] [numeric](18, 0) NULL,
	[TaxTypeNo] [numeric](18, 0) NULL,
	[IsVoucherLock] [bit] NULL,
	[VoucherStatus] [int] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[OrderType] [numeric](18, 0) NULL,
	[ReturnAmount] [numeric](18, 2) NULL,
	[Visibility] [numeric](18, 2) NULL,
	[DiscPercent] [numeric](18, 2) NULL,
	[DiscAmt] [numeric](18, 2) NULL,
	[StatusNo] [int] NULL,
	[MixMode] [int] NULL,
	[IsItemLevelDisc] [bit] NULL,
	[IsFooterLevelDisc] [bit] NULL,
	[PrintCount] [int] NULL,
	[BrokerNo] [numeric](18, 0) NULL,
	[SuppCategory] [numeric](18, 0) NULL,
	[EffectiveDate] [datetime] NULL,
	[ExcisePercentage] [numeric](18, 2) NULL,
	[IsExciseBill] [bit] NULL,
	[IsBillMulti] [int] NULL,
	[TransporterCode] [numeric](18, 0) NULL,
	[TransPayType] [numeric](18, 0) NULL,
	[LRNo] [varchar](50) NULL,
	[TransportMode] [numeric](18, 0) NULL,
	[TransNoOfItems] [numeric](18, 2) NULL,
	[VersionNo] [numeric](18, 0) NULL,
	[ServerVoucherNo] [numeric](18, 0) NULL,
	[ChrgesTaxPerce] [numeric](18, 2) NULL,
	[MfgCompNo] [numeric](18, 0) NULL,
	[LedgerNo] [numeric](18, 0) NULL,
	[ChargesAmt1] [numeric](18, 2) NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TDeliveryChallan] PRIMARY KEY CLUSTERED 
(
	[PkVoucherNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MGodown]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MGodown](
	[GodownNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[GodownName] [varchar](50) NULL,
	[ControlGroup] [numeric](18, 0) NULL,
	[LocationNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MGodown] PRIMARY KEY CLUSTERED 
(
	[GodownNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TSeasonalItems]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TSeasonalItems](
	[PKSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[BillNo] [numeric](18, 0) NULL,
	[ItemName] [varchar](max) NULL,
	[MRP] [numeric](18, 2) NULL,
	[Qty] [numeric](18, 2) NULL,
	[Barcode] [varchar](250) NULL,
	[IsPrint] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifyBy] [varchar](max) NULL,
 CONSTRAINT [PK_TSeasonalItems] PRIMARY KEY CLUSTERED 
(
	[PKSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MNutrition]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MNutrition](
	[NutritionNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[NutritionName] [varchar](300) NULL,
	[NutritionUOM] [varchar](50) NULL,
	[IsAactive] [bit] NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
 CONSTRAINT [PK_MNutrition] PRIMARY KEY CLUSTERED 
(
	[NutritionNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MLoyaltyAmount]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MLoyaltyAmount](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[LoyaltyAmount] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MLoyaltyAmount] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MCustomerTaxType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MCustomerTaxType](
	[CustomerTaxTypeNo] [numeric](18, 0) NOT NULL,
	[CustomerTypeTaxName] [varchar](max) NULL,
	[CustomerTypeTaxDesc] [nvarchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MCustomerTaxType] PRIMARY KEY CLUSTERED 
(
	[CustomerTaxTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MFooterDiscountPayTypeDetails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MFooterDiscountPayTypeDetails](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FooterDiscNo] [numeric](18, 0) NULL,
	[PayTypeNo] [numeric](18, 0) NULL,
	[IsActive] [bit] NULL,
	[StatusNo] [numeric](18, 0) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MFooterDiscountPayTypeDetails] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTStock1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[AddTStock1]
     @PkStockTrnNo                        numeric(18),
	 @FKVoucherNo						  numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @FkVoucherSrNo                       numeric(18),
     @GroupNo                             numeric(18),
     @ItemNo                              numeric(18),
     @TrnCode                             numeric(18),
     @Quantity                            numeric(18,2),
     @BilledQuantity                      numeric(18,2),
     @Rate                                numeric(18,2),
     @Amount                              numeric(18,2),
	 @NetRate							  numeric(18,2),
	 @NetAmount							  numeric(18,2),
     @TaxPercentage                       numeric(18,2),
     @TaxAmount                           numeric(18,2),
     @AddTaxPercentage                    numeric(18,2),
     @AddTaxAmount                        numeric(18,2),
	 @DiscPercentage					  numeric(18,2),
	 @DiscAmount						  numeric(18,2),
	 @DiscRupees						  numeric(18,2),
	 @DiscPercentage2					  numeric(18,2),
	 @DiscAmount2						  numeric(18,2),
	 @DiscRupees2						  numeric(18,2),
	 @FkUomNo							  numeric(18),
	 @FkStockBarCodeNo				      numeric(18),
	 @FkRateSettingNo					  numeric(18),
	 @FkItemTaxInfo						  numeric(18),
	 @FKAddItemTaxSettingNo				  numeric(18),
	 @FreeQty                             numeric(18,2),
	 @FreeUOMNo							  numeric(18),   
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
	 @LandedRate						  numeric(18,2),
	 @FkGRNNo						      numeric(18),
	 @BatchNo							  varchar(50),
	 @NoOfBag							  numeric(18),
	 @CessValue							  numeric(18,2),
	 @PackagingCharges					  numeric(18,2),
	 @LBTPerce							  numeric(18,2),
	 @LBTApplicableAmount				  numeric(18,2),
	 @LBTAmount							  numeric(18,2),
	 @DisplayItemName					  varchar(500),
	 @MfgCompNo							  numeric(18,0),

     @CGSTPercentage                      numeric(18, 2),
     @CGSTAmount                          numeric(18, 2),
     @IGSTPercentage                      numeric(18, 2),
     @IGSTAmount                          numeric(18, 2),
     @FkItemTaxInfo2                         numeric(18, 0),

     @CessPercentage                       numeric(18, 2),
     @CessAmount                           numeric(18, 2),
     @IsVoucherLock                         bit,
     @StatusNo                            int
     

AS

SET IDENTITY_INSERT TStock ON
     BEGIN
       --Insert new row
       
       INSERT INTO TStock(
          PkStockTrnNo, 
		  FKVoucherNo,
          FkVoucherTrnNo,
          FkVoucherSrNo,
          GroupNo,
          ItemNo,
          TrnCode,
          Quantity,
          BilledQuantity,
          Rate,
          Amount,
		  NetRate,
		  NetAmount,
          TaxPercentage,
          TaxAmount,
          AddTaxPercentage,
          AddTaxAmount,
		  DiscPercentage,
		  DiscAmount,
		  DiscRupees,
		  DiscPercentage2,
		  DiscAmount2,
		  DiscRupees2,
		  FkUomNo,
		  FkStockBarCodeNo,
		  FkRateSettingNo,
		  FkItemTaxInfo,
		  FKAddItemTaxSettingNo,
		  IsVoucherLock,
	      FreeQty,
		  FreeUOMNo,
          UserID,
          UserDate,
		  CompanyNo,
		  LandedRate,
		  StatusNo,
		  FkGRNNo,
		  BatchNo,
          NoOfBag,
          CessValue,
		  PackagingCharges,
		  LBTPerce,
		  LBTApplicableAmount,
		  LBTAmount,
		  MfgCompNo,
	      DisplayItemName,
 CGSTPercentage,                    
          CGSTAmount,                          
          IGSTPercentage,                     
          IGSTAmount, 
       FkItemTaxInfo2,
CessPercentage,
CessAmount
          
)
       VALUES(
           @PkStockTrnNo, 
		  @FKVoucherNo,
          @FkVoucherTrnNo,
          @FkVoucherSrNo,
          @GroupNo,
          @ItemNo,
          @TrnCode,
          @Quantity,
          @BilledQuantity,
          @Rate,
		  @Amount,
		  @NetRate,
          @NetAmount,
          @TaxPercentage,
          @TaxAmount,
          @AddTaxPercentage,
          @AddTaxAmount,
	      @DiscPercentage,
		  @DiscAmount,
		  @DiscRupees,
		  @DiscPercentage2,
		  @DiscAmount2,
		  @DiscRupees2,
		  @FkUomNo,
		  @FkStockBarCodeNo,
		  @FkRateSettingNo,
		  @FkItemTaxInfo,
		  @FKAddItemTaxSettingNo,
		  @IsVoucherLock,
	      @FreeQty,
		  @FreeUOMNo,
          @UserID,
          @UserDate,
		  @CompanyNo,
		  @LandedRate,
		  @StatusNo,
		  @FkGRNNo,
		  @BatchNo,
		  @NoOfBag,
		  @CessValue,
		  @PackagingCharges,
		  @LBTPerce,
		  @LBTApplicableAmount,
          @LBTAmount,
		  @MfgCompNo,
		  @DisplayItemName,
@CGSTPercentage,                    
          @CGSTAmount,                          
          @IGSTPercentage,                     
          @IGSTAmount,
         @FkItemTaxInfo2,
@CessPercentage,
@CessAmount
)

END




' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TSeasonalBarCodePrint]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TSeasonalBarCodePrint](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[BillNo] [numeric](18, 0) NULL,
	[ItemName] [varchar](max) NULL,
	[MRP] [numeric](18, 2) NULL,
	[Qty] [numeric](18, 2) NULL,
	[Barcode] [varchar](250) NULL,
	[UserID] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TSeasonalBarCodePrint] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFirmOpeningLedgerBalance2]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetFirmOpeningLedgerBalance2]
	(
	@LedgerNo			numeric(18),
	@CompNo				numeric(18),
	@FromDate			datetime,
	@ToDate				datetime,
	@MFGCompNo			numeric(18)

	)
RETURNS @TLedgerBal Table(OpAmt numeric(18,2))
AS
	BEGIN
	Declare @OpAmt numeric(18,2),@DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @BalAmt numeric(18,2),@Res int
	Declare @TDate datetime
	
	Set @DrAmt = 0 Set @CrAmt = 0 set @OpAmt=0 set @Res=0

	set @TDate=DateAdd(d,-1,@FromDate)
		
	SELECT     @DrAmt=ISNULL(SUM(TVoucherDetailsCompany.Debit), 0) ,@CrAmt= ISNULL(SUM(TVoucherDetailsCompany.Credit), 0) 
		FROM         TVoucherDetailsCompany INNER JOIN
							  TVoucherEntry INNER JOIN
							  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo ON 
							  TVoucherDetailsCompany.FkVoucherNo = TVoucherEntryCompany.PKVoucherCompanyNo 
		WHERE     (TVoucherEntry.VoucherDate <= @TDate) AND (TVoucherEntry.CompanyNo = @CompNo) AND 
				  (TVoucherEntry.IsCancel = ''false'') AND (TVoucherDetailsCompany.LedgerNo = @LedgerNo) AND (TVoucherEntryCompany.MfgCompNo = @MFGCompNo)
	                   
	set @BalAmt = (@DrAmt - @CrAmt)+ @OpAmt  
	insert into @TLedgerBal values(@BalAmt)
	
	RETURN
	END

--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRateType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE [dbo].[AddMRateType]
     @RateaTypeNo                         numeric(18),
     @RateType                            varchar(50),
     @RateTypeshortCode                   varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @ModifiedBy                          text
AS
IF EXISTS(select RateaTypeNo from MRateType
          where
          RateaTypeNo = @RateaTypeNo)
     BEGIN
       --Update existing row
       UPDATE MRateType
       SET
          RateType = @RateType,
          RateTypeshortCode = @RateTypeshortCode,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
        ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          RateaTypeNo = @RateaTypeNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(RateaTypeNo),0) From MRateType
       DBCC CHECKIDENT(''MRateType'', RESEED, @Id)
       INSERT INTO MRateType(
          --RateaTypeNo,
          RateType,
          RateTypeshortCode,
          IsActive,
          UserID,
          UserDate
          --ModifiedBy
)
       VALUES(
          --@RateaTypeNo,
          @RateType,
          @RateTypeshortCode,
          @IsActive,
          @UserID,
          @UserDate
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MOrderType]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MOrderType](
	[OrderTypeNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[OrderTypeName] [varchar](50) NULL,
	[OrderTypeDesc] [varchar](100) NULL,
	[ColorName] [varchar](50) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
 CONSTRAINT [PK_MOrderType] PRIMARY KEY CLUSTERED 
(
	[OrderTypeNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMCouponType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 18/08/2012
CREATE PROCEDURE  [dbo].[DeleteMCouponType] 
@CouponTypeNo                       numeric(18)


AS

       DELETE FROM MCouponType
       WHERE
          CouponTypeNo = @CouponTypeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMRateType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE  [dbo].[DeleteMRateType] 
@RateaTypeNo                        numeric(18)


AS
Update MRateType set IsActive=''False'' Where RateaTypeNo = @RateaTypeNo

--       DELETE FROM MRateType
--       WHERE
--          RateaTypeNo = @RateaTypeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMCouponType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 18/08/2012
CREATE PROCEDURE [dbo].[AddMCouponType]
     @CouponTypeNo                        numeric(18),
     @CouponTypeName                      varchar(100),
	 @CouponTypeDesc                      text,
     @PrefixName                          varchar(50),
     @StartNo                             numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @IsActive                            bit
     
AS
IF EXISTS(select CouponTypeNo from MCouponType
          where
          CouponTypeNo = @CouponTypeNo)
     BEGIN
       --Update existing row
       UPDATE MCouponType
       SET
          CouponTypeName = @CouponTypeName,
          PrefixName = @PrefixName,
          StartNo = @StartNo,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          IsActive = @IsActive,
          CouponTypeDesc = @CouponTypeDesc
       WHERE
          CouponTypeNo = @CouponTypeNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CouponTypeNo),0) From MCouponType
       DBCC CHECKIDENT(''MCouponType'', RESEED, @Id)
       INSERT INTO MCouponType(
          CouponTypeName,
		  CouponTypeDesc,
          PrefixName,
          StartNo,
          UserID,
          UserDate,
          IsActive
          
)
       VALUES(
          @CouponTypeName,
		  @CouponTypeDesc,
          @PrefixName,
          @StartNo,
          @UserID,
          @UserDate,
          @IsActive
          
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MServerSettings]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MServerSettings](
	[PkSrNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[DataBaseServer] [varchar](max) NULL,
	[StatusNo] [int] NULL,
	[CSVFTPServer] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
 CONSTRAINT [PK_MServerSettings] PRIMARY KEY CLUSTERED 
(
	[PkSrNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DBVersionLog]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[DBVersionLog](
	[ScriptNo] [numeric](18, 0) NOT NULL,
	[ScriptDescription] [text] NOT NULL,
	[ExecutedOn] [datetime] NULL,
 CONSTRAINT [PK_DBVersionLog] PRIMARY KEY CLUSTERED 
(
	[ScriptNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TDeliveryChallanStock]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TDeliveryChallanStock](
	[PkStockTrnNo] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[FKVoucherNo] [numeric](18, 0) NULL,
	[FkVoucherTrnNo] [numeric](18, 0) NULL,
	[FkVoucherSrNo] [numeric](18, 0) NULL,
	[GroupNo] [numeric](18, 0) NULL,
	[ItemNo] [numeric](18, 0) NULL,
	[TrnCode] [numeric](18, 0) NULL,
	[Quantity] [numeric](18, 2) NULL,
	[BilledQuantity] [numeric](18, 2) NULL,
	[Rate] [numeric](18, 2) NULL,
	[Amount] [numeric](18, 2) NULL,
	[NetRate] [numeric](18, 2) NULL,
	[NetAmount] [numeric](18, 2) NULL,
	[TaxPercentage] [numeric](18, 2) NULL,
	[TaxAmount] [numeric](18, 2) NULL,
	[DiscPercentage] [numeric](18, 2) NULL,
	[DiscAmount] [numeric](18, 2) NULL,
	[DiscRupees] [numeric](18, 2) NULL,
	[DiscPercentage2] [numeric](18, 2) NULL,
	[DiscAmount2] [numeric](18, 2) NULL,
	[DiscRupees2] [numeric](18, 2) NULL,
	[FkUomNo] [numeric](18, 0) NULL,
	[FkStockBarCodeNo] [numeric](18, 0) NULL,
	[FkRateSettingNo] [numeric](18, 0) NULL,
	[FkItemTaxInfo] [numeric](18, 0) NULL,
	[IsVoucherLock] [bit] NULL,
	[FreeQty] [numeric](18, 2) NULL,
	[FreeUOMNo] [numeric](18, 0) NULL,
	[UserID] [numeric](18, 0) NULL,
	[UserDate] [datetime] NULL,
	[ModifiedBy] [varchar](max) NULL,
	[CompanyNo] [numeric](18, 0) NULL,
	[StatusNo] [int] NULL,
	[LandedRate] [numeric](18, 2) NULL,
	[FkGRNNo] [numeric](18, 0) NULL,
	[BatchNo] [varchar](50) NULL,
	[NoOfBag] [numeric](18, 0) NULL,
	[CessValue] [numeric](18, 2) NULL,
	[PackagingCharges] [numeric](18, 2) NULL,
	[LBTPerce] [numeric](18, 2) NULL,
	[LBTApplicableAmount] [numeric](18, 2) NULL,
	[LBTAmount] [numeric](18, 2) NULL,
	[DisplayItemName] [varchar](500) NULL,
	[MfgCompNo] [numeric](18, 0) NULL,
	[TaxPercentageAdnl] [numeric](18, 2) NULL,
	[TaxAmountAdnl] [numeric](18, 2) NULL,
	[FkItemTaxSettingNoAdnl] [numeric](18, 0) NULL,
 CONSTRAINT [PK_TDeliveryChallanStock] PRIMARY KEY CLUSTERED 
(
	[PkStockTrnNo] ASC
)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTChequeNo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11/09/2012
create PROCEDURE [dbo].[AddTChequeNo]
     @PkChequeNo                          numeric(18),
     @ChequeUserNo                        numeric(18),
     @LedgerNo                            numeric(18),
     @FromChequeNo                        numeric(18),
     @ToChequeNo                          numeric(18),
     @Remark                              text,
     @IsActive                            bit,
     @UserId                              numeric(18),
     @UserDate                            datetime,
	 @ReturnID							  int output
AS
IF EXISTS(select PkChequeNo from TChequeNo
          where
          PkChequeNo = @PkChequeNo)
     BEGIN
       --Update existing row
       UPDATE TChequeNo
       SET
          ChequeUserNo = @ChequeUserNo,
          LedgerNo = @LedgerNo,
          FromChequeNo = @FromChequeNo,
          ToChequeNo = @ToChequeNo,
          Remark = @Remark,
          IsActive = @IsActive,
          UserId = @UserId,
          UserDate = @UserDate,
		  ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          PkChequeNo = @PkChequeNo
			Set @ReturnID=@PkChequeNo
     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkChequeNo),0) From TChequeNo
       DBCC CHECKIDENT(''TChequeNo'', RESEED, @Id)
       INSERT INTO TChequeNo(
         -- PkChequeNo,
          ChequeUserNo,
          LedgerNo,
          FromChequeNo,
          ToChequeNo,
          Remark,
          IsActive,
          UserId,
          UserDate
)
       VALUES(
        --  @PkChequeNo,
          @ChequeUserNo,
          @LedgerNo,
          @FromChequeNo,
          @ToChequeNo,
          @Remark,
          @IsActive,
          @UserId,
          @UserDate
)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateMSchemeCustomerType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE  [dbo].[UpdateMSchemeCustomerType] 
@SchemeNo                             numeric(18),
@CustomerType						  numeric(18)


AS
Update MScheme set CustomerType=@CustomerType Where SchemeNo = @SchemeNo

--       DELETE FROM MBank
--       WHERE
--          BankNo = @BankNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TentativeAcheivers]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE procedure [dbo].[TentativeAcheivers]
@SchemaNo numeric(18,0),
@TypeNo numeric(18,0)
As
Begin
     --Select * from MStockItems
Declare @Acheivers Table(LedgerName varchar(500),Amount numeric(18,2),Slab numeric(18,0))
Declare @LedgerNo numeric(18,0),@LedgerName varchar(500),@Amount numeric(18,2),@Slab numeric(18,0)
Declare @SchemeNo numeric(18,0),@SchemeName varchar(500),@BillAmount numeric(18,2),@MinAmount numeric(18,2),@MaxAmount numeric(18,2)  
Declare @FromDate datetime,@ToDate datetime,@PreviousBillAmt numeric(18,0)
     SELECT     @FromDate=SchemePeriodFrom, @ToDate=SchemePeriodTo
     FROM         MScheme
     WHERE     (SchemeNo = @SchemaNo) 
 
     Declare CurLedger Cursor for SELECT   TVoucherDetails.LedgerNo, MLedger.LedgerName, SUM(TVoucherDetails.Debit) AS Amount, 0 AS Slab
                                  FROM     TVoucherEntry INNER JOIN
								  TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
								  MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo
                                  WHERE     (TVoucherDetails.LedgerNo IN
                                  (SELECT     LedgerNo
                                  FROM          MLedger AS MLedger_1
                                  WHERE      (GroupNo = 26) AND (IsEnroll = ''true''))) AND (TVoucherEntry.VoucherDate >= @FromDate) AND (TVoucherEntry.VoucherTypeCode = 15) AND 
                                  (TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails.VoucherSrNo = 1)
                                  GROUP BY TVoucherDetails.LedgerNo, MLedger.LedgerName
                                  ORDER BY MLedger.LedgerName
     open CurLedger
     Fetch next from CurLedger into @LedgerNo,@LedgerName,@Amount,@Slab
     --select @LedgerName,@Amount 
     While(@@Fetch_Status=0)
     Begin
          if(@TypeNo=2)
          Begin
          Declare CurScheme Cursor for SELECT     MScheme.SchemeNo, MScheme.SchemeName, MSchemeFromDetails_1.BillAmount,
                                       (SELECT     MIN(BillAmount) AS Min
                                       FROM          MSchemeFromDetails
                                       WHERE      (SchemeNo = MScheme.SchemeNo)) AS MinAmount,
                                      (SELECT     MAX(BillAmount) AS Max
                                       FROM          MSchemeFromDetails AS MSchemeFromDetails_2
                                       WHERE      (SchemeNo = MScheme.SchemeNo)) AS MaxAmount
                                       FROM         MScheme INNER JOIN
                                       MSchemeFromDetails AS MSchemeFromDetails_1 ON MScheme.SchemeNo = MSchemeFromDetails_1.SchemeNo
                                       WHERE     (MScheme.SchemeNo = 1)
                                       ORDER BY MScheme.SchemeNo, MSchemeFromDetails_1.BillAmount
          open CurScheme
          Fetch next from CurScheme into @SchemeNo,@SchemeName,@BillAmount,@MinAmount,@MaxAmount
          While(@@FEtch_Status=0)
          Begin
               if(@Amount<=@MinAmount)
               Begin
--select @Amount,@MinAmount
                    insert into @Acheivers values(@LedgerName,@Amount,@MinAmount)
                    goto exitcursor
               End
               Else if(@Amount>@MaxAmount) 
               Begin
--select @Amount,@MaxAmount
                    insert into @Acheivers values(@LedgerName,@Amount,@MaxAmount)
                    goto exitcursor
               End
               Else if(@Amount<=@BillAmount) 
               Begin
--select @Amount,@BillAmount
                    insert into @Acheivers values(@LedgerName,@Amount,@BillAmount)
                    goto exitcursor
               End   
               Fetch next from CurScheme into @SchemeNo,@SchemeName,@BillAmount,@MinAmount,@MaxAmount
          End 
          
          End
          Else if(@TypeNo=1)
          Begin
                Declare CurScheme Cursor Scroll for SELECT     MScheme.SchemeNo, MScheme.SchemeName, MSchemeFromDetails_1.BillAmount,
                                       (SELECT     MIN(BillAmount) AS Min
                                       FROM          MSchemeFromDetails
                                       WHERE      (SchemeNo = MScheme.SchemeNo)) AS MinAmount,
                                      (SELECT     MAX(BillAmount) AS Max
                                       FROM          MSchemeFromDetails AS MSchemeFromDetails_2
                                       WHERE      (SchemeNo = MScheme.SchemeNo)) AS MaxAmount
                                       FROM         MScheme INNER JOIN
                                       MSchemeFromDetails AS MSchemeFromDetails_1 ON MScheme.SchemeNo = MSchemeFromDetails_1.SchemeNo
                                       WHERE     (MScheme.SchemeNo = 1)
                                       ORDER BY MScheme.SchemeNo, MSchemeFromDetails_1.BillAmount
          open CurScheme
          Fetch next from CurScheme into @SchemeNo,@SchemeName,@BillAmount,@MinAmount,@MaxAmount
          While(@@Fetch_Status=0)
          Begin
--               if(@Amount<=@MinAmount)
--               Begin
----select @Amount,@MinAmount
--                    insert into @Acheivers values(@LedgerName,@Amount,@MinAmount)
--                    goto exitcursor
--               End
--               Else 
               if(@Amount>@MaxAmount) 
               Begin
--select @Amount,@MaxAmount
                    insert into @Acheivers values(@LedgerName,@Amount,@MaxAmount)
                    goto exitcursor
               End
               Else --if(@Amount>=@BillAmount) 
               Begin
--select @Amount,@BillAmount
                     Set @PreviousBillAmt=@BillAmount

                    Fetch next from CurScheme into @SchemeNo,@SchemeName,@BillAmount,@MinAmount,@MaxAmount
                    --select @BillAmount
                    if(@@Fetch_Status=0)
                    Begin
                          --select @BillAmount
                         if(@PreviousBillAmt<@Amount and @Amount<@BillAmount)
                         Begin 
                              --select @PreviousBillAmt
                              insert into @Acheivers values(@LedgerName,@Amount,@BillAmount)
                              goto exitcursor
                              --Fetch prior from CurScheme into @SchemeNo,@SchemeName,@BillAmount,@MinAmount,@MaxAmount
                         End
                         Else
                         Begin
                              Fetch prior from CurScheme into @SchemeNo,@SchemeName,@BillAmount,@MinAmount,@MaxAmount
                              --select @BillAmount
                         End
                    End
                    Else
                    Begin
                         Fetch prior from CurScheme into @SchemeNo,@SchemeName,@BillAmount,@MinAmount,@MaxAmount
                    End
                    --Else
                    --goto exitcursor
               End   
               Fetch next from CurScheme into @SchemeNo,@SchemeName,@BillAmount,@MinAmount,@MaxAmount
          End 
                    
          End 
          exitcursor:
          Close CurScheme Deallocate CurScheme  
          Fetch next from CurLedger into @LedgerNo,@LedgerName,@Amount,@Slab
     End
     Close CurLedger Deallocate CurLedger
End
Select * From @Acheivers
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMScheme]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 20-Sep-2013
 CREATE PROCEDURE  [dbo].[DeleteMScheme]
@SchemeNo		numeric(18),
@IsActive		int
AS

		
Update MScheme Set IsActive=@IsActive,StatusNo=2 Where
		SchemeNo=@SchemeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTDeleteVouchers]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 05/02/2015
CREATE PROCEDURE  [dbo].[DeleteTDeleteVouchers] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM TDeleteVouchers
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTDeleteVouchers]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 05/02/2015
CREATE PROCEDURE [dbo].[AddTDeleteVouchers]
     @PkSrNo                              numeric(18),
     @FKVoucherNo                         numeric(18),
	 @ServerVoucherNo					  numeric(18),
     @VoucherTypeCode                     numeric(18),
     @CompanyNo                           numeric(18)
AS
IF EXISTS(select PkSrNo from TDeleteVouchers
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TDeleteVouchers
       SET
          FKVoucherNo = @FKVoucherNo,
		  ServerVoucherNo = @ServerVoucherNo,
          VoucherTypeCode = @VoucherTypeCode,
          CompanyNo = @CompanyNo
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TDeleteVouchers
       DBCC CHECKIDENT(''TDeleteVouchers'', RESEED, @Id)
       INSERT INTO TDeleteVouchers(
         
          FKVoucherNo,
		  ServerVoucherNo,
          VoucherTypeCode,
          CompanyNo
)
       VALUES(
          @FKVoucherNo,
		  @ServerVoucherNo,
          @VoucherTypeCode,
          @CompanyNo
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMStockDepartment]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 18/04/2012
CREATE PROCEDURE [dbo].[AddMStockDepartment]
     @DepartmentNo                        numeric(18),
     @DepartmentName                      varchar(50),
     @ControlGroup                        numeric(18),
     @IsActive                            bit,
     @UserId                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select DepartmentNo from MStockDepartment
          where
          DepartmentNo = @DepartmentNo)
     BEGIN
       --Update existing row
       UPDATE MStockDepartment
       SET
          DepartmentName = @DepartmentName,
          ControlGroup = @ControlGroup,
          IsActive = @IsActive,
          UserId = @UserId,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          DepartmentNo = @DepartmentNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(DepartmentNo),0) From MStockDepartment
       DBCC CHECKIDENT(''MStockDepartment'', RESEED, @Id)
       INSERT INTO MStockDepartment(
          DepartmentName,
          ControlGroup,
          IsActive,
          UserId,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          @DepartmentName,
          @ControlGroup,
          @IsActive,
          @UserId,
          @UserDate,
		  @CompanyNo,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMStockDepartment]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 18/04/2012
CREATE PROCEDURE  [dbo].[DeleteMStockDepartment] 
@DepartmentNo                       numeric(18)


AS

       DELETE FROM MStockDepartment
       WHERE
          DepartmentNo = @DepartmentNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMRegistrationDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16/05/2012
CREATE PROCEDURE  [dbo].[DeleteMRegistrationDetails] 
@RegDtlsNo                          numeric(18)


AS

       DELETE FROM MRegistrationDetails
       WHERE
          RegDtlsNo = @RegDtlsNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRegistrationDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16/05/2012
CREATE PROCEDURE [dbo].[AddMRegistrationDetails]
     @RegDtlsNo                           numeric(18),
     @RegNo                               numeric(18),
     @RegDate                             datetime,
     @RegTime                             datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select RegDtlsNo from MRegistrationDetails
          where
          RegDtlsNo = @RegDtlsNo)
     BEGIN
       --Update existing row
       UPDATE MRegistrationDetails
       SET
          RegNo = @RegNo,
          RegDate = @RegDate,
          RegTime = @RegTime,
          StatusNo=2,
		  CompanyNo =@CompanyNo
       WHERE
          RegDtlsNo = @RegDtlsNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(RegDtlsNo),0) From MRegistrationDetails
       DBCC CHECKIDENT(''MRegistrationDetails'', RESEED, @Id)
       INSERT INTO MRegistrationDetails(
          RegNo,
          RegDate,
          RegTime,
          StatusNo,
		  CompanyNo
)
       VALUES(
          @RegNo,
          @RegDate,
          @RegTime,
          1,
		  @CompanyNo
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMDutiesTaxesInfo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddMDutiesTaxesInfo]
     @PkSrNo                              numeric(18),
     @LedgerNo                            numeric(18),
     @TaxOnLedgerNo                       numeric(18),
     @FromDate                            datetime,
     @CalculationMethod                   varchar(50),
     @Percentage                          numeric(18),
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
     --@ModifiedBy                          varchar(50)
AS
IF EXISTS(select PkSrNo from MDutiesTaxesInfo
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MDutiesTaxesInfo
       SET
          LedgerNo = @LedgerNo,
          TaxOnLedgerNo = @TaxOnLedgerNo,
          FromDate = @FromDate,
          CalculationMethod = @CalculationMethod,
          Percentage = @Percentage,
          CompanyNo = @CompanyNo,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MDutiesTaxesInfo
       DBCC CHECKIDENT(''MDutiesTaxesInfo'', RESEED, @Id)
       INSERT INTO MDutiesTaxesInfo(
          LedgerNo,
          TaxOnLedgerNo,
          FromDate,
          CalculationMethod,
          Percentage,
          CompanyNo,
          UserID,
          UserDate,
          StatusNo
          --ModifiedBy
)
       VALUES(
          @LedgerNo,
          @TaxOnLedgerNo,
          @FromDate,
          @CalculationMethod,
          @Percentage,
          @CompanyNo,
          @UserID,
          @UserDate,
          1
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMDutiesTaxesInfo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE  [dbo].[DeleteMDutiesTaxesInfo] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MDutiesTaxesInfo
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteAllVoucherEntryNew]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE  [dbo].[DeleteAllVoucherEntryNew] 
@VoucherNo                numeric(18)

AS
begin transaction

	Update TChequeNoDetails set FKVoucherTrnNo=0 Where FKVoucherTrnNo in (Select PKVoucherTrnNo From TVoucherDetails Where FkVoucherNo =@VoucherNo)	

	Delete From  TPackingListDetails Where FkVoucherNo=@VoucherNo

	Delete from  TChequePrinting Where FKVoucherNo=@VoucherNo
	
	Delete from  TVoucherPayTypeDetails Where FKSalesVoucherNo = @VoucherNo

	Delete from  TVoucherChqCreditDetails Where FKVoucherNo = @VoucherNo

	Delete from  TVoucherJournalEntry Where FKReceiptVoucherNo = @VoucherNo--Deepak

--Nikhil--commented by deepak

--	Delete From TVoucherEntryCompany Where FkVoucherNo In(Select FkVoucherNo from TVoucherDetails Where PkVoucherTrnNo in( Select FkVoucherTrnNo From TVoucherRefDetails 
--	Where RefNo in ( Select TR.RefNo From TVoucherRefDetails TR,TVoucherDetails TD Where TD.PKVoucherTrnNo=TR.FKVoucherTrnNo
--	 AND TD.FkVoucherNo=@VoucherNo) And TypeOfRef=2 ))
--
--	Delete From TVoucherDetailsCompany Where FkVoucherTrnNo  In(Select PkVoucherTrnNo  from TVoucherDetails Where PkVoucherTrnNo in( Select FkVoucherTrnNo From TVoucherRefDetails 
--	Where RefNo in ( Select TR.RefNo From TVoucherRefDetails TR,TVoucherDetails TD Where TD.PKVoucherTrnNo=TR.FKVoucherTrnNo
--	 AND TD.FkVoucherNo=@VoucherNo) And TypeOfRef=2 ))
--
--	Delete From TVoucherEntry Where PkVoucherNo In(Select FkVoucherNo from TVoucherDetails Where PkVoucherTrnNo in( Select FkVoucherTrnNo From TVoucherRefDetails 
--	Where RefNo in ( Select TR.RefNo From TVoucherRefDetails TR,TVoucherDetails TD Where TD.PKVoucherTrnNo=TR.FKVoucherTrnNo
--	 AND TD.FkVoucherNo=@VoucherNo) And TypeOfRef=2 ))
--
--	Delete From  TVoucherDetails Where PkVoucherTrnNo in( Select FkVoucherTrnNo From TVoucherRefDetails 
--	Where RefNo in ( Select TR.RefNo From TVoucherRefDetails TR,TVoucherDetails TD Where TD.PKVoucherTrnNo=TR.FKVoucherTrnNo
--	 AND TD.FkVoucherNo=@VoucherNo) And TypeOfRef=2 )
--
--	Delete From TVoucherRefDetails 
--	Where RefNo in ( Select TR.RefNo From TVoucherRefDetails TR,TVoucherDetails TD Where TD.PKVoucherTrnNo=TR.FKVoucherTrnNo
--	 AND TD.FkVoucherNo=@VoucherNo) And TypeOfRef=2 

--End

	Delete from  TVoucherREfDetails Where FKVoucherTrnNo in 
				(Select PKVoucherTrnNo From TVoucherDetails Where FKVoucherNo=@VoucherNo)

	Delete from  TStockGodown Where FKStockTrnNo in 
				(Select PKStockTrnNo From TStock Where FkVoucherNo =@VoucherNo)

	Delete from  TItemLevelDiscountDetails Where FKStockTrnNo in 
				(Select PKStockTrnNo From TStock Where FkVoucherNo =@VoucherNo)

	Delete from  TFooterDiscountDetails Where FKVoucherNo = @VoucherNo

--	Delete from  TVoucherDetailsCompany Where FkVoucherNo in (Select PKVoucherCompanyNo From
--								TVoucherEntryCompany Where FKVoucherNo = @VoucherNo)  

--	Delete from  TVoucherEntryCompany Where FKVoucherNo = @VoucherNo

	Delete from  TVoucherEntryFormDetails Where FKVoucherNo = @VoucherNo

	Delete from  TStock Where FkVoucherNo =@VoucherNo

	Delete from  TVoucherDetails Where FkVoucherNo =@VoucherNo

	Delete from  TVoucherEntry Where PkVoucherNo =@VoucherNo

IF @@ERROR <> 0
begin	
	ROLLBACK
end
ELSE
begin
	COMMIT
end

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTItemLevelDiscountDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 14/12/2013
CREATE PROCEDURE [dbo].[AddTItemLevelDiscountDetails]
     @PkSrNo                              numeric(18),
     @ItemDiscNo                          numeric(18),
     @ItemBrandDiscNo                     numeric(18),
     @ItemNo                              numeric(18),
     @DiscAmount                          numeric(18,2),
     @FKStockTrnNo                        numeric(18),
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkSrNo from TItemLevelDiscountDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TItemLevelDiscountDetails
       SET
          ItemDiscNo = @ItemDiscNo,
          ItemBrandDiscNo = @ItemBrandDiscNo,
          ItemNo = @ItemNo,
          DiscAmount = @DiscAmount,
          FKStockTrnNo = @FKStockTrnNo,
          CompanyNo = @CompanyNo,
          StatusNo = 2
          --UserID = @UserID,
          --UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TItemLevelDiscountDetails
       DBCC CHECKIDENT(''TItemLevelDiscountDetails'', RESEED, @Id)
       INSERT INTO TItemLevelDiscountDetails(
          ItemDiscNo,
          ItemBrandDiscNo,
          ItemNo,
          DiscAmount,
          FKStockTrnNo,
          CompanyNo,
          StatusNo,
          UserID,
          UserDate
)
       VALUES(
          @ItemDiscNo,
          @ItemBrandDiscNo,
          @ItemNo,
          @DiscAmount,
          @FKStockTrnNo,
          @CompanyNo,
          1,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTItemLevelDiscountDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 10/12/2011
Create PROCEDURE  [dbo].[DeleteTItemLevelDiscountDetails] 
@PkSrNo                            numeric(18)


AS
		
       DELETE FROM TItemLevelDiscountDetails
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteAllVoucherEntry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE  [dbo].[DeleteAllVoucherEntry] 
@VoucherNo                numeric(18)

AS
begin transaction

	Update TChequeNoDetails set FKVoucherTrnNo=0 Where FKVoucherTrnNo in (Select PKVoucherTrnNo From TVoucherDetails Where FkVoucherNo =@VoucherNo)	

	Delete From TPackingListDetails Where FkVoucherNo=@VoucherNo

	Delete From TChequePrinting Where FKVoucherNo=@VoucherNo
	
	Delete From TVoucherPayTypeDetails Where FKSalesVoucherNo = @VoucherNo

	Delete From TVoucherChqCreditDetails Where FKVoucherNo = @VoucherNo

	Delete from TVoucherJournalEntry Where FKReceiptVoucherNo = @VoucherNo--Deepak

	Delete From TVoucherREfDetails Where FKVoucherTrnNo in 
				(Select PKVoucherTrnNo From TVoucherDetails Where FKVoucherNo=@VoucherNo)

	Delete From TStockGodown Where FKStockTrnNo in 
				(Select PKStockTrnNo From TStock Where FkVoucherNo =@VoucherNo)

	Delete From TItemLevelDiscountDetails Where FKStockTrnNo in 
				(Select PKStockTrnNo From TStock Where FkVoucherNo =@VoucherNo)

	Delete From TFooterDiscountDetails Where FKVoucherNo = @VoucherNo

--	Delete From TVoucherDetailsCompany Where FkVoucherNo in (Select PKVoucherCompanyNo From
--								TVoucherEntryCompany Where FKVoucherNo = @VoucherNo)  
--
--	Delete From TVoucherEntryCompany Where FKVoucherNo = @VoucherNo

	Delete From TVoucherEntryFormDetails Where FKVoucherNo = @VoucherNo

	Delete From TStock Where FkVoucherNo =@VoucherNo

	Delete From TVoucherDetails Where FkVoucherNo =@VoucherNo

	Delete From TVoucherEntry Where PkVoucherNo =@VoucherNo

IF @@ERROR <> 0
begin	
	ROLLBACK
end
ELSE
begin
	COMMIT
end

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMCashDenomination]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE [dbo].[AddMCashDenomination]
     @CashDenominationNo              numeric(18),
     @Note                            varchar(50),
     @RSType                          numeric(18),  
     @SerialNo                        numeric(18),  
     @IsActive                        bit,
     @UserID                          numeric(18),
     @UserDate                        datetime,
	 @CompanyNo						  numeric(18)

AS
IF EXISTS(select CashDenominationNo from MCashDenomination
          where
          CashDenominationNo = @CashDenominationNo)
     BEGIN
       --Update existing row
       UPDATE MCashDenomination
       SET
          Note = @Note,
          RSType=@RSType,
          SerialNo = @SerialNo,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
	      CompanyNo=@CompanyNo

       WHERE
          CashDenominationNo = @CashDenominationNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CashDenominationNo),0) From MCashDenomination
       DBCC CHECKIDENT(''MCashDenomination'', RESEED, @Id)
       INSERT INTO MCashDenomination(
          Note,
          RSType,
          SerialNo,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo
)
       VALUES(
          @Note,
          @RSType,
          @SerialNo,
          @IsActive,
          @UserID,
          @UserDate,
	      @CompanyNo
)

END



' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBarCodePrint]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 12-Oct-2012
Create Procedure [dbo].[GetBarCodePrint]
--@BItemNo numeric(18),
--@NoOfQuantity  numeric(18),
@RateTypeNo		numeric(18),
@NoOfBlank	    numeric(18),
@MacNo			numeric(18),
@UserID			numeric(18),
@Wt             varchar(50),
@PackingDate	datetime,
@ExpDate		datetime
As 
Begin

Declare @TBarCode Table(ItemNo numeric(18),ItemName varchar(max),BrandName varchar(max),MainGroup varchar(max), 
                      PrimaryUOM varchar(max),DefaultIOM varchar(max),CompanyName nvarchar(max),DepartmentName varchar(max), 
                      CategoryName varchar(max),Barcode varchar(max),SaleRate numeric(18,2),PurRate numeric(18,2),MRP numeric(18,2))

Declare @ItemNo numeric(18),@ItemName varchar(max),@BrandName varchar(max),@MainGroup varchar(max), 
                      @PrimaryUOM varchar(max),@DefaultIOM varchar(max),@CompanyName nvarchar(max),@DepartmentName varchar(max), 
                      @CategoryName varchar(max),@Barcode varchar(max),@ASaleRate numeric(18,2),@BSaleRate numeric(18,2),@CSaleRate numeric(18,2), 
                      @DSaleRate numeric(18,2),@ESaleRate numeric(18,2),@PurRate numeric(18,2),@MRP numeric(18,2),
					  @SaleRate numeric(18,2),@BItemNo numeric(18),@NoOfQuantity numeric(18),@FKRateSettingNo numeric(18)
--Starting BarCode
While(@NoOfBlank>0)
Begin
	Insert Into @TBarCode values(0 ,'''' ,'''' ,'''','''','''','''','''','''','''',0,0,0)
	set @NoOfBlank=@NoOfBlank-1
End

Declare CurItem Cursor For Select ItemNo,Quantity,FKRateSettingNo From TBarCodePrint Where MacNo=@MacNo AND UserId=@UserID order by PkSrNo
Open CurItem
Fetch Next From CurItem Into @BItemNo,@NoOfQuantity,@FKRateSettingNo
While(@@Fetch_Status = 0)
Begin

	SELECT     @ItemNo=MItemMaster.ItemNo, @ItemName=(Select ItemName From dbo.MStockItems_V(NULL,MItemMaster.ItemNo,NULL,NULL,NULL,NULL,NULL)), @BrandName=MItemGroup.ItemGroupName , @MainGroup=MItemGroup.ItemGroupName, 
						  @PrimaryUOM=MUOM.UOMName , @DefaultIOM=MUOM_1.UOMName ,@CompanyName= MFirm.FirmName,@DepartmentName= MItemGroup.ItemGroupName, 
						  @CategoryName=MItemGroup.ItemGroupName, @Barcode=MItemMaster.Barcode,@ASaleRate= MRateSetting.ASaleRate, @BSaleRate=MRateSetting.BSaleRate, @CSaleRate=MRateSetting.CSaleRate, 
						  @DSaleRate=MRateSetting.DSaleRate, @ESaleRate=MRateSetting.ESaleRate,@PurRate= MRateSetting.PurRate, @MRP=MRateSetting.MRP
	FROM         MItemMaster INNER JOIN
						  MRateSetting ON MItemMaster.ItemNo = MRateSetting.ItemNo INNER JOIN
						 -- MStockBarcode ON MItemMaster.ItemNo = MStockBarcode.ItemNo INNER JOIN
						  MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo INNER JOIN
						  MItemGroup AS MStockGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo INNER JOIN
						  MUOM ON MItemMaster.UOMH = MUOM.UOMNo INNER JOIN
						  MUOM AS MUOM_1 ON MItemMaster.UOMDefault = MUOM_1.UOMNo INNER JOIN
						  MFirm ON MItemMaster.CompanyNo = MFirm.FirmNo-- INNER JOIN
						 -- MStockDepartment ON MItemMaster.FkDepartmentNo = MStockDepartment.DepartmentNo INNER JOIN
						  --MStockCategory ON MItemMaster.FkCategoryNo = MStockCategory.CategoryNo
				          



Where MItemMaster.ItemNo=@BItemNo AND MRateSetting.PkSrNo=@FKRateSettingNo


	While(@NoOfQuantity>0)
	Begin
		if(@RateTypeNo=1) set @SaleRate=@ASaleRate
		else if(@RateTypeNo=2) set @SaleRate=@BSaleRate
		else if(@RateTypeNo=3) set @SaleRate=@CSaleRate
		else if(@RateTypeNo=4) set @SaleRate=@DSaleRate
		else if(@RateTypeNo=5) set @SaleRate=@ESaleRate
		else set @SaleRate=0
		Insert Into @TBarCode values(@ItemNo ,Left(@ItemName,30) ,@BrandName ,@MainGroup ,@PrimaryUOM ,@DefaultIOM ,@CompanyName ,@DepartmentName ,
						  @CategoryName ,@Barcode ,@SaleRate ,@PurRate ,@MRP)
		set @NoOfQuantity=@NoOfQuantity-1	
	End
Fetch Next From CurItem Into @BItemNo,@NoOfQuantity,@FKRateSettingNo
End
Close CurItem Deallocate CurItem

Select * From @TBarCode
End
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetItemClosingStockByDate]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'-- =============================================
create PROCEDURE [dbo].[GetItemClosingStockByDate]
@MonthNo int,
@CompNo numeric(18),
@FrDate datetime,
@ToDate datetime,	
@ItemNo numeric(18)
AS
BEGIN
	SELECT  Distinct   CONVERT(varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntry.VoucherUserNo AS VoucherSrNo , MLedger.LedgerName AS Particulars, MVoucherType.VoucherTypeName, TVoucherEntry.PKVoucherNo, 
             case when  TStock.trncode=1 then sum(abs(TStock.BilledQuantity+TStock.FreeQty)) else 0 end as [Inward Quantity], case when  TStock.trncode=2 then sum(abs(TStock.BilledQuantity+TStock.FreeQty)) else 0 end AS [Outward Quantity]
    FROM        TVoucherEntry INNER JOIN
                      --TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo  = TStock.FkVoucherTrnNo
WHERE   --  (TVoucherDetails.VoucherSrNo = 1) AND 
(TStock.ItemNo = @ItemNo) and (month(TVoucherEntry.VoucherDate)= @MonthNo)
		And (TVoucherEntry.CompanyNo = @CompNo) And	(TVoucherEntry.VoucherDate >= @FrDate) And (TVoucherEntry.VoucherDate <= @ToDate)  and TVoucherEntry.IsCancel=''false''
Group by TVoucherEntry.VoucherDate,TVoucherEntry.VoucherUserNo,MLedger.LedgerName,MVoucherType.VoucherTypeName, TVoucherEntry.PKVoucherNo,
TStock.trncode

Union
SELECT DISTINCT 
                      CONVERT(varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntry.VoucherUserNo AS VoucherSrNo,MVoucherType.VoucherTypeName AS Particulars, MVoucherType.VoucherTypeName, TVoucherEntry.PKVoucherNo, 
                      CASE WHEN TStock.trncode = 1 THEN sum(abs(TStock.BilledQuantity+TStock.FreeQty)) ELSE 0 END AS [Inward Quantity], 
                      CASE WHEN TStock.trncode = 2 THEN sum(abs(TStock.BilledQuantity+TStock.FreeQty)) ELSE 0 END AS [Outward Quantity]
FROM           TStock INNER JOIN
                      TVoucherEntry INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo
WHERE     (TStock.ItemNo = @ItemNo) and (month(TVoucherEntry.VoucherDate)= @MonthNo)
		And (TVoucherEntry.CompanyNo = @CompNo) And	(TVoucherEntry.VoucherDate >= @FrDate) And (TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherEntry.VoucherTypeCode in(23,24,8,32,19))  and TVoucherEntry.IsCancel=''false''
	Group by TVoucherEntry.VoucherDate,TVoucherEntry.VoucherUserNo,TVoucherEntry.VoucherTypeCode,MVoucherType.VoucherTypeName, TVoucherEntry.PKVoucherNo,
TStock.trncode
	
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGSTSummary]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetGSTSummary] 
	@FromDate datetime,
	@ToDate datetime,
	@VchType numeric(18)
AS


Select * from (
select pkvoucherno , a.ledgerno ,b.ledgername ,c.gstno, b.statecode , a.vouchertypecode ,voucheruserno , voucherdate , billedamount ,[0] ,[2.5],[6],[9],[14],0 as tax0,
0 as tax25,0 as tax6,0 as tax9,0 as tax14  from 
(
Select fkvoucherno ,sgstpercentage , (sgstamount)  as taxamount from tstock) as tb1
pivot
(
sum(taxamount)
for  sgstpercentage in ([0],[2.5],[6],[9],[14]
)
)
 as tb2
 inner join tvoucherentry as a on tb2.fkvoucherno = a.pkvoucherno inner join mledger as b on a.ledgerno = b.ledgerno
inner join mledgerdetails as c on b.ledgerno = c.ledgerno  and b.statecode=27
WHERE  a.VoucherTypeCode=+cast(@VchType as varchar)
			and a.VoucherDate>=''''+cast(@FromDate as varchar)+'''' and a.VoucherDate<=''''+cast(@ToDate as varchar)+'''' 

union 

select pkvoucherno , a.ledgerno ,b.ledgername ,c.gstno, b.statecode , a.vouchertypecode ,voucheruserno , voucherdate , billedamount ,0 as [0],0 as [2.5],0 as [6],0 as [9],0 as [14],
[0] as tax0,
[2.5] as tax25,[6] as tax6,[9] as tax9,[14] as tax14  from 

 
(
Select fkvoucherno ,sgstpercentage , (netamount)  as taxamount from tstock) as tb1
pivot
(
sum(taxamount)
for  sgstpercentage in ([0],[2.5],[6],[9],[14]
)
)
 as tb2
 inner join tvoucherentry as a on tb2.fkvoucherno = a.pkvoucherno inner join mledger as b on a.ledgerno = b.ledgerno  
inner join mledgerdetails as c on b.ledgerno = c.ledgerno  and b.statecode=27
WHERE  a.VoucherTypeCode= cast(@VchType as varchar)
			and a.VoucherDate>=''''+cast(@FromDate as varchar)+'''' and a.VoucherDate<=''''+cast(@ToDate as varchar)+'''' 
) as tbl4 

order by voucheruserno--ledgerno , pkvoucherno 
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSaleRegister]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetSaleRegister]
@VchNo int,
@CompNo numeric(18),
@FromDate datetime,
@ToDate datetime,
@Type numeric(18)


AS


--if(@Type=1)
--SELECT  TVoucherEntry.VoucherDate, MVoucherType.VoucherTypeName, TVoucherEntry.Paytypeno, TVoucherEntry.VoucherUserNo,
                          --(SELECT     ISNULL(SUM(Debit+Credit), 0) 
                           -- FROM          TVoucherDetails
                          --  WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder in(2,6)) )) AS CashAmt,
                         -- (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                          --  FROM          TVoucherDetails
                          --  WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder=3))) AS CreditAmt,
                          --(SELECT     ISNULL(SUM(Debit+Credit), 0) 
                           -- FROM          TVoucherDetails
                          --  WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder=4))) AS ChequeAmt,
                        --  (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                           -- FROM          TVoucherDetails
                          --  WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder=5))) AS CCAmt,
                          --(SELECT     LedgerName
                           -- FROM          MLedger
                           -- WHERE      (LedgerNo = TVoucherDetails_1.LedgerNo)) AS LedgerName,TVoucherEntry.IsCancel
				--FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				--TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo
				--WHERE (TVoucherEntry.VoucherTypeCode = 15) AND  (TVoucherEntry.VoucherDate >= @FromDate) AND 
				--(TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails_1.SrNo = 501)
				--ORDER BY TVoucherEntry.VoucherDate
if(@Type=1)

SELECT     TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo,TVoucherEntry.Reference, MLedger.LedgerName,'''' as ItemName, 0 as Barcode, TVoucherEntry.BilledAmount, MPayType.PayTypeName, TStock.Quantity, 
                      TStock.BilledQuantity, TStock.NetAmount, TStock.Amount, TStock.SGSTPercentage, TStock.SGSTAmount, TStock.CGSTPercentage, TStock.CGSTAmount, 
                      TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, TStock.CessAmount, TStock.DiscPercentage, TStock.DiscAmount, TStock.DiscRupees, 
                      TStock.DiscPercentage2, TStock.DiscAmount2, TStock.DiscRupees2,
 '''' as UOMName , '''' AS FreeUomName,TStock.itemno,0 as MRP, TStock.PackagingCharges
FROM         TVoucherEntry INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
WHERE (TVoucherEntry.VoucherTypeCode = @VchNo) AND  (TVoucherEntry.VoucherDate >= @FromDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) and TVoucherEntry.iscancel=''false''
				ORDER BY TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo


else 

SELECT     TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo,TVoucherEntry.Reference, MLedger.LedgerName, MItemGroup.ItemGroupName + '' '' + MItemMaster.ItemShortName AS ItemName, 
                      MItemMaster.Barcode, TVoucherEntry.BilledAmount, MPayType.PayTypeName, TStock.Quantity, TStock.BilledQuantity, TStock.NetAmount, TStock.Amount, 
                      TStock.SGSTPercentage, TStock.SGSTAmount, TStock.CGSTPercentage, TStock.CGSTAmount, TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, 
                      TStock.CessAmount, TStock.DiscPercentage, TStock.DiscAmount, TStock.DiscRupees, TStock.DiscPercentage2, TStock.DiscAmount2, TStock.DiscRupees2, 
                      MUOM.UOMName, MUOM_1.UOMName AS FreeUomName, TStock.ItemNo, TStock.Rate, MRateSetting.MRP, TStock.PackagingCharges
FROM         TVoucherEntry INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo INNER JOIN
                      MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                      MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo INNER JOIN
                      MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN
                      MUOM AS MUOM_1 ON TStock.FreeUOMNo = MUOM_1.UOMNo INNER JOIN
                      MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo
WHERE (TVoucherEntry.VoucherTypeCode = @VchNo) AND  (TVoucherEntry.VoucherDate >= @FromDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) and TVoucherEntry.iscancel=''false''
				ORDER BY  TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo

------------------------------------------------------------------------------------------------------------------------------------------------------------------

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPurchaseRegister]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'Create PROCEDURE [dbo].[GetPurchaseRegister]
@VchNo int,
@CompNo numeric(18),
@FromDate datetime,
@ToDate datetime,
@Type numeric(18)


AS


--if(@Type=1)
--SELECT  TVoucherEntry.VoucherDate, MVoucherType.VoucherTypeName, TVoucherEntry.Paytypeno, TVoucherEntry.VoucherUserNo,
                          --(SELECT     ISNULL(SUM(Debit+Credit), 0) 
                           -- FROM          TVoucherDetails
                          --  WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder in(2,6)) )) AS CashAmt,
                         -- (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                          --  FROM          TVoucherDetails
                          --  WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder=3))) AS CreditAmt,
                          --(SELECT     ISNULL(SUM(Debit+Credit), 0) 
                           -- FROM          TVoucherDetails
                          --  WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder=4))) AS ChequeAmt,
                        --  (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                           -- FROM          TVoucherDetails
                          --  WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder=5))) AS CCAmt,
                          --(SELECT     LedgerName
                           -- FROM          MLedger
                           -- WHERE      (LedgerNo = TVoucherDetails_1.LedgerNo)) AS LedgerName,TVoucherEntry.IsCancel
				--FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				--TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo
				--WHERE (TVoucherEntry.VoucherTypeCode = 15) AND  (TVoucherEntry.VoucherDate >= @FromDate) AND 
				--(TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails_1.SrNo = 501)
				--ORDER BY TVoucherEntry.VoucherDate

SELECT     TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, MLedger.LedgerName, TVoucherEntry.BilledAmount, MPayType.PayTypeName, TStock.Quantity, 
                      TStock.BilledQuantity, TStock.NetAmount, TStock.Amount, TStock.SGSTPercentage, TStock.SGSTAmount, TStock.CGSTPercentage, TStock.CGSTAmount, 
                      TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, TStock.CessAmount, TStock.DiscPercentage, TStock.DiscAmount, TStock.DiscRupees, 
                      TStock.DiscPercentage2, TStock.DiscAmount2, TStock.DiscRupees2
FROM         TVoucherEntry INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
WHERE (TVoucherEntry.VoucherTypeCode = 9) AND  (TVoucherEntry.VoucherDate >= @FromDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) 
				ORDER BY TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGSTTaxDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'-- =============================================
-- Author:		<umesh dhus>
-- Alter date: <05-16-2018>
-- Description:	<Run Time Add Column>
-- =============================================
create PROCEDURE [dbo].[GetGSTTaxDetails] 
	@FromDate datetime,
	@ToDate datetime,
	@Type numeric(18),
	@VchType numeric(18),
	@DiscLedg varchar(max),
	@ChargesLedg varchar(max),
	@RoundOffLedgNo numeric(18),
	@TaxTypeNo	numeric(18)
AS
BEGIN
	Declare @PerTable Table(TempPer numeric(18,2),ColNo numeric(18))
	Declare @ColName numeric(18,2),@Cnt numeric(18),@DocNo numeric(18),@Date datetime,@Amt numeric(18,2),@Per numeric(18,2),
			@Pk numeric(18),@TotTax numeric(18,2), @TotAmt numeric(18,2),@TotAmt2 numeric(18,2),@TaxToal numeric(18,2),@AmtTotal numeric(18,2),
			@FinalAmount numeric(18,2),@StrQry varchar(max),@TempPer numeric(18,2),@TaxAmt numeric(18,2),@TaxAmt2 numeric(18,2),@TempDate datetime,@GSTNO varchar(50),@HSNCode varchar(50),@StateName varchar(100),@UomName varchar(50),@ItemNo numeric(18)
	Declare @Month varchar(20),@MNo int ,@TDate datetime ,@Yr int,@FrDate datetime,@TempPk numeric(18),@TempColNo numeric(18),
			@TaxAmount numeric(18,2),@TaxAmount2 numeric(18,2),@TempDocNo numeric(18),@Disc numeric(18,2),@Charges numeric(18,2),@RndOff numeric(18,2),@LedgerName varchar(max)
	Declare @TVal Table(DocNo numeric(18),Date datetime,LedgerName varchar(max),GSTNO varchar(50),HSNCode varchar(50),StateName varchar(100),UomName varchar(50), FinalAmt numeric(18,2),Disc numeric(18,2),Charges numeric(18,2),RndOff numeric(18,2),SAmt1 numeric(18,2),TAmt1 numeric(18,2),TCAmt1 numeric(18,2),
			SAmt2 numeric(18,2),TAmt2 numeric(18,2),TCAmt2 numeric(18,2),SAmt3 numeric(18,2),TAmt3 numeric(18,2),TCAmt3 numeric(18,2),SAmt4 numeric(18,2),
			TAmt4 numeric(18,2),TCAmt4 numeric(18,2),SAmt5 numeric(18,2),TAmt5 numeric(18,2),TCAmt5 numeric(18,2),TaxToal numeric(18,2),AmtTotal numeric(18,2),ItemNo numeric(18))
	Declare @TDisc Table(LedgNo numeric(18))
	Declare @TChrg Table(LedgNo numeric(18))
	

	set @Cnt=0  set @TempPk=0 set @TaxToal =0 set @AmtTotal =0
    set @Amt=0 set @Per=0 set @TotTax=0 set @TotAmt=0 set @Disc =0 set @Charges =0 set @RndOff =0
	 set @StrQry='''' set @FrDate=@FromDate set @TempColNo=0  set @TempDocNo=0 set @TempDate=''01-01-1900''



set @StrQry=''Select distinct TStock.SGSTPercentage,0 FROM TVoucherEntry INNER JOIN
								  TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
								  WHERE  TVoucherEntry.VoucherTypeCode=''+cast(@VchType as varchar)+''
			and TVoucherEntry.VoucherDate>=''''''+cast(@FromDate as varchar)+'''''' and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+'''''' order by TStock.SGSTPercentage''
--(TStock.TaxPercentage <> 0) and
--TaxTypeNo= ''+Cast(@TaxTypeNo as varchar)+'' AND
insert into @PerTable Exec(@StrQry) --select * from @PerTable

insert into @TDisc Exec(''Select LedgerNo From MLedger Where LedgerNo in (''+ @DiscLedg +'')'')
insert into @TChrg Exec(''Select LedgerNo From MLedger Where LedgerNo in (''+ @ChargesLedg +'')'')

Declare CurCol Cursor for Select TempPer from @PerTable

		open CurCol
		Fetch next from CurCol into @TempPer
		while (@@Fetch_Status=0)
		Begin
			
			
			set @Cnt=@Cnt+1	
			update 	@PerTable set ColNo=@Cnt where 	TempPer=@TempPer
			Fetch next from CurCol into @TempPer
		End
		Close CurCol Deallocate CurCol

select * from @PerTable
set @Cnt=0
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type =2 )
BEGIN
Declare InsValue Cursor for SELECT     TVoucherEntry_1.VoucherUserNo, TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage, TVoucherEntry_1.PkVoucherNo, 
                      TVoucherEntry_1.BilledAmount, TStock.NetAmount AS SAmt1, TStock.SGSTAmount AS TAmt,TStock.CGSTAmount AS TCAmt, (TStock.DiscAmount+TStock.DiscRupees) as Disc,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherDetails_3.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
HSNCode,TStock.Itemno,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
                            FROM          TVoucherEntry AS TVoucherEntry_2 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN
                                                       (SELECT LedgNo FROM @TChrg)) AND (TVoucherDetails_2.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) 
                     
				FROM TVoucherEntry AS TVoucherEntry_1 INNER JOIN
                     TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo  inner join MItemMaster on TStock.itemno=MItemMaster.itemno
 inner join MUOM On Muom.UOMNo=TStock.FkUomNo
				WHERE TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = ''false'')
					  --AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo --and TVoucherEntry_1.PkVoucherNo=14246
				--Group by TVoucherEntry_1.VoucherUserNo,MStockItems.HSNCode,TVoucherEntry_1.VoucherDate,TStock.TaxPercentage,TVoucherEntry_1.PkVoucherNo,BilledAmount,TStock.NetAmount,TStock.TaxAmount,TStock.CGSTAmount,TStock.DiscAmount,TStock.DiscRupees
				order by TVoucherEntry_1.VoucherUserNo,TStock.SGSTPercentage

		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@TaxAmount,@TaxAmount2,@Disc,@RndOff,@HSNCode,@ItemNo,@Charges
			While(@@Fetch_Status=0)
				Begin
						--Select @LedgerName=LedgerName FRom MLedger Where LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
						Select @LedgerName=LedgerName,@StateName=StateName,@GSTNO=Case When(IsNull(GSTNO,''NA'')='''') Then '''' Else  IsNull(GSTNO,'''') end FRom MLedger inner Join MLedgerDetails On MLedger.LedgerNo=MLedgerDetails.LedgerNo inner join MState on MLedgerDetails.Stateno=MState.Stateno Where MLedger.LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
					
							set @TempPk=@Pk
							insert into @TVal (DocNo ,Date ,LedgerName,GSTNO, FinalAmt,Disc ,Charges ,RndOff, HSNCode,StateName,Itemno,SAmt1,TAmt1,TCAmt1,SAmt2,TAmt2,TCAmt2,SAmt3,TAmt3,TCAmt3,SAmt4,TAmt4,TCAmt4,SAmt5,TAmt5,TCAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@GSTNO,@FinalAmount ,@Disc,@Charges,@RndOff,@HSNCode,@StateName,@ItemNo,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
							set @Cnt=@Cnt+1	

						select @TempColNo=ColNo from @PerTable where TempPer=@Per

						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @TaxAmount , TCAmt1 = @TaxAmount2 where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @TaxAmount , TCAmt2 = @TaxAmount2 where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @TaxAmount , TCAmt3 = @TaxAmount2 where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @TaxAmount , TCAmt4 = @TaxAmount2 where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 5)
						update @TVal set SAmt5 = @Amt , TAmt5 = @TaxAmount , TCAmt5 = @TaxAmount2 where DocNo = @DocNo and Itemno=@ItemNo
						set @TaxToal =@TaxToal+@TaxAmount+@TaxAmount2
					   set @AmtTotal =@AmtTotal+@Amt
					   set @TempDocNo=@DocNo


--if (@@Fetch_Status=0)
					fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@TaxAmount,@TaxAmount2,@Disc,@RndOff,@HSNCode,@ItemNo,@Charges
				End

close InsValue deallocate InsValue
if(@TempPk<>0)
							BEGIN
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
End
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type =1 )
BEGIN
Declare InsValue Cursor for SELECT     TVoucherEntry_1.VoucherUserNo, TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage, TVoucherEntry_1.PkVoucherNo, 
                      TVoucherEntry_1.BilledAmount, SUM(TStock.NetAmount) AS SAmt, SUM(TStock.SGSTAmount) AS TAmt,SUM(TStock.CGSTAmount) AS TCAmt,sum(TStock.DiscAmount+TStock.DiscRupees) as Disc,
--                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0) 
--                            FROM          TVoucherEntry INNER JOIN
--                                                   TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
--                            WHERE      (TVoucherDetails.LedgerNo IN
--                                                       (SELECT LedgNo FROM @TDisc )) AND (TVoucherDetails.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
                        
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherDetails_3.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
                            FROM          TVoucherEntry AS TVoucherEntry_2 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN
                                                       (SELECT LedgNo FROM @TChrg)) AND (TVoucherDetails_2.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) 
                     
				FROM TVoucherEntry AS TVoucherEntry_1 INNER JOIN
                     TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo 
				WHERE TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = ''false'')
					  AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
				Group by TVoucherEntry_1.VoucherUserNo,TVoucherEntry_1.VoucherDate,TStock.SGSTPercentage,TVoucherEntry_1.PkVoucherNo,BilledAmount
				order by TVoucherEntry_1.VoucherUserNo,TStock.SGSTPercentage

		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@TaxAmount,@TaxAmount2,@Disc,@RndOff,@Charges
			While(@@Fetch_Status=0)
				Begin
						--Select @LedgerName=LedgerName FRom MLedger Where LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
						Select @LedgerName=LedgerName,@GSTNO=Case When(IsNull(GSTNO,''NA'')='''') Then '''' Else  IsNull(GSTNO,'''') end FRom MLedger inner Join MLedgerDetails On MLedger.LedgerNo=MLedgerDetails.LedgerNo Where MLedger.LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
					
                    if(@TempPk<>@Pk)
						BEgin
							if(@TempPk<>0)
							BEGIN								
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo							
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
--							if(@Cnt>2000)
--							BEGIn
--								Select * from @TVal
--								Delete from @TVal
--								set @Cnt=0
--							END
							set @TempPk=@Pk
							insert into @TVal (DocNo ,Date ,LedgerName,GSTNO, FinalAmt,Disc ,Charges ,RndOff ,SAmt1,TAmt1,TCAmt1,SAmt2,TAmt2,TCAmt2,SAmt3,TAmt3,TCAmt3,SAmt4,TAmt4,TCAmt4,SAmt5,TAmt5,TCAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@GSTNO,@FinalAmount ,@Disc,@Charges,@RndOff,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
							set @Cnt=@Cnt+1	
						End
						select @TempColNo=ColNo from @PerTable where TempPer=@Per

						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @TaxAmount , TCAmt1 = @TaxAmount2 where DocNo = @DocNo
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @TaxAmount , TCAmt2 = @TaxAmount2 where DocNo = @DocNo
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @TaxAmount , TCAmt3 = @TaxAmount2 where DocNo = @DocNo
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @TaxAmount , TCAmt4 = @TaxAmount2 where DocNo = @DocNo
						if (@TempColNo = 5)
							update @TVal set SAmt5 = @Amt , TAmt5 = @TaxAmount , TCAmt5 = @TaxAmount2 where DocNo = @DocNo
						set @TaxToal =@TaxToal+@TaxAmount+@TaxAmount2
						set @AmtTotal =@AmtTotal+@Amt
						set @TempDocNo=@DocNo
					fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@TaxAmount,@TaxAmount2,@Disc,@RndOff,@Charges
				End

close InsValue deallocate InsValue
if(@TempPk<>0)
							BEGIN
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
End
--------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type=3)
Begin
	Declare InsValue Cursor for SELECT     Count(TVoucherEntry_1.PkVoucherNo) as DocNo, TVoucherEntry_1.VoucherDate, -1 as TaxPercentage,
                      SUM(TVoucherEntry_1.BilledAmount) AS SAmt, 0 as  TAmt,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0) 
                            FROM          TVoucherEntry INNER JOIN
                                                   TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
                            WHERE      (TVoucherDetails.LedgerNo IN
                                                       (SELECT LedgNo FROM @TDisc)) AND (TVoucherEntry.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry.VoucherTypeCode=@VchType)) as Disc,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherEntry_3.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry_3.VoucherTypeCode=@VchType)) as RndOff,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
							 FROM  TVoucherEntry AS TVoucherEntry_2 INNER JOIN TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN (SELECT LedgNo FROM @TChrg)) AND (TVoucherEntry_2.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry_2.VoucherTypeCode=@VchType)) as Charges
                     
			FROM         TVoucherEntry AS TVoucherEntry_1 
								 WHERE      TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate AND (TVoucherEntry_1.IsCancel = ''false'')
										AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
								Group by TVoucherEntry_1.VoucherDate					
			Union all
			SELECT     0 as DocNo,TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage,SUM(TStock.NetAmount) AS SAmt, SUM(TStock.SGSTAmount) AS TAmt,
									   0 as Disc ,0 as RndOff ,0 as Charges                     
			FROM         TVoucherEntry AS TVoucherEntry_1 INNER JOIN
								  TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo 
								 WHERE      TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = ''false'')
										AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
								Group by TVoucherEntry_1.VoucherDate,TStock.SGSTPercentage
			order by VoucherDate,TaxPercentage
		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Amt,@TaxAmount,@Disc,@RndOff,@Charges
			While(@@Fetch_Status=0)
			Begin
				if(@Per=-1)
				Begin
					if(@TempDate<>''01-01-1900'')
					Begin
						update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where Date = @TempDate
						set @AmtTotal =0 set @TaxToal =0 set @TempDate=@Date					
					End
					insert into @TVal (DocNo ,Date ,LedgerName,FinalAmt,Disc ,Charges ,RndOff ,SAmt1,TAmt1,SAmt2,TAmt2,SAmt3,TAmt3,SAmt4,TAmt4,SAmt5,TAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@Amt,@Disc,@Charges,@RndOff,0,0,0,0,0,0,0,0,0,0 )
				End
				Else
				Begin
					select @TempColNo=ColNo from @PerTable where TempPer=@Per
						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @TaxAmount where Date = @Date
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @TaxAmount where Date = @Date
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @TaxAmount where Date = @Date
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @TaxAmount where Date = @Date
						if (@TempColNo = 5)
							update @TVal set SAmt5 = @Amt , TAmt5 = @TaxAmount where Date = @Date
						set @TaxToal =@TaxToal+@TaxAmount
						set @AmtTotal =@AmtTotal+@Amt
						set @TempDocNo=@DocNo
						set @TempDate=@Date
				
				End
				fetch next from InsValue into @DocNo,@Date,@Per,@Amt,@TaxAmount,@Disc,@RndOff,@Charges
			End
close InsValue deallocate InsValue
if(@TempDate<>''01-01-1900'')
					Begin
						update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where Date = @TempDate
						set @AmtTotal =0 set @TaxToal =0 set @TempDate=@Date					
					End		

End
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type=3)
Begin
	Begin
			if((Select Count(*) from @PerTable)=1)			
			select ''Quarter-''+Cast(datepart (q,Date) as varchar) as ''Quarter'',Sum(DocNo) as ''TotalBills'', sum(FinalAmt) as ''FinalAmt'' ,sum(Disc) as ''Disc'',sum(Charges) as ''Charges'',sum(RndOff) as ''RndOff'',sum(SAmt1) as ''SAmt1'',sum(TAmt1) as ''TAmt1'',sum(AmtTotal)as ''AmtTotal'' ,sum(TaxToal) as ''TaxToal'' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=2)
			select ''Quarter-''+Cast(datepart (q,Date) as varchar) as ''Quarter'',Sum(DocNo) as ''TotalBills'', sum(FinalAmt) as ''FinalAmt'' ,sum(Disc) as ''Disc'',sum(Charges) as ''Charges'',sum(RndOff) as ''RndOff'',sum(SAmt1) as ''SAmt1'',sum(TAmt1) as ''TAmt1'',Sum(SAmt2) as ''SAmt2'',sum(TAmt2) as ''TAmt2'',sum(AmtTotal)as ''AmtTotal'' ,sum(TaxToal) as ''TaxToal''  from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=3)
			select ''Quarter-''+Cast(datepart (q,Date) as varchar) as ''Quarter'',Sum(DocNo) as ''TotalBills'', sum(FinalAmt) as ''FinalAmt'' ,sum(Disc) as ''Disc'',sum(Charges) as ''Charges'',sum(RndOff) as ''RndOff'',sum(SAmt1) as ''SAmt1'',sum(TAmt1) as ''TAmt1'',Sum(SAmt2) as ''SAmt2'',sum(TAmt2) as ''TAmt2'' ,Sum(SAmt3) as ''SAmt3'',sum(TAmt3) as ''TAmt3'' ,sum(AmtTotal)as ''AmtTotal'' ,sum(TaxToal) as ''TaxToal'' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=4)
			select ''Quarter-''+Cast(datepart (q,Date) as varchar) as ''Quarter'',Sum(DocNo) as ''TotalBills'', sum(FinalAmt) as ''FinalAmt'' ,sum(Disc) as ''Disc'',sum(Charges) as ''Charges'',sum(RndOff) as ''RndOff'',sum(SAmt1) as ''SAmt1'',sum(TAmt1) as ''TAmt1'',Sum(SAmt2) as ''SAmt2'',sum(TAmt2) as ''TAmt2'' ,Sum(SAmt3) as ''SAmt3'',sum(TAmt3) as ''TAmt3'',Sum(SAmt4) as ''SAmt4'',sum(TAmt4) as ''TAmt4''  ,sum(AmtTotal)as ''AmtTotal'' ,sum(TaxToal) as ''TaxToal'' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=5)
			select ''Quarter-''+Cast(datepart (q,Date) as varchar) as ''Quarter'',Sum(DocNo) as ''TotalBills'', sum(FinalAmt) as ''FinalAmt'' ,sum(Disc) as ''Disc'',sum(Charges) as ''Charges'',sum(RndOff) as ''RndOff'',sum(SAmt1) as ''SAmt1'',sum(TAmt1) as ''TAmt1'',Sum(SAmt2) as ''SAmt2'',sum(TAmt2) as ''TAmt2'' ,Sum(SAmt3) as ''SAmt3'',sum(TAmt3) as ''TAmt3'',Sum(SAmt4) as ''SAmt4'',sum(TAmt4) as ''TAmt4'',Sum(SAmt5) as ''SAmt5'',sum(TAmt5) as ''TAmt5'' ,sum(AmtTotal)as ''AmtTotal'' ,sum(TaxToal) as ''TaxToal''  from @TVal  Group BY datepart (q,Date)
	End
End
---------------------------------------------------------------------------------------------------------------------------------------------------------
Else
Begin
	if(@Type=1)
	Begin
		
		if((Select Count(*) from @PerTable)=1)
		select Date,DocNo ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,AmtTotal ,TaxToal from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=2)
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=3)
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,AmtTotal ,TaxToal from @TVal
		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=4)
		--select Date,DocNo  , LedgerName,FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,SAmt4 ,TAmt4  ,AmtTotal,TaxToal from @TVal
		--union All select null as Date, null as DocNo ,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(SAmt4) ,sum(TAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 As Amt ,(TAmt1) as SGST ,(TCAmt1) as CGST,SAmt2 As Amt ,TAmt2 as SGST,TCAmt2 as CGST ,SAmt3  As Amt,TAmt3 as SGST ,TCAmt3 as CGST,SAmt4 As Amt,TAmt4 as SGST ,TCAmt4 as CGST,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=5)
		select Date,DocNo  ,LedgerName, GSTNO,FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,SAmt2 ,TAmt2,TCAmt2 ,SAmt3 ,TAmt3 ,TCAmt3,SAmt4 ,TAmt4 ,TCAmt4,SAmt5 ,TAmt5 ,TCAmt5,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(SAmt5) ,sum(TAmt5),sum(TCAmt5),sum(AmtTotal) ,sum(TaxToal) from @TVal
	End

	if(@Type=2)
	Begin
		
		if((Select Count(*) from @PerTable)=1)
		select Date,DocNo ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,AmtTotal ,TaxToal from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=2)
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=3)
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,AmtTotal ,TaxToal from @TVal
		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=4)
		--select Date,DocNo  , LedgerName,FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,SAmt4 ,TAmt4  ,AmtTotal,TaxToal from @TVal
		--union All select null as Date, null as DocNo ,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(SAmt4) ,sum(TAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,HSNCode,StateName,SAmt1 As Amt ,(TAmt1) as SGST ,(TCAmt1) as CGST,SAmt2 As Amt ,TAmt2 as SGST,TCAmt2 as CGST ,SAmt3  As Amt,TAmt3 as SGST ,TCAmt3 as CGST,SAmt4 As Amt,TAmt4 as SGST ,TCAmt4 as CGST,(SAmt1+SAmt2+SAmt3+SAmt4) as AmtTotal, (TCAmt1+TCAmt1+TCAmt2+TCAmt2+TCAmt3+TCAmt3+TCAmt4+TCAmt4  )as TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),null,null,sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=5)
		select Date,DocNo  ,LedgerName, GSTNO,FinalAmt ,Disc ,Charges ,RndOff,HSnCode,StateName,SAmt1 ,TAmt1,TCAmt1,SAmt2 ,TAmt2,TCAmt2 ,SAmt3 ,TAmt3 ,TCAmt3,SAmt4 ,TAmt4 ,TCAmt4,SAmt5 ,TAmt5 ,TCAmt5,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),null,null,sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(SAmt5) ,sum(TAmt5),sum(TCAmt5),sum(AmtTotal) ,sum(TaxToal) from @TVal
	End
--	else
--	Begin
--		if((Select Count(*) from @PerTable)=1)
--		select Date,DocNo , FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,AmtTotal ,TaxToal from @TVal
--		union All select null as Date, null as DocNo , sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=2)
--		select Date,DocNo  , FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,AmtTotal,TaxToal  from @TVal
--		union All select null as Date, null as DocNo , sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=3)
--		select Date,DocNo  , FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,AmtTotal ,TaxToal from @TVal
--		union All select null as Date, null as DocNo , sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=4)
--		select Date,DocNo  , FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,SAmt4 ,TAmt4  ,AmtTotal,TaxToal from @TVal
--		union All select null as Date, null as DocNo , sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(SAmt4) ,sum(TAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=5)
--		select Date,DocNo  , FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,SAmt4 ,TAmt4 ,SAmt5 ,TAmt5 ,AmtTotal,TaxToal  from @TVal
--		union All select null as Date, null as DocNo , sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(SAmt4) ,sum(TAmt4),sum(SAmt5) ,sum(TAmt5),sum(AmtTotal) ,sum(TaxToal) from @TVal
--	End


End


	
END









' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGSTFORM3B]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
--Created ON 10-Dec-2015
create PROCEDURE [dbo].[GetGSTFORM3B] 
	@FromDate datetime,
	@ToDate datetime,
	@VchNo int
	
AS
BEGIN

SELECT    1 AS VchType, TStock.SGSTPercentage,TStock.CGSTPercentage,TStock.IGSTPercentage,SUM(TStock.NetAmount+TStock.OtherCharges+TStock.CessValue) As BasicAmount,
SUM(TStock.cgstamount) AS CGSTAmount,SUM(TStock.SGSTAmount) AS SGSTAmount, 
SUM(TStock.IGSTAmount) as IGSTAmount,SUM(TStock.CESSAmount) as CESSAmount,

--SUM(TStock.Netrate+ TStock.TaxAmount+TStock.cgstamount+TStock.IGSTAmount+TStock.CESSAmount) AS Amount,
SUM(TStock.Amount) AS Amount,
CASE  --WHEN (TStock.TaxPercentage = 0 or TStock.IGSTPercentage=0 ) THEN ''Sale/Service@0%''
WHEN (TStock.SGSTPercentage = 2.5 or TStock.IGSTPercentage=5 ) THEN ''Sale/Service@5%'' 
 WHEN (TStock.SGSTPercentage = 6 or TStock.IGSTPercentage=12) THEN ''Sale/Service@12%'' 
 WHEN (TStock.SGSTPercentage = 9 or TStock.IGSTPercentage=18) THEN ''Sale/Service@18%'' 
 WHEN (TStock.SGSTPercentage = 14 or TStock.IGSTPercentage=28) THEN ''Sale/Service@28%'' else ''''
end as Narration
FROM         TStock INNER JOIN
                      TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo
WHERE     (TVoucherEntry.IsCancel = ''false'') AND (TVoucherEntry.VoucherTypeCode = @VchNo) 
			AND (TVoucherEntry.VoucherDate >= @FromDate) AND 
                     (TVoucherEntry.VoucherDate <=@ToDate)  --and Quantity>0
--and (TStock.SGSTPercentage<>0 OR TStock.CGSTPercentage<>0 OR IGSTPercentage<>0)

GROUP BY TStock.SGSTPercentage,TStock.CGSTPercentage,IGSTPercentage
--Union
--
--SELECT    2 AS VchType, TStock.TaxPercentage,TStock.CGSTPercentage,TStock.IGSTPercentage, SUM(TStock.Amount) As BasicAmount,
--SUM(TStock.cgstamount) AS CGSTAmount, SUM(TStock.TaxAmount) AS TaxAmount,SUM(TStock.IGSTAmount) as IGSTAmount,
--SUM(TStock.CESSAmount) as CESSAmount,
-- SUM(TStock.Amount+ TStock.TaxAmount+TStock.cgstamount+TStock.IGSTAmount+TStock.CESSAmount) AS Amount,
--CASE WHEN (TStock.TaxPercentage = 2.5 or TStock.IGSTPercentage=5 ) THEN ''Sale/Service@5%'' 
-- WHEN (TStock.TaxPercentage = 6 or TStock.IGSTPercentage=12) THEN ''Sale/Service@12%'' 
-- WHEN (TStock.TaxPercentage = 9 or TStock.IGSTPercentage=18) THEN ''Sale/Service@18%'' 
-- WHEN (TStock.TaxPercentage = 14 or TStock.IGSTPercentage=28) THEN ''Sale/Service@28%'' else ''''
--end as Narration
--FROM         TStock INNER JOIN
--                      TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo
--WHERE     (TVoucherEntry.IsCancel = ''false'') AND (TVoucherEntry.VoucherTypeCode = @VchNo) 
--			AND (TVoucherEntry.VoucherDate >= @FromDate) AND 
--                      (TVoucherEntry.VoucherDate <=@ToDate) and Quantity<0
--GROUP BY TStock.TaxPercentage,TStock.CGSTPercentage,IGSTPercentage
end







' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOpeningStock]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[GetOpeningStock]
	(
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ItemNo		numeric(18),
	@Type		int,
	@No			numeric(18)
	)
RETURNS @TStockBal Table(OpQty numeric(18,2),OpAmt numeric(18,2))
AS
	BEGIN
	Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrAmt numeric(18,2),@DrQty numeric(18,2)
Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2),@CategoryNo numeric(18,2)
Declare @Rate numeric(18,2),@BalAmt numeric(18,2)
Declare @OpDt datetime,@TrnDr int,@TrnCr int
Declare @VType int,@VNo numeric(18)--@IsJobWork int,@JobWorkCo numeric(18),
Declare @DAmt numeric(18,2),@DQty Numeric(18,2),@CAmt numeric(18,2),@CQty Numeric(18,2)
Declare @Cnt int
set @VType=0 set @VNo=0--set @IsJobWork=0 set @JobWorkCo=0 
set @Cnt=0
	set @ClosingQty = 0 set @BalAmt = 0
set @DrQty=0 set @DrAmt=0 set @CrQty = 0 set @CrAmt = 0
set @TrnDr = 1 set @TrnCr = 2

if(@Type =0)--Stock Summary
begin
	
	select @OpDt=BooksBeginFrom from Mfirm
	set @OpDt=0
	

	set @OpAmt =0 set @OpQty=0
	if(@FromDate <= @OpDt)
	begin
	
	insert into @TStockBal values(@OpQty,@OpAmt)
	set @Cnt=1
	end
	else
	begin
		Declare CurDr Cursor For 	
		SELECT     isnull(TStock.Amount,0), isNull(abs(TStock.BilledQuantity),0)--isnull(abs(TStock.Quantity),0)+isnull(abs(TStock.FreeQty),0)
					,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--@DrAmt=isnull(SUM(TStock.Amount),0) , @DrQty=isnull(SUM(TStock.Quantity) ,0)
		From TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo

		WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnDr) AND 
			(TVoucherEntry.VoucherDate >= @OpDt) AND 
                      (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate)) and TVoucherEntry.IsCancel=''false''
                      
		Declare CurCr Cursor For
		SELECT     isnull(TStock.Amount,0),isNull(abs(TStock.BilledQuantity),0)-- isnull(TStock.Quantity,0)+isnull(TStock.FreeQty,0)
			,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--@CrAmt=isnull(SUM(TStock.Amount),0) , @CrQty=isnull(SUM(TStock.Quantity),0) 
		FROM   TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo

		WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnCr)  AND 
		(TVoucherEntry.VoucherDate >= @OpDt) AND 
        (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate)) and TVoucherEntry.IsCancel=''false''
            
     
	insert into @TStockBal values(@ClosingQty,@BalAmt)
	end
end
--===============================================================================================================
else if(@Type = 1)--Godownwise Stock
begin	
	select @OpDt=BooksBeginFrom from Mfirm

	set @OpAmt=0 set @OpQty=0
	if(@FromDate <= @OpDt)
	begin
	
	insert into @TStockBal values(@OpQty,@OpAmt)
	set @Cnt=1
	end
	else
	begin
		Declare CurDr Cursor For 	
		SELECT     isnull(TStock.Amount,0), isnull(abs(TStockGodown.Qty),0),TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo-- @DrAmt=isnull(SUM(TStock.Amount),0) , @DrQty=isnull(SUM(TStock.Quantity) ,0)
		FROM  TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo

					  INNER JOIN TStockGodown ON TStock.PkStockTrnNo = TStockGodown.FKStockTrnNo
		WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnDr)  AND 
			(TVoucherEntry.VoucherDate >= @OpDt) AND 
                        (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate)) And TStockGodown.GodownNo=@No and TVoucherEntry.IsCancel=''false''
 
		Declare CurCr Cursor For
		SELECT     isnull(TStock.Amount,0), isnull(TStockGodown.Qty,0),TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--     @CrAmt=isnull(SUM(TStock.Amount),0) , @CrQty=isnull(SUM(TStock.Quantity),0) 
		FROM        TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
 INNER JOIN
                      TStockGodown ON TStock.PkStockTrnNo = TStockGodown.FKStockTrnNo
		WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnCr) AND 
			(TVoucherEntry.VoucherDate >= @OpDt) AND 
                        (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate)) And TStockGodown.GodownNo=@No and TVoucherEntry.IsCancel=''false''
            
     
	insert into @TStockBal values(@ClosingQty,@BalAmt)
	end
end	
--===============================================================================================================
else if(@Type = 3)--Categorywise Stock Details
begin
	--set @OpDt=@FromDate
	--Select @OpDt=UserDate From MBranch where PKBranchCode=@BrID	
	select @OpDt=BooksBeginFrom from Mfirm
--	SELECT     @OpAmt=isnull(SUM(OpAmount),0), @OpQty=isnull(SUM(OpQuantity) ,0)
--	FROM         MItemOpeningStock
--	WHERE     (PkItemNo = @ItemNo) And PkItemNo=(Select ItemNo from MStockItems WHERE(CategoryNo =@No))
	set @OpAmt=0 set @OpQty=0
	--And IsJobWork=@IsJobWork AND ForJobWorkCompNo=@JobWorkCo
	
	if(@FromDate <= @OpDt)
	begin
	
	insert into @TStockBal values(@OpQty,@OpAmt)
	set @Cnt=1
	end
	else
	begin
		
		Declare CurDr Cursor For 	
		SELECT     isnull(TStock.Amount,0),  isNull(abs(TStock.BilledQuantity),0)--isnull(abs(TStock.Quantity),0)+isnull(abs(TStock.FreeQty),0)
			,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--     @DrAmt=isnull(SUM(TStock.Amount),0) , @DrQty=isnull(SUM(TStock.Quantity) ,0)
		FROM     TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
INNER JOIN
                      MStockItems_V(1,NULL,NULL,NULL,NULL,NULL,NULL) as MStockItems ON TStock.ItemNo = MStockItems.ItemNo
		WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnDr) AND 
			(TVoucherEntry.VoucherDate >= @OpDt) AND 
                      (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate)) And MStockItems.FKCategoryNo=@No  and TVoucherEntry.IsCancel=''false''
 
		Declare CurCr Cursor For
		SELECT     isnull(TStock.Amount,0),  isNull(abs(TStock.BilledQuantity),0)--isnull(TStock.Quantity,0)+isnull(TStock.FreeQty,0)
			,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--     @CrAmt=isnull(SUM(TStock.Amount),0) , @CrQty=isnull(SUM(TStock.Quantity),0) 
		FROM      TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
 INNER JOIN
                      MStockItems_V(1,NULL,NULL,NULL,NULL,NULL,NULL) as MStockItems ON TStock.ItemNo = MStockItems.ItemNo
		WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnCr) AND 
			(TVoucherEntry.VoucherDate >= @OpDt) AND 
                      (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate)) And MStockItems.FKCategoryNo=@No and TVoucherEntry.IsCancel=''false''
            
    
	end
end	
--===============================================================================================================
else if(@Type = 5)--Groupwise wise Stock Details
begin
	--set @OpDt=@FromDate
	--Select @OpDt=UserDate From MBranch where PKBranchCode=@BrID	
	select @OpDt=BooksBeginFrom from Mfirm
--	SELECT     @OpAmt=isnull(SUM(OpAmount),0), @OpQty=isnull(SUM(OpQuantity) ,0)
--	FROM         MItemOpeningStock
--	WHERE     (PkItemNo = @ItemNo) 
	--And IsJobWork=@IsJobWork AND ForJobWorkCompNo=@JobWorkCo
	set @OpAmt=0 set @OpQty=0
	if(@FromDate <= @OpDt)
	begin
	
	insert into @TStockBal values(@OpQty,@OpAmt)
	set @Cnt=1
	end
	else
	begin
		
		Declare CurDr Cursor For 	
		SELECT     isnull(TStock.Amount,0),  isNull(abs(TStock.BilledQuantity),0)--isnull(abs(TStock.Quantity),0)+isnull(abs(TStock.FreeQty),0)
					,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--     @DrAmt=isnull(SUM(TStock.Amount),0) , @DrQty=isnull(SUM(TStock.Quantity) ,0)
		FROM      TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
 INNER JOIN
                      MStockItems_V(1,NULL,NULL,NULL,NULL,NULL,NULL) as MStockItems ON TStock.ItemNo = MStockItems.ItemNo
		WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnDr) AND 
			(TVoucherEntry.VoucherDate >= @OpDt) AND 
                      (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate)) And MStockItems.GroupNo=@No and TVoucherEntry.IsCancel=''false''
 
		Declare CurCr Cursor For
		SELECT     isnull(TStock.Amount,0),  isNull(abs(TStock.BilledQuantity),0)--isnull(TStock.Quantity,0)+isnull(TStock.FreeQty,0)
			,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--     @CrAmt=isnull(SUM(TStock.Amount),0) , @CrQty=isnull(SUM(TStock.Quantity),0) 
		FROM    TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
 INNER JOIN
                      MStockItems_V(1,NULL,NULL,NULL,NULL,NULL,NULL) as MStockItems ON TStock.ItemNo = MStockItems.ItemNo
		WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnCr) AND 
			(TVoucherEntry.VoucherDate >= @OpDt) AND 
                      (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate)) And MStockItems.GroupNo=@No and TVoucherEntry.IsCancel=''false''
            
     
	end
end	
--===============================================================================================================
else if(@Type = 6)--Ledger wise Stock Details
begin
	--set @OpDt=@FromDate
	--Select @OpDt=UserDate From MBranch where PKBranchCode=@BrID	
	select @OpDt=BooksBeginFrom from Mfirm
	/*SELECT     @OpAmt=isnull(SUM(OpAmount),0), @OpQty=isnull(SUM(OpQuantity) ,0)
	FROM         MItemOpeningStock
	WHERE     (PkItemNo = @ItemNo) AND (BranchCode = @BrID) */
	set @OpAmt = 0 Set @OpQty = 0
	if(@FromDate <= @OpDt)
	begin
	
	insert into @TStockBal values(@OpQty,@OpAmt)
	set @Cnt=1
	end
	else
	begin
		
		Declare CurDr Cursor For 	
		SELECT     isnull(TStock.Amount,0), isNull(abs(TStock.BilledQuantity),0)-- isnull(abs(TStock.Quantity),0)+isnull(abs(TStock.FreeQty),0)
					,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--     @DrAmt=isnull(SUM(TStock.Amount),0) , @DrQty=isnull(SUM(TStock.Quantity) ,0)
		FROM         TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                      TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo 
							WHERE (TVoucherEntry.VoucherDate >= @OpDt) AND (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate)) 
							AND (TVoucherDetails.LedgerNo = @No) AND (TVoucherDetails.VoucherSrNo = 1)
						--	And (TVoucherEntry.CompanyNo =@CompNo) 
							AND (TStock.TrnCode = @TrnDr) And  (TStock.ItemNo = @ItemNo) and TVoucherEntry.IsCancel=''false''
 
		Declare CurCr Cursor For
		SELECT     isnull(TStock.Amount,0),  isNull(abs(TStock.BilledQuantity),0)--isnull(TStock.Quantity,0)+isnull(TStock.FreeQty,0)
				,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--     @CrAmt=isnull(SUM(TStock.Amount),0) , @CrQty=isnull(SUM(TStock.Quantity),0) 
		FROM       TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                      TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo 
							WHERE (TVoucherEntry.VoucherDate >= @OpDt) AND (TVoucherEntry.VoucherDate <= DateAdd(d,-1,@FromDate)) 
							AND (TVoucherDetails.LedgerNo = @No) AND (TVoucherDetails.VoucherSrNo = 1)
						--	And (TVoucherEntry.CompanyNo =@CompNo) 
							AND (TStock.TrnCode = @TrnCr) And  (TStock.ItemNo = @ItemNo) and TVoucherEntry.IsCancel=''false''
      
	end
--===============================================================================================================
end	

if(@Cnt=0)
begin
--Open Debit Cursor
Open CurDr
	Fetch Next From CurDr Into @DAmt,@DQty,@VType,@VNo
	While (@@Fetch_status=0)
	begin
		set @DrAmt=@DrAmt+@DAmt
		set @DrQty=@DrQty+@DQty
		Fetch Next From CurDr Into @DAmt,@DQty,@VType,@VNo
	end
	Close CurDr Deallocate CurDr

set @VType=0 set @VNo=0	
--Open Credit Cursor
Open CurCr
	Fetch Next From CurCr Into @CAmt,@CQty,@VType,@VNo
	While (@@Fetch_status=0)
	begin
		set @CrAmt=@CrAmt+@CAmt
		set @CrQty=@CrQty+@CQty
		Fetch Next From CurCr Into @CAmt,@CQty,@VType,@VNo
	end
	Close CurCr Deallocate CurCr
	
set @ClosingQty=(@DrQty-@CrQty)+@OpQty
	                   
	set @BalAmt = (@DrAmt - @CrAmt)+ @OpAmt  
	insert into @TStockBal values(@ClosingQty,@BalAmt)
end
	RETURN
	END



' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBill]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [dbo].[GetBill]
@PkVoucherNo                numeric(18),
@Type						int

AS
Begin
SELECT        TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherDate, CASE WHEN (@Type = 1) 
                          THEN MStockItems_V_1.ItemName ELSE MStockItems_V_1.ItemNameLang END AS ItemName, MRateSetting.MRP, TStock.Quantity, TStock.GRWeight, 
                         TStock.TRWeight, TStock.PackagingCharges, TStock.NoOfBag, TStock.CessValue, TStock.OtherCharges AS Dhekharek, TStock.Rate, TStock.Amount, 
                         MUOM.UOMName, TStock.SGSTPercentage, TStock.SGSTAmount, TStock.DiscPercentage, TStock.DiscAmount, TStock.DiscRupees, TStock.DiscPercentage2, 
                         TStock.DiscAmount2, TStock.DiscRupees2, TStock.CGSTPercentage, TStock.CGSTAmount, TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, 
                         TStock.CessAmount, MLedgerDetails.GSTNO AS CustGSTNo, MLedgerDetails.PANNo AS CustPANNo, MLedgerDetails.FSSAI, MFirm.GSTNO AS CmpGSTNo, MUOM.UomLang,
                         MLedger.StateCode, MItemMaster.HSNCode, TVoucherEntry.BilledAmount, CASE WHEN (@Type = 1) THEN LedgerName ELSE LedgerLangName END AS LedgerName, 
                         MLedger.ContactPerson, MLedgerDetails.PhNo1 AS CustPhNo, MLedgerDetails.MobileNo1 AS CustMoNo, CASE WHEN (@Type = 1) 
                         THEN MLedgerDetails.Address ELSE MLedgerDetails.AddressLang END AS CustAddress, MFirm.Address + '' / '' + Mfirm.pincode AS CmpAddress, MFirm.EmailID AS CmpEmailID, 
                         MFirm.PhoneNo1 + '' / '' + MFirm.PhoneNo2 AS CompPhoneNo,MFirm.FSSAINo as CompFSSAINo, TVoucherEntry.Reference, TVoucherEntry.VoucherTime, 
                         TStock.NetAmount + TStock.CessValue + TStock.PackagingCharges + TStock.OtherCharges AS NetAmount, TStock.NetRate, TStock.DisplayItemName, 
                         TStock.Remarks AS RemarksItemlevel, '''' AS TransporterName, TVoucherEntry.LRNo, MTransporterMode.TransModeName, TVoucherEntry.TransNoOfItems,
                             (SELECT        SettingValue
                               FROM            MSettings
                               WHERE        (PkSettingNo = 311)) AS DisplayTrans, TVoucherEntry.Remark, MState.StateName, MCity.CityName, MPayType.PayTypeName
							      ,MLedgerDetails_1.address as CustDeliveryAddress,Mcity_1.Cityname as custDeliverycity,tstock.hamali
FROM            TStock INNER JOIN
                         MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN
                         TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
                         MFirm ON TVoucherEntry.CompanyNo = MFirm.FirmNo INNER JOIN
                         MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                         dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems_V_1 ON TStock.ItemNo = MStockItems_V_1.ItemNo INNER JOIN
                         MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                         MLedgerDetails ON MLedgerDetails.LedgerNo = MLedger.LedgerNo  INNER JOIN
                         MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo LEFT OUTER JOIN
                         MTransporterMode ON TVoucherEntry.TransportMode = MTransporterMode.TransModeNo INNER JOIN
                         MState ON MLedger.StateCode = MState.StateCode Left outer JOIN
                         MCity ON MLedgerDetails.CityNo = MCity.CityNo INNER JOIN
                         MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
						 left outer JOIN
                         TDeliveryAddress ON  TVoucherEntry.PkVoucherNo = TDeliveryAddress.FkVoucherno AND
                          TVoucherEntry.LedgerNo = TDeliveryAddress.Ledgerno
						  Left outer join MLedgerDetails as MLedgerDetails_1
						   on MLedgerDetails_1.Ledgerdetailsno=TDeliveryAddress.Ledgerdetailsno 
						   and TDeliveryAddress.Ledgerno=MLedgerDetails_1.DeliveryLedgerNo
 Left outer join mcity as mcity_1 on MLedgerDetails_1.cityno=mcity_1.cityno
WHERE        (TVoucherEntry.PkVoucherNo = @PkVoucherNo)

ORDER BY TStock.PkStockTrnNo
END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStockSummaryAllReport]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE Procedure [dbo].[GetStockSummaryAllReport] -- exec [GetStockSummaryAllReport] 1,''1-Jan-2019'',''21-Jan-2019'',''139,946,140,742,49,139,940'',1
@CompNo		           numeric(18),
@FromDate	           datetime,
@ToDate		           datetime,
@ItStr		           varchar(max),
@EsFlag                int
As
declare @VType varchar(100),@SVType varchar(100),@SRVType varchar(100),@PVType varchar(100),@PRVType varchar(100)
declare @OPVType varchar(100),@PhVType varchar(100),@ProdVType varchar(100)
if(@EsFlag=0)
begin
        set @VType=''15,9,12,13,8,36''
		set @SVType=''15''
		set @SRVType=''12''
		set @PVType=''9''
		set @PRVType=''13''
      set @OPVType=''36''
       set @PhVType=''8''
      set @ProdVType=''0''
end
else if(@EsFlag=1)
begin
        set @VType=''115,109,112,113,108,136''
        set @SVType=''115''
        set @SRVType=''112''
		set @PVType=''109''
		set @PRVType=''113''
  set @OPVType=''136''
       set @PhVType=''108''
      set @ProdVType=''1''

end

SELECT   ItemNo,sum(PurQty) AS PurQty, sum(SaleQty)  AS SaleQty,sum(PurReturnQty) AS PurReturnQty,sum(SalesReturnQty) AS SalesReturnQty,
sum(OpnOutQty) AS OpnOutQty,sum (OpnInQty) AS OpnInQty,sum (PhyOutQty) AS PhyOutQty,sum (PhyInQty) AS PhyInQty,
ItemGroupName, ItemName, Barcode,UOMH,UOMName_H,UOML,UOMName_L,HSNCode ,sum(ProdOutQty) AS ProdOutQty,sum(ProdInQty) AS ProdInQty from
(
--------Opening Stock for Out---------------

SELECT     0 as StockType,   b.ItemNo, 0 AS PurQty, 0  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,   
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H,  
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,
CASe When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName!=''GRAM''  then SUM(b.Quantity)   
When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName=''GRAM'' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo 
INNER JOIN fn_Split (@ItStr,  '','') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@VType,  '','') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     a.VoucherDate < @FromDate AND a.IsCancel = ''False'' --AND a.VoucherTypeCode IN (cast (@VType)
 and b.trncode=2
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,   
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

--------Opening Stock in---------------
union all 

SELECT     0 as StockType,   b.ItemNo, 0 AS PurQty, 0  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,   
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H,  
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,
CASe When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName!=''GRAM''  then SUM(b.Quantity)   
When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName=''GRAM'' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo 
INNER JOIN fn_Split (@ItStr,  '','') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@VType,  '','') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     a.VoucherDate < @FromDate AND a.IsCancel = ''False''-- AND a.VoucherTypeCode IN  (CAST(@VType as numeric)   ) 
 and b.trncode=1
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,   
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate


Union All

------------------- Sales -------------------
SELECT   1 as StockType,     b.ItemNo, 0 AS PurQty, 
CASe When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName!=''GRAM''  then SUM(b.Quantity)   
When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName=''GRAM'' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End  AS SaleQty,0 AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo,MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  '','') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@SVType,  '','') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE        (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = ''False'') --AND (a.VoucherTypeCode IN (15))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,   MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All

------------------- Pur Return -------------------
SELECT    1 as StockType,     b.ItemNo, 0 AS PurQty, 0 AS SaleQty, 
CASe When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName!=''GRAM''  then SUM(b.Quantity)   
When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName=''GRAM'' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PurReturnQty,0 AS SalesReturnQty,b.FkUomNo,MUOM_S.UOMName AS UOMName_S, 
MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH,MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  '','') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PRVType,  '','') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = ''False'') --AND (a.VoucherTypeCode IN (13))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- PurchASe -------------------
SELECT   1 as StockType, b.ItemNo, CASe When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName!=''GRAM''  then SUM(b.Quantity)   
When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName=''GRAM'' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PurQty, 
0 AS SaleQty,0 AS PurReturnQty, 0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,MItemGroup.ItemGroupName,
MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H,MItemMASter.UOML,
MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  '','') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PVType,  '','') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE     (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = ''False'')-- AND (a.VoucherTypeCode IN (9))
GROUP BY b.ItemNo, b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode,
MItemMASter.UOMH, MUOM_H.UOMName,MItemMASter.UOML,MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- Sales Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
CASe When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName!=''GRAM''  then SUM(b.Quantity)   
When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName=''GRAM'' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  '','') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@SRVType,  '','') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 
WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = ''False'')-- AND (a.VoucherTypeCode IN (12))
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate

Union All
------------------- Physical stock entry minus Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,CASe When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName!=''GRAM''  then SUM(b.Quantity)   
When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName=''GRAM'' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End AS PhyOutQty,0 AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  '','') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PhVType,  '','') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 

WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = ''False'') --AND (a.VoucherTypeCode IN (8)) 
and b.trncode=2
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate
Union All
------------------- Physical stock entry plus Return -------------------
SELECT    1 as StockType,  b.ItemNo, 0 AS PurQty, 0 AS SaleQty,0 AS PurReturnQty, 
0 AS SalesReturnQty,b.FkUomNo, MUOM_S.UOMName AS UOMName_S,
MItemGroup.ItemGroupName,   MItemMASter.ItemName,MItemMASter.Barcode,MItemMASter.UOMH, MUOM_H.UOMName AS UOMName_H, 
MItemMASter.UOML, MUOM_L.UOMName AS UOMName_L,MItemMASter.HSNCode,VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,CASe When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName!=''GRAM''  then SUM(b.Quantity)   
When  MUOM_H.UOMName=''KG'' and MUOM_L.UOMName=''GRAM'' and MUOM_S.UOMName=''GRAM'' then SUM(b.Quantity)/1000   
Else   SUM(b.Quantity*r.stockconversion) End  AS PhyInQty,0 AS ProdOutQty,0 AS ProdInQty
FROM              TStock AS b INNER JOIN
                           TVoucherEntry AS a ON b.FKVoucherNo = a.PkVoucherNo INNER JOIN
                           MRateSetting AS r ON r.PkSrNo = b.FkRateSettingNo AND b.ItemNo = r.ItemNo INNER JOIN
                           MItemMASter ON b.ItemNo =   MItemMASter.ItemNo INNER JOIN
                           MItemGroup ON   MItemMASter.GroupNo =   MItemGroup.ItemGroupNo INNER JOIN
                           MUOM AS MUOM_H ON   MItemMASter.UOMH = MUOM_H.UOMNo INNER JOIN
                           MUOM AS MUOM_L ON   MItemMASter.UOML = MUOM_L.UOMNo INNER JOIN
                           MUOM AS MUOM_S ON b.FkUomNo = MUOM_S.UOMNo
INNER JOIN fn_Split (@ItStr,  '','') AS Bill_Itemno on b.ItemNo= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@PhVType,  '','') AS Vch on a.VoucherTypeCode= CAST(vch.value AS varchar) 

WHERE         (a.VoucherDate >= @FromDate) AND (a.VoucherDate <= @ToDate) AND (a.IsCancel = ''False'') --AND (a.VoucherTypeCode IN (8))
 and b.trncode=1
GROUP BY b.ItemNo,b.FkUomNo,MUOM_S.UOMName,MItemGroup.ItemGroupName,MItemMASter.ItemName,MItemMASter.Barcode, 
MItemMASter.UOMH,MUOM_H.UOMName,MItemMASter.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,VoucherDate


union all 
SELECT     1 AS StockType, MItemMaster.ItemNo, 0 AS PurQty, 0 AS SaleQty, 0 AS PurReturnQty, 0 AS SalesReturnQty,0 as FkUomNo,'''' AS UOMName_S,
                      MItemGroup.ItemGroupName, MItemMaster.ItemName, MItemMaster.Barcode, MItemMaster.UOMH, MUOM_H.UOMName AS UOMName_H, MItemMaster.UOML, 
                      MUOM_L.UOMName AS UOMName_L,
MItemMASter.HSNCode,RDate as VoucherDate,0 AS OpnOutQty,0 AS OpnInQty,0 AS PhyOutQty,0 AS PhyInQty,
 0 AS ProdOutQty,sum( MRecipeMain.ProdQty ) AS ProdInQty
FROM         MItemGroup INNER JOIN
                      MItemMaster ON MItemGroup.ItemGroupNo = MItemMaster.GroupNo INNER JOIN
                      MUOM ON MItemMaster.UOML = MUOM.UOMNo INNER JOIN
                      MUOM AS MUOM_H ON MItemMaster.UOMH = MUOM_H.UOMNo INNER JOIN
                      MUOM AS MUOM_L ON MItemMaster.UOML = MUOM_L.UOMNo INNER JOIN
                      MRecipeMain ON MItemMaster.ItemNo = MRecipeMain.FinishItemID
INNER JOIN fn_Split (@ItStr,  '','') AS Bill_Itemno on MRecipeMain.FinishItemID= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@ProdVType,  '','') AS Vch on MRecipeMain.esflag= CAST(vch.value AS varchar)
WHERE     (MRecipeMain.RecipeType = 2)-- and (MRecipeMain.RDate >= @FromDate) AND (MRecipeMain.RDate  <= @ToDate)
 AND (MRecipeMain.IsActive = ''True'') 
GROUP BY MItemMaster.ItemNo, MItemMaster.UOML, MItemMaster.ItemName, MItemGroup.ItemGroupName, MUOM.UOMName, MItemMaster.Barcode, MItemMaster.UOMH, 
                      MUOM_H.UOMName, MItemMaster.UOML, MUOM_L.UOMName,MItemMASter.HSNCode,RDate

union all 

SELECT     1 AS StockType, MItemMaster.ItemNo, 0 AS PurQty, 0 AS SaleQty, 0 AS PurReturnQty, 0 AS SalesReturnQty, 0 AS FkUomNo, '''' AS UOMName_S, 
                      MItemGroup.ItemGroupName, MItemMaster.ItemName, MItemMaster.Barcode, MItemMaster.UOMH, MUOM_H.UOMName AS UOMName_H, MItemMaster.UOML, 
                      MUOM_L.UOMName AS UOMName_L, MItemMaster.HSNCode, MRecipeMain.RDate AS VoucherDate, 0 AS OpnOutQty, 0 AS OpnInQty, 0 AS PhyOutQty, 0 AS PhyInQty, 
                      sum(MRecipeSub.FinalQty) AS ProdOutQty,0 AS ProdInQty
FROM         MItemGroup INNER JOIN
                      MItemMaster ON MItemGroup.ItemGroupNo = MItemMaster.GroupNo INNER JOIN
                      MUOM ON MItemMaster.UOML = MUOM.UOMNo INNER JOIN
                      MUOM AS MUOM_H ON MItemMaster.UOMH = MUOM_H.UOMNo INNER JOIN
                      MUOM AS MUOM_L ON MItemMaster.UOML = MUOM_L.UOMNo INNER JOIN
                      MRecipeSub ON MItemMaster.ItemNo = MRecipeSub.RawProductID INNER JOIN
                      MRecipeMain ON MRecipeMain.MRecipeID = MRecipeSub.FKMRecipeID
INNER JOIN fn_Split (@ItStr,  '','') AS Bill_Itemno on MRecipeSub.RawProductID= CAST(Bill_Itemno.value AS numeric) 
INNER JOIN fn_Split (@ProdVType,  '','') AS Vch on MRecipeMain.esflag= CAST(vch.value AS varchar)
WHERE     (MRecipeMain.RecipeType = 2) and (MRecipeMain.RDate >= @FromDate) AND (MRecipeMain.RDate  <= @ToDate) AND (MRecipeMain.IsActive = ''True'') 
GROUP BY MItemMaster.ItemNo, MItemMaster.UOML, MItemMaster.ItemName, MItemGroup.ItemGroupName, MUOM.UOMName, MItemMaster.Barcode, MItemMaster.UOMH, 
                      MUOM_H.UOMName, MItemMaster.UOML, MUOM_L.UOMName, MItemMaster.HSNCode, MRecipeMain.RDate


)AS tbl
GROUP BY ItemNo,ItemGroupName, ItemName, Barcode, UOMH,UOMName_H,UOML,UOMName_L,HSNCode
Order BY ItemGroupName, ItemName












' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGSTB2BPayTypewise]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
--Created ON 10-Dec-2015
create PROCEDURE [dbo].[GetGSTB2BPayTypewise] 
	@FromDate datetime,
	@ToDate datetime
	
	
AS
BEGIN
SELECT    ''Cash SAles'' as LedgerName, ''21'' as LedgerNo,SUM(TStock.NetAmount) AS basic, TStock.SGSTPercentage *2 AS taxPer,
 SUM(TStock.SGSTAmount) as cgstamt  , sum(TStock.SGSTAmount) AS sgstamount,     SUM(TStock.Amount) AS Expr2, MPayType.PayTypeName
FROM         TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo
WHERE     (TVoucherEntry.VoucherTypeCode = 15) AND (TVoucherEntry.IsCancel = ''false'') AND (TVoucherEntry.PayTypeNo = 2) AND (TVoucherEntry.LedgerNo = 21) 
AND (TVoucherEntry.VoucherDate >= @FromDate) AND (TVoucherEntry.VoucherDate <=@ToDate)
GROUP BY TStock.SGSTPercentage, MPayType.PayTypeName

union 
SELECT     MLedger.LedgerName, TVoucherEntry.LedgerNo, SUM(TStock.NetAmount) AS basic, TStock.SGSTPercentage * 2 AS taxPer,
SUM(TStock.SGSTAmount) as cgstamt  , sum(TStock.SGSTAmount) AS sgstamount, 
                      SUM(TStock.Amount) AS Expr2, MPayType.PayTypeName
FROM         TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo
WHERE     (TVoucherEntry.VoucherTypeCode = 15) AND (TVoucherEntry.IsCancel = ''false'') AND (TVoucherEntry.PayTypeNo = 2) AND (TVoucherEntry.LedgerNo != 21) 
AND (TVoucherEntry.VoucherDate >= @FromDate) AND (TVoucherEntry.VoucherDate <=@ToDate)
GROUP BY TVoucherEntry.LedgerNo, TStock.SGSTPercentage, MPayType.PayTypeName, MLedger.LedgerName
union
SELECT     MLedger.LedgerName, TVoucherEntry.LedgerNo, SUM(TStock.NetAmount) AS basic, TStock.SGSTPercentage * 2 AS taxPer,
SUM(TStock.SGSTAmount) as cgstamt  , sum(TStock.SGSTAmount) AS sgstamount, 
                      SUM(TStock.Amount) AS Expr2, MPayType.PayTypeName
FROM         TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo
WHERE     (TVoucherEntry.VoucherTypeCode = 15) AND (TVoucherEntry.IsCancel = ''false'') AND (TVoucherEntry.PayTypeNo!= 2)
AND (TVoucherEntry.VoucherDate >= @FromDate) AND (TVoucherEntry.VoucherDate <=@ToDate)
GROUP BY TVoucherEntry.LedgerNo, TStock.SGSTPercentage, MPayType.PayTypeName, MLedger.LedgerName

end

/*---------------------------------------------------------------------------------------------------------------------------------------------------*/

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMultiBill]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [dbo].[GetMultiBill]
@FromDate          datetime,
@ToDate            datetime,
@VchType           int,
@CompanyNo                   varchar(50),
@PartyNo                   varchar(max)


AS
Begin
declare @Type						int
set @Type=1
SELECT    TVoucherEntry.PkVoucherNo,TVoucherEntry.LedgerNo, TVoucherEntry.VoucherUserNo, TVoucherEntry.VoucherDate, CASE WHEN (@Type = 1) 
                      THEN MStockItems_V_1.ItemName ELSE MStockItems_V_1.ItemNameLang END AS ItemName,MRateSetting.MRP, 
TStock.Quantity,TStock.GRWeight,TStock.TRWeight,
TStock.PackagingCharges,TStock.NoOfBag,TStock.CessValue,TStock.OtherCharges as Dhekharek,
 TStock.Rate, TStock.Amount,MUOM.UOMName, TStock.SGSTPercentage,TStock.SGSTAmount, 
                       TStock.DiscPercentage,TStock.DiscAmount,TStock.DiscRupees,TStock.DiscPercentage2,TStock.DiscAmount2,TStock.DiscRupees2, TStock.CGSTPercentage,
 TStock.CGSTAmount, TStock.IGSTPercentage, TStock.IGSTAmount, TStock.CessPercentage, 
                      TStock.CessAmount, MLedgerDetails.GSTNO AS CustGSTNo, MLedgerDetails.PANNo AS CustPANNo,
MLedgerDetails.FSSAI,MFirm.GSTNO as CmpGSTNo, MLedger.StateCode,MItemMaster.HSNCode, TVoucherEntry.BilledAmount,MFirm.FSSAINo as CompFSSAINO, 
     CASE WHEN (@Type = 1) THEN LedgerName ELSE LedgerLangName END AS LedgerName,
                      MLedger.ContactPerson, MLedgerDetails.PhNo1 as CustPhNo, MLedgerDetails.MobileNo1 as CustMoNo,

         CASE WHEN (@Type = 1) THEN MLedgerDetails.Address ELSE MLedgerDetails.AddressLang end AS CustAddress,



 MFirm.Address AS CmpAddress, MFirm.EmailID AS CmpEmailID,MFirm.PhoneNo1 +'' / ''+ Mfirm.PhoneNo2 as CompPhoneNo,



 TVoucherEntry.Reference, TVoucherEntry.VoucherTime,(TStock.NetAmount + TStock.CessValue + TStock.PackagingCharges + TStock.OtherCharges)as NetAmount, TStock.NetRate,  TStock.DisplayItemName, TStock.Remarks as RemarksItemlevel,
                      '''' AS TransporterName,MTransporterPayType.TransPayTypeName,TVoucherEntry.LRNo,MTransporterMode.TransModeName, TVoucherEntry.TransNoOfItems,  
               (SELECT     SettingValue   FROM   MSettings     WHERE      (PkSettingNo = 311)) AS DisplayTrans,TVoucherEntry.Remark, MState.StateName, MCity.CityName, MPayType.PayTypeName
FROM         MLedgerDetails INNER JOIN
                      TStock INNER JOIN  MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN 
                      TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN

                      MFirm ON TVoucherEntry.CompanyNo = MFirm.FirmNo INNER JOIN
                      MItemMaster ON TStock.ItemNo = MItemMaster.ItemNo INNER JOIN
                      dbo.MStockItems_V(NULL, NULL, NULL, NULL, NULL, NULL, NULL) AS MStockItems_V_1 ON TStock.ItemNo = MStockItems_V_1.ItemNo INNER JOIN
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo ON MLedgerDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo   LEFT OUTER JOIN
 MTransporterMode ON TVoucherEntry.TransportMode = MTransporterMode.TransModeNo LEFT OUTER JOIN
                      MTransporterPayType ON TVoucherEntry.TransPayType = MTransporterPayType.TransPayTypeNo INNER JOIN
                      MState ON MLedger.StateCode = MState.StateCode INNER JOIN
                      MCity ON MLedgerDetails.CityNo = MCity.CityNo INNER JOIN
fn_Split (''''+cast(@PartyNo as varchar(max))+ '''','''') AS Party_BILL on TVoucherEntry.LedgerNo= CAST(Party_BILL.value AS numeric) INNER JOIN

                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
    
--WHERE      (TVoucherEntry.PkVoucherNo = @PkVoucherNo)
ORDER BY TStock.PkStockTrnNo

end

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGSTTaxDetailsCess]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [dbo].[GetGSTTaxDetailsCess] 
	@FromDate datetime,
	@ToDate datetime,
	@Type numeric(18),
	@VchType numeric(18),
	@DiscLedg varchar(max),
	@ChargesLedg varchar(max),
	@RoundOffLedgNo numeric(18),
	@TaxTypeNo	numeric(18)
AS
BEGIN
	Declare @PerTable Table(TempPer numeric(18,2),ColNo numeric(18))
	Declare @ColName numeric(18,2),@Cnt numeric(18),@DocNo numeric(18),@Date datetime,@Amt numeric(18,2),@Per numeric(18,2),
			@Pk numeric(18),@TotTax numeric(18,2), @TotAmt numeric(18,2),@TotAmt2 numeric(18,2),@TaxToal numeric(18,2),@AmtTotal numeric(18,2),
			@FinalAmount numeric(18,2),@StrQry varchar(max),@TempPer numeric(18,2),@TaxAmt numeric(18,2),@TaxAmt2 numeric(18,2),@TaxAmt3 numeric(18,2),@TaxAmt4 numeric(18,2),@TempDate datetime,@GSTNO varchar(50),@HSNCode varchar(50),@StateName varchar(100),@UomName varchar(50),@ItemNo numeric(18)
	Declare @Month varchar(20),@MNo int ,@TDate datetime ,@Yr int,@FrDate datetime,@TempPk numeric(18),@TempColNo numeric(18),
			@SGSTAmount numeric(18,2),@SGSTAmount2 numeric(18,2),@SGSTAmount3 numeric(18,2),@SGSTAmount4 numeric(18,2),@TempDocNo numeric(18),@Disc numeric(18,2),@Charges numeric(18,2),@RndOff numeric(18,2),@LedgerName varchar(max)
	Declare @TVal Table(DocNo numeric(18),Date datetime,LedgerName varchar(max),GSTNO varchar(50),HSNCode varchar(50),StateName varchar(100),UomName varchar(50), FinalAmt numeric(18,2),Disc numeric(18,2),Charges numeric(18,2),RndOff numeric(18,2),SAmt1 numeric(18,2),TAmt1 numeric(18,2),TCAmt1 numeric(18,2),TIAmt1 numeric(18,2),TCeAmt1 numeric(18,2),
			SAmt2 numeric(18,2),TAmt2 numeric(18,2),TCAmt2 numeric(18,2),TIAmt2 numeric(18,2),TCeAmt2 numeric(18,2),SAmt3 numeric(18,2),TAmt3 numeric(18,2),TCAmt3 numeric(18,2),TIAmt3 numeric(18,2),TCeAmt3 numeric(18,2),SAmt4 numeric(18,2),
			TAmt4 numeric(18,2),TCAmt4 numeric(18,2),TIAmt4 numeric(18,2),TCeAmt4 numeric(18,2),SAmt5 numeric(18,2),TAmt5 numeric(18,2),TIAmt5 numeric(18,2),TCeAmt5 numeric(18,2),TCAmt5 numeric(18,2),TaxToal numeric(18,2),AmtTotal numeric(18,2),ItemNo numeric(18))
	Declare @TDisc Table(LedgNo numeric(18))
	Declare @TChrg Table(LedgNo numeric(18))
	

	set @Cnt=0  set @TempPk=0 set @TaxToal =0 set @AmtTotal =0
    set @Amt=0 set @Per=0 set @TotTax=0 set @TotAmt=0 set @Disc =0 set @Charges =0 set @RndOff =0
	 set @StrQry='''' set @FrDate=@FromDate set @TempColNo=0  set @TempDocNo=0 set @TempDate=''01-01-1900''



set @StrQry=''Select distinct TStock.SGSTPercentage,0 FROM TVoucherEntry INNER JOIN
								  TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
								  WHERE TaxTypeNo= ''+Cast(@TaxTypeNo as varchar)+'' AND TVoucherEntry.VoucherTypeCode=''+cast(@VchType as varchar)+''
			and TVoucherEntry.VoucherDate>=''''''+cast(@FromDate as varchar)+'''''' and TVoucherEntry.iscancel= 0 
and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+'''''' order by TStock.SGSTPercentage''
--(TStock.SGSTPercentage <> 0) and

insert into @PerTable Exec(@StrQry) --select * from @PerTable

insert into @TDisc Exec(''Select LedgerNo From MLedger Where LedgerNo in (''+ @DiscLedg +'')'')
insert into @TChrg Exec(''Select LedgerNo From MLedger Where LedgerNo in (''+ @ChargesLedg +'')'')

Declare CurCol Cursor for Select TempPer from @PerTable

		open CurCol
		Fetch next from CurCol into @TempPer
		while (@@Fetch_Status=0)
		Begin
			
			
			set @Cnt=@Cnt+1	
			update 	@PerTable set ColNo=@Cnt where 	TempPer=@TempPer
			Fetch next from CurCol into @TempPer
		End
		Close CurCol Deallocate CurCol

select * from @PerTable
set @Cnt=0
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type =2 )
BEGIN
Declare InsValue Cursor for SELECT     TVoucherEntry_1.VoucherUserNo, TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage, TVoucherEntry_1.PkVoucherNo, 
                      TVoucherEntry_1.BilledAmount, TStock.NetAmount AS SAmt1, TStock.SGSTAmount AS TAmt,TStock.CGSTAmount AS TCAmt,TStock.IGSTAmount AS TIAmt, TStock.CessAmount AS TCeAmt,  (TStock.DiscAmount+TStock.DiscRupees) as Disc,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherDetails_3.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
HSNCode,TStock.Itemno,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
                            FROM          TVoucherEntry AS TVoucherEntry_2 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN
                                                       (SELECT LedgNo FROM @TChrg)) AND (TVoucherDetails_2.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) 
                     
				FROM TVoucherEntry AS TVoucherEntry_1 INNER JOIN
                     TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo  inner join MStockItems on TStock.itemno=MStockItems.itemno
 inner join MUOM On Muom.UOMNo=TStock.FkUomNo
				WHERE TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = ''false'')
					  AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo --and TVoucherEntry_1.PkVoucherNo=14246
				--Group by TVoucherEntry_1.VoucherUserNo,MStockItems.HSNCode,TVoucherEntry_1.VoucherDate,TStock.SGSTPercentage,TVoucherEntry_1.PkVoucherNo,BilledAmount,TStock.NetAmount,TStock.SGSTAmount,TStock.CGSTAmount,TStock.DiscAmount,TStock.DiscRupees
				order by TVoucherEntry_1.VoucherUserNo,TStock.SGSTPercentage

		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@HSNCode,@ItemNo,@Charges
			While(@@Fetch_Status=0)
				Begin
						--Select @LedgerName=LedgerName FRom MLedger Where LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
						Select @LedgerName=LedgerName,@StateName=StateName,@GSTNO=Case When(IsNull(GSTNO,''NA'')='''') Then '''' Else  IsNull(GSTNO,'''') end FRom MLedger inner Join MLedgerDetails On MLedger.LedgerNo=MLedgerDetails.LedgerNo inner join MState on MLedgerDetails.Stateno=MState.Stateno Where MLedger.LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
					
							set @TempPk=@Pk
							insert into @TVal (DocNo ,Date ,LedgerName,GSTNO, FinalAmt,Disc ,Charges ,RndOff, HSNCode,StateName,Itemno,SAmt1,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2,TAmt2,TCAmt2,TIAmt2,TCeAmt2,SAmt3,TAmt3,TCAmt3,TIAmt3,TCeAmt3,SAmt4,TAmt4,TCAmt4,TIAmt4,TCeAmt4,SAmt5,TAmt5,TCAmt5,TIAmt5,TCeAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@GSTNO,@FinalAmount ,@Disc,@Charges,@RndOff,@HSNCode,@StateName,@ItemNo,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
							set @Cnt=@Cnt+1	

						select @TempColNo=ColNo from @PerTable where TempPer=@Per

						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @SGSTAmount , TCAmt1 = @SGSTAmount2 , TIAmt1 = @SGSTAmount3, TCeAmt1 = @SGSTAmount4 where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @SGSTAmount , TCAmt2 = @SGSTAmount2, TIAmt2 = @SGSTAmount3, TCeAmt2 = @SGSTAmount4  where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @SGSTAmount , TCAmt3 = @SGSTAmount2 , TIAmt3 = @SGSTAmount3 , TCeAmt3 = @SGSTAmount4  where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @SGSTAmount , TCAmt4 = @SGSTAmount2 , TIAmt4 = @SGSTAmount3, TCeAmt4 = @SGSTAmount4 where DocNo = @DocNo and Itemno=@ItemNo
						if (@TempColNo = 5)
						update @TVal set SAmt5 = @Amt , TAmt5 = @SGSTAmount , TCAmt5 = @SGSTAmount2 , TIAmt5 = @SGSTAmount3 , TCeAmt5 = @SGSTAmount4  where DocNo = @DocNo and Itemno=@ItemNo
						set @TaxToal =@TaxToal+@SGSTAmount+@SGSTAmount2+@SGSTAmount3+@SGSTAmount4
					   set @AmtTotal =@AmtTotal+@Amt
					   set @TempDocNo=@DocNo


--if (@@Fetch_Status=0)
					fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@HSNCode,@ItemNo,@Charges
				End

close InsValue deallocate InsValue
if(@TempPk<>0)
							BEGIN
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo and Itemno=@ItemNo
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
End
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type =1 )
BEGIN
Declare InsValue Cursor for SELECT    case when @VchType=15 then   TVoucherEntry_1.VoucherUserNo else TVoucherEntry_1.Reference end as VoucherUserNo, TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage, TVoucherEntry_1.PkVoucherNo, 
                      TVoucherEntry_1.BilledAmount, SUM(TStock.NetAmount) AS SAmt, SUM(TStock.SGSTAmount) AS TAmt,SUM(TStock.CGSTAmount) AS TCAmt,SUM(TStock.IGSTAmount) AS TCAmt,SUM(TStock.CessAmount) AS TCAmt,sum(TStock.DiscAmount+TStock.DiscRupees) as Disc,
--                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0) 
--                            FROM          TVoucherEntry INNER JOIN
--                                                   TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
--                            WHERE      (TVoucherDetails.LedgerNo IN
--                                                       (SELECT LedgNo FROM @TDisc )) AND (TVoucherDetails.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
                        
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherDetails_3.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) ,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
                            FROM          TVoucherEntry AS TVoucherEntry_2 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN
                                                       (SELECT LedgNo FROM @TChrg)) AND (TVoucherDetails_2.FkVoucherNo = TVoucherEntry_1.PkVoucherNo)) 
                     
				FROM TVoucherEntry AS TVoucherEntry_1 INNER JOIN
                     TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo 
				WHERE TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = ''false'')
					  AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
				Group by TVoucherEntry_1.VoucherUserNo,Reference,TVoucherEntry_1.VoucherDate,TStock.SGSTPercentage,TVoucherEntry_1.PkVoucherNo,BilledAmount
				order by TVoucherEntry_1.VoucherUserNo,TStock.SGSTPercentage

		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@Charges
			While(@@Fetch_Status=0)
				Begin
						--Select @LedgerName=LedgerName FRom MLedger Where LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
						Select @LedgerName=LedgerName,@GSTNO=Case When(IsNull(GSTNO,''NA'')='''') Then '''' Else  IsNull(GSTNO,'''') end FRom MLedger inner Join MLedgerDetails On MLedger.LedgerNo=MLedgerDetails.LedgerNo Where MLedger.LedgerNo in(Select LedgerNo From TVoucherDetails Where FKVoucherNo=@Pk AND VoucherSrNo=1)
					
                    if(@TempPk<>@Pk)
						BEgin
							if(@TempPk<>0)
							BEGIN								
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo							
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
--							if(@Cnt>2000)
--							BEGIn
--								Select * from @TVal
--								Delete from @TVal
--								set @Cnt=0
--							END
							set @TempPk=@Pk
							insert into @TVal (DocNo ,Date ,LedgerName,GSTNO, FinalAmt,Disc ,Charges ,RndOff ,SAmt1,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2,TAmt2,TCAmt2,TIAmt2,TCeAmt2,SAmt3,TAmt3,TCAmt3,TIAmt3,TCeAmt3,SAmt4,TAmt4,TCAmt4,TIAmt4,TCeAmt4,SAmt5,TAmt5,TCAmt5,TIAmt5,TCeAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@GSTNO,@FinalAmount ,@Disc,@Charges,@RndOff,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
							set @Cnt=@Cnt+1	
						End
						select @TempColNo=ColNo from @PerTable where TempPer=@Per

						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @SGSTAmount , TCAmt1 = @SGSTAmount2 , TIAmt1 = @SGSTAmount3, TCeAmt1 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @SGSTAmount , TCAmt2 = @SGSTAmount2 , TIAmt2 = @SGSTAmount3, TCeAmt2 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @SGSTAmount , TCAmt3 = @SGSTAmount2 , TIAmt3 = @SGSTAmount3 , TCeAmt3 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @SGSTAmount , TCAmt4 = @SGSTAmount2 , TIAmt4 = @SGSTAmount3, TCeAmt4 = @SGSTAmount4 where DocNo = @DocNo
						if (@TempColNo = 5)
							update @TVal set SAmt5 = @Amt , TAmt5 = @SGSTAmount , TCAmt5 = @SGSTAmount2 , TIAmt5 = @SGSTAmount3 , TCeAmt5 = @SGSTAmount4 where DocNo = @DocNo
						set @TaxToal =@TaxToal+@SGSTAmount+@SGSTAmount2+@SGSTAmount3+@SGSTAmount4
						set @AmtTotal =@AmtTotal+@Amt
						set @TempDocNo=@DocNo
					fetch next from InsValue into @DocNo,@Date,@Per,@Pk,@FinalAmount,@Amt,@SGSTAmount,@SGSTAmount2,@SGSTAmount3,@SGSTAmount4,@Disc,@RndOff,@Charges
				End

close InsValue deallocate InsValue
if(@TempPk<>0)
							BEGIN
							update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where DocNo = @TempDocNo
							set @AmtTotal =0 set @TaxToal =0
							set @TempDocNo=@DocNo
							END
End
--------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type=3)
Begin
	Declare InsValue Cursor for SELECT     Count(TVoucherEntry_1.PkVoucherNo) as DocNo, TVoucherEntry_1.VoucherDate, -1 as SGSTPercentage,
                      SUM(TVoucherEntry_1.BilledAmount) AS SAmt, 0 as  TAmt,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0) 
                            FROM          TVoucherEntry INNER JOIN
                                                   TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
                            WHERE      (TVoucherDetails.LedgerNo IN
                                                       (SELECT LedgNo FROM @TDisc)) AND (TVoucherEntry.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry.VoucherTypeCode=@VchType)) as Disc,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE -Credit END),0) 
                            FROM          TVoucherEntry AS TVoucherEntry_3 INNER JOIN
                                                   TVoucherDetails AS TVoucherDetails_3 ON TVoucherEntry_3.PkVoucherNo = TVoucherDetails_3.FkVoucherNo
                            WHERE      (TVoucherDetails_3.LedgerNo IN
                                                       (@RoundOffLedgNo)) AND (TVoucherEntry_3.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry_3.VoucherTypeCode=@VchType)) as RndOff,
                          (SELECT     isNull(SUM(CASE WHEN (Debit <> 0) THEN Debit ELSE Credit END),0)
							 FROM  TVoucherEntry AS TVoucherEntry_2 INNER JOIN TVoucherDetails AS TVoucherDetails_2 ON TVoucherEntry_2.PkVoucherNo = TVoucherDetails_2.FkVoucherNo
                            WHERE      (TVoucherDetails_2.LedgerNo IN (SELECT LedgNo FROM @TChrg)) AND (TVoucherEntry_2.VoucherDate=TVoucherEntry_1.VoucherDate) AND (TVoucherEntry_2.VoucherTypeCode=@VchType)) as Charges
                     
			FROM         TVoucherEntry AS TVoucherEntry_1 
								 WHERE      TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate AND (TVoucherEntry_1.IsCancel = ''false'')
										AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
								Group by TVoucherEntry_1.VoucherDate					
			Union all
			SELECT     0 as DocNo,TVoucherEntry_1.VoucherDate, TStock.SGSTPercentage,SUM(TStock.NetAmount) AS SAmt, SUM(TStock.SGSTAmount) AS TAmt,
									   0 as Disc ,0 as RndOff ,0 as Charges                     
			FROM         TVoucherEntry AS TVoucherEntry_1 INNER JOIN
								  TStock ON TVoucherEntry_1.PkVoucherNo = TStock.FKVoucherNo 
								 WHERE      TVoucherEntry_1.VoucherTypeCode=@VchType	 and TVoucherEntry_1.VoucherDate>=@FromDate and TVoucherEntry_1.VoucherDate<=@ToDate  AND (TVoucherEntry_1.IsCancel = ''false'')
										AND TVoucherEntry_1.TaxTypeNo= @TaxTypeNo
								Group by TVoucherEntry_1.VoucherDate,TStock.SGSTPercentage
			order by VoucherDate,SGSTPercentage
		open InsValue
		fetch next from InsValue into @DocNo,@Date,@Per,@Amt,@SGSTAmount,@Disc,@RndOff,@Charges
			While(@@Fetch_Status=0)
			Begin
				if(@Per=-1)
				Begin
					if(@TempDate<>''01-01-1900'')
					Begin
						update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where Date = @TempDate
						set @AmtTotal =0 set @TaxToal =0 set @TempDate=@Date					
					End
					insert into @TVal (DocNo ,Date ,LedgerName,FinalAmt,Disc ,Charges ,RndOff ,SAmt1,TAmt1,SAmt2,TAmt2,SAmt3,TAmt3,SAmt4,TAmt4,SAmt5,TAmt5) 
                            Values(@DocNo,@Date,@LedgerName,@Amt,@Disc,@Charges,@RndOff,0,0,0,0,0,0,0,0,0,0 )
				End
				Else
				Begin
					select @TempColNo=ColNo from @PerTable where TempPer=@Per
						if (@TempColNo = 1)
							update @TVal set SAmt1 = @Amt , TAmt1 = @SGSTAmount where Date = @Date
						if (@TempColNo = 2)
							update @TVal set SAmt2 = @Amt , TAmt2 = @SGSTAmount where Date = @Date
						if (@TempColNo = 3)
							update @TVal set SAmt3 = @Amt , TAmt3 = @SGSTAmount where Date = @Date
						if (@TempColNo = 4)
							update @TVal set SAmt4 = @Amt , TAmt4 = @SGSTAmount where Date = @Date
						if (@TempColNo = 5)
							update @TVal set SAmt5 = @Amt , TAmt5 = @SGSTAmount where Date = @Date
						set @TaxToal =@TaxToal+@SGSTAmount
						set @AmtTotal =@AmtTotal+@Amt
						set @TempDocNo=@DocNo
						set @TempDate=@Date
				
				End
				fetch next from InsValue into @DocNo,@Date,@Per,@Amt,@SGSTAmount,@Disc,@RndOff,@Charges
			End
close InsValue deallocate InsValue
if(@TempDate<>''01-01-1900'')
					Begin
						update @TVal set TaxToal=@TaxToal,AmtTotal=@AmtTotal where Date = @TempDate
						set @AmtTotal =0 set @TaxToal =0 set @TempDate=@Date					
					End		

End
------------------------------------------------------------------------------------------------------------------------------------------------------------------
if(@Type=3)
Begin
	Begin
			if((Select Count(*) from @PerTable)=1)			
			select ''Quarter-''+Cast(datepart (q,Date) as varchar) as ''Quarter'',Sum(cast (DocNo as numeric)) as ''TotalBills'', sum(FinalAmt) as ''FinalAmt'' ,sum(Disc) as ''Disc'',sum(Charges) as ''Charges'',sum(RndOff) as ''RndOff'',sum(SAmt1) as ''SAmt1'',sum(TAmt1) as ''TAmt1'',sum(AmtTotal)as ''AmtTotal'' ,sum(TaxToal) as ''TaxToal'' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=2)
			select ''Quarter-''+Cast(datepart (q,Date) as varchar) as ''Quarter'',Sum(cast (DocNo as numeric)) as ''TotalBills'', sum(FinalAmt) as ''FinalAmt'' ,sum(Disc) as ''Disc'',sum(Charges) as ''Charges'',sum(RndOff) as ''RndOff'',sum(SAmt1) as ''SAmt1'',sum(TAmt1) as ''TAmt1'',Sum(SAmt2) as ''SAmt2'',sum(TAmt2) as ''TAmt2'',sum(AmtTotal)as ''AmtTotal'' ,sum(TaxToal) as ''TaxToal''  from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=3)
			select ''Quarter-''+Cast(datepart (q,Date) as varchar) as ''Quarter'',Sum(cast (DocNo as numeric)) as ''TotalBills'', sum(FinalAmt) as ''FinalAmt'' ,sum(Disc) as ''Disc'',sum(Charges) as ''Charges'',sum(RndOff) as ''RndOff'',sum(SAmt1) as ''SAmt1'',sum(TAmt1) as ''TAmt1'',Sum(SAmt2) as ''SAmt2'',sum(TAmt2) as ''TAmt2'' ,Sum(SAmt3) as ''SAmt3'',sum(TAmt3) as ''TAmt3'' ,sum(AmtTotal)as ''AmtTotal'' ,sum(TaxToal) as ''TaxToal'' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=4)
			select ''Quarter-''+Cast(datepart (q,Date) as varchar) as ''Quarter'',Sum(cast (DocNo as numeric)) as ''TotalBills'', sum(FinalAmt) as ''FinalAmt'' ,sum(Disc) as ''Disc'',sum(Charges) as ''Charges'',sum(RndOff) as ''RndOff'',sum(SAmt1) as ''SAmt1'',sum(TAmt1) as ''TAmt1'',Sum(SAmt2) as ''SAmt2'',sum(TAmt2) as ''TAmt2'' ,Sum(SAmt3) as ''SAmt3'',sum(TAmt3) as ''TAmt3'',Sum(SAmt4) as ''SAmt4'',sum(TAmt4) as ''TAmt4''  ,sum(AmtTotal)as ''AmtTotal'' ,sum(TaxToal) as ''TaxToal'' from @TVal Group BY datepart (q,Date)
			if((Select Count(*) from @PerTable)=5)
			select ''Quarter-''+Cast(datepart (q,Date) as varchar) as ''Quarter'',Sum(cast (DocNo as numeric)) as ''TotalBills'', sum(FinalAmt) as ''FinalAmt'' ,sum(Disc) as ''Disc'',sum(Charges) as ''Charges'',sum(RndOff) as ''RndOff'',sum(SAmt1) as ''SAmt1'',sum(TAmt1) as ''TAmt1'',Sum(SAmt2) as ''SAmt2'',sum(TAmt2) as ''TAmt2'' ,Sum(SAmt3) as ''SAmt3'',sum(TAmt3) as ''TAmt3'',Sum(SAmt4) as ''SAmt4'',sum(TAmt4) as ''TAmt4'',Sum(SAmt5) as ''SAmt5'',sum(TAmt5) as ''TAmt5'' ,sum(AmtTotal)as ''AmtTotal'' ,sum(TaxToal) as ''TaxToal''  from @TVal  Group BY datepart (q,Date)
	End
End
---------------------------------------------------------------------------------------------------------------------------------------------------------
Else
Begin
	if(@Type=1 or @Type=2 )
	Begin
		
		if((Select Count(*) from @PerTable)=1)
		select Date,DocNo ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,AmtTotal ,TaxToal from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=2)
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2 ,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=3)
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 as AMT ,TAmt1 as SGST,TCAmt1 as CGST,TIAmt1 as IGST,TCeAmt1 as Cess,SAmt2 as AMT ,TAmt2 as SGST,TCAmt2 as CGST,TIAmt2 as IGST ,TCeAmt2 as Cess  ,SAmt3 as AMT ,TAmt3 as SGST ,TCAmt3 as CGST,TIAmt3 as IGST,TCeAmt3 as Cess,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) as AMT ,sum(TAmt1) as SGST,sum(TCAmt1) as CGST,sum(TIAmt1) as IGST,sum(TCeAmt1) as Cess,sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=4)
		--select Date,DocNo  , LedgerName,FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,SAmt4 ,TAmt4  ,AmtTotal,TaxToal from @TVal
		--union All select null as Date, null as DocNo ,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(SAmt4) ,sum(TAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2  ,SAmt3 ,TAmt3 ,TCAmt3,TIAmt3,TCeAmt3,SAmt4 ,TAmt4 ,TCAmt4,TIAmt4,TCeAmt4,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(TIAmt4),sum(TCeAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
		if((Select Count(*) from @PerTable)=5)
		select Date,DocNo  ,LedgerName, GSTNO,FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2  ,SAmt3 ,TAmt3 ,TCAmt3,TIAmt3,TCeAmt3,SAmt4 ,TAmt4 ,TCAmt4,TIAmt4,TCeAmt4,SAmt5 ,TAmt5 ,TCAmt5,TIAmt5,TCeAmt5,AmtTotal,TaxToal  from @TVal
		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(TIAmt4),sum(TCeAmt4),sum(SAmt5) ,sum(TAmt5),sum(TCAmt5),sum(TIAmt5),sum(TCeAmt5),sum(AmtTotal) ,sum(TaxToal) from @TVal
	End

--	if(@Type=2)
--	Begin
--		
--		if((Select Count(*) from @PerTable)=1)
--		select Date,DocNo ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,AmtTotal ,TaxToal from @TVal
--		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=2)
--		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2 ,AmtTotal,TaxToal  from @TVal
--		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=3)
--		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,SAmt1,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2  ,SAmt3 ,TAmt3 ,TCAmt3,TIAmt3,TCeAmt3,AmtTotal,TaxToal  from @TVal
--		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=4)
--		--select Date,DocNo  , LedgerName,FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,SAmt4 ,TAmt4  ,AmtTotal,TaxToal from @TVal
--		--union All select null as Date, null as DocNo ,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(SAmt4) ,sum(TAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		select Date,DocNo  ,LedgerName,GSTNO, FinalAmt ,Disc ,Charges ,RndOff,HSNCode,StateName,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2  ,SAmt3 ,TAmt3 ,TCAmt3,TIAmt3,TCeAmt3,SAmt4 ,TAmt4 ,TCAmt4,TIAmt4,TCeAmt4,AmtTotal,TaxToal  from @TVal
--		union All select null as Date, null as DocNo ,null,null, sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),null,null,sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(TIAmt4),sum(TCeAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=5)
--		select Date,DocNo  ,LedgerName, GSTNO,FinalAmt ,Disc ,Charges ,RndOff,HSnCode,StateName,SAmt1 ,TAmt1,TCAmt1,TIAmt1,TCeAmt1,SAmt2 ,TAmt2,TCAmt2,TIAmt2 ,TCeAmt2  ,SAmt3 ,TAmt3 ,TCAmt3,TIAmt3,TCeAmt3,SAmt4 ,TAmt4 ,TCAmt4,TIAmt4,TCeAmt4,SAmt5 ,TAmt5 ,TCAmt5,TIAmt5,TCeAmt5,AmtTotal,TaxToal  from @TVal
--		union All select null as Date, null as DocNo ,null, null,sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),null,null,sum(SAmt1) ,sum(TAmt1),sum(TCAmt1),sum(TIAmt1),sum(TCeAmt1),sum(SAmt2) ,sum(TAmt2),sum(TCAmt2),sum(TIAmt2),sum(TCeAmt2),sum(SAmt3) ,sum(TAmt3),sum(TCAmt3),sum(TIAmt3),sum(TCeAmt3),sum(SAmt4) ,sum(TAmt4),sum(TCAmt4),sum(TIAmt4),sum(TCeAmt4),sum(SAmt5) ,sum(TAmt5),sum(TCAmt5),sum(TIAmt5),sum(TCeAmt5),sum(AmtTotal) ,sum(TaxToal) from @TVal
--	End
--	else
--	Begin
--		if((Select Count(*) from @PerTable)=1)
--		select Date,DocNo , FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,AmtTotal ,TaxToal from @TVal
--		union All select null as Date, null as DocNo , sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=2)
--		select Date,DocNo  , FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,AmtTotal,TaxToal  from @TVal
--		union All select null as Date, null as DocNo , sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=3)
--		select Date,DocNo  , FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,AmtTotal ,TaxToal from @TVal
--		union All select null as Date, null as DocNo , sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=4)
--		select Date,DocNo  , FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,SAmt4 ,TAmt4  ,AmtTotal,TaxToal from @TVal
--		union All select null as Date, null as DocNo , sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(SAmt4) ,sum(TAmt4),sum(AmtTotal) ,sum(TaxToal) from @TVal
--		if((Select Count(*) from @PerTable)=5)
--		select Date,DocNo  , FinalAmt ,Disc ,Charges ,RndOff,SAmt1 ,TAmt1,SAmt2 ,TAmt2 ,SAmt3 ,TAmt3 ,SAmt4 ,TAmt4 ,SAmt5 ,TAmt5 ,AmtTotal,TaxToal  from @TVal
--		union All select null as Date, null as DocNo , sum(FinalAmt) ,sum(Disc) ,sum(Charges) ,sum(RndOff),sum(SAmt1) ,sum(TAmt1),sum(SAmt2) ,sum(TAmt2),sum(SAmt3) ,sum(TAmt3),sum(SAmt4) ,sum(TAmt4),sum(SAmt5) ,sum(TAmt5),sum(AmtTotal) ,sum(TaxToal) from @TVal
--	End


End


	
END

------------------------------------------------------------------------------------------------------------------------------------------------------------------

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLastSalePurchaseDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetLastSalePurchaseDetails]

@LedgerNo numeric(18),
@ItemNo numeric(18)

AS

SELECT TOP (5) TVoucherEntry.VoucherDate as ''Bill Date'' , TVoucherEntry.VoucherUserNo As ''Bill No'', TStock.Rate, TStock.Quantity as ''Qty'', MUOM.UOMName As ''UOM'',TStock.DiscAmount AS ''Disc.''
			FROM TVoucherEntry INNER JOIN
			TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
            TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo INNER JOIN
            MUOM ON TStock.FkUomNo = MUOM.UOMNo
			WHERE (TVoucherEntry.VoucherTypeCode = 15) AND (TVoucherDetails.LedgerNo = @LedgerNo) AND (TStock.ItemNo =@ItemNo)
			ORDER BY TVoucherEntry.VoucherDate ,TVoucherEntry.VoucherUserNo  DESC



SELECT TOP (5) TVoucherEntry.VoucherDate as ''Bill Date'', TVoucherEntry.VoucherUserNo As ''Bill No'', TStock.Rate, TStock.Quantity as ''Qty'', MUOM.UOMName As ''UOM'', MLedger.LedgerName As ''Supplier''
FROM TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                      TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo INNER JOIN
                      MUOM ON TStock.FkUomNo = MUOM.UOMNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo
WHERE (TVoucherEntry.VoucherTypeCode = 9) AND (TStock.ItemNo = @ItemNo)
ORDER BY TVoucherEntry.VoucherDate ,TVoucherEntry.VoucherUserNo  DESC


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTStockES]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[AddTStockES]
     @PkStockTrnNo                        numeric(18),
	 @FKVoucherNo						  numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @FkVoucherSrNo                       numeric(18),
     @GroupNo                             numeric(18),
     @ItemNo                              numeric(18),
     @TrnCode                             numeric(18),
     @Quantity                            numeric(18,2),
     @BilledQuantity                      numeric(18,2),
     @Rate                                numeric(18,2),
     @Amount                              numeric(18,2),
	 @NetRate							  numeric(18,2),
	 @NetAmount							  numeric(18,2),
     @SGSTPercentage                       numeric(18,2),
     @SGSTAmount                           numeric(18,2),
     @AddTaxPercentage                    numeric(18,2),
     @AddTaxAmount                        numeric(18,2),
	 @DiscPercentage					  numeric(18,2),
	 @DiscAmount						  numeric(18,2),
	 @DiscRupees						  numeric(18,2),
	 @DiscPercentage2					  numeric(18,2),
	 @DiscAmount2						  numeric(18,2),
	 @DiscRupees2						  numeric(18,2),
	 @FkUomNo							  numeric(18),
	 @FkStockBarCodeNo				      numeric(18),
	 @FkRateSettingNo					  numeric(18),
	 @FkItemTaxInfo						  numeric(18),
	 @FKAddItemTaxSettingNo				  numeric(18),
	 @FreeQty                             numeric(18,2),
	 @FreeUOMNo							  numeric(18),   
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
	 @LandedRate						  numeric(18,2),
	 @FkGRNNo						      numeric(18),
	 @BatchNo							  varchar(50),
	 @NoOfBag							  numeric(18),
	 @CessValue							  numeric(18,2),
	 @PackagingCharges					  numeric(18,2),
--	 @LBTPerce							  numeric(18,2),
--	 @LBTApplicableAmount				  numeric(18,2),
--	 @LBTAmount							  numeric(18,2),
	 @DisplayItemName					  varchar(500),
	-- @MfgCompNo							  numeric(18,0),

     @CGSTPercentage                      numeric(18, 2),
     @CGSTAmount                          numeric(18, 2),
     @IGSTPercentage                      numeric(18, 2),
     @IGSTAmount                          numeric(18, 2),
     @FkItemTaxInfo2                         numeric(18, 0),

     @CessPercentage                       numeric(18, 2),
     @CessAmount                           numeric(18, 2),
@TRWeight			numeric(18, 2),
@GRWeight			numeric(18, 2),
@Remarks		 varchar(500),
@Freight  numeric(18, 2),
     @OtherCharges   numeric(18, 2),
@SalesMan int,
@IType bit,
     @ReturnID							  int output


AS
IF EXISTS(select PkStockTrnNo from TStock
          where
          PkStockTrnNo = @PkStockTrnNo)
     BEGIN
       --Update existing row
       UPDATE TStock
       SET
		  FKVoucherNo = @FKVoucherNo,
          FkVoucherTrnNo = @FkVoucherTrnNo,
          FkVoucherSrNo = @FkVoucherSrNo,
          GroupNo = @GroupNo,
          ItemNo = @ItemNo,
          TrnCode = @TrnCode,
          Quantity = @Quantity,
          BilledQuantity = @BilledQuantity,
          Rate = @Rate,
          Amount = @Amount,
		  NetRate = @NetRate,
		  NetAmount = @NetAmount,
          SGSTPercentage = @SGSTPercentage,
          SGSTAmount = @SGSTAmount,
          AddTaxPercentage = @AddTaxPercentage,
          AddTaxAmount = @AddTaxAmount,
		  DiscPercentage = @DiscPercentage,
		  DiscAmount = @DiscAmount,
		  DiscRupees = @DiscRupees,
		  DiscPercentage2 = @DiscPercentage2,
		  DiscAmount2 = @DiscAmount2,
		  DiscRupees2 = @DiscRupees2,
	      FkUomNo = @FkUomNo,
	      FkStockBarCodeNo = @FkStockBarCodeNo,
	      FkRateSettingNo = @FkRateSettingNo,
	      FkItemTaxInfo = @FkItemTaxInfo,
		  FKAddItemTaxSettingNo = @FKAddItemTaxSettingNo,
		  FreeQty = @FreeQty,
	      FreeUOMNo = @FreeUOMNo,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo= @CompanyNo,
		  LandedRate = @LandedRate,
		  StatusNo = 2,
		  FkGRNNo = @FkGRNNo,
		  BatchNo = @BatchNo,
		  NoOfBag = @NoOfBag,
		  CessValue = @CessValue,
	      PackagingCharges = @PackagingCharges,
--		  LBTPerce = @LBTPerce,
--		  LBTApplicableAmount = @LBTApplicableAmount,
--		  LBTAmount = @LBTAmount,
	      DisplayItemName = @DisplayItemName,
--		  MfgCompNo = @MfgCompNo,
  CGSTPercentage=@CGSTPercentage,                    
     CGSTAmount=@CGSTAmount,                          
     IGSTPercentage=@IGSTPercentage,                     
     IGSTAmount=@IGSTAmount,
              FkItemTaxInfo2   = @FkItemTaxInfo2,
    CessPercentage=@CessPercentage,
    CessAmount=@CessAmount,
          --ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
     TRWeight= @TRWeight,
GRWeight=@GRWeight,
Remarks=@Remarks,
Freight =@Freight,  OtherCharges=  @OtherCharges,
SalesMan=@SalesMan,
IType=@IType
 WHERE
          PkStockTrnNo = @PkStockTrnNo
		  set @ReturnID=@PkStockTrnNo    

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkStockTrnNo),0) From TStock
       DBCC CHECKIDENT(''TStock'', RESEED, @Id)
       INSERT INTO TStock(
		  FKVoucherNo,
          FkVoucherTrnNo,
          FkVoucherSrNo,
          GroupNo,
          ItemNo,
          TrnCode,
          Quantity,
          BilledQuantity,
          Rate,
          Amount,
		  NetRate,
		  NetAmount,
          SGSTPercentage,
          SGSTAmount,
          AddTaxPercentage,
          AddTaxAmount,
		  DiscPercentage,
		  DiscAmount,
		  DiscRupees,
		  DiscPercentage2,
		  DiscAmount2,
		  DiscRupees2,
		  FkUomNo,
		  FkStockBarCodeNo,
		  FkRateSettingNo,
		  FkItemTaxInfo,
		  FKAddItemTaxSettingNo,
		  IsVoucherLock,
	      FreeQty,
		  FreeUOMNo,
          UserID,
          UserDate,
		  CompanyNo,
		  LandedRate,
		  StatusNo,
		  FkGRNNo,
		  BatchNo,
          NoOfBag,
          CessValue,
		  PackagingCharges,
--		  LBTPerce,
--		  LBTApplicableAmount,
--		  LBTAmount,
--		  MfgCompNo,
      DisplayItemName,
 CGSTPercentage,                    
          CGSTAmount,                          
          IGSTPercentage,                     
          IGSTAmount, 
       FkItemTaxInfo2,
CessPercentage,
CessAmount,
     TRWeight,
GRWeight,
Remarks,
Freight,
    OtherCharges,
SalesMan,
IType
)
       VALUES(
		  @FKVoucherNo,
          @FkVoucherTrnNo,
          @FkVoucherSrNo,
          @GroupNo,
          @ItemNo,
          @TrnCode,
          @Quantity,
          @BilledQuantity,
          @Rate,
		  @Amount,
		  @NetRate,
          @NetAmount,
          @SGSTPercentage,
          @SGSTAmount,
          @AddTaxPercentage,
          @AddTaxAmount,
	      @DiscPercentage,
		  @DiscAmount,
		  @DiscRupees,
		  @DiscPercentage2,
		  @DiscAmount2,
		  @DiscRupees2,
		  @FkUomNo,
		  @FkStockBarCodeNo,
		  @FkRateSettingNo,
		  @FkItemTaxInfo,
		  @FKAddItemTaxSettingNo,
		  ''false'',
	      @FreeQty,
		  @FreeUOMNo,
          @UserID,
          @UserDate,
		  @CompanyNo,
		  @LandedRate,
		  1,
		  @FkGRNNo,
		  @BatchNo,
		  @NoOfBag,
		  @CessValue,
		  @PackagingCharges,
--		  @LBTPerce,
--		  @LBTApplicableAmount,
--          @LBTAmount,
--		  @MfgCompNo,
		  @DisplayItemName,
@CGSTPercentage,                    
          @CGSTAmount,                          
          @IGSTPercentage,                     
          @IGSTAmount,
         @FkItemTaxInfo2,
@CessPercentage,
@CessAmount,
@TRWeight,
@GRWeight,
@Remarks,
@Freight,
@OtherCharges,
@SalesMan,@IType
)
Set @ReturnID=Scope_Identity()
END










' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTStock]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE PROCEDURE [dbo].[AddTStock]
     @PkStockTrnNo                        numeric(18),
	 @FKVoucherNo						  numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @FkVoucherSrNo                       numeric(18),
     @GroupNo                             numeric(18),
     @ItemNo                              numeric(18),
     @TrnCode                             numeric(18),
     @Quantity                            numeric(18,2),
     @BilledQuantity                      numeric(18,2),
     @Rate                                numeric(18,2),
     @Amount                              numeric(18,2),
	 @NetRate							  numeric(18,2),
	 @NetAmount							  numeric(18,2),
     @SGSTPercentage                       numeric(18,2),
     @SGSTAmount                           numeric(18,2),
     @AddTaxPercentage                    numeric(18,2),
     @AddTaxAmount                        numeric(18,2),
	 @DiscPercentage					  numeric(18,2),
	 @DiscAmount						  numeric(18,2),
	 @DiscRupees						  numeric(18,2),
	 @DiscPercentage2					  numeric(18,2),
	 @DiscAmount2						  numeric(18,2),
	 @DiscRupees2						  numeric(18,2),
	 @FkUomNo							  numeric(18),
	 @FkStockBarCodeNo				      numeric(18),
	 @FkRateSettingNo					  numeric(18),
	 @FkItemTaxInfo						  numeric(18),
	 @FKAddItemTaxSettingNo				  numeric(18),
	 @FreeQty                             numeric(18,2),
	 @FreeUOMNo							  numeric(18),   
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
	 @LandedRate						  numeric(18,2),
	 @FkGRNNo						      numeric(18),
	 @BatchNo							  varchar(50),
	 @NoOfBag							  numeric(18),
	 @CessValue							  numeric(18,2),
	 @PackagingCharges					  numeric(18,2),
--	 @LBTPerce							  numeric(18,2),
--	 @LBTApplicableAmount				  numeric(18,2),
--	 @LBTAmount							  numeric(18,2),
	 @DisplayItemName					  varchar(500),
	-- @MfgCompNo							  numeric(18,0),

     @CGSTPercentage                      numeric(18, 2),
     @CGSTAmount                          numeric(18, 2),
     @IGSTPercentage                      numeric(18, 2),
     @IGSTAmount                          numeric(18, 2),
     @FkItemTaxInfo2                         numeric(18, 0),

     @CessPercentage                       numeric(18, 2),
     @CessAmount                           numeric(18, 2),
	@TRWeight			numeric(18, 2),
	@GRWeight			numeric(18, 2),
	@Remarks		 varchar(500),
	@Freight  numeric(18, 2),
	@OtherCharges   numeric(18, 2),
	@SalesMan int,
	@IType bit,
    @ContainerCharges                     numeric(18, 2),
	@ContainerChargesAmt                     numeric(18, 2),
	@PackagingChargesAmt                     numeric(18, 2),
     @Hamali                             Numeric(18,2),
    @ReturnID							  int output

AS
IF EXISTS(select PkStockTrnNo from TStock
          where
          PkStockTrnNo = @PkStockTrnNo)
     BEGIN
       --Update existing row
       UPDATE TStock
       SET
		  FKVoucherNo = @FKVoucherNo,
          FkVoucherTrnNo = @FkVoucherTrnNo,
          FkVoucherSrNo = @FkVoucherSrNo,
          GroupNo = @GroupNo,
          ItemNo = @ItemNo,
          TrnCode = @TrnCode,
          Quantity = @Quantity,
          BilledQuantity = @BilledQuantity,
          Rate = @Rate,
          Amount = @Amount,
		  NetRate = @NetRate,
		  NetAmount = @NetAmount,
          SGSTPercentage = @SGSTPercentage,
          SGSTAmount = @SGSTAmount,
          AddTaxPercentage = @AddTaxPercentage,
          AddTaxAmount = @AddTaxAmount,
		  DiscPercentage = @DiscPercentage,
		  DiscAmount = @DiscAmount,
		  DiscRupees = @DiscRupees,
		  DiscPercentage2 = @DiscPercentage2,
		  DiscAmount2 = @DiscAmount2,
		  DiscRupees2 = @DiscRupees2,
	      FkUomNo = @FkUomNo,
	      FkStockBarCodeNo = @FkStockBarCodeNo,
	      FkRateSettingNo = @FkRateSettingNo,
	      FkItemTaxInfo = @FkItemTaxInfo,
		  FKAddItemTaxSettingNo = @FKAddItemTaxSettingNo,
		  FreeQty = @FreeQty,
	      FreeUOMNo = @FreeUOMNo,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo= @CompanyNo,
		  LandedRate = @LandedRate,
		  StatusNo = 2,
		  FkGRNNo = @FkGRNNo,
		  BatchNo = @BatchNo,
		  NoOfBag = @NoOfBag,
		  CessValue = @CessValue,
	      PackagingCharges = @PackagingCharges,
--		  LBTPerce = @LBTPerce,
--		  LBTApplicableAmount = @LBTApplicableAmount,
--		  LBTAmount = @LBTAmount,
	      DisplayItemName = @DisplayItemName,
--		  MfgCompNo = @MfgCompNo,
  CGSTPercentage=@CGSTPercentage,                    
     CGSTAmount=@CGSTAmount,                          
     IGSTPercentage=@IGSTPercentage,                     
     IGSTAmount=@IGSTAmount,
              FkItemTaxInfo2   = @FkItemTaxInfo2,
    CessPercentage=@CessPercentage,
    CessAmount=@CessAmount,
          --ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
     TRWeight= @TRWeight,
	GRWeight=@GRWeight,
	Remarks=@Remarks,
	Freight =@Freight,
    OtherCharges=  @OtherCharges,
    ContainerCharges =@ContainerCharges,
	ContainerChargesAmt =@ContainerChargesAmt,
	PackagingChargesAmt =@PackagingChargesAmt,
SalesMan=@SalesMan,
IType=@IType,
        Hamali=  @Hamali
 WHERE
          PkStockTrnNo = @PkStockTrnNo
		  set @ReturnID=@PkStockTrnNo    

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkStockTrnNo),0) From TStock
       DBCC CHECKIDENT(''TStock'', RESEED, @Id)
       INSERT INTO TStock(
		  FKVoucherNo,
          FkVoucherTrnNo,
          FkVoucherSrNo,
          GroupNo,
          ItemNo,
          TrnCode,
          Quantity,
          BilledQuantity,
          Rate,
          Amount,
		  NetRate,
		  NetAmount,
          SGSTPercentage,
          SGSTAmount,
          AddTaxPercentage,
          AddTaxAmount,
		  DiscPercentage,
		  DiscAmount,
		  DiscRupees,
		  DiscPercentage2,
		  DiscAmount2,
		  DiscRupees2,
		  FkUomNo,
		  FkStockBarCodeNo,
		  FkRateSettingNo,
		  FkItemTaxInfo,
		  FKAddItemTaxSettingNo,
		  IsVoucherLock,
	      FreeQty,
		  FreeUOMNo,
          UserID,
          UserDate,
		  CompanyNo,
		  LandedRate,
		  StatusNo,
		  FkGRNNo,
		  BatchNo,
          NoOfBag,
          CessValue,
		  PackagingCharges,
--		  LBTPerce,
--		  LBTApplicableAmount,
--		  LBTAmount,
--		  MfgCompNo,
      DisplayItemName,
 CGSTPercentage,                    
          CGSTAmount,                          
          IGSTPercentage,                     
          IGSTAmount, 
       FkItemTaxInfo2,
CessPercentage,
CessAmount,
     TRWeight,
GRWeight,
Remarks,
Freight,
    OtherCharges,
ContainerCharges,
ContainerChargesAmt,
PackagingChargesAmt,
SalesMan,
IType,
          Hamali
          
)
       VALUES(
		  @FKVoucherNo,
          @FkVoucherTrnNo,
          @FkVoucherSrNo,
          @GroupNo,
          @ItemNo,
          @TrnCode,
          @Quantity,
          @BilledQuantity,
          @Rate,
		  @Amount,
		  @NetRate,
          @NetAmount,
          @SGSTPercentage,
          @SGSTAmount,
          @AddTaxPercentage,
          @AddTaxAmount,
	      @DiscPercentage,
		  @DiscAmount,
		  @DiscRupees,
		  @DiscPercentage2,
		  @DiscAmount2,
		  @DiscRupees2,
		  @FkUomNo,
		  @FkStockBarCodeNo,
		  @FkRateSettingNo,
		  @FkItemTaxInfo,
		  @FKAddItemTaxSettingNo,
		  ''false'',
	      @FreeQty,
		  @FreeUOMNo,
          @UserID,
          @UserDate,
		  @CompanyNo,
		  @LandedRate,
		  1,
		  @FkGRNNo,
		  @BatchNo,
		  @NoOfBag,
		  @CessValue,
		  @PackagingCharges,
--		  @LBTPerce,
--		  @LBTApplicableAmount,
--          @LBTAmount,
--		  @MfgCompNo,
		  @DisplayItemName,
@CGSTPercentage,                    
          @CGSTAmount,                          
          @IGSTPercentage,                     
          @IGSTAmount,
         @FkItemTaxInfo2,
@CessPercentage,
@CessAmount,
@TRWeight,
@GRWeight,
@Remarks,
@Freight,
@OtherCharges,
@ContainerCharges,
@ContainerChargesAmt,
@PackagingChargesAmt,
@SalesMan,@IType,
          @Hamali
)
Set @ReturnID=Scope_Identity()
END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StockUpdateAll]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on umesh 30-10-2018
CREATE PROCEDURE [dbo].[StockUpdateAll]

AS---===========umesh 30-10-2018
declare @Type numeric(18)



--Select Cast(SettingValue as bit) from MSettings Where PKSettingNo=309

Select  @Type=Cast(SettingValue as bit) from MSettings Where PKSettingNo=309

--0 means post firmwise setting off
--1 means post firmwise setting on
update mratesetting set stock=0,stock2=0

--Purchase 
update m set m.stock =m.stock + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN  TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 9 and TVoucherEntry.iscancel=''false'' and TStock.itype = 0
group by itemno ) t
on m.itemno=t.itemno 
--sales return
update m set m.stock =m.stock + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN  TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 12 and TVoucherEntry.iscancel=''false'' and TStock.itype = 0
group by itemno ) t
on m.itemno=t.itemno 

--sales
update m set m.stock =m.stock - t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 15 and TVoucherEntry.iscancel=''false'' and TStock.itype = 0
group by itemno ) t
on m.itemno=t.itemno 
--Opening Stock
update m set m.stock =m.stock + t.qty from mratesetting m 
inner join (select CASE WHEN TStock.TrnCode=1 THEN sum(tstock.billedquantity )ELSE sum(tstock.billedquantity )*-1 END   as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 36 and TVoucherEntry.iscancel=''false'' and TStock.itype = 0
group by itemno,TStock.TrnCode ) t
on m.itemno=t.itemno 
--Physical Stock plus
update m set m.stock =m.stock - t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity )AS qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 8 and TVoucherEntry.iscancel=''false'' and TStock.itype = 0 and TStock.TrnCode =2
group by itemno  ) t
on m.itemno=t.itemno 
--Physical Stock minus
update m set m.stock =m.stock + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity )AS qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 8 and TVoucherEntry.iscancel=''false'' and TStock.itype = 0 and TStock.TrnCode =1
group by itemno  ) t
on m.itemno=t.itemno 
--Production sales plus
update m set m.stock =m.stock + t.qty from mratesetting m 
inner join (
select sum(MRecipeMain.ProdQty ) as qty,FinishItemID as itemno from MRecipeMain 
where  MRecipeMain.RecipeType = 2 and MRecipeMain.IsActive=''true'' and MRecipeMain.ESFlag = ''false''
group by FinishItemID 
) t on m.itemno=t.itemno 

--Production Rawsales plus
update m set m.stock =m.stock - t.qty from mratesetting m 
inner join (
select sum(MRecipeSub.FinalQty ) as qty,RawProductID as itemno from MRecipeMain 
 INNER JOIN  MRecipeSub ON MRecipeSub.FKMRecipeID = MRecipeMain.MRecipeID
where  MRecipeMain.RecipeType = 2 and MRecipeMain.IsActive=''true'' and MRecipeMain.ESFlag = ''false''
group by RawProductID 
) t on m.itemno=t.itemno 


if(@Type=1)
begin
--Estimate Purchase
update m set m.stock2 =m.stock2 + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN  TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 109 and TVoucherEntry.iscancel=''false'' and TStock.itype = 1
group by itemno ) t
on m.itemno=t.itemno 

--Estimate purchase Return 
update m set m.stock2 =m.stock2 - t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 113 and TVoucherEntry.iscancel=''false'' and TStock.itype = 1
group by itemno ) t
on m.itemno=t.itemno 

--Estimate Sales Return
update m set m.stock2 =m.stock2 + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN  TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 112 and TVoucherEntry.iscancel=''false'' and TStock.itype = 1
group by itemno ) t
on m.itemno=t.itemno 

--Estimate Sales 
update m set m.stock2 =m.stock2 - t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 115 and TVoucherEntry.iscancel=''false'' and TStock.itype = 1
group by itemno ) t
on m.itemno=t.itemno 

--Estimate Opening Stock
update m set m.stock2 =m.stock2 + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 136 and TVoucherEntry.iscancel=''false'' and TStock.itype = 1
group by itemno ) t
on m.itemno=t.itemno 
--Production estimate minus
update m set m.stock2 =m.stock2 + t.qty from mratesetting m 
inner join (
select sum(MRecipeMain.ProdQty ) as qty,FinishItemID as itemno from MRecipeMain 
where  MRecipeMain.RecipeType = 2 and MRecipeMain.IsActive=''true'' and MRecipeMain.ESFlag = ''true''
group by FinishItemID 
) t on m.itemno=t.itemno 

--Production Raw Material estimate minus
update m set m.stock2 =m.stock2 - t.qty from mratesetting m 
inner join (
select sum(MRecipeSub.FinalQty ) as qty,RawProductID as itemno from MRecipeMain 
 INNER JOIN  MRecipeSub ON MRecipeSub.FKMRecipeID = MRecipeMain.MRecipeID
where  MRecipeMain.RecipeType = 2 and MRecipeMain.IsActive=''true'' and MRecipeMain.ESFlag = ''true''
group by RawProductID 
) t on m.itemno=t.itemno 

--Estimate physical Stock minus
update m set m.stock2 =m.stock2 + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 108 and TVoucherEntry.iscancel=''false'' and TStock.itype = 1 and tstock.trncode=1
group by itemno ) t
on m.itemno=t.itemno 

--Estimate physical Stock plus
update m set m.stock2 =m.stock2 - t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 108 and TVoucherEntry.iscancel=''false'' and TStock.itype =1 and tstock.trncode=2
group by itemno ) t
on m.itemno=t.itemno 



------------------------------------------------------missing entry
update m set m.stock2 =m.stock2 - t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 15 and TVoucherEntry.iscancel=''false'' and TStock.itype = 1
group by itemno ) t
on m.itemno=t.itemno 

update m set m.stock2 =m.stock2 + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 12 and TVoucherEntry.iscancel=''false'' and TStock.itype = 1
group by itemno ) t
on m.itemno=t.itemno 

update m set m.stock =m.stock + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 9 and TVoucherEntry.iscancel=''false'' and TStock.itype = 1
group by itemno ) t
on m.itemno=t.itemno 
end

-----------------------------------auto post off---------------------------------

if(@Type=0)
begin
--Estimate Purchase
update m set m.stock2 =m.stock2 + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN  TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 109 and TVoucherEntry.iscancel=''false'' --and TStock.itype = 0
group by itemno ) t
on m.itemno=t.itemno 
--Estimate Sales Return
update m set m.stock2 =m.stock2 + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN  TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 112 and TVoucherEntry.iscancel=''false'' --and TStock.itype = 0
group by itemno ) t
on m.itemno=t.itemno 

--Estimate Sales 
update m set m.stock2 =m.stock2 - t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 115 and TVoucherEntry.iscancel=''false'' --and TStock.itype = 0
group by itemno ) t
on m.itemno=t.itemno 

--Estimate Opening Stock
update m set m.stock2 =m.stock2 + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 136 and TVoucherEntry.iscancel=''false'' --and TStock.itype = 0
group by itemno ) t
on m.itemno=t.itemno 


--Estimate physical Stock minus
update m set m.stock2 =m.stock2 + t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 108 and TVoucherEntry.iscancel=''false'' --and TStock.itype = 0
 and tstock.trncode=1
group by itemno ) t
on m.itemno=t.itemno 

--Estimate physical Stock plus
update m set m.stock2 =m.stock2 - t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 108 and TVoucherEntry.iscancel=''false'' --and TStock.itype = 0 
and tstock.trncode=2
group by itemno ) t
on m.itemno=t.itemno 

--Estimate purchase return 
update m set m.stock2 =m.stock2 - t.qty from mratesetting m 
inner join (select sum(tstock.billedquantity ) as qty,itemno from tstock 
  INNER JOIN TVoucherEntry ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
where  TVoucherEntry.vouchertypecode = 113 and TVoucherEntry.iscancel=''false'' --and TStock.itype = 0
group by itemno ) t
on m.itemno=t.itemno
end 


--Production estimate minus
update m set m.stock2 =m.stock2 + t.qty from mratesetting m 
inner join (
select sum(MRecipeMain.ProdQty ) as qty,FinishItemID as itemno from MRecipeMain 
where  MRecipeMain.RecipeType = 2 and MRecipeMain.IsActive=''true'' --and MRecipeMain.ESFlag = ''true''
group by FinishItemID 
) t on m.itemno=t.itemno 

--Production Raw Material estimate minus
update m set m.stock2 =m.stock2 - t.qty from mratesetting m 
inner join (
select sum(MRecipeSub.FinalQty ) as qty,RawProductID as itemno from MRecipeMain 
 INNER JOIN  MRecipeSub ON MRecipeSub.FKMRecipeID = MRecipeMain.MRecipeID
where  MRecipeMain.RecipeType = 2 and MRecipeMain.IsActive=''true'' --and MRecipeMain.ESFlag = ''true''
group by RawProductID 
) t on m.itemno=t.itemno 



' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTDocketPrintingDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'Create PROCEDURE  [dbo].[DeleteTDocketPrintingDetails] 
@PkSrNo                       numeric(18)


AS


DELETE FROM TDocketPrintingDetails 
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTDocketPrintingDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 19/12/2014
CREATE PROCEDURE [dbo].[AddTDocketPrintingDetails]
     @PkSrNo                              numeric(18),
     @DocketPrintingNo                    numeric(18),
     @FkVoucherNo                         numeric(18),
     @Remark                              varchar(500),
     @CompanyNo                           numeric(18)
     
AS
IF EXISTS(select PkSrNo from TDocketPrintingDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TDocketPrintingDetails
       SET
          DocketPrintingNo = @DocketPrintingNo,
          FkVoucherNo = @FkVoucherNo,
          Remark = @Remark,
          CompanyNo = @CompanyNo,
          Status = 2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TDocketPrintingDetails
       DBCC CHECKIDENT(''TDocketPrintingDetails'', RESEED, @Id)
       INSERT INTO TDocketPrintingDetails(
          DocketPrintingNo,
          FkVoucherNo,
          Remark,
          CompanyNo,
          Status
)
       VALUES(
          @DocketPrintingNo,
          @FkVoucherNo,
          @Remark,
          @CompanyNo,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTDocketPrinting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE  [dbo].[DeleteTDocketPrinting] 
@DocketPrintingNo                       numeric(18)


AS


DELETE FROM TDocketPrintingDetails 
       WHERE
          DocketPrintingNo = @DocketPrintingNo

DELETE FROM TDocketPrinting
       WHERE
          DocketPrintingNo = @DocketPrintingNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RptTDocketPrinting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE Procedure [dbo].[RptTDocketPrinting]
@DocketPrintingNo numeric(18)

As

SELECT     MLedger.LedgerName, TVoucherChqCreditDetails.ChequeNo, TVoucherChqCreditDetails.ChequeDate, MBranch.BranchName, TVoucherEntry.BilledAmount, 
                      TDocketPrintingDetails.Remark, '''' AS Status, TDocketPrinting.DocketUserNo, TDocketPrinting.FromDate, TDocketPrinting.ToDate, 
                      MLedger_1.LedgerName AS DepositeTo, MLedgerDetails.AccountNo AS PANNo,
MOtherBank.BankName
FROM         MLedger INNER JOIN
                      TVoucherDetails ON MLedger.LedgerNo = TVoucherDetails.LedgerNo INNER JOIN
                      TVoucherEntry INNER JOIN
                      TVoucherChqCreditDetails ON TVoucherEntry.PkVoucherNo = TVoucherChqCreditDetails.FKVoucherNo ON 
                      TVoucherDetails.PkVoucherTrnNo = TVoucherChqCreditDetails.FkVoucherTrnNo INNER JOIN
                      MBranch ON TVoucherChqCreditDetails.BranchNo = MBranch.BranchNo INNER JOIN
                      TDocketPrintingDetails ON TVoucherEntry.PkVoucherNo = TDocketPrintingDetails.FkVoucherNo INNER JOIN
                      TDocketPrinting ON TDocketPrintingDetails.DocketPrintingNo = TDocketPrinting.DocketPrintingNo INNER JOIN
                      MLedger AS MLedger_1 ON TDocketPrinting.LedgerNo = MLedger_1.LedgerNo LEFT OUTER JOIN
                      MLedgerDetails ON MLedger_1.LedgerNo = MLedgerDetails.LedgerNo LEFT OUTER JOIN
                       MOtherBank on MOtherBank.bankno=TVoucherChqCreditDetails.bankno

WHERE     (TVoucherEntry.CompanyNo = 1) AND (TVoucherEntry.PayTypeNo = 4) AND (TVoucherDetails.SrNo = 501) AND (TDocketPrintingDetails.DocketPrintingNo = @DocketPrintingNo)
ORDER BY MLedger.LedgerName


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMCustomerType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 03-Apr-2014
create PROCEDURE [dbo].[AddMCustomerType]
	@CustomerTypeNo			numeric(18),
	@CustomerTypeName		varchar(500),
	@CustomerTypeDesc		varchar(500),
	@CompanyNo				numeric(18),
	@IsActive				bit,
	@UserID					numeric(18),
	@UserDate				datetime
 AS 
 IF EXISTS ( Select CustomerTypeNo From MCustomerType 
	 Where 
	 CustomerTypeNo =@CustomerTypeNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE MCustomerType 
	 SET 

	CustomerTypeName=@CustomerTypeName,
	CustomerTypeDesc=@CustomerTypeDesc,
	CompanyNo=@CompanyNo,
	IsActive=@IsActive,
	StatusNo=2,
	UserID=@UserID,
	UserDate=@UserDate
	Where 
	 CustomerTypeNo=@CustomerTypeNo
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(CustomerTypeNo),0) From MCustomerType 
	  DBCC CHECKIDENT(''MCustomerType'', RESEED, @Id) 
	  INSERT INTO MCustomerType( 
	CustomerTypeName,
	CustomerTypeDesc,
	CompanyNo,
	IsActive,
	StatusNo,
	UserID,
	UserDate 
)
	  VALUES(
	@CustomerTypeName,
	@CustomerTypeDesc,
	@CompanyNo,
	@IsActive,
	1,
	@UserID,
	@UserDate
	)
	END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMCustomerType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 03-Apr-2014
 create PROCEDURE  [dbo].[DeleteMCustomerType]
@CustomerTypeNo			numeric(18)
AS
--		DELETE FROM MCustomerType
--		Where
--		CustomerTypeNo=@CustomerTypeNo

update MCustomerType set IsActive=''false'' Where	CustomerTypeNo=@CustomerTypeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMCountry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE [dbo].[AddMCountry]
     @CountryNo                           numeric(18),
     @CountryName                         varchar(50),
     @CountryShortCode                    varchar(50),
     @CountryLangName                  varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime
   --  @ModifiedBy                          text
AS
IF EXISTS(select CountryNo from MCountry
          where
          CountryNo = @CountryNo)
     BEGIN
       --Update existing row
       UPDATE MCountry
       SET
          CountryName = @CountryName,
          CountryShortCode = @CountryShortCode,
          CountryLangName=@CountryLangName,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          CountryNo = @CountryNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CountryNo),0) From MCountry
       DBCC CHECKIDENT(''MCountry'', RESEED, @Id)
       INSERT INTO MCountry(
          --CountryNo,
          CountryName,
          CountryShortCode,
		  CountryLangName,
          IsActive,
          UserID,
          UserDate, 
          StatusNo
          --ModifiedBy
)
       VALUES(
          --@CountryNo,
          @CountryName,
          @CountryShortCode,
@CountryShortCode,
          @IsActive,
          @UserID,
          @UserDate,
          1
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMCountry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE  [dbo].[DeleteMCountry] 
@CountryNo                          numeric(18)


AS
Update MCountry set IsActive=''False'',StatusNo=2 Where CountryNo = @CountryNo

--       DELETE FROM MCountry
--       WHERE
--          CountryNo = @CountryNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherRefDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddTVoucherRefDetails]
     @PkRefTrnNo                          numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @FkVoucherSrNo                       numeric(18),
     @LedgerNo                            numeric(18),
     @RefNo                               numeric(18),
     @TypeOfRef                           numeric(18),
     @DueDays                             numeric(18),
     @DueDate                             datetime,
     @Amount                              numeric(18,2),
	 @DiscAmt							  numeric(18,2),
     @SignCode                            numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select PkRefTrnNo from TVoucherRefDetails
          where
          PkRefTrnNo = @PkRefTrnNo)
     BEGIN
       --Update existing row
       UPDATE TVoucherRefDetails
       SET
          FkVoucherTrnNo = @FkVoucherTrnNo,
          FkVoucherSrNo = @FkVoucherSrNo,
          LedgerNo = @LedgerNo,
          --RefNo = @RefNo,
          TypeOfRef = @TypeOfRef,
          DueDays = @DueDays,
          DueDate = @DueDate,
          Amount = @Amount,
		  DiscAmt = @DiscAmt,
          SignCode = @SignCode,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo = @CompanyNo,
		  StatusNo = 2,
          Modifiedby = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          PkRefTrnNo = @PkRefTrnNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkRefTrnNo),0) From TVoucherRefDetails
       DBCC CHECKIDENT(''TVoucherRefDetails'', RESEED, @Id)

		if(@TypeOfRef=3 or @TypeOfRef=1)
		--set @RefNo=@Id+1
		SELECT @RefNo=isnull(MAX(RefNo),0) + 1 FROM TVoucherRefDetails --WHERE  TypeOfRef= @TypeOfRef

        INSERT INTO TVoucherRefDetails(
          FkVoucherTrnNo,
          FkVoucherSrNo,
          LedgerNo,
          RefNo,
          TypeOfRef,
          DueDays,
          DueDate,
          Amount,
		  DiscAmt,
          SignCode,
          UserID,
          UserDate,
		  CompanyNo,
		  StatusNo
        
)
       VALUES(
          @FkVoucherTrnNo,
          @FkVoucherSrNo,
          @LedgerNo,
          @RefNo,
          @TypeOfRef,
          @DueDays,
          @DueDate,
          @Amount,
		  @DiscAmt,
          @SignCode,
          @UserID,
          @UserDate,
		  @CompanyNo,
		  1
          
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherRefDetails1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddTVoucherRefDetails1]
     @PkRefTrnNo                          numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @FkVoucherSrNo                       numeric(18),
     @LedgerNo                            numeric(18),
     @RefNo                               numeric(18),
     @TypeOfRef                           numeric(18),
     @DueDays                             numeric(18),
     @DueDate                             datetime,
     @Amount                              numeric(18,2),
	 @DiscAmt                             numeric(18,2),
     @SignCode                            numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select PkRefTrnNo from TVoucherRefDetails
          where
          PkRefTrnNo = @PkRefTrnNo)
     BEGIN
       --Update existing row
       UPDATE TVoucherRefDetails
       SET
          FkVoucherTrnNo = @FkVoucherTrnNo,
          FkVoucherSrNo = @FkVoucherSrNo,
          LedgerNo = @LedgerNo,
          --RefNo = @RefNo,
          TypeOfRef = @TypeOfRef,
          DueDays = @DueDays,
          DueDate = @DueDate,
          Amount = @Amount,
		  DiscAmt = @DiscAmt,
          SignCode = @SignCode,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo = @CompanyNo,
		  StatusNo = 2,
          Modifiedby = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          PkRefTrnNo = @PkRefTrnNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkRefTrnNo),0) From TVoucherRefDetails
       DBCC CHECKIDENT(''TVoucherRefDetails'', RESEED, @Id)

		if(@TypeOfRef=3 or @TypeOfRef=1)
		--set @RefNo=@Id+1
		SELECT @RefNo=isnull(MAX(RefNo),0) + 1 FROM TVoucherRefDetails --WHERE  TypeOfRef= @TypeOfRef
       INSERT INTO TVoucherRefDetails(
          FkVoucherTrnNo,
          FkVoucherSrNo,
          LedgerNo,
          RefNo,
          TypeOfRef,
          DueDays,
          DueDate,
          Amount,
		  DiscAmt,
          SignCode,
          UserID,
          UserDate,
		  CompanyNo,
		  StatusNo
        
)
       VALUES(
          @FkVoucherTrnNo,
          @FkVoucherSrNo,
          @LedgerNo,
          @RefNo,
          @TypeOfRef,
          @DueDays,
          @DueDate,
          @Amount,
		  @DiscAmt,
          @SignCode,
          @UserID,
          @UserDate,
		  @CompanyNo,
		  1
          
)

END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPayTypeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetPayTypeDetails]
@FromDate			 datetime,
@ToDate				 datetime,
@VchType			 numeric(18),
@RType				numeric(18),
@CompanyNo			numeric(18)
AS
Declare @Details TABLE (PayTypeNo numeric(18,0),PayTypeName Varchar(500),PayTypeActName varchar(200),PayTypeShortName varchar(20),Amount numeric(18,2),NoOfBills numeric(18),typeno numeric(18))
Declare @PayTypeNo numeric(18,0),@PayTypeName Varchar(500),@Amount numeric(18,2),@NoOfBills numeric(18),
		@PayTypeActName varchar(200),@ShortName varchar(20),@MixAmt numeric(18,2),@TotAmt numeric(18,2),
		@TAmount numeric(18,2),@MAmount numeric(18,2),@VchStr numeric(18)
set @VchStr=0

if(@VchType=15)
begin
set @VchStr=12
Declare CurDtls Cursor  for SELECT PKPayTypeNo, PayTypeName +'' (''+ShortName+'')'',PayTypeName,ShortName
							FROM MPayType 
							WHERE  PKPayTypeNo<>1
							Union 
							SELECT 12000,''Mix Mode(MX)'',''Mix Mode'',''MX''

end
else if(@VchType=115)
begin
set @VchStr=112
Declare CurDtls Cursor  for SELECT PKPayTypeNo, PayTypeName +'' (''+ShortName+'')'',PayTypeName,ShortName
							FROM MPayType 
							WHERE  PKPayTypeNo<>1
							Union 
							SELECT 12000,''Mix Mode(MX)'',''Mix Mode'',''MX''

end
else if(@VchType=9)
begin
set @VchStr=13
Declare CurDtls Cursor  for SELECT PKPayTypeNo, PayTypeName +'' (''+ShortName+'')'',PayTypeName,ShortName
							FROM MPayType 
							WHERE  PKPayTypeNo<>1
end
else if(@VchType=109)
begin
set @VchStr=113
Declare CurDtls Cursor  for SELECT PKPayTypeNo, PayTypeName +'' (''+ShortName+'')'',PayTypeName,ShortName
							FROM MPayType 
							WHERE  PKPayTypeNo<>1
end
else if (@VchType=12 or @VchType=13 or @VchType=113 or @VchType=112)
Begin
set @VchStr=@VchType 
Declare CurDtls Cursor  for SELECT PKPayTypeNo, PayTypeName +'' (''+ShortName+'')'',PayTypeName,ShortName
							FROM MPayType 
							WHERE  PKPayTypeNo NOT IN (1,4,5,6,7)
end
	Open CurDtls	
	Fetch Next From CurDtls into @PayTypeNo ,@PayTypeName,@PayTypeActName,@ShortName

	while(@@Fetch_Status = 0)
	begin
	if(@RType=0)
	Begin
		if(@PayTypeNo <>12000)
		Begin
		Select @TAmount=ISNull(SUM(case when TVoucherEntry.voucherTypecode in (15,9) then isNull((Debit+Credit),0) else isNull((Debit+Credit),0)*-1 end), 0),@NoOfBills=Count(*) FROM TVoucherEntry INNER JOIN
					   TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                       MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
                       WHERE (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo = @PayTypeNo) 
					   AND TVoucherEntry.VoucherDate>=@FromDate and  TVoucherEntry.VoucherDate<=@ToDate 
					   AND TVoucherEntry.VoucherTypeCode in(@VchType,@VchStr) and TVoucherEntry.CompanyNo=@CompanyNo
					   AND TVoucherEntry.IsCancel=''false'' AND MIXMode=0
--		SELECT @MAmount= IsNull(SUM(TVoucherRefDetails.Amount),0) FROM TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
--						TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
--						WHERE  (TVoucherEntry.VoucherTypeCode = 30) AND (TVoucherEntry.CompanyNo = @CompanyNo) AND 
--						(TVoucherRefDetails.RefNo IN (SELECT RefNo FROM TVoucherRefDetails AS TVoucherRefDetails_1 WHERE (FkVoucherTrnNo IN (SELECT PkVoucherTrnNo FROM TVoucherDetails AS TVoucherDetails_1
--						WHERE (FkVoucherNo IN  (SELECT PkVoucherNo FROM TVoucherEntry AS TVoucherEntry_1 WHERE (PayTypeNo = 3) AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) 
--						AND (VoucherTypeCode = @VchType) AND  TVoucherEntry.IsCancel = ''false''  AND (CompanyNo = @CompanyNo) AND (MixMode = 1))) AND (VoucherSrNo = 1))))) and MPayType.PKPayTypeNo=@PayTypeNo

				SELECT    @MAmount=IsNull(SUM(TVoucherRefDetails.Amount),0) 
				FROM         TVoucherEntry INNER JOIN
									  TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
									  TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN
									  MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
									  TVoucherPayTypeDetails ON TVoucherEntry.PkVoucherNo = TVoucherPayTypeDetails.FKReceiptVoucherNo
				WHERE      (TVoucherEntry.VoucherTypeCode = case when @VchType=15 then 30 else 31 end) and (TVoucherEntry .CompanyNo = @CompanyNo) and MPayType.PKPayTypeNo=@PayTypeNo 
				AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) AND  TVoucherEntry.IsCancel = ''false''
						
		set @Amount=@TAmount+@MAmount
		end
		else 
		Select @Amount=ISNull(SUM(Debit+Credit), 0),@NoOfBills=Count(*) FROM TVoucherEntry INNER JOIN
					   TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                       MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
                       WHERE (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo = 3) 
					   AND TVoucherEntry.VoucherDate>=@FromDate and  TVoucherEntry.VoucherDate<=@ToDate 
					   AND TVoucherEntry.VoucherTypeCode=@VchType and TVoucherEntry.CompanyNo=@CompanyNo
					   AND TVoucherEntry.IsCancel=''false'' AND MIXMode=1
	End
	if(@RType=1)		
	BEgin
		if(@PayTypeNo <>12000)
		Begin
		Select @TAmount=ISNull(SUM(case when TVoucherEntry.voucherTypecode in (15,9) then isNull((Debit+Credit),0) else isNull((Debit+Credit),0)*-1 end), 0),@NoOfBills=Count(*) FROM TVoucherEntry INNER JOIN
                       TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                       MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
                       WHERE (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo = @PayTypeNo) 
					   AND TVoucherEntry.VoucherDate>=@FromDate and  TVoucherEntry.VoucherDate<=@ToDate 
					   AND TVoucherEntry.VoucherTypeCode in(@VchType,@VchStr) and TVoucherEntry.CompanyNo=@CompanyNo
					   AND TVoucherEntry.IsCancel=''true'' AND MIXMode=0

--		SELECT  @MAmount=IsNull(SUM(TVoucherRefDetails.Amount),0) FROM TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
--						TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
--						WHERE  (TVoucherEntry.VoucherTypeCode = 30) AND (TVoucherEntry.CompanyNo = @CompanyNo) AND 
--						(TVoucherRefDetails.RefNo IN (SELECT RefNo FROM TVoucherRefDetails AS TVoucherRefDetails_1 WHERE (FkVoucherTrnNo IN (SELECT PkVoucherTrnNo FROM TVoucherDetails AS TVoucherDetails_1
--						WHERE (FkVoucherNo IN  (SELECT PkVoucherNo FROM TVoucherEntry AS TVoucherEntry_1 WHERE (PayTypeNo = 3) AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) 
--						AND (VoucherTypeCode = @VchType) AND  TVoucherEntry.IsCancel = ''true''  AND (CompanyNo = @CompanyNo) AND (MixMode = 1))) AND (VoucherSrNo = 1))))) and MPayType.PKPayTypeNo=@PayTypeNo
SELECT    @MAmount=IsNull(SUM(TVoucherRefDetails.Amount),0) 
				FROM         TVoucherEntry INNER JOIN
									  TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
									  TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN
									  MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
									  TVoucherPayTypeDetails ON TVoucherEntry.PkVoucherNo = TVoucherPayTypeDetails.FKReceiptVoucherNo
				WHERE      (TVoucherEntry.VoucherTypeCode = 30) and (TVoucherEntry .CompanyNo = @CompanyNo) and MPayType.PKPayTypeNo=@PayTypeNo 
				AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) AND  TVoucherEntry.IsCancel = ''true''
		set @Amount=@TAmount+@MAmount
		end
		else 
		Select @Amount=ISNull(SUM(Debit+Credit), 0),@NoOfBills=Count(*) FROM TVoucherEntry INNER JOIN
                       TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                       MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
                       WHERE (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo = 3) 
					   AND TVoucherEntry.VoucherDate>=@FromDate and  TVoucherEntry.VoucherDate<=@ToDate 
					   AND TVoucherEntry.VoucherTypeCode=@VchType and TVoucherEntry.CompanyNo=@CompanyNo
					   AND TVoucherEntry.IsCancel=''true'' AND MIXMode=1
	End
	if(@RType=2)
	Begin
		if(@PayTypeNo <>12000)
		Begin
		Select @TAmount=ISNull(SUM(case when TVoucherEntry.voucherTypecode in (15,9) then isNull((Debit+Credit),0) else isNull((Debit+Credit),0)*-1 end), 0),@NoOfBills=Count(*) FROM TVoucherEntry INNER JOIN
                       TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                       MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
                       WHERE(TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo = @PayTypeNo) 
					   AND TVoucherEntry.VoucherDate>=@FromDate and  TVoucherEntry.VoucherDate<=@ToDate 
					   AND TVoucherEntry.VoucherTypeCode in(@VchType,@VchStr) and TVoucherEntry.CompanyNo=@CompanyNo  --AND MIXMode=0
		
--		SELECT  @MAmount= isNull(SUM(TVoucherRefDetails.Amount),0) FROM TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
--						TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
--						WHERE  (TVoucherEntry.VoucherTypeCode = 30) AND (TVoucherEntry.CompanyNo = @CompanyNo) AND 
--						(TVoucherRefDetails.RefNo IN (SELECT RefNo FROM TVoucherRefDetails AS TVoucherRefDetails_1 WHERE (FkVoucherTrnNo IN (SELECT PkVoucherTrnNo FROM TVoucherDetails AS TVoucherDetails_1
--						WHERE (FkVoucherNo IN  (SELECT PkVoucherNo FROM TVoucherEntry AS TVoucherEntry_1 WHERE (PayTypeNo = 3) AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) 
--						AND (VoucherTypeCode = 15)  AND (CompanyNo = @CompanyNo) AND (MixMode = 1))) AND (VoucherSrNo = 1))))) and MPayType.PKPayTypeNo=@PayTypeNo

SELECT    @MAmount=IsNull(SUM(TVoucherRefDetails.Amount),0) 
				FROM         TVoucherEntry INNER JOIN
									  TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
									  TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN
									  MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN
									  TVoucherPayTypeDetails ON TVoucherEntry.PkVoucherNo = TVoucherPayTypeDetails.FKReceiptVoucherNo
				WHERE      (TVoucherEntry.VoucherTypeCode = 30) and (TVoucherEntry .CompanyNo = @CompanyNo) and MPayType.PKPayTypeNo=@PayTypeNo 
				AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) 
		set @Amount=@TAmount+@MAmount
		end
		else
		Select @Amount=ISNull(SUM(Debit+Credit), 0),@NoOfBills=Count(*) FROM TVoucherEntry INNER JOIN
                       TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                       MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
                       WHERE(TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo = 3) 
					   AND TVoucherEntry.VoucherDate>=@FromDate and  TVoucherEntry.VoucherDate<=@ToDate 
					   AND TVoucherEntry.VoucherTypeCode=@VchType and TVoucherEntry.CompanyNo=@CompanyNo -- AND MIXMode=1
	End			  
	insert into @Details values(@PayTypeNo ,@PayTypeName,@PayTypeActName,@ShortName,@Amount,@NoOfBills,1)
	if(@PayTypeNo=12000)
	Begin
			set @MixAmt=@Amount
			set @TotAmt=0
		if(@RType=0)
--		Declare CurMix Cursor For SELECT  MPayType.PKPayTypeNo,MPayType.PayTypeName AS Name,MPayType.DisplayName,MPayType.ShortName, SUM(TVoucherRefDetails.Amount) AS Amount FROM TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
--						TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
--						WHERE  (TVoucherEntry.VoucherTypeCode = 30) AND (TVoucherEntry.CompanyNo = @CompanyNo) AND 
--						(TVoucherRefDetails.RefNo IN (SELECT RefNo FROM TVoucherRefDetails AS TVoucherRefDetails_1 WHERE (FkVoucherTrnNo IN (SELECT PkVoucherTrnNo FROM TVoucherDetails AS TVoucherDetails_1
--						WHERE (FkVoucherNo IN  (SELECT PkVoucherNo FROM TVoucherEntry AS TVoucherEntry_1 WHERE (PayTypeNo = 3) AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) 
--						AND (VoucherTypeCode = 15) AND  TVoucherEntry.IsCancel = ''false''  AND (CompanyNo = @CompanyNo) AND (MixMode = 1))) AND (VoucherSrNo = 1)))))
--						GROUP BY MPayType.PKPayTypeNo, MPayType.PayTypeName,MPayType.DisplayName,MPayType.ShortName
Declare CurMix Cursor for SELECT MPayType.PKPayTypeNo,MPayType.PayTypeName AS Name,MPayType.DisplayName,MPayType.ShortName, SUM(TVoucherRefDetails.Amount) AS Amount FROM TVoucherEntry INNER JOIN  TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN  MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN  TVoucherPayTypeDetails ON TVoucherEntry.PkVoucherNo = TVoucherPayTypeDetails.FKReceiptVoucherNo WHERE  (TVoucherEntry.VoucherTypeCode = 30) AND (TVoucherRefDetails.RefNo in (SELECT RefNo FROM TVoucherRefDetails AS TVoucherRefDetails_1 WHERE (FkVoucherTrnNo IN (SELECT PkVoucherTrnNo FROM TVoucherDetails AS TVoucherDetails_1
						WHERE (FkVoucherNo IN  (SELECT PkVoucherNo FROM TVoucherEntry AS TVoucherEntry_1 WHERE (PayTypeNo = 3) AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) 
						AND (VoucherTypeCode = @VchType) AND  TVoucherEntry.IsCancel = ''false''  AND (CompanyNo = @CompanyNo) AND (MixMode = 1))) AND (VoucherSrNo = 1))))) AND (TVoucherEntry.CompanyNo = @CompanyNo)  
GROUP BY MPayType.PKPayTypeNo, MPayType.PayTypeName,MPayType.DisplayName,MPayType.ShortName
	if(@RType=1)
--		Declare CurMix Cursor For SELECT  MPayType.PKPayTypeNo,MPayType.PayTypeName AS Name,MPayType.DisplayName,MPayType.ShortName, SUM(TVoucherRefDetails.Amount) AS Amount FROM TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
--						TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
--						WHERE  (TVoucherEntry.VoucherTypeCode = 30) AND (TVoucherEntry.CompanyNo = @CompanyNo) AND 
--						(TVoucherRefDetails.RefNo IN (SELECT RefNo FROM TVoucherRefDetails AS TVoucherRefDetails_1 WHERE (FkVoucherTrnNo IN (SELECT PkVoucherTrnNo FROM TVoucherDetails AS TVoucherDetails_1
--						WHERE (FkVoucherNo IN  (SELECT PkVoucherNo FROM TVoucherEntry AS TVoucherEntry_1 WHERE (PayTypeNo = 3) AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) 
--						AND (VoucherTypeCode = 15) AND  TVoucherEntry.IsCancel = ''true''  AND (CompanyNo = @CompanyNo) AND (MixMode = 1))) AND (VoucherSrNo = 1)))))
--						GROUP BY MPayType.PKPayTypeNo, MPayType.PayTypeName,MPayType.DisplayName,MPayType.ShortName
Declare CurMix Cursor for SELECT MPayType.PKPayTypeNo,MPayType.PayTypeName AS Name,MPayType.DisplayName,MPayType.ShortName, SUM(TVoucherRefDetails.Amount) AS Amount FROM TVoucherEntry INNER JOIN  TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN  MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN  TVoucherPayTypeDetails ON TVoucherEntry.PkVoucherNo = TVoucherPayTypeDetails.FKReceiptVoucherNo WHERE  (TVoucherEntry.VoucherTypeCode = 30) AND (TVoucherRefDetails.RefNo in (SELECT RefNo FROM TVoucherRefDetails AS TVoucherRefDetails_1 WHERE (FkVoucherTrnNo IN (SELECT PkVoucherTrnNo FROM TVoucherDetails AS TVoucherDetails_1
						WHERE (FkVoucherNo IN  (SELECT PkVoucherNo FROM TVoucherEntry AS TVoucherEntry_1 WHERE (PayTypeNo = 3) AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) 
						AND (VoucherTypeCode = @VchType) AND  TVoucherEntry.IsCancel = ''true''  AND (CompanyNo = @CompanyNo) AND (MixMode = 1))) AND (VoucherSrNo = 1))))) AND (TVoucherEntry.CompanyNo = @CompanyNo)  
GROUP BY MPayType.PKPayTypeNo, MPayType.PayTypeName,MPayType.DisplayName,MPayType.ShortName
    if(@RType=2)
--		Declare CurMix Cursor For SELECT  MPayType.PKPayTypeNo,MPayType.PayTypeName AS Name,MPayType.DisplayName,MPayType.ShortName, SUM(TVoucherRefDetails.Amount) AS Amount FROM TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
--						TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
--						WHERE  (TVoucherEntry.VoucherTypeCode = 30) AND (TVoucherEntry.CompanyNo = @CompanyNo) AND 
--						(TVoucherRefDetails.RefNo IN (SELECT RefNo FROM TVoucherRefDetails AS TVoucherRefDetails_1 WHERE (FkVoucherTrnNo IN (SELECT PkVoucherTrnNo FROM TVoucherDetails AS TVoucherDetails_1
--						WHERE (FkVoucherNo IN  (SELECT PkVoucherNo FROM TVoucherEntry AS TVoucherEntry_1 WHERE (PayTypeNo = 3) AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) 
--						AND (VoucherTypeCode = 15)  AND (CompanyNo = @CompanyNo) AND (MixMode = 1))) AND (VoucherSrNo = 1)))))
--						GROUP BY MPayType.PKPayTypeNo, MPayType.PayTypeName,MPayType.DisplayName,MPayType.ShortName
Declare CurMix Cursor for SELECT MPayType.PKPayTypeNo,MPayType.PayTypeName AS Name,MPayType.DisplayName,MPayType.ShortName, SUM(TVoucherRefDetails.Amount) AS Amount FROM TVoucherEntry INNER JOIN  TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN  MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN  TVoucherPayTypeDetails ON TVoucherEntry.PkVoucherNo = TVoucherPayTypeDetails.FKReceiptVoucherNo WHERE  (TVoucherEntry.VoucherTypeCode = 30) AND (TVoucherRefDetails.RefNo in (SELECT RefNo FROM TVoucherRefDetails AS TVoucherRefDetails_1 WHERE (FkVoucherTrnNo IN (SELECT PkVoucherTrnNo FROM TVoucherDetails AS TVoucherDetails_1
						WHERE (FkVoucherNo IN  (SELECT PkVoucherNo FROM TVoucherEntry AS TVoucherEntry_1 WHERE (PayTypeNo = 3) AND (VoucherDate >= @FromDate) AND (VoucherDate <= @ToDate) 
						AND (VoucherTypeCode = @VchType)  AND (CompanyNo = @CompanyNo) AND (MixMode = 1))) AND (VoucherSrNo = 1))))) AND (TVoucherEntry.CompanyNo = @CompanyNo)  
GROUP BY MPayType.PKPayTypeNo, MPayType.PayTypeName,MPayType.DisplayName,MPayType.ShortName


		Open CurMix
		Fetch Next From CurMix Into @PayTypeNo,@PayTypeName,@PayTypeActName,@ShortName,@Amount
		While(@@Fetch_Status = 0)
		Begin
			--insert into @Details values(0 ,@PayTypeName,@PayTypeActName,@ShortName,@Amount,0,2)
			set @TotAmt=@TotAmt+@Amount
			Fetch Next From CurMix Into @PayTypeNo,@PayTypeName,@PayTypeActName,@ShortName,@Amount
		End
		Close CurMix Deallocate CurMix
		set @TotAmt=@MixAmt-@TotAmt
--		if(@TotAmt<>0)
--			insert into @Details values(0 ,''Pending'',''Pending'',''PP'',@TotAmt,0,2)
	End
	Fetch Next From CurDtls into @PayTypeNo ,@PayTypeName,@PayTypeActName,@ShortName
	end
Close CurDtls Deallocate CurDtls
if(@TotAmt<>0)
update @Details set Amount=Amount+@TotAmt where PayTypeNo=3
delete from @Details where PayTypeNo=12000
Select PayTypeNo ,PayTypeName ,PayTypeActName ,PayTypeShortName ,abs(Amount) AS Amount ,NoOfBills ,typeno from @Details

------------------------------------------------------------------------------------------------------------------------------------------------------------------

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAdvanceCollectionDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'



CREATE PROCEDURE [dbo].[GetAdvanceCollectionDetails] 
@LedgerNo   numeric(18),
@VchType   numeric(18),
@CompanyNo  numeric(18),
@PTypeOfRef numeric(18)

AS
Declare @Summary Table(SrNo numeric(18),VoucherDate datetime,PartyName Varchar(500),AdvAmount numeric(18,2),TotRec numeric(18,2),NetBal numeric(18,2),RefNo numeric(18),PkRefNo numeric(18))
					   

Declare @SrNo numeric(18),@Amount numeric(18,2),
		@RefNo numeric(18),@SNo numeric(18),@BillNo numeric(18),
		@TotalAmount numeric(18,2),@TypeNo numeric(18),@VchDate datetime,
		@ReceivedAmt numeric(18,2),@BalanceAmt numeric(18,2),@PayAmt numeric(18,2),@PKVoucherNo numeric(18),@Disc numeric(18,2),@TotBalAmt numeric(18,2),@DiscAmt numeric(18,2),@NewBalAmt numeric(18,2),
		@CompanyName varchar(max),@VoucherNo numeric(18),@LedgNo numeric(18),@PkRefNo numeric(18),@PartyName Varchar(500),
		@PKVoucherTrnNo numeric(18),@VoucherSrNo numeric(18)

set @SrNo=0
set @TotalAmount=0
set @TotBalAmt=0
set @DiscAmt=0

if(@VchType = 12 or @VchType = 13)
		Declare CurTemp Cursor For SELECT     TVoucherEntry.VoucherDate, MLedger.LedgerName, SUM(TVoucherDetails.Credit + TVoucherDetails.Debit) AS AdvAmount 
						, TVoucherDetails.PkVoucherTrnNo, TVoucherDetails.VoucherSrNo FROM TVoucherDetails INNER JOIN
						TVoucherEntry ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo
						WHERE     (TVoucherEntry.PayTypeNo <> 2) AND (TVoucherEntry.VoucherTypeCode = @VchType) AND (TVoucherDetails.SrNo = 501) AND (MLedger.LedgerNo = @LedgerNo) AND 
						(TVoucherEntry.CompanyNo = @CompanyNo) AND (TVoucherEntry.IsCancel = ''false'')
						GROUP BY TVoucherEntry.PkVoucherNo, TVoucherEntry.VoucherDate, MLedger.LedgerName, TVoucherDetails.PkVoucherTrnNo, TVoucherDetails.VoucherSrNo 
else
		Declare CurTemp Cursor For SELECT     TVoucherEntry.VoucherDate, MLedger.LedgerName, SUM(TVoucherDetails.Credit + TVoucherDetails.Debit) AS AdvAmount 
						, TVoucherDetails.PkVoucherTrnNo, TVoucherDetails.VoucherSrNo FROM TVoucherDetails INNER JOIN
						TVoucherEntry ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo
						WHERE     (TVoucherEntry.VoucherTypeCode = @VchType) AND (TVoucherDetails.SrNo = 501) AND (MLedger.LedgerNo = @LedgerNo) AND 
						(TVoucherEntry.CompanyNo = @CompanyNo) AND (TVoucherEntry.IsCancel = ''false'')
						GROUP BY TVoucherEntry.PkVoucherNo, TVoucherEntry.VoucherDate, MLedger.LedgerName, TVoucherDetails.PkVoucherTrnNo, TVoucherDetails.VoucherSrNo 


open CurTemp
Fetch next from CurTemp into   @VchDate,@PartyName,@Amount,@PKVoucherTrnNo,@VoucherSrNo
While(@@Fetch_Status = 0)
Begin
	SELECT   @TotBalAmt= IsNull(SUM(Amount),0) FROM  TVoucherRefDetails WHERE(FkVoucherTrnNo = @PKVoucherTrnNo)
	
	set @TotalAmount=@Amount-@TotBalAmt
	if(@TotalAmount>0)
	insert into @Summary values (0,@VchDate,@PartyName,@Amount,@TotBalAmt,@TotalAmount,@PKVoucherTrnNo,@VoucherSrNo)
	
	Fetch next from CurTemp into @VchDate,@PartyName,@Amount,@PKVoucherTrnNo,@VoucherSrNo
End
Close CurTemp Deallocate CurTemp

Select *  From @Summary
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCollectionDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetCollectionDetails] 
@LedgerNo   numeric(18),
@VchType   numeric(18),
@CompanyNo  numeric(18)

AS
Declare @Summary Table(VoucherUserNo varchar(500),VoucherDate datetime,Debit numeric(18,2),TotRec numeric(18,2),NetBal numeric(18,2),Amount numeric(18,2),PayType varchar(50),LedgerNo numeric(18) ,ChqNo numeric(18),ChqDate datetime,BankNo numeric(18),BranchNo numeric(18),PayTypeNo numeric(18),RefNo numeric(18),PKVoucherNo numeric(18))
					   

Declare @SrNo numeric(18),@Amount numeric(18,2),
		@RefNo numeric(18),@SNo numeric(18),@BillNo varchar(500),
		@TotalAmount numeric(18,2),@TypeNo numeric(18),@VchDate datetime,
		@ReceivedAmt numeric(18,2),@BalanceAmt numeric(18,2),@PayAmt numeric(18,2),@PKVoucherNo numeric(18),@Disc numeric(18,2),@TotBalAmt numeric(18,2),@DiscAmt numeric(18,2),@NewBalAmt numeric(18,2),
		@CompanyName varchar(max),@VoucherNo numeric(18),@LedgNo numeric(18)

set @SrNo=0
set @TotalAmount=0
set @TotBalAmt=0
set @DiscAmt=0

	Select @LedgNo=LedgerNo FRom MPayTypeLedger Where CompanyNo=@CompanyNo AND PayTypeNo=2		
		Declare CurTemp cursor for SELECT TVoucherRefDetails.RefNo, TVoucherEntry.VoucherDate, case when @VchType=9 then TVoucherEntry.Reference else cast(TVoucherEntry.VoucherUserNo as varchar) end, TVoucherRefDetails.Amount,TVoucherEntry.PkVoucherNo
								   FROM  TVoucherEntry INNER JOIN
										  TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
										  TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo 
										  
								  WHERE   (TVoucherDetails.LedgerNo = @LedgerNo) AND (TVoucherEntry.VoucherTypeCode = @VchType) AND (TVoucherRefDetails.TypeOfRef = 3) AND 
										  (TVoucherEntry.CompanyNo = @CompanyNo) and (TVoucherEntry.IsCancel=''false'')
								  ORDER BY TVoucherEntry.VoucherDate

		open CurTemp

			Fetch next from CurTemp into  @RefNo ,@VchDate,@BillNo,@Amount,@PKVoucherNo
														

				While(@@Fetch_Status=0)
				 Begin
					
					select @TotBalAmt=IsNull(sum(TVoucherRefDetails.Amount),0) from TVoucherRefDetails where RefNo=@RefNo and TypeOfRef in (2,5)
					set @TotalAmount=@Amount-@TotBalAmt
					if(@TotalAmount>0)
					insert into @Summary values (@BillNo,@VchDate,@Amount,@TotBalAmt,@TotalAmount,0,''Cash'',@LedgNo,0,''01-01-1900'',0,0,2,@RefNo,@PKVoucherNo)
				
					Fetch next from CurTemp into  @RefNo ,@VchDate,@BillNo,@Amount,@PKVoucherNo
				 End 
		Close CurTemp Deallocate CurTemp
		
		set @TotalAmount=0
		set @TotBalAmt=0
		set @DiscAmt=0
	

Select *  From @Summary
					  
--Select SNo AS ''SNo'', VchDate AS ''Date'', ItemName AS ''Particulars'',
--					   Qty AS ''Qty'', Rate AS ''Rate'',Vatav as ''Vatav'' ,Freight AS ''Freight'',Amount AS ''Amount'',
--				   ReceivedAmt AS ''Received'',BalanceAmt AS ''Balance'' ,chkSelect AS ''Select'',PayAmt AS ''PayAmt'',Disc AS ''Disc'', NewBalAmt as ''New Bal'' ,Chk as ''Final'',PKStockTrnNo as ''PK'' From @Summary
--

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAdvanceCollectionBillDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetAdvanceCollectionBillDetails] 
@LedgerNo   numeric(18),
@VchType   numeric(18),
@CompanyNo  numeric(18)

AS
Declare @Summary Table(VoucherUserNo varchar(500),VoucherDate datetime,Debit numeric(18,2),TotRec numeric(18,2),NetBal numeric(18,2),Amount numeric(18,2),PayType varchar(50),LedgerNo numeric(18) ,ChqNo numeric(18),ChqDate datetime,BankNo numeric(18),BranchNo numeric(18),PayTypeNo numeric(18),RefNo numeric(18))
					   

Declare @SrNo numeric(18),@Amount numeric(18,2),
		@RefNo numeric(18),@SNo numeric(18),@BillNo varchar(500),
		@TotalAmount numeric(18,2),@TypeNo numeric(18),@VchDate datetime,
		@ReceivedAmt numeric(18,2),@BalanceAmt numeric(18,2),@PayAmt numeric(18,2),@PKVoucherNo numeric(18),@Disc numeric(18,2),@TotBalAmt numeric(18,2),@DiscAmt numeric(18,2),@NewBalAmt numeric(18,2),
		@CompanyName varchar(max),@VoucherNo numeric(18),@LedgNo numeric(18),@PkRefNo numeric(18)

set @SrNo=0
set @TotalAmount=0
set @TotBalAmt=0
set @DiscAmt=0

	Select @LedgNo=LedgerNo FRom MPayTypeLedger Where CompanyNo=@CompanyNo AND PayTypeNo=2		
		Declare CurTemp cursor for SELECT TVoucherRefDetails.RefNo, TVoucherEntry.VoucherDate, case when @VchType=9 then TVoucherEntry.Reference else cast(TVoucherEntry.VoucherUserNo as varchar) end, TVoucherRefDetails.Amount,TVoucherRefDetails.PkRefTrnNo
								   FROM  TVoucherEntry INNER JOIN
										  TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
										  TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo 
										  
								  WHERE   (TVoucherDetails.LedgerNo = @LedgerNo) AND (TVoucherEntry.VoucherTypeCode = @VchType) AND (TVoucherRefDetails.TypeOfRef = 3) AND 
										  (TVoucherEntry.CompanyNo = @CompanyNo) and (TVoucherEntry.IsCancel=''false'')
								  ORDER BY TVoucherEntry.VoucherDate

		open CurTemp

			Fetch next from CurTemp into  @RefNo ,@VchDate,@BillNo,@Amount,@PkRefNo
														

				While(@@Fetch_Status=0)
				 Begin
					
					select @TotBalAmt=IsNull(sum(TVoucherRefDetails.Amount),0) from TVoucherRefDetails where RefNo=@RefNo and TypeOfRef in (2, 5)
					set @TotalAmount=@Amount-@TotBalAmt
					if(@TotalAmount>0)
					insert into @Summary values (@BillNo,@VchDate,@Amount,@TotBalAmt,@TotalAmount,0,''Cash'',@LedgNo,0,''01-01-1900'',0,0,@PkRefNo,@RefNo)
				
					Fetch next from CurTemp into  @RefNo ,@VchDate,@BillNo,@Amount,@PkRefNo
				 End 
		Close CurTemp Deallocate CurTemp
		
		set @TotalAmount=0
		set @TotBalAmt=0
		set @DiscAmt=0
	

Select *  From @Summary
  
--Select SNo AS ''SNo'', VchDate AS ''Date'', ItemName AS ''Particulars'',
--					   Qty AS ''Qty'', Rate AS ''Rate'',Vatav as ''Vatav'' ,Freight AS ''Freight'',Amount AS ''Amount'',
--				   ReceivedAmt AS ''Received'',BalanceAmt AS ''Balance'' ,chkSelect AS ''Select'',PayAmt AS ''PayAmt'',Disc AS ''Disc'', NewBalAmt as ''New Bal'' ,Chk as ''Final'',PKStockTrnNo as ''PK'' From @Summary
--

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOutstandDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetOutstandDetails]
@VchType   numeric(18),
@CompanyNo  numeric(18),
@ToDate datetime,
@TempLedgNo varchar(max)

AS
Declare @Summary Table(VoucherUserNo numeric(18),VoucherDate datetime,LedgerName varchar(500),Debit numeric(18,2),TotRec numeric(18,2),NetBal numeric(18,2),TempBillNo numeric(18),RefType varchar(100))
Declare @TempTable Table(RefNo numeric(18),VchDate datetime,VoucherUserNo numeric(18),Amount numeric(18,2),LedgerName varchar(200),LedgerNo numeric(18),VType numeric(18))
Declare @LedgTable Table(LedgerNo numeric(18),LedgerName varchar(max))
					
					   

Declare @SrNo numeric(18),@Amount numeric(18,2),@LedgerName varchar(500),
		@RefNo numeric(18),@SNo numeric(18),@BillNo numeric(18),
		@TotalAmount numeric(18,2),@TypeNo numeric(18),@VchDate datetime,
		@ReceivedAmt numeric(18,2),@BalanceAmt numeric(18,2),@PayAmt numeric(18,2),@PKVoucherNo numeric(18),@Disc numeric(18,2),@TotBalAmt numeric(18,2),@DiscAmt numeric(18,2),@NewBalAmt numeric(18,2),
		@CompanyName varchar(max),@VoucherNo numeric(18),@LedgNo numeric(18),@StrQuery varchar(max),@LedgerNo numeric(18),@TempAmt numeric(18,2),@TempDate datetime,@TempBillNo numeric(18),@vch numeric(18),@vch1 numeric(18),
		@AdvAmt numeric(18,2),@AdvAdjAmt numeric(18,2),@TempLedgName varchar(500),@RefType varchar(100),@OpBal numeric(18,2),@AdjOpBal numeric(18,2),@OpAdjBal numeric(18,2),@TotOpBal numeric(18,2) , @TempLedgerName varchar(500),
		@TotRecAmt numeric(18,2),@GrTotAmt numeric(18,2),@GrTotRec numeric(18,2),@GrTotNetBal numeric(18,2) ,@TotAdv numeric(18,2),
		@TempOpBal numeric(18,2),@TempTotAdv numeric(18,2),@TLedgNo numeric(18),
		@TotAmount numeric(18,2),@TempSrt varchar(100),@VchTypeTemp varchar(max),@VType numeric(18),
		@LedgStr varchar(max),@Cnt int,@QType varchar(50),@StrClause varchar(max)

set @StrQuery='''' set @TempLedgName=''''set @TempLedgerName='''' set @TotRecAmt=0 
set @GrTotAmt=0 set @GrTotRec=0 set @GrTotNetBal=0  set @TotAdv=0 set @TempTotAdv=0 set @TempOpBal=0
set @TLedgNo=0 set @TotAmount=0 set @TempSrt=''''
set @LedgStr='''' set @Cnt=0 set @QType=''False'' set @StrClause=''''
set @SrNo=0
set @TotalAmount=0
set @TotBalAmt=0
set @DiscAmt=0

	Select @LedgNo=LedgerNo FRom MPayTypeLedger Where CompanyNo=@CompanyNo AND PayTypeNo=2	
if(@VchType=15)
  Begin
	set @vch=30 set @vch1=12 set @VchTypeTemp=''12,15''
  End
else
Begin
	set @vch=31 set @vch1=13 set @VchTypeTemp=''13,9''
End

Select @QType=SettingValue From MSettings Where PKSettingNo=329

if(@QType=''True'')
  set @StrClause=''+(SELECT ''''-'''' + ISNULL(MArea.AreaName, '''''''') + ''''-'''' + ISNULL(MCity.CityName, '''''''') AS LedgerName FROM MLedgerDetails LEFT OUTER JOIN MCity ON MLedgerDetails.CityNo = MCity.CityNo LEFT OUTER JOIN MArea ON MLedgerDetails.AreaNo = MArea.AreaNo
WHERE     (MLedgerDetails.LedgerNo = MLedger.LedgerNo)) AS LedgerName''

set @StrQuery=''SELECT TVoucherRefDetails.RefNo, TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, TVoucherRefDetails.Amount,MLedger.LedgerName ''+@StrClause+'',MLedger.LedgerNo,TVoucherEntry.VoucherTypeCode	
								   FROM  TVoucherEntry INNER JOIN
										 TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
										 TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN
										 MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo										  
								  WHERE  (TVoucherEntry.VoucherTypeCode in (''+@VchTypeTemp+'')) AND (TVoucherRefDetails.TypeOfRef = 3) AND 
										 (TVoucherEntry.CompanyNo = ''+cast(@CompanyNo as varchar)+'') and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+''''''  and TVoucherEntry.IsCancel=''''false''''
										and TVoucherDetails.LedgerNo in(''+@TempLedgNo+'')
								  ORDER BY TVoucherDetails.LedgerNo,TVoucherEntry.VoucherDate,TVoucherEntry.VoucherTypeCode	''	


insert into @TempTable exec(@StrQuery)

Declare CurTemp Cursor for Select RefNo ,VchDate ,VoucherUserNo ,Amount ,LedgerName,LedgerNo,VType  from @TempTable

		open CurTemp

			Fetch next from CurTemp into  @RefNo ,@VchDate,@BillNo,@Amount,@LedgerName,@LedgerNo,@VType
														
			--set @TempLedgName=@LedgerName
				While(@@Fetch_Status=0)
				 Begin

					--for Advance
					Select @AdvAmt=isNull(Sum(Amount),0) from TVoucherRefDetails where TypeOfRef=1 and LedgerNo=@LedgerNo
					select @AdvAdjAmt=isNull(Sum(Amount),0) from TVoucherRefDetails where TypeOfRef=6   and LedgerNo=@LedgerNo
					select @TotBalAmt=IsNull(sum(TVoucherRefDetails.Amount),0) from TVoucherRefDetails where RefNo=@RefNo and 
					TypeOfRef in(2,5) AND RefNo<>0 and LedgerNo=@LedgerNo
					if(@AdvAdjAmt<>0 and @AdvAmt<>@AdvAdjAmt)
					set @TotAdv=@AdvAmt-@AdvAdjAmt
					else 
					set @TotAdv=@AdvAmt									
					set @TotalAmount=@Amount-@TotBalAmt	
							
					if(@TotalAmount>0)
					Begin
						if(@TempLedgerName<>@LedgerName)
						Begin						
							if(@TempLedgerName<>'''')
							begin
								if(@TotAmount-@GrTotRec<>0)
								Begin									
									if(@VchType=15)
									Begin									
										if(@TotAmount-@GrTotRec>0)
											set @TempSrt=''To Receive''
										else if(@TotAmount-@GrTotRec<0)
											set @TempSrt=''To Pay''
										else set @TempSrt=''''
											insert into @Summary values (0,''01-01-1900'',''GrandTotal'',@TotAmount,@GrTotRec,@TotAmount-@GrTotRec,0,'''')
										set @TotAmount=0									
									end									
									else if(@VchType=9)									
										insert into @Summary values (0,''01-01-1900'',''GrandTotal'',@TotAmount,@GrTotRec,@TotAmount-@GrTotRec,0,'''')
								End	
								set @TotAmount=0
								set @GrTotAmt=0	
								set @GrTotRec=0
							end
							--for OpeningBalance
							    Select @OpBal=OpAmt*-1 from GetOpeningLedgerBalanceOnly(@LedgerNo, @CompanyNo)   
								Select @AdjOpBal=isNull(Sum(case when (signcode=1) then isNull(Amount,0) else isNull(Amount,0)*-1 end),0) from TVoucherRefDetails where LedgerNo=@LedgerNo and TypeOfRef=5 AND REFNO <> 0
								Select @OpAdjBal=isNull(Sum(case when (signcode=2) then isNull(Amount,0) else isNull(Amount,0)*-1 end),0) from TVoucherRefDetails where LedgerNo=@LedgerNo and TypeOfRef=5 AND REFNO = 0
								set @TotOpBal=@OpBal+@AdjOpBal+@OpAdjBal
								
								if(@OpBal<>@TotOpBal)
									set @TempOpBal=	@OpBal-(@TotOpBal)
								else 
									set @TempOpBal=@OpBal
							insert into @Summary values (0,''01-01-1900'',@LedgerName,0,0,0,0,'''')										
						end
						
							set @GrTotAmt=@GrTotAmt+@Amount
						
						
						set @TotRecAmt=0
					
						if(@TempLedgerName<>@LedgerName)
						begin
							--if(@AdvAmt-@AdvAdjAmt>0)
							if(@AdvAmt<>0)
							insert into @Summary values (0,''01-01-1900'',''Advance'',0,@AdvAmt,0,1,''Advance'')
							set @GrTotRec=@GrTotRec+@AdvAmt
							if(@AdvAdjAmt<>0)
							begin
							insert into @Summary values (0,''01-01-1900'',''AdjAdv'',@AdvAdjAmt,0,0,1,''Advance'')
							set @TotAmount=@TotAmount+@AdvAdjAmt
							end
							 if(@VchType=15)
						     Begin
								if(@OpBal>0)
									Begin 
									insert into @Summary values (0,''01-01-1900'',''OpBal'',0,@OpBal,0,-2,''OpBal'')
									set @GrTotRec=@GrTotRec+abs(@OpBal)
									End
								else if(@OpBal<0)
									Begin
									insert into @Summary values (0,''01-01-1900'',''OpBal'',@OpBal,0,0,-2,''OpBal'')
									set @TotAmount=@TotAmount+abs(@OpBal)
									end
								if(@OpBal-@TotOpBal>0)
									begin
									insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',@OpBal-@TotOpBal,0,0,-2,''OpBal'')
									set @TotAmount=@TotAmount+abs(@OpBal-@TotOpBal)
									end
								else if(@OpBal-@TotOpBal<0)
									begin
									insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',0,@OpBal-@TotOpBal,0,-2,''OpBal'')
									set @GrTotRec=@GrTotRec+abs(@OpBal-@TotOpBal)
									end
								end
								else
								Begin
									if(@OpBal<0)
									Begin 
									insert into @Summary values (0,''01-01-1900'',''OpBal'',0,@OpBal,0,-2,''OpBal'')
									set @GrTotRec=@GrTotRec+abs(@OpBal)
									End
								else if(@OpBal>0)
									Begin
									insert into @Summary values (0,''01-01-1900'',''OpBal'',@OpBal,0,0,-2,''OpBal'')
									set @TotAmount=@TotAmount+abs(@OpBal)
									end
								if(@OpBal-@TotOpBal<0)
									begin
									insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',@OpBal-@TotOpBal,0,0,-2,''OpBal'')
									set @TotAmount=@TotAmount+abs(@OpBal-@TotOpBal)
									end
								else if(@OpBal-@TotOpBal>0)
									begin
									insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',0,@OpBal-@TotOpBal,0,-2,''OpBal'')
									set @GrTotRec=@GrTotRec+abs(@OpBal-@TotOpBal)
									end
								end
								
--								if(@OpBal-(@OpBal-@TotOpBal)>0)
--									set @GrTotRec=@GrTotRec+abs(@OpBal-(@OpBal-@TotOpBal))
--								else if(@OpBal-(@OpBal-@TotOpBal)<0)
--									set @TotAmount=@TotAmount+abs(@OpBal-(@OpBal-@TotOpBal))
								--select @TotOpBal,@TotOpBal
--								if(@TotOpBal<0 and @TotOpBal<>0)
--								Begin
--									insert into @Summary values (0,''01-01-1900'',''OpBal'',abs(@OpBal),0,0,-2,''OpBal'')
--									if(@OpBal<>@TotOpBal and @OpBal-@TotOpBal<>0)
--									insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',@OpBal-@TotOpBal,0,0,-2,''OpBal'')
--									--else									
--									set @TotAmount=@TotAmount+abs(@OpBal-@TotOpBal)--abs(@OpBal)
--									
--								end								
--								else if(@TotOpBal<>0)
--								Begin
--									insert into @Summary values (0,''01-01-1900'',''OpBal'',0,abs(@OpBal),0,-2,''OpBal'')
--									if(@OpBal<>@TotOpBal and @OpBal-@TotOpBal<>0)
--									insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',0,@OpBal-@TotOpBal,0,-2,''OpBal'')
--									else											
--										set @GrTotRec=@GrTotRec+@OpBal
--								end
					end
					if(@VType<>@vch1)
					insert into @Summary values (@BillNo,@VchDate,'''',@Amount,@Amount-@TotalAmount,@TotalAmount,0,'''')
					else
					insert into @Summary values (@BillNo,@VchDate,''  *'',@Amount,@Amount-@TotalAmount,@TotalAmount,0,'''')
					if(@VType<>@vch1)
					set @GrTotRec=@GrTotRec+(@Amount-@TotalAmount)
					else
					set @GrTotRec=@GrTotRec+(@TotalAmount)
					set @TempLedgerName=@LedgerName
					set @TLedgNo=@LedgerNo
					set @TotRecAmt=0
					Declare CurDetails Cursor For SELECT TVoucherEntry.VoucherDate, TVoucherRefDetails.Amount, TVoucherEntry.VoucherUserNo, MTypeOfRef.TypeOfRef
												  FROM TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
												  TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo LEFT OUTER JOIN
												  TVoucherChqCreditDetails ON TVoucherEntry.PkVoucherNo = TVoucherChqCreditDetails.FKVoucherNo INNER JOIN
												  MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN MTypeOfRef ON TVoucherRefDetails.TypeOfRef = MTypeOfRef.RefTypeCode
												  WHERE     (TVoucherDetails.LedgerNo = @LedgerNo) AND (TVoucherEntry.VoucherTypeCode in(@vch,@vch1)) AND (TVoucherRefDetails.RefNo = @RefNo) AND (TVoucherEntry.CompanyNo = @CompanyNo)
											      ORDER BY TVoucherEntry.VoucherDate
					
					open CurDetails
				
						fetch next from CurDetails into @TempDate,@TempAmt,@TempBillNo,@RefType
						While(@@Fetch_Status=0)
						Begin
							if(@VType<>@vch1)
							insert into @Summary values (@TempBillNo,@TempDate,'''',0,@TempAmt,0,@TempBillNo,@RefType)
							set @TotRecAmt=@TotRecAmt+@TempAmt
							
						fetch next from CurDetails into @TempDate,@TempAmt,@TempBillNo,@RefType
						End
					Close CurDetails Deallocate CurDetails
					End
					if(@LedgerName<>'''')
					begin
					if(@TotalAmount<>0)
					Begin
					if(@VType<>@vch1)
					insert into @Summary values (0,''01-01-1900'',''Total'',@Amount,@TotRecAmt,@TotalAmount,-3,'''')
					if(@VType<>@vch1)
					set @TotAmount=@TotAmount+@Amount
					--set @GrTotRec=@GrTotRec+@TotRecAmt
					End 
					
					
					set @TempTotAdv=@TotAdv
--					set @TempOpBal=@OpBal
--					set @TempTotOpBal=@TotOpBal
					end
					Fetch next from CurTemp into  @RefNo ,@VchDate,@BillNo,@Amount,@LedgerName,@LedgerNo,@VType
				 End 
		Close CurTemp Deallocate CurTemp
								if(@TotAmount-@GrTotRec<>0)
								Begin
								if(@VchType=9)
									insert into @Summary values (0,''01-01-1900'',''GrandTotal'',@TotAmount,@GrTotRec,@TotAmount-@GrTotRec,0,'''')
								else if(@VchType=15)
								begin
								insert into @Summary values (0,''01-01-1900'',''GrandTotal'',@TotAmount,@GrTotRec,@TotAmount-@GrTotRec,0,'''')
									set @TotAmount=0
									if(@TotAmount-@GrTotRec>0)
									set @TempSrt=''To Receive''
									else if(@TotAmount-@GrTotRec<0)
									set @TempSrt=''To Pay''
									else
									set @TempSrt=''''
									--insert into @Summary values (0,''01-01-1900'',@TempSrt,0,0,0,0,'''')
								end
								end
--
--insert into @Summary values (0,''01-01-1900'',''GrandTotal'',@GrTotAmt+@TempOpBal,@GrTotRec+@TempOpBal+@TotAdv,(@GrTotAmt+@OpBal)-(@GrTotRec+@TempOpBal+@TotAdv),0,'''')
--								set @GrTotAmt=0	
								set @GrTotRec=0
								set @TotAmount=0
		set @TotalAmount=0
		set @TotBalAmt=0
		set @DiscAmt=0
set @LedgStr=''Select LedgerNo , LedgerName from MLedger where LedgerNo in (''+@TempLedgNo+'')''
	insert into @LedgTable exec(@LedgStr)
		Declare CurLedg Cursor For SELECT LedgerNo , LedgerName from @LedgTable
			open CurLedg				
						fetch next from CurLedg into @LedgerNo,@LedgerName
						While(@@Fetch_Status=0)
						Begin
							Select @Cnt=Count(*) from @Summary where LedgerName=@LedgerName
							if(@Cnt=0)
							Begin
								--for Advance
								Select @AdvAmt=isNull(Sum(Amount),0) from TVoucherRefDetails where TypeOfRef=1 and LedgerNo=@LedgerNo
								select @AdvAdjAmt=isNull(Sum(Amount),0) from TVoucherRefDetails where TypeOfRef=6   and LedgerNo=@LedgerNo
								
								if(@AdvAdjAmt<>0 and @AdvAmt<>@AdvAdjAmt)
								set @TotAdv=@AdvAmt-@AdvAdjAmt
								else 
								set @TotAdv=@AdvAmt
							if(@AdvAmt-@AdvAdjAmt<>0)
							Begin
							if(@AdvAmt<>0 or @AdvAdjAmt<>0)
							insert into @Summary values (0,''01-01-1900'',@LedgerName,0,0,0,0,'''')	
							if(@AdvAmt<>0)
							Begin
							insert into @Summary values (0,''01-01-1900'',''Advance'',0,@AdvAmt,0,1,''Advance'')
							set @GrTotRec=@GrTotRec+@AdvAmt
							end
							if(@AdvAdjAmt<>0)
							begin
							insert into @Summary values (0,''01-01-1900'',''AdjAdv'',@AdvAdjAmt,0,0,1,''Advance'')
							set @TotAmount=@TotAmount+@AdvAdjAmt							
							end
							end

								--for OpeningBalance
							    Select @OpBal=OpAmt*-1 from GetOpeningLedgerBalanceOnly(@LedgerNo, @CompanyNo)
								Select @AdjOpBal=isNull(Sum(case when (signcode=1) then isNull(Amount,0) else isNull(Amount,0)*-1 end),0) from TVoucherRefDetails where LedgerNo=@LedgerNo and TypeOfRef=5 AND REFNO <> 0
								Select @OpAdjBal=isNull(Sum(case when (signcode=2) then isNull(Amount,0) else isNull(Amount,0)*-1 end),0) from TVoucherRefDetails where LedgerNo=@LedgerNo and TypeOfRef=5 AND REFNO = 0
								set @TotOpBal=@OpBal+@AdjOpBal+@OpAdjBal
							
								if(@OpBal<>@TotOpBal)
									set @TempOpBal=	@OpBal-(@TotOpBal)
								else if(@OpBal=@TotOpBal)
									set @TempOpBal=0
								else 
									set @TempOpBal=@OpBal

								if(@OpBal<>@TempOpBal)--@OpBal-@TotOpBal)	
								Begin
								insert into @Summary values (0,''01-01-1900'',@LedgerName,0,0,0,0,'''')	
								if(@VchType=15 )
								 Begin									 
									   if(@OpBal>0 )
											Begin 
											insert into @Summary values (0,''01-01-1900'',''OpBal'',0,@OpBal,0,-2,''OpBal'')
											set @GrTotRec=@GrTotRec+abs(@OpBal)
											End
										else if(@OpBal<0)
											Begin
											insert into @Summary values (0,''01-01-1900'',''OpBal'',@OpBal,0,0,-2,''OpBal'')
											set @TotAmount=@TotAmount+abs(@OpBal)
											end
										if(@OpBal-@TotOpBal>0)
											begin
											insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',@OpBal-@TotOpBal,0,0,-2,''OpBal'')
											set @TotAmount=@TotAmount+abs(@OpBal-@TotOpBal)
											end
										else if(@OpBal-@TotOpBal<0)
											begin
											insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',0,@OpBal-@TotOpBal,0,-2,''OpBal'')
											set @GrTotRec=@GrTotRec+abs(@OpBal-@TotOpBal)
											end
									 
									end
									else
										Begin
										
											if(@OpBal<0  and @OpBal<>@OpBal-@TotOpBal)
											Begin 
											insert into @Summary values (0,''01-01-1900'',''OpBal'',0,@OpBal,0,-2,''OpBal'')
											set @GrTotRec=@GrTotRec+abs(@OpBal)
											End
										else if(@OpBal>0)
											Begin
											insert into @Summary values (0,''01-01-1900'',''OpBal'',@OpBal,0,0,-2,''OpBal'')
											set @TotAmount=@TotAmount+abs(@OpBal)
											end
										if(@OpBal-@TotOpBal<0)
											begin
											insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',@OpBal-@TotOpBal,0,0,-2,''OpBal'')
											set @TotAmount=@TotAmount+abs(@OpBal-@TotOpBal)
											end
										else if(@OpBal-@TotOpBal>0)
											begin
											insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',0,@OpBal-@TotOpBal,0,-2,''OpBal'')
											set @GrTotRec=@GrTotRec+abs(@OpBal-@TotOpBal)
											end
										end	
									
									
								end
									if(@TotAmount-@GrTotRec<>0)
									begin
									insert into @Summary values (0,''01-01-1900'',''Total'',@TotAmount,@GrTotRec,@TotAmount-@GrTotRec,-3,'''')
									if(@VchType=9)								
										insert into @Summary values (0,''01-01-1900'',''GrandTotal'',@TotAmount,@GrTotRec,@TotAmount-@GrTotRec,0,'''')
									else if(@VchType=15)								
										insert into @Summary values (0,''01-01-1900'',''GrandTotal'',@TotAmount,@GrTotRec,@TotAmount-@GrTotRec,0,'''')
									set @TotAmount=0 set @GrTotRec=0
									end
									end
							fetch next from CurLedg into @LedgerNo,@LedgerName						
						End
			Close CurLedg deallocate CurLedg
----Select *  From @Summary


Select VoucherUserNo ,VoucherDate,LedgerName ,Debit ,TotRec ,NetBal ,TempBillNo	from @Summary order by LedgerName
--Select SNo AS ''SNo'', VchDate AS ''Date'', ItemName AS ''Particulars'',
--					   Qty AS ''Qty'', Rate AS ''Rate'',Vatav as ''Vatav'' ,Freight AS ''Freight'',Amount AS ''Amount'',
--				   ReceivedAmt AS ''Received'',BalanceAmt AS ''Balance'' ,chkSelect AS ''Select'',PayAmt AS ''PayAmt'',Disc AS ''Disc'', NewBalAmt as ''New Bal'' ,Chk as ''Final'',PKStockTrnNo as ''PK'' From @Summary
--

--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTVoucherRefDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE  [dbo].[DeleteTVoucherRefDetails] 
@PkRefTrnNo                         numeric(18)


AS

       DELETE FROM TVoucherRefDetails
       WHERE
          PkRefTrnNo = @PkRefTrnNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetCollectionDetailsPrint]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetCollectionDetailsPrint] 
@LedgerNo   numeric(18),
@VchType   numeric(18),
@CompanyNo  numeric(18),
@StrBillNo varchar(Max)

AS
Declare @Summary Table(VoucherUserNo varchar(500),VoucherDate datetime,Debit numeric(18,2),TotRec numeric(18,2),NetBal numeric(18,2),Amount numeric(18,2),PayType varchar(50),LedgerNo numeric(18) ,ChqNo numeric(18),ChqDate datetime,BankNo numeric(18),BranchNo numeric(18),PayTypeNo numeric(18),RefNo numeric(18),PkVoucherNo numeric(18))
					   

Declare @SrNo numeric(18),@Amount numeric(18,2),
		@RefNo numeric(18),@SNo numeric(18),@BillNo varchar(500),
		@TotalAmount numeric(18,2),@TypeNo numeric(18),@VchDate datetime,
		@ReceivedAmt numeric(18,2),@BalanceAmt numeric(18,2),@PayAmt numeric(18,2),@PKVoucherNo numeric(18),@Disc numeric(18,2),@TotBalAmt numeric(18,2),@DiscAmt numeric(18,2),@NewBalAmt numeric(18,2),
		@CompanyName varchar(max),@VoucherNo numeric(18),@LedgNo numeric(18)

set @SrNo=0
set @TotalAmount=0
set @TotBalAmt=0
set @DiscAmt=0

	Select @LedgNo=LedgerNo FRom MPayTypeLedger Where CompanyNo=@CompanyNo AND PayTypeNo=2	

Declare @TempTbl table(RefNo numeric(18),VchDate datetime,BillNo varchar(500),Amount  numeric(18,2),PkVoucherNo numeric(18))

Declare @TempStr varchar(max)

Set @TempStr=''SELECT TVoucherRefDetails.RefNo, TVoucherEntry.VoucherDate, case when ''+Cast(@VchType As Varchar)+''=9 then TVoucherEntry.Reference else cast(TVoucherEntry.VoucherUserNo as varchar) end, TVoucherRefDetails.Amount,TVoucherEntry.PkVoucherNo
								   FROM  TVoucherEntry INNER JOIN
										  TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
										  TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo 
										  
								  WHERE   (TVoucherDetails.LedgerNo =''+Cast(@LedgerNo As Varchar)+'') AND (TVoucherEntry.VoucherTypeCode =''+Cast(@VchType as Varchar)+'') AND (TVoucherRefDetails.TypeOfRef = 3) AND 
										  (TVoucherEntry.CompanyNo =''+Cast(@CompanyNo as Varchar)+'') and (TVoucherEntry.IsCancel=''''false'''')
										   And (case when ''+cast(@VchType as varchar)+''=9 then TVoucherEntry.Reference else TVoucherEntry.VoucherUserNo end) in (''+@StrBillNo+'')
								  ORDER BY TVoucherEntry.VoucherDate''


insert into @TempTbl Exec(@TempStr)


	
		Declare CurTemp cursor for  Select * from @TempTbl
		open CurTemp

			Fetch next from CurTemp into  @RefNo ,@VchDate,@BillNo,@Amount,@PkVoucherNo
														

				While(@@Fetch_Status=0)
				 Begin
					
					select @TotBalAmt=IsNull(sum(TVoucherRefDetails.Amount),0) from TVoucherRefDetails where RefNo=@RefNo and TypeOfRef in (2,5)
					set @TotalAmount=@Amount-@TotBalAmt
					if(@TotalAmount>0)
					insert into @Summary values (@BillNo,@VchDate,@Amount,@TotBalAmt,@TotalAmount,0,''Cash'',@LedgNo,0,''01-01-1900'',0,0,2,@RefNo,@PkVoucherNo)
				
					Fetch next from CurTemp into  @RefNo ,@VchDate,@BillNo,@Amount,@PkVoucherNo
				 End 
		Close CurTemp Deallocate CurTemp
		
		set @TotalAmount=0
		set @TotBalAmt=0
		set @DiscAmt=0
	

Select *  From @Summary

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherRefDetails2]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
create PROCEDURE [dbo].[AddTVoucherRefDetails2]
     @PkRefTrnNo                          numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @FkVoucherSrNo                       numeric(18),
     @LedgerNo                            numeric(18),
     @RefNo                               numeric(18),
     @TypeOfRef                           numeric(18),
     @DueDays                             numeric(18),
     @DueDate                             datetime,
     @Amount                              numeric(18,2),
	 @DiscAmt                             numeric(18,2),
     @SignCode                            numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
      @StatusNo                           int  
AS

   SET IDENTITY_INSERT TVoucherRefDetails ON 
Begin 
       INSERT INTO TVoucherRefDetails(
          PkRefTrnNo,   
          FkVoucherTrnNo,
          FkVoucherSrNo,
          LedgerNo,
          RefNo,
          TypeOfRef,
          DueDays,
          DueDate,
          Amount,
		  DiscAmt,
          SignCode,
          UserID,
          UserDate,
		  CompanyNo,
		  StatusNo
        
)
       VALUES(
          @PkRefTrnNo,  
          @FkVoucherTrnNo,
          @FkVoucherSrNo,
          @LedgerNo,
          @RefNo,
          @TypeOfRef,
          @DueDays,
          @DueDate,
          @Amount,
		  @DiscAmt,
          @SignCode,
          @UserID,
          @UserDate,
		  @CompanyNo,
		  @StatusNo
          
)

END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTCashSlip]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 19/12/2014
CREATE PROCEDURE [dbo].[AddTCashSlip]
     @CashSlipNo                            numeric(18),
     @DocketUserNo                          numeric(18),
     @ToDate                                datetime,
     @LedgerNo                              numeric(18),
     @UserID                                numeric(18),
     @UserDate                              datetime,
     @CompanyNo                             numeric(18),
     @ReturnID                              int output
AS
IF EXISTS(select CashSlipNo from TCashSlip
          where
          CashSlipNo = @CashSlipNo)
     BEGIN
       --Update existing row
       UPDATE TCashSlip
       SET
          DocketUserNo = @DocketUserNo,
          ToDate = @ToDate,
          LedgerNo = @LedgerNo,
          UserID = @UserID,
          UserDate = @UserDate,
          CompanyNo = @CompanyNo

       WHERE
          CashSlipNo = @CashSlipNo
		  set @ReturnID = @CashSlipNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CashSlipNo),0) From TCashSlip
       DBCC CHECKIDENT(''TCashSlip'', RESEED, @Id)
       INSERT INTO TCashSlip(
          DocketUserNo,
          ToDate,
          LedgerNo,
          UserID,
          UserDate,
          CompanyNo
)
       VALUES(
          @DocketUserNo,
          @ToDate,
          @LedgerNo,
          @UserID,
          @UserDate,
          @CompanyNo
)
set @ReturnID = Scope_Identity()
END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTCashSlip]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE  [dbo].[DeleteTCashSlip] 
@CashSlipNo                       numeric(18)


AS


DELETE FROM TCashSlipDetails 
       WHERE
          CashSlipNo = @CashSlipNo

DELETE FROM TCashSlip
       WHERE
          CashSlipNo = @CashSlipNo

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMSchemeToDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 20-Sep-2013
CREATE PROCEDURE [dbo].[AddMSchemeToDetails]
	@PkSrNo				numeric(18),
	@SchemeDetailsNo	numeric(18),
	@SchemeNo			numeric(18),
	@BillAmount			numeric(18,2),
	@ItemNo				numeric(18),
	@Quantity			numeric(18,2),
	@Rate				numeric(18,2),
	@MRP				numeric(18,2),
	@Amount				numeric(18,2),
	@UomNo				numeric(18),
	@FkRateSettingNo    numeric(18),
	@DiscPercentage		numeric(18,2),
	@CompanyNo			numeric(18),
	@UserID				numeric(18),
	@UserDate			datetime
 AS 
 IF EXISTS ( Select PkSrNo From MSchemeToDetails 
	 Where 
	 PkSrNo =@PkSrNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE MSchemeToDetails 
	 SET 

	SchemeDetailsNo=@SchemeDetailsNo,
	SchemeNo=@SchemeNo,
	BillAmount=@BillAmount,
	ItemNo=@ItemNo,
	Quantity=@Quantity,
	Rate=@Rate,
	MRP=@MRP,
	Amount=@Amount,
	UomNo=@UomNo,
	FkRateSettingNo=@FkRateSettingNo,
	DiscPercentage=@DiscPercentage,
	CompanyNo=@CompanyNo,
	StatusNo=2,
	UserID=@UserID,
	UserDate=@UserDate
	Where 
	 PkSrNo=@PkSrNo
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(PkSrNo),0) From MSchemeToDetails 
	  DBCC CHECKIDENT(''MSchemeToDetails'', RESEED, @Id) 
	  INSERT INTO MSchemeToDetails( 
	SchemeDetailsNo,
	SchemeNo,
	BillAmount,
	ItemNo,
	Quantity,
	Rate,
	MRP,
	Amount,
	UomNo,
	FkRateSettingNo,
	DiscPercentage,
	CompanyNo,
	StatusNo,
	UserID,
	UserDate 
)
	  VALUES(
	@SchemeDetailsNo,
	@SchemeNo,
	@BillAmount,
	@ItemNo,
	@Quantity,
	@Rate,
	@MRP,
	@Amount,
	@UomNo,
	@FkRateSettingNo,
	@DiscPercentage,
	@CompanyNo,
	1,
	@UserID,
	@UserDate
	)
	END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMSchemeToDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 20-Sep-2013
 CREATE PROCEDURE  [dbo].[DeleteMSchemeToDetails]
@PkSrNo		numeric(18)
AS
		DELETE FROM MSchemeToDetails
		Where
		PkSrNo=@PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMCustomerSize]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/04/2014
CREATE PROCEDURE [dbo].[AddMCustomerSize]
     @CustSizeNo                          numeric(18),
     @CustSizeName                        varchar(50),
     @CustSizeDesc                        text,
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @IsActive                            bit
AS
IF EXISTS(select CustSizeNo from MCustomerSize
          where
          CustSizeNo = @CustSizeNo)
     BEGIN
       --Update existing row
       UPDATE MCustomerSize
       SET
          CustSizeName = @CustSizeName,
          CustSizeDesc = @CustSizeDesc,
          StatusNo = 2,
          CompanyNo = @CompanyNo,
          UserID = @UserID,
          UserDate = @UserDate,
          IsActive = @IsActive
       WHERE
          CustSizeNo = @CustSizeNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CustSizeNo),0) From MCustomerSize
       DBCC CHECKIDENT(''MCustomerSize'', RESEED, @Id)
       INSERT INTO MCustomerSize(
          CustSizeName,
          CustSizeDesc,
          StatusNo,
          CompanyNo,
          UserID,
          UserDate,
          IsActive
)
       VALUES(
          @CustSizeName,
          @CustSizeDesc,
          1,
          @CompanyNo,
          @UserID,
          @UserDate,
          @IsActive
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMCustomerSize]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/04/2014
create PROCEDURE  [dbo].[DeleteMCustomerSize] 
@CustSizeNo                         numeric(18)


AS

--       DELETE FROM MCustomerSize
--       WHERE
--          CustSizeNo = @CustSizeNo

update MCustomerSize set IsActive=''false'' WHERE
          CustSizeNo = @CustSizeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRegistration]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16/05/2012
CREATE PROCEDURE [dbo].[AddMRegistration]
     @RegNo                               numeric(18),
	 @MacID								  varchar(100),
     @HostName                            varchar(100),
     @MachineIP                           varchar(100),
     @IsActive                            bit,
	 @IsManual							  bit,
	 @CompanyNo							  numeric(18),
     @ReturnID							  int output
AS
IF EXISTS(select RegNo from MRegistration
          where
          RegNo = @RegNo)
     BEGIN
       --Update existing row
       UPDATE MRegistration
       SET
		  MacID = @MacID,
          HostName = @HostName,
          MachineIP = @MachineIP,
          IsActive = @IsActive,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          RegNo = @RegNo
	set @ReturnID=@RegNo
     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(RegNo),0) From MRegistration
       DBCC CHECKIDENT(''MRegistration'', RESEED, @Id)
       INSERT INTO MRegistration(
		  MacID,
          HostName,
          MachineIP,
          IsActive,
		  IsManual,
		  CompanyNo,
          StatusNo
)
       VALUES(
		  @MacID,
          @HostName,
          @MachineIP,
          @IsActive,
		  @IsManual,
		  @CompanyNo,
          1
)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMRegistration]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16/05/2012
CREATE PROCEDURE  [dbo].[DeleteMRegistration] 
@RegNo                              numeric(18)


AS

       DELETE FROM MRegistration
       WHERE
          RegNo = @RegNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTDocketPrinting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 19/12/2014
CREATE PROCEDURE [dbo].[AddTDocketPrinting]
     @DocketPrintingNo                    numeric(18),
     @DocketUserNo                        numeric(18),
     @FromDate                            datetime,
     @ToDate                             datetime,
     @LedgerNo                            numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @CompanyNo                           numeric(18),
     @ReturnID                            int output
AS
IF EXISTS(select DocketPrintingNo from TDocketPrinting
          where
          DocketPrintingNo = @DocketPrintingNo)
     BEGIN
       --Update existing row
       UPDATE TDocketPrinting
       SET
          DocketUserNo = @DocketUserNo,
          FromDate = @FromDate,
          ToDate = @ToDate,
          LedgerNo = @LedgerNo,
          UserID = @UserID,
          UserDate = @UserDate,
          CompanyNo = @CompanyNo,
          Status = 2
       WHERE
          DocketPrintingNo = @DocketPrintingNo
		  set @ReturnID = @DocketPrintingNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(DocketPrintingNo),0) From TDocketPrinting
       DBCC CHECKIDENT(''TDocketPrinting'', RESEED, @Id)
       INSERT INTO TDocketPrinting(
          DocketUserNo,
          FromDate,
          ToDate,
          LedgerNo,
          UserID,
          UserDate,
          CompanyNo,
          Status
)
       VALUES(
          @DocketUserNo,
          @FromDate,
          @ToDate,
          @LedgerNo,
          @UserID,
          @UserDate,
          @CompanyNo,
          1
)
set @ReturnID = Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMSchemeFromDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 20-Sep-2013
CREATE PROCEDURE [dbo].[AddMSchemeFromDetails]
	@PkSrNo				numeric(18),
	@SchemeDetailsNo	numeric(18),
	@SchemeNo			numeric(18),
	@BillAmount			numeric(18,2),
	@ItemNo				numeric(18),
	@Quantity			numeric(18,2),
	@Rate				numeric(18,2),
	@MRP				numeric(18,2),
	@Amount				numeric(18,2),
	@UomNo				numeric(18),
	@FkRateSettingNo    numeric(18),
	@DistPercentage		numeric(18,2),
	@CompanyNo			numeric(18),
	@UserID				numeric(18),
	@UserDate			datetime
 AS 
 IF EXISTS ( Select PkSrNo From MSchemeFromDetails 
	 Where 
	 PkSrNo =@PkSrNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE MSchemeFromDetails 
	 SET 

	SchemeDetailsNo=@SchemeDetailsNo,
	SchemeNo=@SchemeNo,
	BillAmount=@BillAmount,
	ItemNo=@ItemNo,
	Quantity=@Quantity,
	Rate=@Rate,
	MRP=@MRP,
	Amount=@Amount,
	UomNo=@UomNo,
	FkRateSettingNo=@FkRateSettingNo,
	DistPercentage=@DistPercentage,
	CompanyNo=@CompanyNo,
	StatusNo=2,
	UserID=@UserID,
	UserDate=@UserDate
	Where 
	 PkSrNo=@PkSrNo
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(PkSrNo),0) From MSchemeFromDetails 
	  DBCC CHECKIDENT(''MSchemeFromDetails'', RESEED, @Id) 
	  INSERT INTO MSchemeFromDetails( 
	SchemeDetailsNo,
	SchemeNo,
	BillAmount,
	ItemNo,
	Quantity,
	Rate,
	MRP,
	Amount,
	UomNo,
	FkRateSettingNo,
	DistPercentage,
	CompanyNo,
	StatusNo,
	UserID,
	UserDate 
)
	  VALUES(
	@SchemeDetailsNo,
	@SchemeNo,
	@BillAmount,
	@ItemNo,
	@Quantity,
	@Rate,
	@MRP,
	@Amount,
	@UomNo,
	@FkRateSettingNo,
	@DistPercentage,
	@CompanyNo,
	1,
	@UserID,
	@UserDate
	)
	END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMSchemeFromDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 20-Sep-2013
 CREATE PROCEDURE  [dbo].[DeleteMSchemeFromDetails]
@PkSrNo		numeric(18)
AS
		DELETE FROM MSchemeFromDetails
		Where
		PkSrNo=@PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMAccYear]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16/04/2012
CREATE PROCEDURE  [dbo].[DeleteMAccYear] 
@AccYearNo                          numeric(18)


AS

       DELETE FROM MAccYear
       WHERE
          AccYearNo = @AccYearNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMAccYear]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16/04/2012
CREATE PROCEDURE [dbo].[AddMAccYear]
     @AccYearNo                           numeric(18),
     @AccYearName                         varchar(50),
     @FinancialYear                       varchar(50),
     @BooksBeginFrom                      datetime,
     @BooksEndOn                          datetime,
     @AssesmentYearName                   varchar(50),
     @DatabaseName                        varchar(50),
     @IsLocked                            bit,
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select AccYearNo from MAccYear
          where
          AccYearNo = @AccYearNo)
     BEGIN
       --Update existing row
       UPDATE MAccYear
       SET
          AccYearName = @AccYearName,
          FinancialYear = @FinancialYear,
          BooksBeginFrom = @BooksBeginFrom,
          BooksEndOn = @BooksEndOn,
          AssesmentYearName = @AssesmentYearName,
          DatabaseName = @DatabaseName,
          IsLocked = @IsLocked,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          AccYearNo = @AccYearNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(AccYearNo),0) From MAccYear
       DBCC CHECKIDENT(''MAccYear'', RESEED, @Id)
       INSERT INTO MAccYear(
          AccYearName,
          FinancialYear,
          BooksBeginFrom,
          BooksEndOn,
          AssesmentYearName,
          DatabaseName,
          IsLocked,
          IsActive,
          UserID,
          UserDate
)
       VALUES(
          @AccYearName,
          @FinancialYear,
          @BooksBeginFrom,
          @BooksEndOn,
          @AssesmentYearName,
          @DatabaseName,
          @IsLocked,
          @IsActive,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMCity]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE [dbo].[AddMCity]
     @CityNo                              numeric(18),
     @CityName                            varchar(50),
     @CityShortCode                       varchar(10),
	 @CityLangName                        varchar(50),
    -- @CountryNo                           numeric(18),
     @StateNo                             numeric(18),
   --  @RegionNo                            numeric(18),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
     --@ModifiedBy                          text
AS
IF EXISTS(select CityNo from MCity
          where
          CityNo = @CityNo)
     BEGIN
       --Update existing row
       UPDATE MCity
       SET
          CityName = @CityName,
          CityShortCode = @CityShortCode,
		  CityLangName =@CityLangName,
         -- CountryNo = @CountryNo,
          StateNo = @StateNo,
        --  RegionNo = @RegionNo,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          CityNo = @CityNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CityNo),0) From MCity
       DBCC CHECKIDENT(''MCity'', RESEED, @Id)
       INSERT INTO MCity(
 
          CityName,
          CityShortCode,
		  CityLangName,
         -- CountryNo,
          StateNo,
        --  RegionNo,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
          --ModifiedBy
)
       VALUES(

          @CityName,
          @CityShortCode,
		  @CityLangName,
         -- @CountryNo,
          @StateNo,
       --   @RegionNo,
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
         -- @ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOutstandDetailst]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetOutstandDetailst]
@VchType   numeric(18),
@CompanyNo  numeric(18),
@ToDate datetime,
@TempLedgNo varchar(max)

AS

if(@VchType=15)
  Begin
	SELECT MLedger.LedgerNo, Ledgername +'' -''+ Cityname as Ledgername ,  SUM(TVoucherDetails.Debit) AS debit, SUM(TVoucherDetails.Credit) AS credit, SUM(TVoucherDetails.Debit) - SUM(TVoucherDetails.Credit) AS Balance,mobileno1
FROM         TVoucherDetails INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo LEFT JOIN
                      MLedgerDetails ON MLedger.LedgerNo = MLedgerDetails.LedgerNo LEFT  JOIN
                      MCity ON MLedgerDetails.CityNo = MCity.CityNo

inner join TVoucherEntry on TVoucherEntry.pkvoucherno=TVoucherDetails.fkvoucherno
INNER JOIN fn_Split (@TempLedgNo, '','') AS Party_BILL on MLedger.LedgerNo= CAST(Party_BILL.value AS numeric)
WHERE    -- TVoucherDetails.LedgerNo in(''+@TempLedgNo+'')
TVoucherEntry.VoucherDate<=''''+cast(@ToDate as varchar)+''''  and TVoucherEntry.IsCancel=''false'' and vouchertypecode in (15,11,30,36)
group by MLedger.LedgerNo, Ledgername +'' -''+ Cityname,mobileno1
order by Ledgername +'' -''+ Cityname
  End
else if(@VchType=115)
  Begin
	SELECT MLedger.LedgerNo, Ledgername +'' -''+ Cityname as Ledgername ,  SUM(TVoucherDetails.Debit) AS debit, SUM(TVoucherDetails.Credit) AS credit, SUM(TVoucherDetails.Debit) - SUM(TVoucherDetails.Credit) AS Balance,mobileno1
FROM         TVoucherDetails INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo LEFT JOIN
                      MLedgerDetails ON MLedger.LedgerNo = MLedgerDetails.LedgerNo LEFT  JOIN
                      MCity ON MLedgerDetails.CityNo = MCity.CityNo

inner join TVoucherEntry on TVoucherEntry.pkvoucherno=TVoucherDetails.fkvoucherno
INNER JOIN fn_Split (@TempLedgNo, '','') AS Party_BILL on MLedger.LedgerNo= CAST(Party_BILL.value AS numeric)
WHERE    -- TVoucherDetails.LedgerNo in(''+@TempLedgNo+'')
TVoucherEntry.VoucherDate<=''''+cast(@ToDate as varchar)+''''  and TVoucherEntry.IsCancel=''false''  and vouchertypecode in (115,111,130,136)
group by MLedger.LedgerNo, Ledgername +'' -''+ Cityname,mobileno1
order by Ledgername +'' -''+ Cityname
  End
else if(@VchType=9)
Begin
	SELECT MLedger.LedgerNo, Ledgername +'' -''+ Cityname as Ledgername  ,  SUM(TVoucherDetails.Credit) AS debit, SUM(TVoucherDetails.Debit) AS credit, SUM(TVoucherDetails.credit) - SUM(TVoucherDetails.Debit) AS Balance,mobileno1
FROM         TVoucherDetails INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo LEFT JOIN
                      MLedgerDetails ON MLedger.LedgerNo = MLedgerDetails.LedgerNo LEFT  JOIN
                      MCity ON MLedgerDetails.CityNo = MCity.CityNo

inner join TVoucherEntry on TVoucherEntry.pkvoucherno=TVoucherDetails.fkvoucherno
INNER JOIN fn_Split (@TempLedgNo, '','') AS Party_BILL on MLedger.LedgerNo= CAST(Party_BILL.value AS numeric)
WHERE    -- TVoucherDetails.LedgerNo in(+@TempLedgNo) and 
TVoucherEntry.VoucherDate<=''''+cast(@ToDate as varchar)+''''  and TVoucherEntry.IsCancel=''false'' and vouchertypecode in (9,7,31,36)
group by MLedger.LedgerNo, Ledgername +'' -''+ Cityname,mobileno1
order by Ledgername +'' -''+ Cityname
end
else if(@VchType=109)
Begin
	SELECT MLedger.LedgerNo, Ledgername +'' -''+ Cityname as Ledgername  ,  SUM(TVoucherDetails.Credit) AS debit, SUM(TVoucherDetails.Debit) AS credit, SUM(TVoucherDetails.credit) - SUM(TVoucherDetails.Debit) AS Balance,mobileno1
FROM         TVoucherDetails INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo LEFT JOIN
                      MLedgerDetails ON MLedger.LedgerNo = MLedgerDetails.LedgerNo LEFT  JOIN
                      MCity ON MLedgerDetails.CityNo = MCity.CityNo

inner join TVoucherEntry on TVoucherEntry.pkvoucherno=TVoucherDetails.fkvoucherno
INNER JOIN fn_Split (@TempLedgNo, '','') AS Party_BILL on MLedger.LedgerNo= CAST(Party_BILL.value AS numeric)
WHERE    -- TVoucherDetails.LedgerNo in(+@TempLedgNo) and 
TVoucherEntry.VoucherDate<=''''+cast(@ToDate as varchar)+''''  and TVoucherEntry.IsCancel=''false'' and vouchertypecode in (109,107,131,136)
group by MLedger.LedgerNo, Ledgername +'' -''+ Cityname,mobileno1
order by Ledgername +'' -''+ Cityname
end



--Declare @Summary Table(VoucherUserNo numeric(18),VoucherDate datetime,LedgerName varchar(500),Debit numeric(18,2),TotRec numeric(18,2),NetBal numeric(18,2),TempBillNo numeric(18),RefType varchar(100))
--Declare @TempTable Table(RefNo numeric(18),VchDate datetime,VoucherUserNo numeric(18),Amount numeric(18,2),LedgerName varchar(200),LedgerNo numeric(18),VType numeric(18))
--					
--					   
--
--Declare @SrNo numeric(18),@Amount numeric(18,2),@LedgerName varchar(500),
--		@RefNo numeric(18),@SNo numeric(18),@BillNo numeric(18),
--		@TotalAmount numeric(18,2),@TypeNo numeric(18),@VchDate datetime,
--		@ReceivedAmt numeric(18,2),@BalanceAmt numeric(18,2),@PayAmt numeric(18,2),@PKVoucherNo numeric(18),@Disc numeric(18,2),@TotBalAmt numeric(18,2),@DiscAmt numeric(18,2),@NewBalAmt numeric(18,2),
--		@CompanyName varchar(max),@VoucherNo numeric(18),@LedgNo numeric(18),@StrQuery varchar(max),@LedgerNo numeric(18),@TempAmt numeric(18,2),@TempDate datetime,@TempBillNo numeric(18),@vch numeric(18),@vch1 numeric(18),
--		@AdvAmt numeric(18,2),@AdvAdjAmt numeric(18,2),@TempLedgName varchar(500),@RefType varchar(100),@OpBal numeric(18,2),@AdjOpBal numeric(18,2),@OpAdjBal numeric(18,2),@TotOpBal numeric(18,2) , @TempLedgerName varchar(500),
--		@TotRecAmt numeric(18,2),@GrTotAmt numeric(18,2),@GrTotRec numeric(18,2),@GrTotNetBal numeric(18,2) ,@TotAdv numeric(18,2),
--		@TempOpBal numeric(18,2),@TempTotAdv numeric(18,2),@TLedgNo numeric(18),
--		@TotAmount numeric(18,2),@TempSrt varchar(100),@VchTypeTemp varchar(max),@VType numeric(18)
--
--set @StrQuery='''' set @TempLedgName=''''set @TempLedgerName='''' set @TotRecAmt=0 
--set @GrTotAmt=0 set @GrTotRec=0 set @GrTotNetBal=0  set @TotAdv=0 set @TempTotAdv=0 set @TempOpBal=0
--set @TLedgNo=0 set @TotAmount=0 set @TempSrt=''''
--
--set @SrNo=0
--set @TotalAmount=0
--set @TotBalAmt=0
--set @DiscAmt=0
--
--	Select @LedgNo=LedgerNo FRom MPayTypeLedger Where CompanyNo=@CompanyNo AND PayTypeNo=2	
--if(@VchType=15)
--  Begin
--	set @vch=30 set @vch1=12 
--  End
--else
--Begin
--	set @vch=31 set @vch1=13 
--End
--
--set @StrQuery=''SELECT TVoucherRefDetails.RefNo, TVoucherEntry.VoucherDate, TVoucherEntry.VoucherUserNo, TVoucherRefDetails.Amount,MLedger.LedgerName,MLedger.LedgerNo,TVoucherEntry.VoucherTypeCode	
--								   FROM  TVoucherEntry INNER JOIN
--										 TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
--										 TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo INNER JOIN
--										 MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo										  
--								  WHERE  (TVoucherEntry.VoucherTypeCode in (''+cast(@VchType as varchar)+'')) AND (TVoucherRefDetails.TypeOfRef = 3) AND 
--										 (TVoucherEntry.CompanyNo = ''+cast(@CompanyNo as varchar)+'') and TVoucherEntry.VoucherDate<=''''''+cast(@ToDate as varchar)+''''''  and TVoucherEntry.IsCancel=''''false''''
--										and TVoucherDetails.LedgerNo in(''+@TempLedgNo+'')
--								  ORDER BY TVoucherDetails.LedgerNo,TVoucherEntry.VoucherDate,TVoucherEntry.VoucherTypeCode	''	
--
--
--insert into @TempTable exec(@StrQuery)
--
--Declare CurTemp Cursor for Select RefNo ,VchDate ,VoucherUserNo ,Amount ,LedgerName,LedgerNo,VType  from @TempTable
--
--		open CurTemp
--
--			Fetch next from CurTemp into  @RefNo ,@VchDate,@BillNo,@Amount,@LedgerName,@LedgerNo,@VType
--														
--			--set @TempLedgName=@LedgerName
--				While(@@Fetch_Status=0)
--				 Begin
--
--					--for Advance
--					Select @AdvAmt=isNull(Sum(Amount),0) from TVoucherRefDetails where TypeOfRef=1 and LedgerNo=@LedgerNo
--					select @AdvAdjAmt=isNull(Sum(Amount),0) from TVoucherRefDetails where TypeOfRef=6 and LedgerNo=@LedgerNo
--					select @TotBalAmt=IsNull(sum(TVoucherRefDetails.Amount),0) from TVoucherRefDetails where RefNo=@RefNo and TypeOfRef in(2,5) AND RefNo<>0
--					if(@AdvAdjAmt<>0 and @AdvAmt<>@AdvAdjAmt)
--					set @TotAdv=@AdvAmt-@AdvAdjAmt
--					else 
--					set @TotAdv=@AdvAmt									
--					set @TotalAmount=@Amount-@TotBalAmt					
--					if(@TotalAmount>0)
--					Begin
--						if(@TempLedgerName<>@LedgerName)
--						Begin						
--							if(@TempLedgerName<>'''')
--							begin
--								if(@TotAmount-@GrTotRec<>0)
--								Begin									
--									if(@VchType=15)
--									Begin									
--										if(@TotAmount-@GrTotRec>0)
--											set @TempSrt=''To Receive''
--										else if(@TotAmount-@GrTotRec<0)
--											set @TempSrt=''To Pay''
--										else set @TempSrt=''''
--											insert into @Summary values (0,''01-01-1900'',@TempLedgerName,@TotAmount,@GrTotRec,@TotAmount-@GrTotRec,0,'''')									
--									end									
--									else if(@VchType=9)									
--										insert into @Summary values (0,''01-01-1900'',@TempLedgerName,@TotAmount,@GrTotRec,@TotAmount-@GrTotRec,0,'''')
--								End	
--								set @TotAmount=0
--								set @GrTotAmt=0	
--								set @GrTotRec=0
--							end
--							--for OpeningBalance
--							    Select @OpBal=OpAmt from GetOpeningLedgerBalanceOnly(@LedgerNo, @CompanyNo)
--								Select @AdjOpBal=isNull(Sum(case when (signcode=1) then isNull(Amount,0) else isNull(Amount,0)*-1 end),0) from TVoucherRefDetails where LedgerNo=@LedgerNo and TypeOfRef=5 AND REFNO <> 0
--								Select @OpAdjBal=isNull(Sum(case when (signcode=2) then isNull(Amount,0) else isNull(Amount,0)*-1 end),0) from TVoucherRefDetails where LedgerNo=@LedgerNo and TypeOfRef=5 AND REFNO = 0
--								set @TotOpBal=@OpBal+@AdjOpBal+@OpAdjBal
--								
--								if(@OpBal<>@TotOpBal)
--									set @TempOpBal=	@OpBal-(@TotOpBal)
--								else 
--									set @TempOpBal=@OpBal
--							--insert into @Summary values (0,''01-01-1900'',@LedgerName,0,0,0,0,'''')										
--						end
--						
--							set @GrTotAmt=@GrTotAmt+@Amount
--						
--						
--						set @TotRecAmt=0
--					
--						if(@TempLedgerName<>@LedgerName)
--						begin
--							--if(@AdvAmt-@AdvAdjAmt>0)
--							if(@AdvAmt<>0)
--							--insert into @Summary values (0,''01-01-1900'',''Advance'',0,@AdvAmt,0,1,''Advance'')
--							set @GrTotRec=@GrTotRec+@AdvAmt
--							if(@AdvAdjAmt<>0)
--							begin
--							--insert into @Summary values (0,''01-01-1900'',''AdjAdv'',0,@AdvAdjAmt,0,1,''Advance'')
--							set @TotAmount=@TotAmount+@AdvAdjAmt
--							end
--
--								if(@OpBal>0)
--									Begin 
--									--insert into @Summary values (0,''01-01-1900'',''OpBal'',0,@OpBal,0,-2,''OpBal'')
--									set @GrTotRec=@GrTotRec+abs(@OpBal)
--									End
--								else if(@OpBal<0)
--									Begin
--									--insert into @Summary values (0,''01-01-1900'',''OpBal'',@OpBal,0,0,-2,''OpBal'')
--									set @TotAmount=@TotAmount+abs(@OpBal)
--									end
--								if(@OpBal-@TotOpBal>0)
--									begin
--									--insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',@OpBal-@TotOpBal,0,0,-2,''OpBal'')
--									set @TotAmount=@TotAmount+abs(@OpBal-@TotOpBal)
--									end
--								else if(@OpBal-@TotOpBal<0)
--									begin
--									--insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',0,@OpBal-@TotOpBal,0,-2,''OpBal'')
--									set @GrTotRec=@GrTotRec+abs(@OpBal-@TotOpBal)
--									end
--			
----								if(@OpBal-(@OpBal-@TotOpBal)>0)
----									set @GrTotRec=@GrTotRec+abs(@OpBal-(@OpBal-@TotOpBal))
----								else if(@OpBal-(@OpBal-@TotOpBal)<0)
----									set @TotAmount=@TotAmount+abs(@OpBal-(@OpBal-@TotOpBal))
--								--select @TotOpBal,@TotOpBal
----								if(@TotOpBal<0 and @TotOpBal<>0)
----								Begin
----									insert into @Summary values (0,''01-01-1900'',''OpBal'',abs(@OpBal),0,0,-2,''OpBal'')
----									if(@OpBal<>@TotOpBal and @OpBal-@TotOpBal<>0)
----									insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',@OpBal-@TotOpBal,0,0,-2,''OpBal'')
----									--else									
----									set @TotAmount=@TotAmount+abs(@OpBal-@TotOpBal)--abs(@OpBal)
----									
----								end								
----								else if(@TotOpBal<>0)
----								Begin
----									insert into @Summary values (0,''01-01-1900'',''OpBal'',0,abs(@OpBal),0,-2,''OpBal'')
----									if(@OpBal<>@TotOpBal and @OpBal-@TotOpBal<>0)
----									insert into @Summary values (0,''01-01-1900'',''AdjOpBal'',0,@OpBal-@TotOpBal,0,-2,''OpBal'')
----									else											
----										set @GrTotRec=@GrTotRec+@OpBal
----								end
--					end
----					if(@VType<>@vch1)
----					--insert into @Summary values (@BillNo,@VchDate,'''',@Amount,@Amount-@TotalAmount,@TotalAmount,0,'''')
----					else
--					--insert into @Summary values (@BillNo,@VchDate,''  *'',@Amount,@Amount-@TotalAmount,@TotalAmount,0,'''')
--					if(@VType<>@vch1)
--					set @GrTotRec=@GrTotRec+(@Amount-@TotalAmount)
--					else
--					set @GrTotRec=@GrTotRec+(@TotalAmount)
--					set @TempLedgerName=@LedgerName
--					set @TLedgNo=@LedgerNo
--					set @TotRecAmt=0
--					Declare CurDetails Cursor For SELECT TVoucherEntry.VoucherDate, TVoucherRefDetails.Amount, TVoucherEntry.VoucherUserNo, MTypeOfRef.TypeOfRef
--												  FROM TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo INNER JOIN
--												  TVoucherRefDetails ON TVoucherDetails.PkVoucherTrnNo = TVoucherRefDetails.FkVoucherTrnNo LEFT OUTER JOIN
--												  TVoucherChqCreditDetails ON TVoucherEntry.PkVoucherNo = TVoucherChqCreditDetails.FKVoucherNo INNER JOIN
--												  MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo INNER JOIN MTypeOfRef ON TVoucherRefDetails.TypeOfRef = MTypeOfRef.RefTypeCode
--												  WHERE     (TVoucherDetails.LedgerNo = @LedgerNo) AND (TVoucherEntry.VoucherTypeCode in(@vch,@vch1)) AND (TVoucherRefDetails.RefNo = @RefNo) AND (TVoucherEntry.CompanyNo = @CompanyNo)
--											      ORDER BY TVoucherEntry.VoucherDate
--					
--					open CurDetails
--				
--						fetch next from CurDetails into @TempDate,@TempAmt,@TempBillNo,@RefType
--						While(@@Fetch_Status=0)
--						Begin
----							if(@VType<>@vch1)
----							insert into @Summary values (@TempBillNo,@TempDate,'''',0,@TempAmt,0,@TempBillNo,@RefType)
--							set @TotRecAmt=@TotRecAmt+@TempAmt
--							
--						fetch next from CurDetails into @TempDate,@TempAmt,@TempBillNo,@RefType
--						End
--					Close CurDetails Deallocate CurDetails
--					End
--					if(@LedgerName<>'''')
--					begin
--					if(@TotalAmount<>0)
--					Begin
----					if(@VType<>@vch1)
----					insert into @Summary values (0,''01-01-1900'',''Total'',@Amount,@TotRecAmt,@TotalAmount,-3,'''')
--					if(@VType<>@vch1)
--					set @TotAmount=@TotAmount+@Amount
--					--set @GrTotRec=@GrTotRec+@TotRecAmt
--					End 
--					
--					
--					set @TempTotAdv=@TotAdv
----					set @TempOpBal=@OpBal
----					set @TempTotOpBal=@TotOpBal
--					end
--					Fetch next from CurTemp into  @RefNo ,@VchDate,@BillNo,@Amount,@LedgerName,@LedgerNo,@VType
--				 End 
--		Close CurTemp Deallocate CurTemp
--
--								if(@TotAmount<>0)
--								Begin
--								if(@VchType=9)
--									insert into @Summary values (0,''01-01-1900'',@TempLedgerName,@TotAmount,@GrTotRec,@TotAmount-@GrTotRec,0,'''')
--								else if(@VchType=15)
--								begin
--								insert into @Summary values (0,''01-01-1900'',@TempLedgerName,@TotAmount,@GrTotRec,@TotAmount-@GrTotRec,0,'''')
--									if(@TotAmount-@GrTotRec>0)
--									set @TempSrt=''To Receive''
--									else if(@TotAmount-@GrTotRec<0)
--									set @TempSrt=''To Pay''
--									else
--									set @TempSrt=''''
--									--insert into @Summary values (0,''01-01-1900'',@TempSrt,0,0,0,0,'''')
--								end
--								end
----
----insert into @Summary values (0,''01-01-1900'',''GrandTotal'',@GrTotAmt+@TempOpBal,@GrTotRec+@TempOpBal+@TotAdv,(@GrTotAmt+@OpBal)-(@GrTotRec+@TempOpBal+@TotAdv),0,'''')
----								set @GrTotAmt=0	
--								set @GrTotRec=0
--								set @TotAmount=0
--		set @TotalAmount=0
--		set @TotBalAmt=0
--		set @DiscAmt=0
--	
--
----Select *  From @Summary
--Select VoucherUserNo ,VoucherDate,LedgerName ,Debit ,TotRec ,NetBal ,TempBillNo	from @Summary
----Select SNo AS ''SNo'', VchDate AS ''Date'', ItemName AS ''Particulars'',
----					   Qty AS ''Qty'', Rate AS ''Rate'',Vatav as ''Vatav'' ,Freight AS ''Freight'',Amount AS ''Amount'',
----				   ReceivedAmt AS ''Received'',BalanceAmt AS ''Balance'' ,chkSelect AS ''Select'',PayAmt AS ''PayAmt'',Disc AS ''Disc'', NewBalAmt as ''New Bal'' ,Chk as ''Final'',PKStockTrnNo as ''PK'' From @Summary
----
--
----/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
--
--
--





' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMCity]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE  [dbo].[DeleteMCity] 
@CityNo                             numeric(18)


AS

Update MCity set IsActive=''False'',StatusNo=2 where CityNo = @CityNo
--
--       DELETE FROM MCity
--       WHERE
--          CityNo = @CityNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMCity1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
Create PROCEDURE [dbo].[AddMCity1]
     @CityNo                              numeric(18),
     @CityName                            varchar(50),
     @CityShortCode                       varchar(10),
	 @CityLangName                        varchar(50),
    -- @CountryNo                           numeric(18),
     @StateNo                             numeric(18),
   --  @RegionNo                            numeric(18),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
     --@ModifiedBy                          text
AS
SET IDENTITY_INSERT MCity ON
     BEGIN
       --Insert new row
      
       INSERT INTO MCity(
          CityNo,   
          CityName,
          CityShortCode,
		  CityLangName,
         -- CountryNo,
          StateNo,
        --  RegionNo,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
          --ModifiedBy
)
       VALUES(
          @CityNo,    
          @CityName,
          @CityShortCode,
		  @CityLangName,
         -- @CountryNo,
          @StateNo,
       --   @RegionNo,
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
         -- @ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMSchemeAchievers]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 13/11/2013
CREATE PROCEDURE [dbo].[AddMSchemeAchievers]
     @PkSrNo                              numeric(18),
     @LedgerNo                            numeric(18),
     @SchemeNo                            numeric(18),
	 @SchemeDetailsNo					  numeric(18),
     @SlabAmount                          numeric(18,2),
	 @SlabDiscAmt						  numeric(18,2),
     @SlabBalanceAmount                   numeric(18,2),
     @IsActive                            bit,
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @ReturnID							  int output
AS
IF EXISTS(select PkSrNo from MSchemeAchievers
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MSchemeAchievers
       SET
          LedgerNo = @LedgerNo,
          SchemeNo = @SchemeNo,
		  SchemeDetailsNo = @SchemeDetailsNo,
          SlabAmount = @SlabAmount,
		  SlabDiscAmt = @SlabDiscAmt,
          SlabBalanceAmount = @SlabBalanceAmount,
          IsActive = @IsActive,
          CompanyNo = @CompanyNo,
          StatusNo = 2,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo
	set @ReturnID=@PkSrNo  
     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MSchemeAchievers
       DBCC CHECKIDENT(''MSchemeAchievers'', RESEED, @Id)
       INSERT INTO MSchemeAchievers(
          LedgerNo,
          SchemeNo,
		  SchemeDetailsNo,
          SlabAmount,
		  SlabDiscAmt,
          SlabBalanceAmount,	
		  IsItemDiscStatus,
          IsActive,
          CompanyNo,
          StatusNo,
          UserID,
          UserDate
)
       VALUES(
          @LedgerNo,
          @SchemeNo,
		  @SchemeDetailsNo,
          @SlabAmount,
		  @SlabDiscAmt,
          @SlabBalanceAmount,
		  ''false'',
          @IsActive,
          @CompanyNo,
          1,
          @UserID,
          @UserDate
)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTReward_All]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16-Oct-2013
 CREATE PROCEDURE  [dbo].[DeleteTReward_All]
@FkVoucherNo		numeric(18)

AS
Declare @RewardNo numeric(18)

begin transaction

IF EXISTS ( SELECT RewardNo FROM TReward Where FkVoucherNo=@FkVoucherNo ) 
Begin
	SELECT @RewardNo = RewardNo FROM TReward Where FkVoucherNo=@FkVoucherNo

	DELETE FROM TRewardTo WHERE RewardNo = @RewardNo
	DELETE FROM TRewardFrom WHERE RewardNo = @RewardNo
	DELETE FROM TRewardDetails WHERE RewardNo = @RewardNo
	DELETE FROM TReward Where FkVoucherNo=@FkVoucherNo

END 
IF @@ERROR <> 0
begin	
	ROLLBACK
end
ELSE
begin
	COMMIT
end
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTRewardDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16-Oct-2013
CREATE PROCEDURE [dbo].[AddTRewardDetails]
	@PkSrNo				numeric(18),
	@RewardNo			numeric(18),
	@SchemeNo			numeric(18),
	@SchemeDetailsNo	numeric(18),
	@SchemeType			numeric(18),
	@DiscPer			numeric(18,2),
	@DiscAmount			numeric(18,2),
	@SchemeAmount		numeric(18,2),
	@SchemeAcheiverNo	numeric(18),
	@CompanyNo			numeric(18),
	@ReturnID		    int output
 AS 
 IF EXISTS ( Select PkSrNo From TRewardDetails 
	 Where 
	 PkSrNo =@PkSrNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE TRewardDetails 
	 SET 

	RewardNo=@RewardNo,
	SchemeNo=@SchemeNo,
	SchemeDetailsNo=@SchemeDetailsNo,
	SchemeType=@SchemeType,
	DiscPer=@DiscPer,
	DiscAmount=@DiscAmount,
	SchemeAmount=@SchemeAmount,
	SchemeAcheiverNo=@SchemeAcheiverNo,
	StatusNo=2,
	CompanyNo=@CompanyNo
	Where 
	 PkSrNo=@PkSrNo
	Set @ReturnID=@PkSrNo
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(PkSrNo),0) From TRewardDetails 
	  DBCC CHECKIDENT(''TRewardDetails'', RESEED, @Id) 
	  INSERT INTO TRewardDetails( 
	RewardNo,
	SchemeNo,
	SchemeDetailsNo,
	SchemeType,
	DiscPer,
	DiscAmount,
	SchemeAmount,
	SchemeAcheiverNo,
	StatusNo,
	CompanyNo 
)
	  VALUES(
	@RewardNo,
	@SchemeNo,
	@SchemeDetailsNo,
	@SchemeType,
	@DiscPer,
	@DiscAmount,
	@SchemeAmount,
	@SchemeAcheiverNo,
	1,
	@CompanyNo
	)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTRewardDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16-Oct-2013
 CREATE PROCEDURE  [dbo].[DeleteTRewardDetails]
@PkSrNo		numeric(18)
AS
begin transaction	

Delete From TRewardFrom Where RewardDetailsNo=@PkSrNo
Delete From TRewardTo Where RewardDetailsNo=@PkSrNo
DELETE FROM TRewardDetails Where PkSrNo=@PkSrNo

IF @@ERROR <> 0
begin	
	ROLLBACK
end
ELSE
begin
	COMMIT
end
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTReward]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16-Oct-2013
 CREATE PROCEDURE  [dbo].[DeleteTReward]
@RewardNo		numeric(18)
AS
begin transaction
IF Not EXISTS ( Select RewardNo From TRewardDetails 
	 Where 
	 RewardNo =@RewardNo ) 
Begin
		DELETE FROM TReward
		Where
		RewardNo=@RewardNo
End

IF @@ERROR <> 0
begin	
	ROLLBACK
end
ELSE
begin
	COMMIT
end
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTChequeNoDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11/09/2012
CREATE PROCEDURE [dbo].[AddTChequeNoDetails]
     @PkSrNo                              numeric(18),
     @FkChequeNo                          numeric(18),
     @ChequeDetailsUserNo                 varchar(50),
     @FkVoucherTrnNo                      numeric(18),
     @IsActive                            bit
AS
IF EXISTS(select PkSrNo from TChequeNoDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TChequeNoDetails
       SET
          FkChequeNo = @FkChequeNo,
          ChequeDetailsUserNo = @ChequeDetailsUserNo,
          FkVoucherTrnNo = @FkVoucherTrnNo,
          IsActive = @IsActive
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TChequeNoDetails
       DBCC CHECKIDENT(''TChequeNoDetails'', RESEED, @Id)
       INSERT INTO TChequeNoDetails(
         -- PkSrNo,
          FkChequeNo,
          ChequeDetailsUserNo,
          FkVoucherTrnNo,
          IsActive
)
       VALUES(
         -- @PkSrNo,
          @FkChequeNo,
          @ChequeDetailsUserNo,
          @FkVoucherTrnNo,
          @IsActive
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTGRN]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 05/03/2014
CREATE PROCEDURE  [dbo].[DeleteTGRN] 
@GRNNo                              numeric(18)


AS

       DELETE FROM TGRN
      WHERE         
      GRNNo = @GRNNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTGRN]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 05/03/2014
CREATE PROCEDURE [dbo].[AddTGRN]
     @GRNNo                               numeric(18),
     @GRNUserNo                           numeric(18),
     @GRNDate                             datetime,
     @GRNTime                             datetime,
     @LedgerNo                            numeric(18),
     @RefNo                                varchar(50),
     @GRNAmount                           numeric(18,2),
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @ReturnID							  int output
AS
IF EXISTS(select GRNNo from TGRN
          where
          GRNNo = @GRNNo)
     BEGIN
       --Update existing row
       UPDATE TGRN
       SET
          GRNUserNo = @GRNUserNo,
          GRNDate = @GRNDate,
          GRNTime = @GRNTime,
          LedgerNo = @LedgerNo,
          RefNo = @RefNo,
          GRNAmount = @GRNAmount,
          CompanyNo = @CompanyNo,
          UserID = @UserID,
          UserDate = @UserDate,
ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          GRNNo = @GRNNo
set @ReturnID=@GRNNo 
     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(GRNNo),0) From TGRN
       DBCC CHECKIDENT(''TGRN'', RESEED, @Id)
if (@GRNUserNo=0)
Select @GRNUserNo=IsNull(Max(Cast(GRNUserNo as numeric)),0)+1 from TGRN
       INSERT INTO TGRN(
          GRNUserNo,
          GRNDate,
          GRNTime,
          LedgerNo,
          RefNo,
          GRNAmount,
          CompanyNo,
          UserID,
          UserDate,
		  IsCancel
)
       VALUES(
          @GRNUserNo,
          @GRNDate,
          @GRNTime,
          @LedgerNo,
          @RefNo,
          @GRNAmount,
          @CompanyNo,
          @UserID,
          @UserDate,
		  ''false''
)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTGRNDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 05/03/2014
CREATE PROCEDURE  [dbo].[DeleteTGRNDetails] 
@FkGRNNo                              numeric(18)


AS

    DELETE FROM TGRNDetails
    WHERE          
FkGRNNo = @FkGRNNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTGRNDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 05/03/2014
create PROCEDURE [dbo].[AddTGRNDetails]
     @PkSrNo                              numeric(18),
     @FkGRNNo                             numeric(18),
     @GRNSrNo                             numeric(18),
     @ItemNo                              numeric(18),
     @Quantity                            numeric(18,2),
     @BilledQuantity                      numeric(18),
     @Rate                                numeric(18,2),
     @Amount                              numeric(18,2),
     @NetRate                             numeric(18),
     @NetAmount                           numeric(18),
     @FkRateSettingNo                     numeric(18),
     @CompanyNo                           numeric(18),
     @GodownNo                            numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkSrNo from TGRNDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TGRNDetails
       SET
          FkGRNNo = @FkGRNNo,
          GRNSrNo = @GRNSrNo,
          ItemNo = @ItemNo,
          Quantity = @Quantity,
          BilledQuantity = @BilledQuantity,
          Rate = @Rate,
          Amount = @Amount,
          NetRate = @NetRate,
          NetAmount = @NetAmount,
          FkRateSettingNo = @FkRateSettingNo,
          CompanyNo = @CompanyNo,
          GodownNo = @GodownNo,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TGRNDetails
       DBCC CHECKIDENT(''TGRNDetails'', RESEED, @Id)
       INSERT INTO TGRNDetails(
          FkGRNNo,
          GRNSrNo,
          ItemNo,
          Quantity,
          BilledQuantity,
          Rate,
          Amount,
          NetRate,
          NetAmount,
          FkRateSettingNo,
          CompanyNo,
          GodownNo,
          UserID,
          UserDate
)
       VALUES(
          @FkGRNNo,
          @GRNSrNo,
          @ItemNo,
          @Quantity,
          @BilledQuantity,
          @Rate,
          @Amount,
          @NetRate,
          @NetAmount,
          @FkRateSettingNo,
          @CompanyNo,
          @GodownNo,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMFirmBank]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
create PROCEDURE [dbo].[AddMFirmBank]
     @PkSrNo                              numeric(18),
     @FirmNo                              numeric(18),
     @BankNo                              numeric(18),
     @UserID                              numeric(18),
     @IsActive                            bit,
     @UserDate                            datetime
     AS
IF EXISTS(select PkSrNo from MFirmBank
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MFirmBank
       SET
          FirmNo = @FirmNo,
          BankNo = @BankNo,
          UserID = @UserID,
          UserDate = @UserDate,
          IsActive =  @IsActive,
          StatusNo = 2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MFirmBank
       DBCC CHECKIDENT(''MFirmBank'', RESEED, @Id)
       INSERT INTO MFirmBank(
          FirmNo,
          BankNo,
          UserID,
          UserDate,
		  IsActive,
          StatusNo
)
       VALUES(
          @FirmNo,
          @BankNo,
          @UserID,
          @UserDate,
		  @IsActive,
		  1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTFooterDiscountDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 14/12/2013
CREATE PROCEDURE [dbo].[AddTFooterDiscountDetails]
     @PkSrNo                              numeric(18),
     @FooterDiscNo                        numeric(18),
     @FooterDiscDetailsNo                 numeric(18),
     @FKVoucherNo                         numeric(18),
     @DiscAmount                          numeric(18,2),
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkSrNo from TFooterDiscountDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TFooterDiscountDetails
       SET
          FooterDiscNo = @FooterDiscNo,
          FooterDiscDetailsNo = @FooterDiscDetailsNo,
          FKVoucherNo = @FKVoucherNo,
          DiscAmount = @DiscAmount,
          CompanyNo = @CompanyNo,
          StatusNo = 2
          --UserID = @UserID,
          --UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TFooterDiscountDetails
       DBCC CHECKIDENT(''TFooterDiscountDetails'', RESEED, @Id)
       INSERT INTO TFooterDiscountDetails(
          FooterDiscNo,
          FooterDiscDetailsNo,
          FKVoucherNo,
          DiscAmount,
          CompanyNo,
          StatusNo,
          UserID,
          UserDate
)
       VALUES(
          @FooterDiscNo,
          @FooterDiscDetailsNo,
          @FKVoucherNo,
          @DiscAmount,
          @CompanyNo,
          1,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTFooterDiscountDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 10/12/2011
Create PROCEDURE  [dbo].[DeleteTFooterDiscountDetails] 
@PkSrNo                            numeric(18)


AS
		
       DELETE FROM TFooterDiscountDetails
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTGRNInvoice]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 05/03/2014
create PROCEDURE [dbo].[AddTGRNInvoice]
     @PkSrNo                              numeric(18),
     @FkGRNNo                             numeric(18),
     @FkVoucherNo                         numeric(18),
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkSrNo from TGRNInvoice
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TGRNInvoice
       SET
          FkGRNNo = @FkGRNNo,
          FkVoucherNo = @FkVoucherNo,
          CompanyNo = @CompanyNo,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TGRNInvoice
       DBCC CHECKIDENT(''TGRNInvoice'', RESEED, @Id)
       INSERT INTO TGRNInvoice(
          FkGRNNo,
          FkVoucherNo,
          CompanyNo,
          UserID,
          UserDate
)
       VALUES(
          @FkGRNNo,
          @FkVoucherNo,
          @CompanyNo,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTCashSlipDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 19/12/2014
CREATE PROCEDURE [dbo].[AddTCashSlipDetails]
     @CashSlipDetailsNo               numeric(18),
     @CashSlipNo                      numeric(18),
     @Note                            varchar(50),
     @RSType                          varchar(50),  
     @Pieces                          numeric(18),  
     @Amount                          numeric(18,2),  
     @IsActive                        bit,
     @UserID                          numeric(18),
     --@UserDate                        datetime,
     @CompanyNo                       numeric(18)
     
AS
IF EXISTS(select CashSlipDetailsNo from TCashSlipDetails
          where
          CashSlipDetailsNo = @CashSlipDetailsNo and CashSlipNo=@CashSlipNo)
     BEGIN
       --Update existing row
       UPDATE TCashSlipDetails
       SET
          CashSlipNo = @CashSlipNo,
          Note = @Note,
          RSType=@RSType,
          Pieces = @Pieces,
          Amount=@Amount,
          IsActive = @IsActive,
          UserID = @UserID,
        --  UserDate = @UserDate,
          CompanyNo = @CompanyNo

       WHERE
          CashSlipDetailsNo = @CashSlipDetailsNo and CashSlipNo=@CashSlipNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CashSlipDetailsNo),0) From TCashSlipDetails
       DBCC CHECKIDENT(''TCashSlipDetails'', RESEED, @Id)
       INSERT INTO TCashSlipDetails(
          CashSlipNo,
          Note,
          RSType,
          Pieces,
          Amount,
          IsActive,
          UserID,
       --   UserDate,
          CompanyNo
)
       VALUES(
          @CashSlipNo,
          @Note,
          @RSType,
          @Pieces,
          @Amount,
          @IsActive,
          @UserID,
        --  @UserDate,
          @CompanyNo
)

END






' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMSchemeAssign]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/11/2013
CREATE PROCEDURE [dbo].[AddMSchemeAssign]
     @PkSrNo                              numeric(18),
     @AssignDate                          datetime,
     @SchemeNo                            numeric(18),
     @LedgerNo                            numeric(18),
     @IsActive                            bit,
	 @CompanyNo							  numeric(18),
	 @PromoCode							  varchar(50),
	 @NoOfTimes							  int,
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkSrNo from MSchemeAssign
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MSchemeAssign
       SET
          AssignDate = @AssignDate,
          SchemeNo = @SchemeNo,
          LedgerNo = @LedgerNo,
          IsActive = @IsActive,
		  CompanyNo = @CompanyNo,
          StatusNo = 2,
		  PromoCode = @PromoCode,
		  NoOfTimes = @NoOfTimes,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MSchemeAssign
       DBCC CHECKIDENT(''MSchemeAssign'', RESEED, @Id)
       INSERT INTO MSchemeAssign(
          AssignDate,
          SchemeNo,
          LedgerNo,
          IsActive,
		  CompanyNo,
          StatusNo,
		  PromoCode,
		  NoOfTimes,
		  IsSchemeUsed,
          UserID,
          UserDate
)
       VALUES(
          @AssignDate,
          @SchemeNo,
          @LedgerNo,
          @IsActive,
		  @CompanyNo,
          1,
		  @PromoCode,
		  @NoOfTimes,
		  0,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMSchemeAssign]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/11/2013
CREATE PROCEDURE  [dbo].[DeleteMSchemeAssign] 
@PkSrNo                             numeric(18)


AS

--       DELETE FROM MSchemeAssign
--       WHERE
--          PkSrNo = @PkSrNo

Update MSchemeAssign set IsActive=''false'',StatusNo=2 Where PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMSchemeAchieverDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 14/11/2013
CREATE PROCEDURE [dbo].[AddMSchemeAchieverDetails]
     @PkSrNo                              numeric(18),
	 @SchemeAchSrNo						  numeric(18),
	 @SchemeAchDate						  datetime,
     @SchemeAchieverNo                    numeric(18),
     @LedgerNo                            numeric(18),
     @RefNo                               numeric(18),
     @TypeOfRef                           numeric(18),
     @Amount                              numeric(18,2),
     @SignCode                            int,
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime

AS
IF EXISTS(select PkSrNo from MSchemeAchieverDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MSchemeAchieverDetails
       SET
		  SchemeAchDate = @SchemeAchDate,
          SchemeAchieverNo = @SchemeAchieverNo,
          LedgerNo = @LedgerNo,
          RefNo = @RefNo,
          TypeOfRef = @TypeOfRef,
          Amount = @Amount,
          SignCode = @SignCode,
          CompanyNo = @CompanyNo,
          StatusNo = 2,
          UserID = @UserID,
		  UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo
     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MSchemeAchieverDetails
       DBCC CHECKIDENT(''MSchemeAchieverDetails'', RESEED, @Id)
		if(@TypeOfRef=3 or @TypeOfRef=1)
		SELECT @RefNo=isnull(MAX(RefNo),0) + 1 FROM MSchemeAchieverDetails
		Select @SchemeAchSrNo=isnull(MAX(SchemeAchSrNo),0) + 1 FROM MSchemeAchieverDetails Where RefNo=@RefNo

       INSERT INTO MSchemeAchieverDetails(
		  SchemeAchSrNo,
		  SchemeAchDate,
          SchemeAchieverNo,
          LedgerNo,
          RefNo,
          TypeOfRef,
          Amount,
          SignCode,
          CompanyNo,
          StatusNo,
          UserID,
		  UserDate
)
       VALUES(
		  @SchemeAchSrNo,
		  @SchemeAchDate,
          @SchemeAchieverNo,
          @LedgerNo,
          @RefNo,
          @TypeOfRef,
          @Amount,
          @SignCode,
          @CompanyNo,
          1,
          @UserID,
		  @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLanguageDictionary]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 25/05/2013
CREATE PROCEDURE [dbo].[AddMLanguageDictionary]
     @PkSrNo                              numeric(18),
     @EnglishVal                          varchar(50),
     @MarathiVal                          nvarchar(50),
     @HindiVal                          nvarchar(50),
  @KarnatakaVal                          nvarchar(50),
	 @CompanyNo						    numeric(18)
AS
IF EXISTS(select PkSrNo from MLanguageDictionary
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MLanguageDictionary
       SET
          EnglishVal = @EnglishVal,
          MarathiVal = Case When (@MarathiVal<>'''') then @MarathiVal else MarathiVal end,
          HindiVal = Case When (@HindiVal<>'''') then @HindiVal else HindiVal end,
KarnatakaVal = Case When (@KarnatakaVal<>'''') then @KarnatakaVal else KarnatakaVal end,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MLanguageDictionary
       DBCC CHECKIDENT(''MLanguageDictionary'', RESEED, @Id)
       INSERT INTO MLanguageDictionary(
          EnglishVal,
          MarathiVal,
          HindiVal,
KarnatakaVal,
		  CompanyNo,
          StatusNo
)
       VALUES(
          @EnglishVal,
          @MarathiVal,
          @HindiVal,
@KarnatakaVal,
		  @CompanyNo,
          1
)

END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMSuppCategory]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/04/2014
create PROCEDURE [dbo].[AddMSuppCategory]
     @CategoryNo                          numeric(18),
     @CategoryName                        varchar(100),
     @CategoryDesc                        varchar(150),
     @CompanyNo                           numeric(18),
     @StatusNo                            numeric(18),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select CategoryNo from MSuppCategory
          where
          CategoryNo = @CategoryNo)
     BEGIN
       --Update existing row
       UPDATE MSuppCategory
       SET
          CategoryName = @CategoryName,
          CategoryDesc = @CategoryDesc,
          CompanyNo = @CompanyNo,
          StatusNo = @StatusNo,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          CategoryNo = @CategoryNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CategoryNo),0) From MSuppCategory
       DBCC CHECKIDENT(''MSuppCategory'', RESEED, @Id)
       INSERT INTO MSuppCategory(
          CategoryName,
          CategoryDesc,
          CompanyNo,
          StatusNo,
          IsActive,
          UserID,
          UserDate
)
       VALUES(
          @CategoryName,
          @CategoryDesc,
          @CompanyNo,
          @StatusNo,
          @IsActive,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMSuppCategory]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/04/2014
create PROCEDURE  [dbo].[DeleteMSuppCategory] 
@CategoryNo                         numeric(18)


AS

--       DELETE FROM MSuppCategory
--       WHERE
--          CategoryNo = @CategoryNo

update MSuppCategory set IsActive=''false'' WHERE
          CategoryNo = @CategoryNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMStockCountType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 19-Nov-2013
CREATE PROCEDURE [dbo].[AddMStockCountType]
	@CountTypeNo			numeric(18),
	@DefaultValue			datetime,
	@IsActive				bit,
	@CompanyNo				numeric(18),
	@UserDate				datetime,
	@UserID					numeric(18)
 AS 
 IF EXISTS ( Select CountTypeNo From MStockCountType 
	 Where 
	 CountTypeNo =@CountTypeNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE MStockCountType 
	 SET 

	
	DefaultValue=@DefaultValue,
	IsActive=@IsActive,
	CompanyNo=@CompanyNo,
	StatusNo=2,
	UserDate=@UserDate,
	UserID=@UserID
	Where 
	 CountTypeNo=@CountTypeNo
 End
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTChequePrinting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 17/12/2014
CREATE PROCEDURE [dbo].[AddTChequePrinting]
     @PkSrNo                              numeric(18),
	 @PrintingUserNo					  numeric(18),
     @PrintingDate                        datetime,
	 @IsPurchase						  bit,
     @FKVoucherNo                         numeric(18),
     @LedgerNo                            numeric(18),
     @ByLedgerNo                          numeric(18),
     @ChequeDate                          datetime,
     @ChequeNo                            varchar(50),
	 @FKChequeNo						  numeric(18),
     @Remark1                             varchar(150),
     @Remark2                             varchar(150),
     @Remark3                             varchar(150),
     @ChqStatusNo                         numeric(18),
     @BankDate                            datetime,
     @CompanyNo                           numeric(18)
AS
IF EXISTS(select PkSrNo from TChequePrinting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TChequePrinting
       SET
		  PrintingUserNo = PrintingUserNo,
          PrintingDate = @PrintingDate,
		  IsPurchase = @IsPurchase,
          FKVoucherNo = @FKVoucherNo,
          LedgerNo = @LedgerNo,
          ByLedgerNo = @ByLedgerNo,
          ChequeDate = @ChequeDate,
          ChequeNo = @ChequeNo,
		  FKChequeNo = @FKChequeNo,
          Remark1 = @Remark1,
          Remark2 = @Remark2,
          Remark3 = @Remark3,
          ChqStatusNo = @ChqStatusNo,
          BankDate = @BankDate,
          CompanyNo = @CompanyNo,
		  StatusNo = 2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
		Select IsNull(Max(PrintingUserNo),0)+1 From TChequePrinting
		
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TChequePrinting
       DBCC CHECKIDENT(''TChequePrinting'', RESEED, @Id)
       INSERT INTO TChequePrinting(
		  PrintingUserNo,
          PrintingDate,
		  IsPurchase,
          FKVoucherNo,
          LedgerNo,
          ByLedgerNo,
          ChequeDate,
          ChequeNo,
		  FKChequeNo,
          Remark1,
          Remark2,
          Remark3,
          ChqStatusNo,
          BankDate,
          CompanyNo,
		  StatusNo
)
       VALUES(
		  @PrintingUserNo,
          @PrintingDate,
		  @IsPurchase,
          @FKVoucherNo,
          @LedgerNo,
          @ByLedgerNo,
          @ChequeDate,
          @ChequeNo,
		  @FKChequeNo,
          @Remark1,
          @Remark2,
          @Remark3,
          @ChqStatusNo,
          @BankDate,
          @CompanyNo,
		  1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetChequePrintDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created On 20-Jan-2019
create Procedure [dbo].[GetChequePrintDetails]
@ChqPrintingNo	numeric(18)
AS
Begin
	SELECT     MLedger.LedgerName, TChequePrinting.ChequeDate, TVoucherEntry.BilledAmount As ChequeAmount, TChequePrinting.Remark1, TChequePrinting.Remark2, 
                      TChequePrinting.Remark3
FROM         TChequePrinting INNER JOIN
                      MLedger ON TChequePrinting.LedgerNo = MLedger.LedgerNo INNER JOIN
                      TVoucherEntry ON TChequePrinting.FKVoucherNo = TVoucherEntry.PkVoucherNo
WHERE     (TChequePrinting.PkSrNo = @ChqPrintingNo)	
End


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTChequePrinting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 17/12/2014
CREATE PROCEDURE  [dbo].[DeleteTChequePrinting] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM TChequePrinting
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMNarration]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 03/12/2011
CREATE PROCEDURE  [dbo].[DeleteMNarration] 
@NarrationNo                        numeric(18)


AS
		Update MNarration set IsActive=''False'' Where NarrationNo = @NarrationNo
       /*DELETE FROM MNarration
       WHERE
          NarrationNo = @NarrationNo*/
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMNarration]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 03/12/2011
CREATE PROCEDURE [dbo].[AddMNarration]
     @NarrationNo                         numeric(18),
     @NarrationName                       varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime
  -- @ModifiedBy                          varchar(50)
AS
IF EXISTS(select NarrationNo from MNarration
          where
          NarrationNo = @NarrationNo)
     BEGIN
       --Update existing row
       UPDATE MNarration
       SET
          NarrationName = @NarrationName,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy =  isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          NarrationNo = @NarrationNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(NarrationNo),0) From MNarration
       DBCC CHECKIDENT(''MNarration'', RESEED, @Id)
       INSERT INTO MNarration(
          NarrationName,
          IsActive,
          UserID,
          UserDate
          --ModifiedBy
)
       VALUES(
          @NarrationName,
          @IsActive,
          @UserID,
          @UserDate
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMFooterDiscount]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 03/12/2013
CREATE PROCEDURE [dbo].[AddMFooterDiscount]
     @PkSrNo                              numeric(18),
     @FooterDiscUserNo                    numeric(18),
     @FooterDiscDate                      datetime,
     @PeriodFrom                          datetime,
     @PeriodTo                            datetime,
     @IsActive                           numeric(18),
	@DiscType							 numeric(18),
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @ReturnID                           int output
AS
IF EXISTS(select PkSrNo from MFooterDiscount
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MFooterDiscount
       SET
          FooterDiscUserNo = @FooterDiscUserNo,
          FooterDiscDate = @FooterDiscDate,
          PeriodFrom = @PeriodFrom,
          PeriodTo = @PeriodTo,
          StatusNo = 2,
          IsActive= @IsActive,
		  DiscType=@DiscType,
          CompanyNo = @CompanyNo,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo
		  set @ReturnID = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MFooterDiscount

		Select @FooterDiscUserNo=IsNull(Max(FooterDiscUserNo),0)+1 from MFooterDiscount 

       DBCC CHECKIDENT(''MFooterDiscount'', RESEED, @Id)
       INSERT INTO MFooterDiscount(
          FooterDiscUserNo,
          FooterDiscDate,
          PeriodFrom,
          PeriodTo,
          StatusNo,
          IsActive,
		  DiscType,
          CompanyNo,
          UserID,
          UserDate
)
       VALUES(
          @FooterDiscUserNo,
          @FooterDiscDate,
          @PeriodFrom,
          @PeriodTo,
          1,
          @IsActive,
		  @DiscType,
          @CompanyNo,
          @UserID,
          @UserDate
)
set @ReturnID = Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMFooterDiscount]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 03/12/2013
CREATE PROCEDURE  [dbo].[DeleteMFooterDiscount] 
@PkSrNo                             numeric(18),
@IsActive							int

AS
		
Update MFooterDiscount Set IsActive=@IsActive,StatusNo=2 Where
		  PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetRegister]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetRegister]

 @VchNo int,
 @CompNo numeric(18),
@FromDate datetime,
@ToDate datetime,
@PartyNo		   varchar(max)
as 
set @VchNo =15
set @CompNo =1
set @FromDate = ''01-Jan-2018''
set @toDate = ''01-Jan-2020''


SELECT     Mledger.ledgerno , TVoucherEntry.VoucherUserNo as BillNo,TVoucherEntry.Reference as  VoucherNo, TVoucherEntry.VoucherDate as Date , TVoucherEntry.BilledAmount, 
MLedger.LedgerName as Party , MPayType.PayTypeName,mVoucherType.VoucherTypeName , 
 case 
    when MPayType.controlUnder in(2,6) then billedamount 
    else 0 
    end     AS CashAmt,
 case 
    when MPayType.controlUnder in(3) then billedamount 
    else 0 
    end     AS CreditAmt,
 
 case 
    when MPayType.controlUnder in(4) then billedamount 
    else 0 
    end     AS ChequeAmt,

 case 
    when MPayType.controlUnder in(5) then billedamount 
    else 0 
    end     AS CCAmt


 

FROM         TVoucherEntry INNER JOIN
            fn_Split ((@PartyNo),'','')As Party_BILL on TVoucherEntry.LedgerNo= CAST(Party_BILL.value AS numeric) inner join                      
                      MLedger ON TVoucherEntry.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo inner join  
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode

where 
 (TVoucherEntry.VoucherTypeCode = @VchNo) AND  (TVoucherEntry.VoucherDate >= @FromDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) and TVoucherEntry.IsCancel =0
 ORDER BY TVoucherEntry.VoucherDate' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LedgerOutstanding]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create  PROCEDURE [dbo].[LedgerOutstanding] --exec LedgerBookSummary ''01-Apr-2018'',''01-Apr-2019'',15,1,''104''
--@FromDate          datetime,
@ToDate            datetime,
@VchType           int,
@CompanyNo		   varchar(50),
@PartyNo		   varchar(max)

AS

declare @VType     varchar(10)
declare @OpBal      int 

if(@VchType=15)
       begin
        set @VType=''15,30,12''
		set @OpBal = 36 
       end   
else if(@VchType=9)
     begin
		set @OpBal = 36 
        set @VType=''9,31,13''
    end 
else if(@VchType=115)
     begin
        set @VType=''115,130,112''
		set @OpBal = 136 
     end
else if(@VchType=109)
    begin
		set @OpBal = 136 
        set @VType=''109,131,113''
    end 

Select  voucherdate,ledgerno , sum(credit) as credit ,sum(debit) as debit , 
      ledgername  from (

SELECT   0 as PkVoucherNo, @ToDate as VoucherDate, mledger.ledgerno,
         (Select Case 
         When @VchType in ( 109, 9) Then  tvoucherdetails.credit
         else  tvoucherdetails.debit end ) as credit ,   
         
         (Select Case 
         When @VchType in ( 109, 9) Then  tvoucherdetails.debit
         else  tvoucherdetails.credit end ) as debit ,  MLedger.LedgerName 

FROM    TVoucherEntry inner join  tvoucherdetails on TVoucherEntry.pkvoucherno  = tvoucherdetails.fkvoucherno
   
       inner join    fn_Split ((@PartyNo),'','')As Party_BILL on tvoucherdetails.LedgerNo= CAST(Party_BILL.value AS numeric)
       INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) 
      
where  TVoucherEntry.IsCancel =0 and TVoucherEntry.VoucherTypeCode in (@OpBal)  and  TVoucherEntry.VoucherDate < = @ToDate -- @FromDate 
union 

SELECT    0 as  PkVoucherNo,  @ToDate as VoucherDate,mledger.ledgerno,
  (Select Case 
         When VoucherTypeCode in ( 109, 9,15,115) Then TVoucherentry.billedamount
         When VoucherTypeCode in ( 31,131,30,130, 12, 11,111,112) Then 0
         else 0 
         end ) as Credit, 
       
 (Select Case 
         When VoucherTypeCode in ( 109, 9,15,115) Then 0
         When VoucherTypeCode in ( 31,131,30,130, 12, 11,111,112) Then TVoucherentry.billedamount
         else 0 
         end ) as Debit, MLedger.LedgerName 
FROM         TVoucherEntry 
                     
inner join    fn_Split ((@PartyNo),'','')As Party_BILL on TVoucherEntry.LedgerNo= CAST(Party_BILL.value AS numeric)
       INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) 
       inner join fn_Split ((@VType),'','')As VType on TVoucherEntry.vouchertypecode= CAST(VType.value AS numeric)
 
where TVoucherEntry.VoucherDate < =@ToDate and TVoucherEntry.IsCancel =0

)  as tbl1 
 group by  
 voucherdate,ledgerno , ledgername











' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOutstandingForBills]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'Create PROCEDURE [dbo].[GetOutstandingForBills] --exec GetOutstandingForBills ''01-Apr-2019'',''01-Apr-2020'',115,1,''3008''
@FromDate          datetime,
@ToDate            datetime,
@VchType           int,
@CompanyNo		   varchar(50),
@PartyNo		   varchar(max)
AS

declare @VType             varchar(10)
declare @OpBal      int 

if(@VchType=15)
       begin
        set @VType=''15,30,12''
		set @OpBal = 36 
       end   
else if(@VchType=9)
     begin
		set @OpBal = 36 
        set @VType=''9,31,13''
    end 
else if(@VchType=115)
     begin
        set @VType=''115,130,112''
		set @OpBal = 136 
     end
else if(@VchType=109)
    begin
		set @OpBal = 136 
        set @VType=''109,131,113''
    end 

Select Sum(credit-debit) as balance from (

SELECT   0 as PkVoucherNo, @FromDate as VoucherDate, mledger.ledgerno,'' '' as voucheruserno,
         (Select Case 
         When @VchType in ( 109, 9) Then  tvoucherdetails.credit
         else  tvoucherdetails.debit end ) as credit ,   
         
         (Select Case 
         When @VchType in ( 109, 9) Then  tvoucherdetails.debit
         else  tvoucherdetails.credit end ) as debit ,   

         0 as VoucherTypeCode, ''Opening Balance'' as Remark, 
         

0 as PayTypeNo,'''' as paytypename,MLedger.LedgerName ,'''' as narration ,  0 as vtype

FROM    TVoucherEntry inner join  tvoucherdetails on TVoucherEntry.pkvoucherno  = tvoucherdetails.fkvoucherno
   
       inner join    fn_Split ((@PartyNo),'','')As Party_BILL on tvoucherdetails.LedgerNo= CAST(Party_BILL.value AS numeric)
       INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) 
      
where  TVoucherEntry.IsCancel =0 and TVoucherEntry.VoucherTypeCode in (@OpBal)  and  TVoucherEntry.VoucherDate <   @FromDate 
union 

SELECT    0 as  PkVoucherNo,  @FromDate as VoucherDate,mledger.ledgerno,'' '' as voucheruserno,
  (Select Case 
         When VoucherTypeCode in ( 109, 9,15,115) Then TVoucherentry.billedamount
         When VoucherTypeCode in ( 31,131,30,130, 12, 11,111,112) Then 0
         else 0 
         end ) as Credit, 
       
 (Select Case 
         When VoucherTypeCode in ( 109, 9,15,115) Then 0
         When VoucherTypeCode in ( 31,131,30,130, 12, 11,111,112) Then TVoucherentry.billedamount
         else 0 
         end ) as Debit, 
       
    0 as VoucherTypeCode, ''Opening Balance'' as Remark, 0 as PayTypeNo,'''' as paytypename, MLedger.LedgerName , '''' as narration, 0 as vtype 
FROM         TVoucherEntry 
                     
inner join    fn_Split ((@PartyNo),'','')As Party_BILL on TVoucherEntry.LedgerNo= CAST(Party_BILL.value AS numeric)
       INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) 
       inner join fn_Split ((@VType),'','')As VType on TVoucherEntry.vouchertypecode= CAST(VType.value AS numeric)
 
where TVoucherEntry.VoucherDate < @FromDate and TVoucherEntry.IsCancel =0



union 

SELECT    0 as  PkVoucherNo,   VoucherDate,mledger.ledgerno,
    (Select Case  when  VoucherTypeCode in (9,109) then  TVoucherEntry.reference 
                  else    CAST(TVoucherEntry.voucheruserno as varchar) 
         end ) as voucheruserno,
              
  (Select Case When VoucherTypeCode in ( 109, 9,15,115) Then TVoucherentry.billedamount else 0 end ) as Credit, 
       (Select Case When VoucherTypeCode in (31,131,30,130, 12, 11,111,112) Then  TVoucherentry.billedamount else 0 end ) as debit,  
      TVoucherEntry.VoucherTypeCode, TVoucherEntry.Remark, TVoucherEntry.PayTypeNo, mpaytype.PayTypeName,MLedger.LedgerName , TVoucherEntry.narration , 2 as vtype 
FROM         TVoucherEntry 
inner join    fn_Split ((@PartyNo),'','')As Party_BILL on TVoucherEntry.LedgerNo= CAST(Party_BILL.value AS numeric)
       inner join fn_Split ((@VType),'','')As VType on TVoucherEntry.vouchertypecode= CAST(VType.value AS numeric)
inner join mpaytype on mpaytype.PKPayTypeNo = TVoucherEntry.PayTypeNo 
       INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) 

where TVoucherEntry.VoucherDate >= @FromDate  and TVoucherEntry.VoucherDate <= @ToDate and TVoucherEntry.IsCancel =0







)  as tbl1 
 group by  
 ledgerno 



--End




 ' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LedgerSummary]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE  PROCEDURE [dbo].[LedgerSummary] --exec LedgerSummary ''01-Apr-2018'',''01-Apr-2019'',115,1,''3008''
@FromDate          datetime,
@ToDate            datetime,
@VchType           int,
@CompanyNo		   varchar(50),
@PartyNo		   varchar(max)
AS

declare @VType             varchar(10)
declare @OpBal      int 

if(@VchType=15)
       begin
        set @VType=''15,30,12''
		set @OpBal = 36 
       end   
else if(@VchType=9)
     begin
		set @OpBal = 36 
        set @VType=''9,31,13''
    end 
else if(@VchType=115)
     begin
        set @VType=''115,130,112''
		set @OpBal = 136 
     end
else if(@VchType=109)
    begin
		set @OpBal = 136 
        set @VType=''109,131,113''
    end 

Select pkvoucherno , voucherdate,ledgerno , voucheruserno,sum(credit) as credit ,sum(debit) as debit ,vouchertypecode, 
       remark,paytypeno ,'''' as paytypename,ledgername,narration, vtype , paytypename from (

SELECT   0 as PkVoucherNo, @FromDate as VoucherDate, mledger.ledgerno,'' '' as voucheruserno,
         (Select Case 
         When @VchType in ( 109, 9) Then  tvoucherdetails.credit
         else  tvoucherdetails.debit end ) as credit ,   
         
         (Select Case 
         When @VchType in ( 109, 9) Then  tvoucherdetails.debit
         else  tvoucherdetails.credit end ) as debit ,   

         0 as VoucherTypeCode, ''Opening Balance'' as Remark, 
         

0 as PayTypeNo,'''' as paytypename,MLedger.LedgerName ,'''' as narration ,  0 as vtype

FROM    TVoucherEntry inner join  tvoucherdetails on TVoucherEntry.pkvoucherno  = tvoucherdetails.fkvoucherno
   
       inner join    fn_Split ((@PartyNo),'','')As Party_BILL on tvoucherdetails.LedgerNo= CAST(Party_BILL.value AS numeric)
       INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) 
      
where  TVoucherEntry.IsCancel =0 and TVoucherEntry.VoucherTypeCode in (@OpBal)  and  TVoucherEntry.VoucherDate <   @FromDate 
union 

SELECT    0 as  PkVoucherNo,  @FromDate as VoucherDate,mledger.ledgerno,'' '' as voucheruserno,
  (Select Case 
         When VoucherTypeCode in ( 109, 9,15,115) Then TVoucherentry.billedamount
         When VoucherTypeCode in ( 31,131,30,130, 12, 11,111,112) Then 0
         else 0 
         end ) as Credit, 
       
 (Select Case 
         When VoucherTypeCode in ( 109, 9,15,115) Then 0
         When VoucherTypeCode in ( 31,131,30,130, 12, 11,111,112) Then TVoucherentry.billedamount
         else 0 
         end ) as Debit, 
       
    0 as VoucherTypeCode, ''Opening Balance'' as Remark, 0 as PayTypeNo,'''' as paytypename, MLedger.LedgerName , '''' as narration, 0 as vtype 
FROM         TVoucherEntry 
                     
inner join    fn_Split ((@PartyNo),'','')As Party_BILL on TVoucherEntry.LedgerNo= CAST(Party_BILL.value AS numeric)
       INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) 
       inner join fn_Split ((@VType),'','')As VType on TVoucherEntry.vouchertypecode= CAST(VType.value AS numeric)
 
where TVoucherEntry.VoucherDate < @FromDate and TVoucherEntry.IsCancel =0

--union 

--
--SELECT   0 as PkVoucherNo, VoucherDate, mledger.ledgerno,'' '' as voucheruserno,
--           tvoucherdetails.credit as credit ,         tvoucherdetails.debit as debit ,        
--         TVoucherEntry.VoucherTypeCode, '''' as Remark,TVoucherEntry.PayTypeNo,mpaytype.PayTypeName,MLedger.LedgerName , TVoucherEntry.narration , 1 as vtype
--
--FROM    TVoucherEntry inner join  tvoucherdetails on TVoucherEntry.pkvoucherno  = tvoucherdetails.fkvoucherno
--     
--       inner join    fn_Split ((@PartyNo),'','')As Party_BILL on tvoucherdetails.LedgerNo= CAST(Party_BILL.value AS numeric)
--       
--       INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric)
--inner join mpaytype on mpaytype.PKPayTypeNo = TVoucherEntry.PayTypeNo 
--where  TVoucherEntry.VoucherTypeCode in (@OpBal) and  TVoucherEntry.VoucherDate >= @FromDate
--and TVoucherEntry.VoucherDate <= @ToDate  


union 

SELECT    0 as  PkVoucherNo,   VoucherDate,mledger.ledgerno,
    (Select Case  when  VoucherTypeCode in (9,109) then  TVoucherEntry.reference 
                  else    CAST(TVoucherEntry.voucheruserno as varchar) 
         end ) as voucheruserno,
              
  (Select Case When VoucherTypeCode in ( 109, 9,15,115) Then TVoucherentry.billedamount else 0 end ) as Credit, 
       (Select Case When VoucherTypeCode in (31,131,30,130, 12, 11,111,112) Then  TVoucherentry.billedamount else 0 end ) as debit,  
      TVoucherEntry.VoucherTypeCode, TVoucherEntry.Remark, TVoucherEntry.PayTypeNo, mpaytype.PayTypeName,MLedger.LedgerName , TVoucherEntry.narration , 2 as vtype 
FROM         TVoucherEntry 
inner join    fn_Split ((@PartyNo),'','')As Party_BILL on TVoucherEntry.LedgerNo= CAST(Party_BILL.value AS numeric)
       inner join fn_Split ((@VType),'','')As VType on TVoucherEntry.vouchertypecode= CAST(VType.value AS numeric)
inner join mpaytype on mpaytype.PKPayTypeNo = TVoucherEntry.PayTypeNo 
       INNER JOIN MLedger ON MLedger.LedgerNo = CAST(Party_BILL.value AS numeric) 

where TVoucherEntry.VoucherDate >= @FromDate  and TVoucherEntry.VoucherDate <= @ToDate and TVoucherEntry.IsCancel =0







)  as tbl1 
 group by  
pkvoucherno , voucherdate,ledgerno , voucheruserno,vouchertypecode, remark,paytypeno ,
 ledgername,narration, vtype,paytypename



--End





' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTOtherStockDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 24/05/2014
CREATE PROCEDURE  [dbo].[DeleteTOtherStockDetails] 
@PkSrNo                             numeric(18)


AS

		Declare @Qty numeric(18,2) ,@FKOtherStockTrnNo numeric(18)
		Select @Qty=IsNull(Quantity,0),@FKOtherStockTrnNo=FKOtherStockTrnNo From TOtherStockDetails Where PkSrNo = @PkSrNo
		
		Update TOtherStock set BalanceQty=BalanceQty+@Qty Where PKOtherStockTrnNo=@FKOtherStockTrnNo

       DELETE FROM TOtherStockDetails
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTOtherStockDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 23/05/2014
CREATE PROCEDURE [dbo].[AddTOtherStockDetails]
     @PkSrNo                              numeric(18),
     @FKVoucherNo                         numeric(18),
     @FKStockTrnNo                        numeric(18),
     @FKOtherVoucherNo                    numeric(18),
     @FKOtherStockTrnNo                   numeric(18),
	 @ItemNo							  numeric(18),
     @Quantity                            numeric(18,2),
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @CompanyNo                           numeric(18)
AS
Declare @Qty numeric(18,2)
IF EXISTS(select PkSrNo from TOtherStockDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TOtherStockDetails
       SET
          FKVoucherNo = @FKVoucherNo,
          FKStockTrnNo = @FKStockTrnNo,
          FKOtherVoucherNo = @FKOtherVoucherNo,
          FKOtherStockTrnNo = @FKOtherStockTrnNo,
		  ItemNo = @ItemNo,
          Quantity = @Quantity,
          UserID = @UserID,
          UserDate = @UserDate,
          CompanyNo = @CompanyNo,
		  StatusNo = 2
       WHERE
          PkSrNo = @PkSrNo
		
		Begin
		
			Select @Qty=IsNull(Sum(Quantity),0) From TOtherStockDetails Where FKOtherVoucherNo=@FKOtherVoucherNo
			AND FKStockTrnNo<>@FKStockTrnNo  AND FKOtherStockTrnNo=@FKOtherStockTrnNo
		
			set @Qty=@Qty+@Quantity
			Update TOtherStock set BalanceQty=Quantity-@Qty,StatusNo=2 Where PKOtherStockTrnNo=@FKOtherStockTrnNo
			if((Select Count(*) From TOtherStock where BalanceQty>0 AND FKVoucherNo = @FKOtherVoucherNo)=0)
				Update TOtherVoucherEntry set VoucherStatus=2,StatusNo=2 where PKOtherVoucherNo=@FKOtherVoucherNo
			else 
				Update TOtherVoucherEntry set VoucherStatus=1,StatusNo=2 where PKOtherVoucherNo=@FKOtherVoucherNo
		End
     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TOtherStockDetails
       DBCC CHECKIDENT(''TOtherStockDetails'', RESEED, @Id)
       INSERT INTO TOtherStockDetails(
          FKVoucherNo,
          FKStockTrnNo,
          FKOtherVoucherNo,
          FKOtherStockTrnNo,
		  ItemNo,
          Quantity,
          UserID,
          UserDate,
          CompanyNo,
		  StatusNo
)
       VALUES(
          @FKVoucherNo,
          @FKStockTrnNo,
          @FKOtherVoucherNo,
          @FKOtherStockTrnNo,
		  @ItemNo,
          @Quantity,
          @UserID,
          @UserDate,
          @CompanyNo,
		  1
)
		Begin
			Select @Qty=IsNull(Sum(Quantity),0) From TOtherStockDetails Where FKOtherVoucherNo=@FKOtherVoucherNo
			AND FKOtherStockTrnNo=@FKOtherStockTrnNo  
			Update TOtherStock set BalanceQty=Quantity-@Qty Where PKOtherStockTrnNo=@FKOtherStockTrnNo
			Update TOtherVoucherEntry set VoucherStatus=1,StatusNo=2 where PKOtherVoucherNo=@FKOtherVoucherNo
			if((Select Count(*) From TOtherStock where BalanceQty>0 AND FKVoucherNo = @FKOtherVoucherNo)=0)
				Update TOtherVoucherEntry set VoucherStatus=2,StatusNo=2 where PKOtherVoucherNo=@FKOtherVoucherNo
		End
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMBranch]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE  [dbo].[DeleteMBranch] 
@BranchNo                           numeric(18)


AS
Update MBranch set IsActive=''False'',StatusNo=2 Where BranchNo = @BranchNo

--       DELETE FROM MBranch
--       WHERE
--          BranchNo = @BranchNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMBranch]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE [dbo].[AddMBranch]
     @BranchNo                            numeric(18),
     @BranchName                          varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select BranchNo from MBranch
          where
          BranchNo = @BranchNo)
     BEGIN
       --Update existing row
       UPDATE MBranch
       SET
          BranchName = @BranchName,
		  IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
	      CompanyNo=@CompanyNo,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          BranchNo = @BranchNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(BranchNo),0) From MBranch
       DBCC CHECKIDENT(''MBranch'', RESEED, @Id)
       INSERT INTO MBranch(
          BranchName,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
          --ModifiedBy
)
       VALUES(
          @BranchName,
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMPrinter]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 05/12/2011
CREATE PROCEDURE [dbo].[AddMPrinter]
     @PrinterNo                           numeric(18),
     @PrinterName                         varchar(50),
     @MachineName                         varchar(50),
     @MachineIP                           varchar(50),
     @IsDefault                           bit,
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime
     --@ModifiedBy                          varchar(50)
AS
IF (@IsDefault=''True'')
	Update MPrinter SET IsDefault=''false''

IF EXISTS(select PrinterNo from MPrinter
          where
          PrinterNo = @PrinterNo)
     BEGIN
       --Update existing row
       UPDATE MPrinter
       SET
          PrinterName = @PrinterName,
          MachineName = @MachineName,
          MachineIP = @MachineIP,
          IsDefault = @IsDefault,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          PrinterNo = @PrinterNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PrinterNo),0) From MPrinter
       DBCC CHECKIDENT(''MPrinter'', RESEED, @Id)
       INSERT INTO MPrinter(
          PrinterName,
          MachineName,
          MachineIP,
          IsDefault,
          IsActive,
          UserID,
          UserDate
         -- ModifiedBy
)
       VALUES(
          @PrinterName,
          @MachineName,
          @MachineIP,
          @IsDefault,
          @IsActive,
          @UserID,
          @UserDate
         -- @ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMPrinter]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 05/12/2011
CREATE PROCEDURE  [dbo].[DeleteMPrinter] 
@PrinterNo                          numeric(18)


AS
		
       UPDATE MPrinter SET IsActive = ''False'' WHERE  PrinterNo = @PrinterNo
       /*DELETE FROM MPrinter
       WHERE
          PrinterNo = @PrinterNo*/
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMBank]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE  [dbo].[DeleteMBank] 
@BankNo                             numeric(18)


AS
Update MBank set IsActive=''False'',StatusNo=2 Where BankNo = @BankNo

--       DELETE FROM MBank
--       WHERE
--          BankNo = @BankNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMBank]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE [dbo].[AddMBank]
     @BankNo                              numeric(18),
     @BankName                            varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select BankNo from MBank
          where
          BankNo = @BankNo)
     BEGIN
       --Update existing row
       UPDATE MBank
       SET
          BankName = @BankName,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          BankNo = @BankNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(BankNo),0) From MBank
       DBCC CHECKIDENT(''MBank'', RESEED, @Id)
       INSERT INTO MBank(
          BankName,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          @BankName,
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMStockCountSchedule]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 20/11/2013
CREATE PROCEDURE [dbo].[AddMStockCountSchedule]
     @PkSrNo                              numeric(18),
     @ItemNo                              numeric(18),
     @CountTypeNo                         numeric(18),
     @CountScheduleDate                       datetime,
     @IsActive                            bit,
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkSrNo from MStockCountSchedule
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MStockCountSchedule
       SET
          ItemNo = @ItemNo,
          CountTypeNo = @CountTypeNo,
          CountScheduleDate = @CountScheduleDate,
          IsActive = @IsActive,
          StatusNo = 2,
          CompanyNo = @CompanyNo,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MStockCountSchedule
       DBCC CHECKIDENT(''MStockCountSchedule'', RESEED, @Id)
       INSERT INTO MStockCountSchedule(
          ItemNo,
          CountTypeNo,
          CountScheduleDate,
          IsActive,
          StatusNo,
          CompanyNo,
          UserID,
          UserDate
)
       VALUES(
          @ItemNo,
          @CountTypeNo,
          @CountScheduleDate,
          @IsActive,
          1,
          @CompanyNo,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMStockCountSchedule]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 20/11/2013
CREATE PROCEDURE  [dbo].[DeleteMStockCountSchedule] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MStockCountSchedule
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMUserMenuMaster]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/02/2011
CREATE PROCEDURE [dbo].[AddMUserMenuMaster]
    @PKSrNo                             numeric(18),
     @FKUserId                            numeric(18),
     @Master                             varchar(MAX),
	 @Sales								 varchar(MAX),
	 @Purchase							 varchar(MAX),
     @Accounts                            varchar(MAX),
     @Reports                             varchar(MAX),
	 @Settings							  varchar(MAX),
	 @Utilities                             varchar(MAX),
	 @Hidden                               varchar(MAX),
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select FKUserId from MUserMenuMaster
          where
          FKUserId = @FKUserId)
     BEGIN
       --Update existing row
       UPDATE MUserMenuMaster
       SET
          Master = @Master,
		  Sales = @Sales,
		  Purchase = @Purchase,
          Accounts = @Accounts,
          Reports = @Reports,
		  Settings = @Settings,
		  Utilities = @Utilities,
		  Hidden = @Hidden,
          StatusNo=2,
		  CompanyNo = @CompanyNo
       WHERE
          FKUserId = @FKUserId

     END
ELSE
     BEGIN
       --Insert new row
		
		Declare @Id numeric
	   SELECT @Id=Max(PKSrNo) from MUserMenuMaster
	   DBCC CHECKIDENT(''MUserMenuMaster'', RESEED, @Id)

       INSERT INTO MUserMenuMaster(
		  --PKSrNo,          
		  FKUserId,
          Master,
		  Sales,
		  Purchase,
          Accounts,
          Reports,
		  Settings,
		  Utilities,
		  Hidden,
          StatusNo,
		  CompanyNo
)
       VALUES(
		  --@PKSrNo,
          @FKUserId,
          @Master,
		  @Sales,
		  @Purchase,
          @Accounts,
          @Reports,
		  @Settings,
		  @Utilities,
		  @Hidden,
          1,
		  @CompanyNo
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTQuotationDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[DeleteTQuotationDetails] 
@PkSrNo                        numeric(18)
AS

      Delete From TQuotationDetails
              WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTQuotation]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[DeleteTQuotation] 
@QuotationNo                        numeric(18)
AS

    Delete From TQuotationDetails 
		 WHERE
          FKQuotationNo = @QuotationNo

      Delete From TQuotation
              WHERE
          QuotationNo = @QuotationNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTQuotationDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[AddTQuotationDetails]
	@PkSrNo				numeric(18),
	@FkQuotationNo		numeric(18),
	@LedgerNo			numeric(18),
	@ItemNo				numeric(18),
	@MRP				numeric(18,2),
	@Rate				numeric(18,2),
	@FkRateSettingNo	numeric(18),
	@CompanyNo			numeric(18),
	@StatusNo			numeric(18),
    @IsClose            bit
 AS 
 IF EXISTS ( Select PkSrNo From TQuotationDetails 
	 Where 
	 PkSrNo =@PkSrNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE TQuotationDetails 
	 SET 

	FkQuotationNo=@FkQuotationNo,
	LedgerNo=@LedgerNo,
	ItemNo=@ItemNo,
	MRP=@MRP,
	Rate=@Rate,
	FkRateSettingNo=@FkRateSettingNo,
	CompanyNo=@CompanyNo,
	StatusNo=2,
    IsClose=@IsClose
	Where 
	 PkSrNo=@PkSrNo
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(PkSrNo),0) From TQuotationDetails 
	  DBCC CHECKIDENT(''TQuotationDetails'', RESEED, @Id) 
	  INSERT INTO TQuotationDetails( 
	FkQuotationNo,
	LedgerNo,
	ItemNo,
	MRP,
	Rate,
	FkRateSettingNo,
	CompanyNo,
	StatusNo,
    IsClose 
)
	  VALUES(
	@FkQuotationNo,
	@LedgerNo,
	@ItemNo,
	@MRP,
	@Rate,
	@FkRateSettingNo,
	@CompanyNo,
	1,
    @IsClose
	)
	END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTQuotationDetails1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[AddTQuotationDetails1]
	@PkSrNo				numeric(18),
	@FkQuotationNo		numeric(18),
	@LedgerNo			numeric(18),
	@ItemNo				numeric(18),
	@MRP				numeric(18,2),
	@Rate				numeric(18,2),
	@FkRateSettingNo	numeric(18),
	@CompanyNo			numeric(18),
	@StatusNo			numeric(18),
    @IsClose            bit
 AS 
 IF EXISTS ( Select PkSrNo From TQuotationDetails 
	 Where 
	 PkSrNo =@PkSrNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE TQuotationDetails 
	 SET 

	FkQuotationNo=@FkQuotationNo,
	LedgerNo=@LedgerNo,
	ItemNo=@ItemNo,
	MRP=@MRP,
	Rate=@Rate,
	FkRateSettingNo=@FkRateSettingNo,
	CompanyNo=@CompanyNo,
	StatusNo=2,
    IsClose=@IsClose
	Where 
	 PkSrNo=@PkSrNo
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(PkSrNo),0) From TQuotationDetails 
	  DBCC CHECKIDENT(''TQuotationDetails'', RESEED, @Id) 
	  INSERT INTO TQuotationDetails( 
	FkQuotationNo,
	LedgerNo,
	ItemNo,
	MRP,
	Rate,
	FkRateSettingNo,
	CompanyNo,
	StatusNo,
    IsClose 
)
	  VALUES(
	@FkQuotationNo,
	@LedgerNo,
	@ItemNo,
	@MRP,
	@Rate,
	@FkRateSettingNo,
	@CompanyNo,
	1,
    @IsClose
	)
	END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMItemDiscountDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/12/2013
CREATE PROCEDURE [dbo].[AddMItemDiscountDetails]
     @PkSrNo                              numeric(18),
     @ItemBrandDiscNo                     numeric(18),
     @ItemNo                              numeric(18),
     @FkRateSettingNo                     numeric(18),
     @DiscPercentage                      numeric(18,2),
	 @MRP								  numeric(18,2),
     @IsActive                            bit,
     @CompanyNo                           numeric(18)
AS
IF EXISTS(select PkSrNo from MItemDiscountDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MItemDiscountDetails
       SET
          ItemBrandDiscNo = @ItemBrandDiscNo,
          ItemNo = @ItemNo,
          FkRateSettingNo = @FkRateSettingNo,
          DiscPercentage = @DiscPercentage,
		  MRP = @MRP,
          IsActive = @IsActive,
          StatusNo = 2,
          CompanyNo = @CompanyNo
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MItemDiscountDetails
       DBCC CHECKIDENT(''MItemDiscountDetails'', RESEED, @Id)
       INSERT INTO MItemDiscountDetails(
          ItemBrandDiscNo,
          ItemNo,
          FkRateSettingNo,
          DiscPercentage,
		  MRP,
          IsActive,
          StatusNo,
          CompanyNo
)
       VALUES(
          @ItemBrandDiscNo,
          @ItemNo,
          @FkRateSettingNo,
          @DiscPercentage,
		  @MRP,
          @IsActive,
          1,
          @CompanyNo
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMItemDiscountDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/12/2013
CREATE PROCEDURE  [dbo].[DeleteMItemDiscountDetails] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MItemDiscountDetails
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTQuotation]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 15-Mar-2014
create PROCEDURE [dbo].[AddTQuotation]
	@QuotationNo	    	numeric(18),
	@QuotationUserNo		numeric(18),
	@QuotationDate	    	datetime,
	@FromDate		        datetime,
	@ToDate					datetime,
	@LedgerNo				numeric(18),
	@CompanyNo				numeric(18),
	@UserID					numeric(18),
	@UserDate				datetime,
	@ReturnID							  int output
 AS 
 IF EXISTS ( Select QuotationNo From TQuotation 
	 Where 
	 QuotationNo =@QuotationNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE TQuotation 
	 SET 

	QuotationUserNo=@QuotationUserNo,
	QuotationDate=@QuotationDate,
	FromDate=@FromDate,
	ToDate=@ToDate,
	LedgerNo=@LedgerNo,
	CompanyNo=@CompanyNo,
	UserID=@UserID,
	UserDate=@UserDate,
	ModifiedBy =  isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
    StatusNo=2
	Where 
	 QuotationNo=@QuotationNo
	set @ReturnID=@QuotationNo
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(QuotationNo),0) From TQuotation 
	  DBCC CHECKIDENT(''TQuotation'', RESEED, @Id) 
		Select @QuotationUserNo=IsNull(Max(QuotationUserNo),0)+1 from TQuotation 
	  INSERT INTO TQuotation( 
	QuotationUserNo,
	QuotationDate,
	FromDate,
	ToDate,
	LedgerNo,
	CompanyNo,
	StatusNo,
	UserID,
	UserDate 
)
	  VALUES(
	@QuotationUserNo,
	@QuotationDate,
	@FromDate,
	@ToDate,
	@LedgerNo,
	@CompanyNo,
	1,
	@UserID,
	@UserDate
	)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherChqCreditDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 18/09/2012
CREATE PROCEDURE [dbo].[AddTVoucherChqCreditDetails]
     @PkSrNo                              numeric(18),
     @FKVoucherNo                         numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @ChequeNo                            varchar(50),
     @ChequeDate                          datetime,
     @BankNo                              numeric(18),
     @BranchNo                            numeric(18),
     @CreditCardNo                        varchar(50),
     @Amount                              numeric(18,2),
	 @IsPost							  bit,
	 @PostFkVoucherNo					  numeric(18),
	 @PostFkVoucherTrnNo				  numeric(18),
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select PkSrNo from TVoucherChqCreditDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TVoucherChqCreditDetails
       SET
          FKVoucherNo = @FKVoucherNo,
          FkVoucherTrnNo = @FkVoucherTrnNo,
          ChequeNo = @ChequeNo,
          ChequeDate = @ChequeDate,
          BankNo = @BankNo,
          BranchNo = @BranchNo,
          CreditCardNo = @CreditCardNo,
          Amount = @Amount,
		  IsPost=@IsPost,
		  CompanyNo= @CompanyNo,
		  StatusNo = 2
		  
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TVoucherChqCreditDetails
       DBCC CHECKIDENT(''TVoucherChqCreditDetails'', RESEED, @Id)
       INSERT INTO TVoucherChqCreditDetails(
          FKVoucherNo,
          FkVoucherTrnNo,
          ChequeNo,
          ChequeDate,
          BankNo,
          BranchNo,
          CreditCardNo,
          Amount,
		  IsPost,
		  PostFkVoucherNo,
		  PostFkVoucherTrnNo,
		  CompanyNo,
		  StatusNo
)
       VALUES(
          @FKVoucherNo,
          @FkVoucherTrnNo,
          @ChequeNo,
          @ChequeDate,
          @BankNo,
          @BranchNo,
          @CreditCardNo,
          @Amount,
		  @IsPost,
		  @PostFkVoucherNo,
		  @PostFkVoucherTrnNo,
		  @CompanyNo,
		  1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherChqCreditDetails1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 18/09/2012
Create PROCEDURE [dbo].[AddTVoucherChqCreditDetails1]
     @PkSrNo                              numeric(18),
     @FKVoucherNo                         numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @ChequeNo                            varchar(50),
     @ChequeDate                          datetime,
     @BankNo                              numeric(18),
     @BranchNo                            numeric(18),
     @CreditCardNo                        varchar(50),
     @Amount                              numeric(18,2),
	 @IsPost							  bit,
	 @PostFkVoucherNo					  numeric(18),
	 @PostFkVoucherTrnNo				  numeric(18),
	 @CompanyNo							  numeric(18),
     @StatusNo                             int
AS

 SET IDENTITY_INSERT TVoucherChqCreditDetails ON  
Begin  
       INSERT INTO TVoucherChqCreditDetails(
          PkSrNo,     
          FKVoucherNo,
          FkVoucherTrnNo,
          ChequeNo,
          ChequeDate,
          BankNo,
          BranchNo,
          CreditCardNo,
          Amount,
		  IsPost,
		  PostFkVoucherNo,
		  PostFkVoucherTrnNo,
		  CompanyNo,
		  StatusNo
)
       VALUES(
           @PkSrNo,    
          @FKVoucherNo,
          @FkVoucherTrnNo,
          @ChequeNo,
          @ChequeDate,
          @BankNo,
          @BranchNo,
          @CreditCardNo,
          @Amount,
		  @IsPost,
		  @PostFkVoucherNo,
		  @PostFkVoucherTrnNo,
		  @CompanyNo,
           @StatusNo
		  
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTVoucherChqCreditDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 18/09/2012
CREATE PROCEDURE  [dbo].[DeleteTVoucherChqCreditDetails] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM TVoucherChqCreditDetails
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[GetTaxInfo]'))
EXEC dbo.sp_executesql @statement = N'create VIEW [dbo].[GetTaxInfo]
AS
SELECT     dbo.MItemTaxInfo.PkSrNo, dbo.MGroup.GroupName AS TaxType, MGroup_1.GroupName AS TransType, MLedger_1.LedgerName AS SalesAccount, 
                      dbo.MLedger.LedgerName AS TaxAccount, dbo.MTaxCalculationMethod.CalculationMethod AS CalculationMethodName, dbo.MItemTaxInfo.Percentage, 
                      dbo.MItemTaxInfo.FromDate, dbo.MItemTaxInfo.ItemNo, dbo.MItemTaxInfo.TaxLedgerNo, dbo.MItemTaxInfo.SalesLedgerNo, 
                      dbo.MItemTaxInfo.CalculationMethod AS CalculationMethodNo, MLedger_1.GroupNo AS TransTypeNo,dbo.MItemTaxInfo.FKTaxSettingNo
FROM         dbo.MItemTaxInfo INNER JOIN
                      dbo.MLedger ON dbo.MItemTaxInfo.TaxLedgerNo = dbo.MLedger.LedgerNo INNER JOIN
                      dbo.MLedger AS MLedger_1 ON dbo.MItemTaxInfo.SalesLedgerNo = MLedger_1.LedgerNo INNER JOIN
                      dbo.MGroup ON dbo.MLedger.GroupNo = dbo.MGroup.GroupNo INNER JOIN
                      dbo.MTaxCalculationMethod ON dbo.MItemTaxInfo.CalculationMethod = dbo.MTaxCalculationMethod.CalculationMethodNo INNER JOIN
                      dbo.MGroup AS MGroup_1 ON MLedger_1.GroupNo = MGroup_1.GroupNo
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTstockGRDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE [dbo].[AddTstockGRDetails]
     @PkTstockgrNo                         numeric(18),
     @FKstockTrnNo                           numeric(18),
     @FKVoucherNo                         numeric(18),
	 @Remarks                             varchar(100),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
     --@ModifiedBy                          text
AS
IF EXISTS(select PkTstockgrNo from TstockGRDetails
          where
          PkTstockgrNo = @PkTstockgrNo)
     BEGIN
       --Update existing row
       UPDATE TstockGRDetails
       SET
          FKstockTrnNo  = @FKstockTrnNo,
         FKVoucherNo = @FKVoucherNo,
	    Remarks =@Remarks ,
        
       
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          PkTstockgrNo = @PkTstockgrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkTstockgrNo),0) From TstockGRDetails
       DBCC CHECKIDENT(''TstockGRDetails'', RESEED, @Id)
       INSERT INTO TstockGRDetails(
 
          FKstockTrnNo,
         FKVoucherNo,
		  Remarks ,
        
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
          --ModifiedBy
)
       VALUES(

          @FKstockTrnNo,
          @FKVoucherNo,
		  @Remarks,
        
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
         -- @ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSaleVouchEntryDtlsByDate]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetSaleVouchEntryDtlsByDate]
@VchNo int,
@CompNo numeric(18),
@FrDate datetime,
@ToDate datetime,
@Type numeric(18),
@Temp numeric(18)


AS
Declare @TVch Table(VoucherDate datetime,LedgerName varchar(max),VoucherTypeName varchar(max),
					VoucherNo Numeric(18),VoucherUserNo varchar(max),CashAmt Numeric(18,2),
					CreditAmt Numeric(18,2), ChequeAmt Numeric(18,2),CCAmt Numeric(18,2), TotalAmt Numeric(18,2))
Declare @VoucherDate datetime,@LedgerName varchar(max),@VoucherTypeName varchar(max),
					@VoucherNo Numeric(18),@VoucherUserNo varchar(max),@CashAmt Numeric(18,2),
					@CreditAmt Numeric(18,2),@ChequeAmt numeric(18,2),@CCAmt Numeric(18,2),@TotalAmt Numeric(18,2),
					@LedgerNo numeric(18),@SLedgerNo numeric(18),@TempDate datetime,@TotChequeAmt numeric(18),
					@TotCreditAmt Numeric(18,2),@TotCCAmt Numeric(18,2),@TotCashAmt Numeric(18,2),@TotTotalAmt Numeric(18,2),@FromDate Datetime ,@IsCancel bit
Declare @TDayCashAmt Numeric(18,2),@TDayCreditAmt Numeric(18,2),@TDayChequeAmt Numeric(18,2),@TDayCCAmt Numeric(18,2)
Declare @TMonthCashAmt Numeric(18,2),@TMonthCreditAmt Numeric(18,2),@TMonthChequeAmt Numeric(18,2),@TMonthCCAmt Numeric(18,2)
Declare @Month varchar(20),@MNo int ,@TTDate datetime,@MonthNo int,@NullDate datetime
Declare @TDate datetime ,@Yr int,@cnt int,@Billcnt int 
Declare @Day numeric(18),@TMonth numeric(18)
Declare @TTotalCashAmt Numeric(18,2),@TTotalCreditAmt Numeric(18,2),@TTotalChequeAmt Numeric(18,2),@TTotalCCAmt Numeric(18,2)
Set @FromDate=@FrDate
Set @Billcnt=0
 set @TotChequeAmt=0 set @TotCreditAmt=0  set @TotCCAmt=0  set @TotCashAmt=0  set @TotTotalAmt=0  
 set @TDayCashAmt=0  set @TDayCreditAmt=0 set @TDayChequeAmt=0 set @TDayCCAmt=0
 set @TMonthCashAmt=0  set @TMonthCreditAmt=0 set @TMonthChequeAmt=0 set @TMonthCCAmt=0
 set @TTotalCashAmt=0  set @TTotalCreditAmt=0 set @TTotalChequeAmt=0 set @TTotalCCAmt=0
 set @Day =0 set @TMonth=0
set @NullDate=''01-Jan-1900''
if(@Type!=3 And @Type!=4)
Begin


Declare CurVch Cursor For 
			SELECT DISTINCT TVoucherEntry.VoucherDate, MVoucherType.VoucherTypeName, TVoucherEntry.PkVoucherNo, TVoucherEntry.VoucherUserNo,
                          (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                            FROM          TVoucherDetails
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder in(2,6)) )) AS CashAmt,
                          (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                            FROM          TVoucherDetails
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder=3))) AS CreditAmt,
                          (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                            FROM          TVoucherDetails
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder=4))) AS ChequeAmt,
                          (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                            FROM          TVoucherDetails
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder=5))) AS CCAmt,
                          (SELECT     LedgerName
                            FROM          MLedger
                            WHERE      (LedgerNo = TVoucherDetails_1.LedgerNo)) AS LedgerName,TVoucherEntry.IsCancel
				FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo
				WHERE (TVoucherEntry.VoucherTypeCode = @VchNo) AND  (TVoucherEntry.VoucherDate >= @FromDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails_1.SrNo = 501)
				ORDER BY TVoucherEntry.VoucherDate

	Open CurVch
	Fetch Next From CurVch Into @VoucherDate,@VoucherTypeName,@VoucherNo,@VoucherUserNo,@CashAmt,@CreditAmt,@ChequeAmt,@CCAmt,@LedgerName,@IsCancel
	set @TempDate=@VoucherDate
    set @Day =day(@VoucherDate)
    set @TMonth=month(@VoucherDate)
    --select month(@VoucherDate)
 	While (@@Fetch_Status = 0)
	Begin
		if(@IsCancel=''true'' and @Temp<>1)
		BEGIN
		set @CashAmt=0 set @CreditAmt=0 set @ChequeAmt=0 set @CCAmt=0
		END
		if(@IsCancel=''false'' and @Temp=1)
		BEGIN
		set @CashAmt=0 set @CreditAmt=0 set @ChequeAmt=0 set @CCAmt=0
		END
		if(@Type=1)
			BEGIN
				if(@IsCancel=''true'' and @Temp=1)	
                Begin 
                      if(@TMonth<>month(@VoucherDate))
                      Begin
                            Insert into @TVch values(@NullDate,''Day Total'','''',0,null,@TDayCashAmt,@TDayCreditAmt,@TDayChequeAmt,@TDayCCAmt,@TDayCashAmt+@TDayCreditAmt+@TDayChequeAmt+@TDayCCAmt)
                            Insert into @TVch values(@NullDate,''Month Total'','''',0,null,@TMonthCashAmt,@TMonthCreditAmt,@TMonthChequeAmt,@TMonthCCAmt,@TMonthCashAmt+@TMonthCreditAmt+@TMonthChequeAmt+@TMonthCCAmt)
                            set @TMonthCashAmt=0  set @TMonthCreditAmt=0 set @TMonthChequeAmt=0 set @TMonthCCAmt=0
                            set @TDayCashAmt=0  set @TDayCreditAmt=0 set @TDayChequeAmt=0 set @TDayCCAmt=0
                            set @TMonth=month(@VoucherDate)
                            set @Day=day(@VoucherDate)
                            set @TempDate=@VoucherDate
                      End 
                      Else 
                      Begin
                            if(@Day<>day(@VoucherDate))
	                        Begin
                                 Insert into @TVch values(@NullDate,''Day Total'','''',0,null,@TDayCashAmt,@TDayCreditAmt,@TDayChequeAmt,@TDayCCAmt,@TDayCashAmt+@TDayCreditAmt+@TDayChequeAmt+@TDayCCAmt)
                                 set @TDayCashAmt=0  set @TDayCreditAmt=0 set @TDayChequeAmt=0 set @TDayCCAmt=0
                                 set @Day=day(@VoucherDate)
                                 set @TempDate=@VoucherDate
                            End
                      End 
				      Insert into @TVch values(@VoucherDate,@LedgerName,@VoucherTypeName,@VoucherNo,@VoucherUserNo,@CashAmt,@CreditAmt,@ChequeAmt,@CCAmt,@CashAmt+@CreditAmt+@ChequeAmt+@CCAmt)
                      
                      
                      
                End
				else if( @Temp=0)
                Begin 
                     if(@TMonth<>month(@VoucherDate))
                      Begin
                            Insert into @TVch values(@NullDate,''Day Total'','''',0,null,@TDayCashAmt,@TDayCreditAmt,@TDayChequeAmt,@TDayCCAmt,@TDayCashAmt+@TDayCreditAmt+@TDayChequeAmt+@TDayCCAmt)
                            Insert into @TVch values(@NullDate,''Month Total'','''',0,null,@TMonthCashAmt,@TMonthCreditAmt,@TMonthChequeAmt,@TMonthCCAmt,@TMonthCashAmt+@TMonthCreditAmt+@TMonthChequeAmt+@TMonthCCAmt)
                            set @TMonthCashAmt=0  set @TMonthCreditAmt=0 set @TMonthChequeAmt=0 set @TMonthCCAmt=0
                            set @TDayCashAmt=0  set @TDayCreditAmt=0 set @TDayChequeAmt=0 set @TDayCCAmt=0
                            set @TMonth=month(@VoucherDate)
                            set @Day=day(@VoucherDate)
                            set @TempDate=@VoucherDate
                      End 
                      Else 
                      Begin
                            if(@Day<>day(@VoucherDate))
	                        Begin
                                 Insert into @TVch values(@NullDate,''Day Total'','''',0,null,@TDayCashAmt,@TDayCreditAmt,@TDayChequeAmt,@TDayCCAmt,@TDayCashAmt+@TDayCreditAmt+@TDayChequeAmt+@TDayCCAmt)
                                 set @TDayCashAmt=0  set @TDayCreditAmt=0 set @TDayChequeAmt=0 set @TDayCCAmt=0
                                 set @Day=day(@VoucherDate)
                                 set @TempDate=@VoucherDate
                            End
                      End 
				      Insert into @TVch values(@VoucherDate,@LedgerName,@VoucherTypeName,@VoucherNo,@VoucherUserNo,@CashAmt,@CreditAmt,@ChequeAmt,@CCAmt,@CashAmt+@CreditAmt+@ChequeAmt+@CCAmt)
                End		
				--Insert into @TVch values(@VoucherDate,@LedgerName,@VoucherTypeName,@VoucherNo,@VoucherUserNo,@CashAmt,@CreditAmt,@ChequeAmt,@CCAmt,@CashAmt+@CreditAmt+@ChequeAmt+@CCAmt)
				set @TotalAmt=0  
				Set @Billcnt=0
                      set @TDayCashAmt=@TDayCashAmt+@CashAmt
                      set @TDayCreditAmt=@TDayCreditAmt+@CreditAmt
                      set @TDayChequeAmt=@TDayChequeAmt+@ChequeAmt
                      set @TDayCCAmt=@TDayCCAmt+@CCAmt
			END
		else if(@Type=2)
		BEGIN
			if(@TempDate<>@VoucherDate)
			BEGIN
                if(@Billcnt<>0)	Insert into @TVch values(@TempDate,'''',@VoucherTypeName,@VoucherNo,Cast(@Billcnt as varchar),@TotCashAmt,@TotCreditAmt,@TotChequeAmt,@TotCCAmt,@TotTotalAmt)
				set @TotChequeAmt=0 set @TotCreditAmt=0  set @TotCCAmt=0  set @TotCashAmt=0  set @TotTotalAmt=0  
				set @TotalAmt=0
					
				set @TempDate=@VoucherDate set @Billcnt=0
                if(@TMonth<>month(@VoucherDate))
                Begin
                     Insert into @TVch values(@NullDate,''Month Total'','''',0,''Month Total'',@TMonthCashAmt,@TMonthCreditAmt,@TMonthChequeAmt,@TMonthCCAmt,@TMonthCashAmt+@TMonthCreditAmt+@TMonthChequeAmt+@TMonthCCAmt)
                     set @TMonthCashAmt=0  set @TMonthCreditAmt=0 set @TMonthChequeAmt=0 set @TMonthCCAmt=0
                     set @TMonth=month(@VoucherDate)
                End
			END
		END
		
		if(@Temp=1 and @IsCancel=''true'')
		Set  @Billcnt=1+@Billcnt
		if(@Temp=0)
		Set  @Billcnt=1+@Billcnt
		if(@ChequeAmt<>0 or @CCAmt<>0)
			set @CreditAmt=0
		set @TotalAmt=@CashAmt+@CreditAmt+@ChequeAmt+@CCAmt
		
					set @TotChequeAmt=@TotChequeAmt+@ChequeAmt
					set @TotCreditAmt=@TotCreditAmt+@CreditAmt
					set @TotCCAmt=@TotCCAmt+@CCAmt
					set @TotCashAmt=@TotCashAmt+@CashAmt
					set @TotTotalAmt=@TotTotalAmt+@TotalAmt
					--if(@TempDate=''12-Dec-2012'')set @No =@No+ @CashAmt
                      
                      set @TMonthCashAmt=@TMonthCashAmt+@CashAmt
                      set @TMonthCreditAmt=@TMonthCreditAmt+@CreditAmt
                      set @TMonthChequeAmt=@TMonthChequeAmt+@ChequeAmt
                      set @TMonthCCAmt=@TMonthCCAmt+@CCAmt
                     
                      set @TTotalCashAmt=@TTotalCashAmt+@CashAmt
                      set @TTotalCreditAmt=@TTotalCreditAmt+@CreditAmt
                      set @TTotalChequeAmt=@TTotalChequeAmt+@ChequeAmt
                      set @TTotalCCAmt=@TTotalCCAmt+@CCAmt
					
	Fetch Next From CurVch Into @VoucherDate,@VoucherTypeName,@VoucherNo,@VoucherUserNo,@CashAmt,@CreditAmt,@ChequeAmt,@CCAmt,@LedgerName,@IsCancel
	End
	if(@Type=2)
		if(@Billcnt<>0) Insert into @TVch values(@TempDate,'''',@VoucherTypeName,@VoucherNo,Cast(@Billcnt as varchar),@TotCashAmt,@TotCreditAmt,@TotChequeAmt,@TotCCAmt,@TotTotalAmt)
    if(@Type=1)
    Begin
         if(@TTotalCashAmt+@TTotalCreditAmt+@TTotalChequeAmt+@TTotalCCAmt<>0)
         Begin
              Insert into @TVch values(@NullDate,''Day Total'','''',0,null,@TDayCashAmt,@TDayCreditAmt,@TDayChequeAmt,@TDayCCAmt,@TDayCashAmt+@TDayCreditAmt+@TDayChequeAmt+@TDayCCAmt)
              Insert into @TVch values(@NullDate,''Month Total'','''',0,null,@TMonthCashAmt,@TMonthCreditAmt,@TMonthChequeAmt,@TMonthCCAmt,@TMonthCashAmt+@TMonthCreditAmt+@TMonthChequeAmt+@TMonthCCAmt)
              Insert into @TVch values(@NullDate,''Total'','''',0,null,@TTotalCashAmt,@TTotalCreditAmt,@TTotalChequeAmt,@TTotalCCAmt,@TTotalCashAmt+@TTotalCreditAmt+@TTotalChequeAmt+@TTotalCCAmt)
         End 
    End
    else if(@Type=2)
    Begin
         if(@TTotalCashAmt+@TTotalCreditAmt+@TTotalChequeAmt+@TTotalCCAmt<>0)
         Begin
              Insert into @TVch values(@NullDate,''Month Total'','''',0,''Month Total'',@TMonthCashAmt,@TMonthCreditAmt,@TMonthChequeAmt,@TMonthCCAmt,@TMonthCashAmt+@TMonthCreditAmt+@TMonthChequeAmt+@TMonthCCAmt)
              Insert into @TVch values(@NullDate,'''','''',0,''Total'',@TTotalCashAmt,@TTotalCreditAmt,@TTotalChequeAmt,@TTotalCCAmt,@TTotalCashAmt+@TTotalCreditAmt+@TTotalChequeAmt+@TTotalCCAmt)
         End
    End
	set @Billcnt=0
	Close CurVch Deallocate CurVch
	
End
Else
----Monthly Report-------
Begin

	while(@FromDate	<= @ToDate)
	begin
		set @Month =DateName("m",@FromDate)
		set @MNo= Month(@FromDate)
		
		if(@MNo=1 Or @MNo=3 Or @MNo=5 Or @MNo=7 Or @MNo=8 Or @MNo=10 Or @MNo=12)
			begin
				if(Day(@FromDate) >=1 Or Day(@FromDate)<31)
					set @TDate = ''31-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
			end
		else if(@MNo=4 Or @MNo=6 Or @MNo=9 Or @MNo=11 )
			begin
				if(Day(@FromDate) >=1 Or Day(@FromDate)<30)
					set @TDate = ''30-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
			end
		else
			begin
				if(Year(@FromDate)%4=0)
					begin
						if(Day(@FromDate) >=1 Or Day(@FromDate)<29)
							set @TDate = ''29-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
					end
				else
					begin
						if(Day(@FromDate) >=1 Or Day(@FromDate)<28)
							set @TDate = ''28-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
					end
			end
			
		if(@TDate > @ToDate)set @TDate=@ToDate
	set @TotChequeAmt=0 set @TotCreditAmt=0  set @TotCCAmt=0  set @TotCashAmt=0  set @TotTotalAmt=0  
	Declare CurVch3 Cursor For 
				SELECT DISTINCT TVoucherEntry.VoucherDate, MVoucherType.VoucherTypeName, TVoucherEntry.PkVoucherNo, TVoucherEntry.VoucherUserNo,
                         (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                            FROM          TVoucherDetails
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder in(2,6)))) AS CashAmt,
                          (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                            FROM          TVoucherDetails
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder =3))) AS CreditAmt,
                          (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                            FROM          TVoucherDetails
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder =4))) AS ChequeAmt,
                          (SELECT     ISNULL(SUM(Debit+Credit), 0) 
                            FROM          TVoucherDetails
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo in (Select PKPayTypeNo From MPayType Where ControlUnder =5))) AS CCAmt,
                          (SELECT     LedgerName
                            FROM          MLedger
                            WHERE      (LedgerNo = TVoucherDetails_1.LedgerNo)) AS LedgerName,TVoucherEntry.IsCancel
				FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo
				WHERE (TVoucherEntry.VoucherTypeCode = @VchNo) AND  (TVoucherEntry.VoucherDate >= @FromDate) AND 
				(TVoucherEntry.VoucherDate <= @TDate) AND (TVoucherDetails_1.SrNo = 501)
				ORDER BY TVoucherEntry.VoucherDate
		Open CurVch3
		Fetch Next From CurVch3 Into @VoucherDate,@VoucherTypeName,@VoucherNo,@VoucherUserNo,@CashAmt,@CreditAmt,@ChequeAmt,@CCAmt,@LedgerName,@IsCancel
		set @TempDate=@VoucherDate
		
		While (@@Fetch_Status = 0)
		Begin
		if(@IsCancel=''true'' and @Temp<>1)
		BEGIN
		set @CashAmt=0 set @CreditAmt=0 set @ChequeAmt=0 set @CCAmt=0
		END
		if(@IsCancel=''false'' and @Temp=1)
		BEGIN
		set @CashAmt=0 set @CreditAmt=0 set @ChequeAmt=0 set @CCAmt=0
		END
		if(@Temp=1 and @IsCancel=''true'')
		Set  @Billcnt=1+@Billcnt
		if(@Temp=0)
		Set  @Billcnt=1+@Billcnt
		if(@ChequeAmt<>0 or @CCAmt<>0)
			set @CreditAmt=0
		set @TotalAmt=@CashAmt+@CreditAmt+@ChequeAmt+@CCAmt
		
					set @TotChequeAmt=@TotChequeAmt+@ChequeAmt
					set @TotCreditAmt=@TotCreditAmt+@CreditAmt
					set @TotCCAmt=@TotCCAmt+@CCAmt
					set @TotCashAmt=@TotCashAmt+@CashAmt
					set @TotTotalAmt=@TotTotalAmt+@TotalAmt



	Fetch Next From CurVch3 Into @VoucherDate,@VoucherTypeName,@VoucherNo,@VoucherUserNo,@CashAmt,@CreditAmt,@ChequeAmt,@CCAmt,@LedgerName,@IsCancel
	End
	if(@Billcnt<>0)
	Begin	
		if(@Type=3)
			Insert into @TVch values(@FromDate,DateName("m",@FromDate),@VoucherTypeName,@VoucherNo,@Billcnt,@TotCashAmt,@TotCreditAmt,@TotChequeAmt,@TotCCAmt,@TotTotalAmt)
		else if(@Type=4)
		Begin
			set @MonthNo =Month(@FromDate)
			if(@MonthNo=1 OR @MonthNo = 2 OR @MonthNo=3)
			 set @TTDate=''01-Jan-''+cast(Year(@FromDate) as varchar)
			else if(@MonthNo=4 OR @MonthNo = 5 OR @MonthNo=6)
			 set @TTDate=''01-Apr-''+cast(Year(@FromDate) as varchar)
			else if(@MonthNo=7 OR @MonthNo = 8 OR @MonthNo=9)
			 set @TTDate=''01-Jul-''+cast(Year(@FromDate) as varchar)
			else if(@MonthNo=10 OR @MonthNo = 11 OR @MonthNo=12)
			 set @TTDate=''01-Oct-''+cast(Year(@FromDate) as varchar)
			Insert into @TVch values(@TTDate,DateName("m",@FromDate),@VoucherTypeName,@VoucherNo,@Billcnt,@TotCashAmt,@TotCreditAmt,@TotChequeAmt,@TotCCAmt,@TotTotalAmt)
		end
		Set @Billcnt=0
	End
	Close CurVch3 Deallocate CurVch3
	set @FromDate =DateAdd(mm,1,@FromDate)
	END
End
-------Quarter Report---------
if(@Type=4)
begin
	Select ''1-1-1990'' As ''Date'',''Quarter-''+Cast(datepart (q,VoucherDate) as varchar) AS ''Party'',VoucherTypeName,Sum(VoucherNo) as ''VoucherNo'',Sum(cast(VoucherUserNo As numeric(18))) As ''TotalBills'' ,Sum(CashAmt) AS ''Cash'',sum(CreditAmt) As ''Credit'',sum(ChequeAmt) as ''Cheque'',sum(CCAmt) As ''CC'',sum(TotalAmt) As ''Total'' 
	from @TVch
	Group BY VoucherTypeName,VoucherDate
End 
else if(@Type=3)
begin
	Select VoucherDate As ''Date'',	DateName("m",VoucherDate)+'' - ''+ substring(cast(year(VoucherDate) as varchar),3,2)  AS ''Party'',VoucherTypeName,Sum(VoucherNo) as ''VoucherNo'',Sum(cast(VoucherUserNo As numeric(18))) As ''TotalBills'' ,Sum(CashAmt) AS ''Cash'',sum(CreditAmt) As ''Credit'',sum(ChequeAmt) as ''Cheque'',sum(CCAmt) As ''CC'',sum(TotalAmt) As ''Total'' 
	from @TVch
	Group BY VoucherTypeName,VoucherDate,datepart (m,VoucherDate)
End 
Else if(@Type=2)
	select VoucherDate as ''Date'',LedgerName as ''Party'',VoucherTypeName ,
					VoucherNo ,VoucherUserNo as ''TotalBills'',CashAmt as ''Cash'',
					CreditAmt as ''Credit'', ChequeAmt as ''Cheque'',CCAmt as ''CC'', TotalAmt as ''Total ''from @TVch
Else
Begin
	select VoucherDate as ''Date'',LedgerName as ''Party'',VoucherTypeName ,
					VoucherNo ,VoucherUserNo as ''BillNo'',CashAmt as ''Cash'',
					CreditAmt as ''Credit'', ChequeAmt as ''Cheque'',CCAmt as ''CC'', TotalAmt as ''Total ''from @TVch
	--Select * from @TVch
End


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSaleVouchEntryDayDtls]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetSaleVouchEntryDayDtls]
@VchNo int,
@CompNo numeric(18),
@FrDate datetime,
@ToDate datetime,
@Type numeric(18),
@Temp numeric(18)


AS

Declare @TVchNo numeric(18)

if(@VchNo=15)
set @TVchNo=12
else if(@VchNo=115)
set @TVchNo=112
else if(@VchNo=109)
set @TVchNo=113
else if(@VchNo=9)
set @TVchNo=13
else if(@VchNo=12 or @VchNo=13 or @VchNo=113 or @VchNo=112)
begin
set @TVchNo=@VchNo
set @VchNo=-1
end

Begin
if(@Type=1)
Begin

SELECT DISTINCT TVoucherEntry.VoucherDate as Date ,                          
                          (SELECT     LedgerName
                            FROM          MLedger
                            WHERE      (LedgerNo = TVoucherDetails_1.LedgerNo)) AS Party,
			  MVoucherType.VoucherTypeName,
			  (Select count(*)  from TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
				WHERE (TVoucherEntry.VoucherTypeCode  in (@VchNo)) AND  (TVoucherEntry.VoucherDate >= @FrDate) AND 
				(TVoucherEntry.VoucherDate <=@ToDate) AND (TVoucherDetails.SrNo = 501) And   TVoucherEntry.IsCancel=@Temp )as VoucherNo,
		      TVoucherEntry.VoucherUserNo as BillNo,
					(Select ISNULL(SUM(Debit+Credit), 0) 
                           from TVoucherEntry as TVoucherEntry_1 INNER JOIN
                      TVoucherDetails ON TVoucherEntry_1.PkVoucherNo = TVoucherDetails.FkVoucherNo
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry_1.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo  = TVoucherEntry_1.PayTypeNo)
							and TVoucherEntry.IsCancel=@Temp and TVoucherEntry_1.PkVoucherNo=TVoucherEntry.PkVoucherNo) as TotalAmount,
				Case When(TVoucherEntry.MixMode=0) Then MPayType.ShortName Else ''MX'' End as Prefix,
				1 AS VchTypeNo 
				FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo INNER JOIN
                MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
				WHERE (TVoucherEntry.VoucherTypeCode in(@VchNo)) AND  (TVoucherEntry.VoucherDate >= @FrDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails_1.SrNo = 501) and (Select ISNULL(SUM(Debit+Credit), 0) 
                           from TVoucherEntry as TVoucherEntry_1 INNER JOIN
                      TVoucherDetails ON TVoucherEntry_1.PkVoucherNo = TVoucherDetails.FkVoucherNo
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry_1.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo  = TVoucherEntry_1.PayTypeNo)
							and TVoucherEntry.IsCancel=@Temp and TVoucherEntry_1.PkVoucherNo=TVoucherEntry.PkVoucherNo)<>0
							
				


union 

SELECT DISTINCT TVoucherEntry.VoucherDate as Date ,                          
                          (SELECT     LedgerName
                            FROM          MLedger
                            WHERE      (LedgerNo = TVoucherDetails_1.LedgerNo)) AS Party,
			  MVoucherType.VoucherTypeName,
			  (Select count(*)  from TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo
				WHERE (TVoucherEntry.VoucherTypeCode  in (@TVchNo)) AND  (TVoucherEntry.VoucherDate >= @FrDate) AND 
				(TVoucherEntry.VoucherDate <=@ToDate) AND (TVoucherDetails.SrNo = 501) And   TVoucherEntry.IsCancel=@Temp )as VoucherNo,
		      TVoucherEntry.VoucherUserNo as BillNo,
					(Select ISNULL(SUM(Debit+Credit), 0) 
                           from TVoucherEntry as TVoucherEntry_1 INNER JOIN
                      TVoucherDetails ON TVoucherEntry_1.PkVoucherNo = TVoucherDetails.FkVoucherNo
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry_1.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo  = TVoucherEntry_1.PayTypeNo)
							and TVoucherEntry.IsCancel=@Temp and TVoucherEntry_1.PkVoucherNo=TVoucherEntry.PkVoucherNo)*-1 as TotalAmount,
				Case When(TVoucherEntry.MixMode=0) Then MPayType.ShortName Else ''MX'' End as Prefix,
				2 AS VchTypeNo 
				FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo INNER JOIN
                MPayType ON TVoucherEntry.PayTypeNo = MPayType.PKPayTypeNo
				WHERE (TVoucherEntry.VoucherTypeCode in(@TVchNo)) AND  (TVoucherEntry.VoucherDate >= @FrDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails_1.SrNo = 501) and (Select ISNULL(SUM(Debit+Credit), 0) 
                           from TVoucherEntry as TVoucherEntry_1 INNER JOIN
                      TVoucherDetails ON TVoucherEntry_1.PkVoucherNo = TVoucherDetails.FkVoucherNo
                            WHERE      (TVoucherDetails.FKVoucherNo = TVoucherEntry_1.PkVoucherNo) AND (TVoucherDetails.SrNo=501) AND (TVoucherEntry.PayTypeNo  = TVoucherEntry_1.PayTypeNo)
							and TVoucherEntry.IsCancel=@Temp and TVoucherEntry_1.PkVoucherNo=TVoucherEntry.PkVoucherNo)*-1<>0


				ORDER BY VchTypeNo,TVoucherEntry.VoucherDate,BillNo




End

if(@Type=2)

Begin
SELECT TVoucherEntry.VoucherDate as Date , '''' Party, MVoucherType.VoucherTypeName, 0 as VoucherNo,Count(TVoucherEntry.VoucherDate) as TotalBills,
			  SUM(Debit+Credit) as TotalAmount,'''' as Prefix, 1  AS VchTypeNo 
				FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo 
				WHERE (TVoucherEntry.VoucherTypeCode in(@VchNo)) AND  (TVoucherEntry.VoucherDate >= @FrDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails_1.SrNo = 501) AND  TVoucherEntry.IsCancel=@Temp and (Debit+Credit) <>0
                GROUP BY TVoucherEntry.VoucherDate, MVoucherType.VoucherTypeName

union 

SELECT TVoucherEntry.VoucherDate as Date , '''' Party, MVoucherType.VoucherTypeName, 0 as VoucherNo, Count(TVoucherEntry.VoucherDate) as TotalBills,
			  SUM(Debit+Credit)*-1 as TotalAmount,'''' as Prefix, 2 AS VchTypeNo 
				FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo 
				WHERE (TVoucherEntry.VoucherTypeCode in(@TVchNo)) AND  (TVoucherEntry.VoucherDate >= @FrDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails_1.SrNo = 501) AND  TVoucherEntry.IsCancel=@Temp and (Debit+Credit) <>0
				GROUP BY TVoucherEntry.VoucherDate, MVoucherType.VoucherTypeName

ORDER BY VchTypeNo,Date
end

if(@Type=3)

Begin

SELECT min(TVoucherEntry.VoucherDate) as Date , DateName( month , DateAdd( month , Month(TVoucherEntry.VoucherDate) , 0 ) - 1 ) +'' -- ''+ 
        Cast(Year(TVoucherEntry.VoucherDate) % 100 as varchar) Party, MVoucherType.VoucherTypeName, 0 as VoucherNo,
        Count(TVoucherEntry.VoucherDate) as TotalBills,  SUM(Debit+Credit) TotalAmount,'''' as Prefix, 1 AS VchTypeNo 
				FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo 
				WHERE (TVoucherEntry.VoucherTypeCode in(@VchNo)) AND  (TVoucherEntry.VoucherDate >= @FrDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails_1.SrNo = 501) AND  TVoucherEntry.IsCancel=@Temp  and (Debit+Credit) <>0
                GROUP BY Year(TVoucherEntry.VoucherDate), Month(TVoucherEntry.VoucherDate), MVoucherType.VoucherTypeName

union 

SELECT min(TVoucherEntry.VoucherDate) as Date , DateName( month , DateAdd( month , Month(TVoucherEntry.VoucherDate) , 0 ) - 1 ) +'' -- ''+ 
        Cast(Year(TVoucherEntry.VoucherDate) % 100 as varchar) Party, MVoucherType.VoucherTypeName, 0 as VoucherNo,
        Count(TVoucherEntry.VoucherDate) as TotalBills,  SUM(Debit+Credit)*-1 TotalAmount,'''' as Prefix, 2 AS VchTypeNo 
				FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo 
				WHERE (TVoucherEntry.VoucherTypeCode in(@TVchNo)) AND  (TVoucherEntry.VoucherDate >= @FrDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails_1.SrNo = 501) AND  TVoucherEntry.IsCancel=@Temp and (Debit+Credit) <>0
                GROUP BY Year(TVoucherEntry.VoucherDate), Month(TVoucherEntry.VoucherDate), MVoucherType.VoucherTypeName

ORDER BY VchTypeNo, Date
end

if(@Type=4)

Begin

SELECT ''01-01-1900'' as Date, ''Quarter-''+Cast(datepart (q, min(TVoucherEntry.VoucherDate)) as varchar) As Party, 
        MVoucherType.VoucherTypeName, 0 as VoucherNo,
        Count(TVoucherEntry.VoucherUserNo) as TotalBills,  SUM(Debit+Credit) TotalAmount,'''' as Prefix, 1 AS VchTypeNo 
				FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo 
				WHERE (TVoucherEntry.VoucherTypeCode in(@VchNo)) AND  (TVoucherEntry.VoucherDate >= @FrDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails_1.SrNo = 501) AND  TVoucherEntry.IsCancel=@Temp and (Debit+Credit) <>0
                GROUP BY Year(TVoucherEntry.VoucherDate), datepart (q,TVoucherEntry.VoucherDate), MVoucherType.VoucherTypeName
union 

SELECT ''01-01-1900''  as Date, ''Quarter-''+Cast(datepart (q, min(TVoucherEntry.VoucherDate)) as varchar) As Party, 
        MVoucherType.VoucherTypeName, 0 as VoucherNo,
        Count(TVoucherEntry.VoucherDate) as TotalBills,  SUM(Debit+Credit)*-1 TotalAmount,'''' as Prefix, 2 AS VchTypeNo 
				FROM    TVoucherEntry INNER JOIN MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode INNER JOIN
				TVoucherDetails AS TVoucherDetails_1 ON TVoucherEntry.PkVoucherNo = TVoucherDetails_1.FkVoucherNo 
				WHERE (TVoucherEntry.VoucherTypeCode in(@TVchNo)) AND  (TVoucherEntry.VoucherDate >= @FrDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) AND (TVoucherDetails_1.SrNo = 501) AND  TVoucherEntry.IsCancel=@Temp and (Debit+Credit) <>0
                GROUP BY Year(TVoucherEntry.VoucherDate),datepart (q,TVoucherEntry.VoucherDate), MVoucherType.VoucherTypeName

order by VchTypeNo, Date, Party
end


End

------------------------------------------------------------------------------------------------------------------------------------------------------------------

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMPayType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11/06/2012
CREATE PROCEDURE  [dbo].[DeleteMPayType] 
@PKPayTypeNo                        numeric(18)


AS

       DELETE FROM MPayType
       WHERE
          PKPayTypeNo = @PKPayTypeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMPayType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11/06/2012
CREATE PROCEDURE [dbo].[AddMPayType]
     @PKPayTypeNo                         numeric(18),
     @PayTypeName                         varchar(100),
	 @ShortName							  varchar(100),
     @IsActive                            bit,
	 @ControlUnder						  numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
	 @ReturnID							  int output
AS
IF EXISTS(select PKPayTypeNo from MPayType
          where
          PKPayTypeNo = @PKPayTypeNo)
     BEGIN
       --Update existing row
       UPDATE MPayType
       SET
          PayTypeName = @PayTypeName,
          IsActive = @IsActive,
		  ShortName=@ShortName,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo = @CompanyNo,
          StatusNo = 2,
		  ControlUnder = @ControlUnder
       WHERE
          PKPayTypeNo = @PKPayTypeNo
	set @ReturnID=@PKPayTypeNo    

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PKPayTypeNo),0) From MPayType
       DBCC CHECKIDENT(''MPayType'', RESEED, @Id)
       INSERT INTO MPayType(
          PayTypeName,
          IsActive,
		  ShortName,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo,
		  ControlUnder
)
       VALUES(
          @PayTypeName,
          @IsActive,
		  @ShortName,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1,
		  @ControlUnder
)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[GetAccountLedgerMonthly]'))
EXEC dbo.sp_executesql @statement = N'create VIEW [dbo].[GetAccountLedgerMonthly]
AS
SELECT     dbo.MCompany.CompanyName, dbo.MLedger.LedgerName, dbo.MLocation.LocationName, dbo.MLedgerBalances.MonthNo, 
                      dbo.MLedgerBalances.OpeningBalance, dbo.MLedgerBalances.CreditBalance, dbo.MLedgerBalances.DebitBalance, 
                      dbo.MLedgerBalances.ClosingBalance
FROM         dbo.MLedgerBalances INNER JOIN
                      dbo.MCompany ON dbo.MLedgerBalances.CompanyNo = dbo.MCompany.CompanyNo INNER JOIN
                      dbo.MLedger ON dbo.MLedgerBalances.LedgerNo = dbo.MLedger.LedgerNo INNER JOIN
                      dbo.MLocation ON dbo.MLedgerBalances.LocationNo = dbo.MLocation.LocationNo
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMLedgerBalances]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 17/04/2012
CREATE PROCEDURE  [dbo].[DeleteMLedgerBalances] 
@LedgerBalance                      numeric(18)


AS

       DELETE FROM MLedgerBalances
       WHERE
          LedgerBalance = @LedgerBalance
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLedgerBalances]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 22/05/2012
CREATE PROCEDURE [dbo].[AddMLedgerBalances]
     @LedgerBalance                       numeric(18),
     @LedgerNo                            numeric(18),
     @CompanyNo                           numeric(18),
     @LocationNo                          numeric(18),
     @MonthNo                             numeric(18),
     @AccYearNo                           numeric(18),
	 @OpeningBalance					  numeric(18,2),
	 @ClosingBalance					  numeric(18,2),
	 @CreditBalance						  numeric(18,2),
	 @DebitBalance						  numeric(18,2),
     @UserId                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select LedgerBalance from MLedgerBalances
          where
          LedgerBalance = @LedgerBalance)
     BEGIN
       --Update existing row
       UPDATE MLedgerBalances
       SET
          LedgerNo = @LedgerNo,
          CompanyNo = @CompanyNo,
          LocationNo = @LocationNo,
          MonthNo = @MonthNo,
          AccYearNo = @AccYearNo,
		  OpeningBalance=@OpeningBalance,					
		  ClosingBalance=@ClosingBalance,					 
		  CreditBalance=@CreditBalance,						 
		  DebitBalance=@DebitBalance,	
          UserId = @UserId,
          UserDate = @UserDate
       WHERE
          LedgerBalance = @LedgerBalance

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(LedgerBalance),0) From MLedgerBalances
       DBCC CHECKIDENT(''MLedgerBalances'', RESEED, @Id)
       INSERT INTO MLedgerBalances(
          LedgerBalance,
          LedgerNo,
          CompanyNo,
          LocationNo,
          MonthNo,
          AccYearNo,
		  OpeningBalance,					
		  ClosingBalance,					 
		  CreditBalance,						 
		  DebitBalance,
          UserId,
          UserDate
)
       VALUES(
          @LedgerBalance,
          @LedgerNo,
          @CompanyNo,
          @LocationNo,
          @MonthNo,
          @AccYearNo,
		  @OpeningBalance,
		  @ClosingBalance,
		  @CreditBalance,
		  @DebitBalance,
          @UserId,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateMLedgerBalances]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 22/05/2012
CREATE PROCEDURE [dbo].[UpdateMLedgerBalances]
     @LedgerBalance                       numeric(18),
     @LedgerNo                            numeric(18),
     @CompanyNo                           numeric(18),
     @LocationNo                          numeric(18),
     @MonthNo                             numeric(18),
     @AccYearNo                           numeric(18),
	 @OpeningBalance					  numeric(18,2),
	 @ClosingBalance					  numeric(18,2),
	 @CreditBalance						  numeric(18,2),
	 @DebitBalance						  numeric(18,2)
  
AS
IF EXISTS(select LedgerBalance from MLedgerBalances
          where
          LedgerBalance = @LedgerBalance)
     BEGIN
       --Update existing row
       UPDATE MLedgerBalances
       SET
          LedgerNo = @LedgerNo,
          CompanyNo = @CompanyNo,
          LocationNo = @LocationNo,
          MonthNo = @MonthNo,
          AccYearNo = @AccYearNo,
		  OpeningBalance=@OpeningBalance+OpeningBalance,					
		  ClosingBalance=@ClosingBalance+ClosingBalance,					 
		  CreditBalance=@CreditBalance+CreditBalance,						 
		  DebitBalance=@DebitBalance+DebitBalance	
          
       WHERE
          LedgerBalance = @LedgerBalance

     END
ELSE IF EXISTS(Select LedgerNo,CompanyNo,LocationNo,MonthNo,AccYearNo FROM MLedgerBalances
			   Where LedgerNo=@LedgerNo and CompanyNo=@CompanyNo and LocationNo=@LocationNo and MonthNo=@MonthNo and AccYearNo=@AccYearNo)
	 BEGIN
		UPDATE MLedgerBalances
       SET
          LedgerNo = @LedgerNo,
          CompanyNo = @CompanyNo,
          LocationNo = @LocationNo,
          MonthNo = @MonthNo,
          AccYearNo = @AccYearNo,
		  OpeningBalance=@OpeningBalance+OpeningBalance,					
		  ClosingBalance=@ClosingBalance+ClosingBalance,					 
		  CreditBalance=@CreditBalance+CreditBalance,						 
		  DebitBalance=@DebitBalance+DebitBalance	
         
       WHERE
           LedgerNo=@LedgerNo and CompanyNo=@CompanyNo and LocationNo=@LocationNo and MonthNo=@MonthNo and AccYearNo=@AccYearNo
	 END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(LedgerBalance),0) From MLedgerBalances
       DBCC CHECKIDENT(''MLedgerBalances'', RESEED, @Id)
       INSERT INTO MLedgerBalances(
          LedgerBalance,
          LedgerNo,
          CompanyNo,
          LocationNo,
          MonthNo,
          AccYearNo,
		  OpeningBalance,					
		  ClosingBalance,					 
		  CreditBalance,						 
		  DebitBalance
         
)
       VALUES(
          @LedgerBalance,
          @LedgerNo,
          @CompanyNo,
          @LocationNo,
          @MonthNo,
          @AccYearNo,
		  @OpeningBalance,
		  @ClosingBalance,
		  @CreditBalance,
		  @DebitBalance
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetVoucherDetailsByDays]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetVoucherDetailsByDays]
@CurrDate datetime,
@CompNo numeric(18),
@MfgCompNo numeric(18)

AS  

if(@MfgCompNo=0)

SELECT     Convert(Varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntry.VoucherUserNo,MLedger.LedgerName AS LedgerName, MVoucherType.VoucherTypeName, TVoucherDetails.FKVoucherNo,
                     case when  TVoucherEntry.IsCancel=''true'' then 0 else   TVoucherDetails.Debit end  as [Debit Amount], 
                         case when  TVoucherEntry.IsCancel=''true'' then 0 else TVoucherDetails.Credit end AS [Credit Amount] --TVoucherEntry.VoucherTypeCode,TVoucherEntry.VoucherUserNo
FROM         TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PKVoucherNo = TVoucherDetails.FKVoucherNo INNER JOIN
                      MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode
WHERE      (TVoucherDetails.VoucherSrNo = 1) AND (Convert(varchar,TVoucherEntry.VoucherDate,101) = Convert(varchar,@CurrDate,101))
			 AND (TVoucherEntry.CompanyNo = @CompNo)--and TVoucherEntry.IsCancel=''false''
union
SELECT     Convert(Varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntry.VoucherUserNo,''PHYSICAL STOCK'' as LedgerName, MVoucherType.VoucherTypeName, TVoucherEntry.PKVoucherNo,0 as [Debit Amount],
			0 as [Credit Amount]
FROM         TVoucherEntry INNER JOIN
                      MVoucherType ON TVoucherEntry.VoucherTypeCode = MVoucherType.VoucherTypeCode
WHERE      (TVoucherEntry.VoucherTypeCode = 8) AND (Convert(varchar,TVoucherEntry.VoucherDate,101) = Convert(varchar,@CurrDate,101))
		and TVoucherEntry.IsCancel=''false''	 AND (TVoucherEntry.CompanyNo = @CompNo)

else

	SELECT     Convert(Varchar(11), TVoucherEntry.VoucherDate, 105) AS VoucherDate, TVoucherEntryCompany.VoucherUserNo,MLedger.LedgerName AS LedgerName, MVoucherType.VoucherTypeName, TVoucherDetailsCompany.FKVoucherNo, 
 case when  TVoucherEntry.IsCancel=''true'' then 0 else  TVoucherDetailsCompany.Debit end as [Debit Amount], 
                      case when  TVoucherEntry.IsCancel=''true'' then 0 else  TVoucherDetailsCompany.Credit end AS [Credit Amount] --TVoucherEntry.VoucherTypeCode,TVoucherEntry.VoucherUserNo
FROM         TVoucherEntry INNER JOIN TVoucherEntryCompany ON TVoucherEntry.PKVoucherNo=TVoucherEntryCompany.FKVoucherNo INNER JOIN 
                      TVoucherDetailsCompany ON TVoucherEntryCompany.PKVoucherCompanyNo = TVoucherDetailsCompany.FKVoucherNo INNER JOIN
                      MLedger ON TVoucherDetailsCompany.LedgerNo = MLedger.LedgerNo INNER JOIN
                      MVoucherType ON TVoucherEntryCompany.VoucherTypeCode = MVoucherType.VoucherTypeCode
WHERE      (TVoucherDetailsCompany.VoucherSrNo = 1) AND (Convert(varchar,TVoucherEntry.VoucherDate,101) = Convert(varchar,@CurrDate,101))
	and TVoucherEntry.IsCancel=''false''	 	 AND (TVoucherEntryCompany.CompanyNo = @CompNo) AND TVoucherEntryCompany.MfgCompNo=@MfgCompNo

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherEntry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[AddTVoucherEntry]
     @PkVoucherNo                         numeric(18),
     @VoucherTypeCode                     numeric(18),
     @VoucherUserNo                       numeric(18),
     @VoucherDate                         datetime,
     @VoucherTime                         datetime,
     @Narration                           varchar(50),
     @Reference                           varchar(50),
     @ChequeNo                            numeric(18),
     @ClearingDate                        datetime,
     @CompanyNo                           numeric(18),
     @BilledAmount                        numeric(18,2),
	 @ChallanNo                           varchar(50),
	 @Remark                              varchar(Max),
	 @InwardLocationCode				  numeric(18),
	 @MacNo								  numeric(18),
	 @UserID                              numeric(18),
	 @PayTypeNo							  numeric(18),
	 @RateTypeNo						  numeric(18),
	 @TaxTypeNo							  numeric(18),
	 @TaxInvoiceTypeNo					  numeric(18),
	 @OrderType							  numeric(18),	
     @UserDate                            datetime,
	 @ReturnAmount						  numeric(18,2),
     @Visibility						  numeric(18,2),
	 @DiscPercent						  numeric(18,2),
	 @DiscAmt								  numeric(18,2),
	 @MixMode							  int,
	 @IsItemLevelDisc					  bit,
	 @IsFooterLevelDisc					  bit,
	 @BrokerNo							  numeric(18),
	 @SuppCategory						  numeric(18),
	 @EffectiveDate						  datetime,
	-- @ExcisePercentage					  numeric(18,2),
	-- @IsExciseBill						  bit,
	 @IsBillMulti						  int,
	 @TransporterCode                     numeric(18),
     @TransPayType                        numeric(18),
     @LRNo                                varchar(50),
     @TransportMode                       numeric(18),
     @TransNoOfItems                      numeric(18),
	 @ChrgesTaxPerce					  numeric(18,2),
	 @LedgerNo							  numeric(18),
     @StateCode							  numeric(18),
     @TaxAmount 						  numeric(18),
@PkRefNo				 numeric(18),
     @ReturnID							  int output
AS
		Declare @TempPayTypeNo numeric(18), @TempTaxInvoiceTypeNo numeric(18),@TempTaxTypeNo numeric(18)

IF EXISTS(select PkVoucherNo from TVoucherEntry
          where
          PkVoucherNo = @PkVoucherNo)
     BEGIN
--if( (Select SettingValue From MSettings where PkSettingNo =361) = ''true'' and @VoucherTypeCode=15)--(Select SettingValue From MSettings where PkSettingNo =306) = ''false'' AND
--		begin
--				
----						Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 
----      from TVoucherEntry where VoucherTypeCode=@VoucherTypeCode  AND (VoucherDate = @VoucherDate)
----				
--		End
       --Update existing row
       UPDATE TVoucherEntry
       SET
          VoucherTypeCode = @VoucherTypeCode,
          VoucherUserNo = @VoucherUserNo,
          VoucherDate = @VoucherDate,
          VoucherTime = @VoucherTime,
          Narration = @Narration,
          Reference = @Reference,
          ChequeNo = @ChequeNo,
          ClearingDate = @ClearingDate,
          CompanyNo = @CompanyNo,
          BilledAmount = @BilledAmount,
		  ChallanNo = @ChallanNo,
		  Remark = @Remark,
		  InwardLocationCode = @InwardLocationCode,
		  MacNo=@MacNo,
		  PayTypeNo = @PayTypeNo, 
		  RateTypeNo = @RateTypeNo,
		  TaxTypeNo = @TaxTypeNo,
		  TaxInvoiceTypeNo = @TaxInvoiceTypeNo,
		  VoucherStatus = 2,
	      OrderType=@OrderType,
	      ReturnAmount=@Returnamount,
          Visibility=@Visibility,
		  DiscPercent = @DiscPercent,
		  DiscAmt = @DiscAmt,
		  StatusNo = 2,
		  MixMode = @MixMode,
		  IsItemLevelDisc = @IsItemLevelDisc,
		  IsFooterLevelDisc = @IsFooterLevelDisc,
		  BrokerNo=@BrokerNo,
		  SuppCategory=@SuppCategory,
		  EffectiveDate = @EffectiveDate,
		--  ExcisePercentage = @ExcisePercentage,
		--  IsExciseBill = @IsExciseBill,
		  IsBillMulti = @IsBillMulti,
		  TransporterCode = @TransporterCode,
          TransPayType = @TransPayType,
          LRNo = @LRNo,
          TransportMode = @TransportMode,
          TransNoOfItems = @TransNoOfItems,	
		  ChrgesTaxPerce = @ChrgesTaxPerce,
          LedgerNo=@LedgerNo,
          StateCode= @StateCode,
          TaxAmount=@TaxAmount,
PkRefNo=@PkRefNo,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          PkVoucherNo = @PkVoucherNo
		set @ReturnID=@PkVoucherNo    

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric, @AccYear int, @Month int
       SELECT @Id=IsNull(Max(PkVoucherNo),0) From TVoucherEntry
       DBCC CHECKIDENT(''TVoucherEntry'', RESEED, @Id)

       if (@VoucherTypeCode = 9 or @VoucherTypeCode = 12 or @VoucherTypeCode = 13 or @VoucherTypeCode = 15 or @VoucherTypeCode = 109 or @VoucherTypeCode = 112 or @VoucherTypeCode = 113 or @VoucherTypeCode = 115)
			begin
				set @Month=Month(@VoucherDate)
				set @AccYear = Year(@VoucherDate)
				if(@Month < 4)
						Set @AccYear = @AccYear - 1;
				
				if(@VoucherTypeCode=9)
				Begin
					if(@BrokerNo=0)
						Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TVoucherEntry 
						where VoucherTypeCode=@VoucherTypeCode AND VoucherDate >= cast( ''1-Apr-'' + cast(@AccYear as varchar)  as datetime) 
						AND VoucherDate <= cast( ''31-Mar-'' + cast((@AccYear+1)as varchar)  as datetime) AND BrokerNo=0
					else 
						Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TVoucherEntry 
						where VoucherTypeCode=@VoucherTypeCode AND VoucherDate >= cast( ''1-Apr-'' + cast(@AccYear as varchar)  as datetime) 
						AND VoucherDate <= cast( ''31-Mar-'' + cast((@AccYear+1)as varchar)  as datetime) AND BrokerNo<>0
				End
				Else if(@SuppCategory!=1)
				Begin
---==============umesh for day wise series
if( (Select SettingValue From MSettings where PkSettingNo =361) = ''true''  and @VoucherTypeCode=15)--(Select SettingValue From MSettings where PkSettingNo =306) = ''false'' AND
		begin
				
						Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TVoucherEntry where VoucherTypeCode=@VoucherTypeCode  AND (VoucherDate = @VoucherDate)
				
		End
else

					Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TVoucherEntry 
					where VoucherTypeCode=@VoucherTypeCode AND VoucherDate >= cast( ''1-Apr-'' + cast(@AccYear as varchar)  as datetime) 
					AND VoucherDate <= cast( ''31-Mar-'' + cast((@AccYear+1)as varchar)  as datetime) 
end
            end
		 else if (@VoucherUserNo=0)
			Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TVoucherEntry where VoucherTypeCode=@VoucherTypeCode
			--select @PkVoucherNo=IsNull(Max(Cast(PkVoucherNo as numeric)),0)+1 from TvoucherEntry

ELSE IF (@VoucherTypeCode = 1 or @VoucherTypeCode = 5 or @VoucherTypeCode = 33 or @VoucherTypeCode = 34 OR @VoucherTypeCode = 27)
			Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TVoucherEntry where VoucherTypeCode=@VoucherTypeCode


       INSERT INTO TVoucherEntry(
          VoucherTypeCode,
          VoucherUserNo,
          VoucherDate,
          VoucherTime,
          Narration,
          Reference,
          ChequeNo,
          ClearingDate,
          CompanyNo,
          BilledAmount,
		  ChallanNo,
          Remark,
		  InwardLocationCode,
		  MacNo,
		  IsVoucherLock,
		  IsCancel,
		  PayTypeNo,
		  RateTypeNo,
		  TaxTypeNo,
		  TaxInvoiceTypeNo,
		  VoucherStatus,
		  OrderType,
		  ReturnAmount,
	      Visibility,
		  DiscPercent,
		  DiscAmt,
		  UserID,
          UserDate,
		  StatusNo,
		  MixMode,
		  IsItemLevelDisc,
		  IsFooterLevelDisc,
		  BrokerNo,
		  SuppCategory,
		  EffectiveDate,
		--  ExcisePercentage,
		 -- IsExciseBill,
		  IsBillMulti, 
		  TransporterCode,
          TransPayType,
          LRNo,
          TransportMode,
          TransNoOfItems,
		  ChrgesTaxPerce,
          LedgerNo,
          StateCode,
          TaxAmount,PkRefNo
         
)
       VALUES(
          @VoucherTypeCode,
          @VoucherUserNo,
          @VoucherDate,
          @VoucherTime,
          @Narration,
          @Reference,
          @ChequeNo,
          @ClearingDate,
          @CompanyNo,
          @BilledAmount,
		  @ChallanNo,
          @Remark,
		  @InwardLocationCode,
		  @MacNo,
		  ''false'',
		  ''false'',
		  @PayTypeNo,
		  @RateTypeNo,
		  @TaxTypeNo,
		  @TaxInvoiceTypeNo,
		  1,
		  @OrderType,
          @ReturnAmount,
		  @Visibility,
		  @DiscPercent,
		  @DiscAmt,
		  @UserID,
          @UserDate,
		  1,
		  @MixMode,
		  @IsItemLevelDisc,
          @IsFooterLevelDisc,
		  @BrokerNo,
		  @SuppCategory,
          @EffectiveDate,
		 -- @ExcisePercentage,
		 -- @IsExciseBill,
		  @IsBillMulti,
		  @TransporterCode,
          @TransPayType,
          @LRNo,
          @TransportMode,
          @TransNoOfItems,
		  @ChrgesTaxPerce,
   @LedgerNo,
          @StateCode,
          @TaxAmount,@PkRefNo
)
Set @ReturnID=Scope_Identity()
END








' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOtherBarCodePrint]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 12-Oct-2012
Create Procedure [dbo].[GetOtherBarCodePrint]
@StartNo numeric(18),
@NoOfStocker numeric(18),
@Barcode varchar(max),
@FirmName varchar(max),
@MRP numeric(18,2),
@Rate numeric(18,2),
@Weight varchar(max),
@Brand varchar(max),
@ShortDescription varchar(max),
@PackedDate varchar(max),
@BestBefore varchar(max),
@FreeText varchar(max)

As 
Begin

Declare @TBarcode Table(Barcode varchar(max),FirmName varchar(max),MRP numeric(18,2),Rate numeric(18,2),Weight varchar(max),
						 Brand varchar(max),ShortDescription varchar(max),PackedDate varchar(max),BestBefore varchar(max),tFreeText varchar(max))



While(@NoOfStocker>0)
Begin
	Insert Into @TBarCode values(@Barcode,@FirmName,@MRP,@Rate,@Weight,@Brand,@ShortDescription,@PackedDate,@BestBefore,@FreeText)
	set @NoOfStocker=@NoOfStocker-1
End



Select *,(Select SettingValue From MSettings Where PkSettingNo=338 ) As IsIngredientBarcode,
(Select SettingValue From MSettings Where PkSettingNo=339 ) As IsNutritionBarcode,
(Select SettingValue From MSettings Where PkSettingNo=440 ) As IsReceipeBarcode
 From @TBarCode

End
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllLedgerBalance]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetAllLedgerBalance]
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@LNo		 Varchar(max)
	
AS
Declare @LedgerNo	numeric(18)
Declare @TLedger Table(LdgNo numeric(18),LdgName varchar(max),OpDrAmt numeric(18,2),OpCrAmt numeric(18,2),DrAmt numeric(18,2),CrAmt numeric(18,2),ClDrAmt numeric(18,2),ClCrAmt numeric(18,2))
Declare @Temp varchar(max),@StrQry varchar(max),@QType varchar(20),@StrClause varchar(max)
Declare @TempTable Table(LedgerNo numeric(18))
set @StrQry=''''
set @QType=''False'' set @StrClause=''''

Select @QType=SettingValue From MSettings Where PKSettingNo=329

if(@QType=''True'')
  set @StrClause=''+(SELECT ''''-'''' + ISNULL(MArea.AreaName, '''''''') + ''''-'''' + ISNULL(MCity.CityName, '''''''') FROM 
					MLedgerDetails LEFT OUTER JOIN MCity ON MLedgerDetails.CityNo = MCity.CityNo LEFT OUTER JOIN 
					MArea ON MLedgerDetails.AreaNo = MArea.AreaNo
					WHERE     (MLedgerDetails.LedgerNo = MLedger.LedgerNo)) AS LedgerName''

set @StrQry =''select Distinct Tbl1.LedgerNo as ''''Ledger No'''',Tbl1.LedgerName as ''''Ledger Name'''',case when (Sum(Tbl1.OpAmt)>=0) then Sum(Tbl1.OpAmt) else 0 end as ''''Op. Amt(Dr)'''',
	   case when (Sum(Tbl1.OpAmt)<0) then abs(Sum(Tbl1.OpAmt)) else 0  end as ''''Op. Amt(Cr)'''',
	   Sum(Tbl1.DrAmt) as ''''Debit Amount'''',Sum(Tbl1.CrAmt) as ''''Credit Amount'''',
	   case when ((Sum(Tbl1.DrAmt)-Sum(Tbl1.CrAmt))+Sum(Tbl1.OpAmt))>=0 then abs((Sum(Tbl1.DrAmt)-Sum(Tbl1.CrAmt))+Sum(Tbl1.OpAmt)) else 0 end as ''''Cl. Amt(Dr)'''' ,
	   case when ((Sum(Tbl1.DrAmt)-Sum(Tbl1.CrAmt))+Sum(Tbl1.OpAmt))<0 then abs((Sum(Tbl1.DrAmt)-Sum(Tbl1.CrAmt))+Sum(Tbl1.OpAmt)) else 0 end as ''''Cl. Amt(Cr)'''',
	   case when ((sum(Tbl1.DrAmt)-Sum(Tbl1.CrAmt))+Sum(Tbl1.OpAmt)) >= 0 then ''''Dr'''' else ''''Cr'''' end as CrDr
From
	  (SELECT   MLedger.LedgerNo, MLedger.LedgerName ''+@StrClause+'', 
				0 as OpAmt,
				ISNULL(SUM(TVoucherDetails.Debit), 0) AS DrAmt, ISNULL(SUM(TVoucherDetails.Credit), 0) AS CrAmt
	   FROM    MLedger INNER JOIN TVoucherDetails ON MLedger.LedgerNo = TVoucherDetails.LedgerNo INNER JOIN
               TVoucherEntry ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo
	   where   MLedger.LedgerNo in(''+@LNo+'') and TVoucherEntry.IsCancel=''''false'''' and TVoucherEntry.CompanyNo=''+cast(@CompNo as varchar)+'' AND
			  (TVoucherEntry.VoucherDate >= ''''''+cast(@FromDate as varchar)+'''''') AND (TVoucherEntry.VoucherDate <= ''''''+cast(@ToDate as varchar)+'''''') 
GROUP BY MLedger.LedgerNo, MLedger.LedgerName

union  

SELECT   MLedger.LedgerNo, MLedger.LedgerName ''+@StrClause+'', 
				 IsNull(SUM(TVoucherDetails.Debit),0) - IsNull(SUM(TVoucherDetails.Credit),0) as OpAmt ,
				0 AS DrAmt, 0 AS CrAmt
	   FROM    MLedger INNER JOIN TVoucherDetails ON MLedger.LedgerNo = TVoucherDetails.LedgerNo INNER JOIN
               TVoucherEntry ON TVoucherDetails.FkVoucherNo = TVoucherEntry.PkVoucherNo
	   where   MLedger.LedgerNo in(''+@LNo+'') and TVoucherEntry.IsCancel=''''false'''' and TVoucherEntry.CompanyNo=''+cast(@CompNo as varchar)+'' AND
			   (TVoucherEntry.VoucherDate  <= DateAdd(d,-1,''''''+cast(@FromDate as varchar)+''''''))				
GROUP BY MLedger.LedgerNo, MLedger.LedgerName) as Tbl1
group by Tbl1.LedgerNo,Tbl1.LedgerName''


exec(@StrQry)

--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MStockItems_V]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'-- =============================================
-- Author:		<Author,,Name>
-- Alter date: <Alter Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE FUNCTION [dbo].[MStockItems_V](@Type int, @PItemNo numeric(18),@PGroupNo numeric(18),@PGroupNo1 numeric(18),@PFkDepartmentNo numeric(18),@PFkCategoryNo numeric(18),@PCompanyNo numeric(18))

RETURNS @StockItems TABLE (ItemNo numeric(18),ItemName varchar(max),ItemNameLang nvarchar(max),ItemShortName varchar(max), GroupNo numeric(18),
			   UOMH numeric(18),UOML numeric(18),UOMDefault numeric(18),CompanyNo numeric(18),
			   FkDepartmentNo numeric(18),FkCategoryNo numeric(18),IsActive bit,
			   MinLevel numeric(18),MaxLevel numeric(18),UserId numeric(18),UserDate Datetime,ModifiedBy varchar(Max),ControlUnder numeric(18,2),FactorVal numeric(18,3),CessValue numeric(18,2),PackagingCharges numeric(18,2),ShortCode varchar(50),esflag bit,BarCode varchar(20))
AS
Begin 

	Declare @ItemNo numeric(18),@ItemName varchar(max),@ItemNameLang nvarchar(max),@ItemShortName varchar(max), @GroupNo numeric(18),
			@UOMH numeric(18),@UOML numeric(18),@UOMDefault numeric(18),@CompanyNo numeric(18),
			@FkDepartmentNo numeric(18),@FkCategoryNo numeric(18),@IsActive bit,
			@MinLevel numeric(18),@MaxLevel numeric(18),@UserId numeric(18),@UserDate Datetime,@ModifiedBy varchar(Max),
			@ControlUnder numeric(18,0),@FactorVal numeric(18,3),@CessValue numeric(18,2),@PackagingCharges numeric(18,2),@ShortCode varchar(50),@BarCode varchar(20)
			
			

	set @ItemNo = 0
	set @GroupNo =0 
	set @UOMH = 0
	set @UOMDefault = 0
	set @CompanyNo = 0

	set @FkDepartmentNo = 0
	set @FkCategoryNo = 0
	set @MinLevel = 0
	set @MaxLevel = 0
	set @UserId = 0
	--set @MfgCompNo=0
	set @CessValue =0
	set @PackagingCharges = 0
	
			if(@Type IS NULL)  --If @Type is NULL Values Will Taken From TSalesSetting
			Begin 
					Select  @Type=Cast(SettingValue as numeric(10)) from MSettings Where PKSettingNo=29--TSalesSetting
			End

			if(@Type = 1) -- For Retriving Values Only From MStockItems
			Begin
			Insert into @StockItems Select  ItemNo,Case When(ItemShortName<>'''') Then ItemShortName Else ItemName End,Case When(LangShortDesc<>'''') Then LangShortDesc Else LangFullDesc End,ItemShortName , GroupNo,UOMH,UOML,UOMDefault,CompanyNo,
					   FkDepartmentNo,FkCategoryNo,IsActive  ,MinLevel,MaxLevel,UserId,UserDate,ModifiedBy,IsNull(ControlUnder,0),IsNull(FactorVal,0),MItemMaster.CessValue,MItemMaster.PackagingCharges,MItemMaster.ShortCode,MItemMaster.esFlag,MItemMaster.Barcode
				From MItemMaster 
				WHERE MItemMaster.ItemNo=Case When @PItemNo is null then MItemMaster.ItemNo else @PItemNo end 
				And MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.GroupNo else @PGroupNo end 
				--And MItemMaster.GroupNo1=Case When @PGroupNo1 is null then MItemMaster.GroupNo1 else @PGroupNo1 end 
				And MItemMaster.FkCategoryNo=Case When @PFkCategoryNo is null then MItemMaster.FkCategoryNo else @PFkCategoryNo end 
			    And MItemMaster.CompanyNo=Case When @PCompanyNo is null then MItemMaster.CompanyNo else @PCompanyNo end 
				And MItemMaster.FkDepartmentNo=Case When @PFkDepartmentNo is null then MItemMaster.FkDepartmentNo else @PFkDepartmentNo end 
				--And MItemMaster.IsActive=''true''
			End --@Type = 1

			if(@Type = 2) -- For Retriving Values With GroupNo1_Name + MStockItems
			Begin
				Insert into @StockItems SELECT MItemMaster.ItemNo, MItemGroup.ItemGroupName + '' '' + Case When(ItemShortName<>'''') Then ItemShortName Else ItemName End AS ItemName,MItemGroup.LangGroupName + '' '' + Case When(LangShortDesc<>'''') Then LangShortDesc Else LangFullDesc End AS ItemNameLang, MItemMaster.ItemShortName, MItemMaster.GroupNo, 
					   MItemMaster.UOMH,MItemMaster.UOML, MItemMaster.UOMDefault, MItemMaster.CompanyNo, MItemMaster.FkDepartmentNo, 
					   MItemMaster.FkCategoryNo, MItemMaster.IsActive, MItemMaster.MinLevel, MItemMaster.MaxLevel, MItemMaster.UserId, 
					   MItemMaster.UserDate, MItemMaster.ModifiedBy,IsNull(MItemMaster.ControlUnder,0),IsNull(MItemMaster.FactorVal,0),MItemMaster.CessValue,MItemMaster.PackagingCharges,MItemMaster.ShortCode,MItemMaster.esFlag,MItemMaster.Barcode
				FROM MItemMaster 
				INNER JOIN MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo
				WHERE MItemMaster.ItemNo=Case When @PItemNo is null then MItemMaster.ItemNo else @PItemNo end
				And MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.GroupNo else @PGroupNo end 
				--And MItemMaster.GroupNo1=Case When @PGroupNo1 is null then MItemMaster.GroupNo1 else @PGroupNo1 end 
				And MItemMaster.FkCategoryNo=Case When @PFkCategoryNo is null then MItemMaster.FkCategoryNo else @PFkCategoryNo end 
			    And MItemMaster.CompanyNo=Case When @PCompanyNo is null then MItemMaster.CompanyNo else @PCompanyNo end 
				--And MItemMaster.IsActive=''true''

			End--@Type = 2

			if(@Type=3) -- For Retriving Values With GroupNo2_Name + MStockItems
			Begin
				Insert into @StockItems SELECT MItemMaster.ItemNo,MItemGroup3.ItemGroupName + '' '' +  MItemGroup2.ItemGroupName + '' '' + MItemGroup.ItemGroupName + '' '' + Case When(ItemShortName<>'''') Then ItemShortName Else ItemName End AS ItemName,MItemGroup.LangGroupName + '' '' + Case When(LangShortDesc<>'''') Then LangShortDesc Else LangFullDesc End AS ItemNameLang, MItemMaster.ItemShortName, MItemMaster.GroupNo, 
					   MItemMaster.UOMH,MItemMaster.UOML, MItemMaster.UOMDefault, MItemMaster.CompanyNo, MItemMaster.FkDepartmentNo, 
					   MItemMaster.FkCategoryNo, MItemMaster.IsActive, MItemMaster.MinLevel, MItemMaster.MaxLevel, MItemMaster.UserId, 
					   MItemMaster.UserDate, MItemMaster.ModifiedBy,IsNull(MItemMaster.ControlUnder,0),IsNull(MItemMaster.FactorVal,0),MItemMaster.CessValue,MItemMaster.PackagingCharges,MItemMaster.ShortCode,MItemMaster.esFlag,MItemMaster.Barcode
				FROM MItemMaster 
				INNER JOIN MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo
	INNER JOIN MItemGroup AS MItemGroup2 ON MItemMaster.FkCategoryNo = MItemGroup2.ItemGroupNo
INNER JOIN MItemGroup AS MItemGroup3 ON MItemMaster.FkDepartmentNo = MItemGroup3.ItemGroupNo
				WHERE MItemMaster.ItemNo=Case When @PItemNo is null then MItemMaster.ItemNo else @PItemNo end
				And MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.GroupNo else @PGroupNo end 
				--And MItemMaster.GroupNo1=Case When @PGroupNo1 is null then MItemMaster.GroupNo1 else @PGroupNo1 end 
				And MItemMaster.FkCategoryNo=Case When @PFkCategoryNo is null then MItemMaster.FkCategoryNo else @PFkCategoryNo end 
			    And MItemMaster.CompanyNo=Case When @PCompanyNo is null then MItemMaster.CompanyNo else @PCompanyNo end 
			    --And MItemMaster.IsActive=''true''

			End --@Type = 3

			if(@Type=4)-- For Retriving Values With GroupNo1_Name + GroupNo2_Name  +MStockItems
			Begin
				Insert into @StockItems SELECT MItemMaster.ItemNo, MItemGroup2.ItemGroupName + '' '' +  MItemGroup3.ItemGroupName + '' '' + MItemGroup.ItemGroupName + '' '' + Case When(ItemShortName<>'''') Then ItemShortName Else ItemName End AS ItemName,MItemGroup.LangGroupName + '' '' + Case When(LangShortDesc<>'''') Then LangShortDesc Else LangFullDesc End AS ItemNameLang, MItemMaster.ItemShortName, MItemMaster.GroupNo, 
					     MItemMaster.UOMH,MItemMaster.UOML,MItemMaster.UOMDefault, MItemMaster.CompanyNo, MItemMaster.FkDepartmentNo, 
					   MItemMaster.FkCategoryNo, MItemMaster.IsActive,  MItemMaster.MinLevel, MItemMaster.MaxLevel, MItemMaster.UserId, 
					   MItemMaster.UserDate, MItemMaster.ModifiedBy,IsNull(MItemMaster.ControlUnder,0),IsNull(MItemMaster.FactorVal,0),MItemMaster.CessValue,MItemMaster.PackagingCharges,MItemMaster.ShortCode,MItemMaster.esFlag,MItemMaster.Barcode
				FROM MItemMaster 
				INNER JOIN MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo
	INNER JOIN MItemGroup AS MItemGroup2 ON MItemMaster.FkCategoryNo = MItemGroup2.ItemGroupNo
INNER JOIN MItemGroup AS MItemGroup3 ON MItemMaster.FkDepartmentNo = MItemGroup3.ItemGroupNo
				--INNER JOIN MItemGroup AS MItemGroup2 ON MItemMaster.GroupNo1 = MItemGroup2.ItemGroupNo
				WHERE MItemMaster.ItemNo=Case When @PItemNo is null then MItemMaster.ItemNo else @PItemNo end
				And MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.GroupNo else @PGroupNo end 
				--And MItemMaster.GroupNo1=Case When @PGroupNo1 is null then MItemMaster.GroupNo1 else @PGroupNo1 end 
				And MItemMaster.FkCategoryNo=Case When @PFkCategoryNo is null then MItemMaster.FkCategoryNo else @PFkCategoryNo end 
			    And MItemMaster.CompanyNo=Case When @PCompanyNo is null then MItemMaster.CompanyNo else @PCompanyNo end 
				--And MItemMaster.IsActive=''true''
			End --@Type = 4

			if(@Type=5)-- For Retriving Values With GroupNo1_Name + GroupNo2_Name
			Begin
				Insert into @StockItems SELECT MItemMaster.ItemNo,  MItemGroup.ItemGroupName + '' '' + Case When(ItemShortName<>'''') Then ItemShortName Else ItemName End AS ItemName, MItemGroup.LangGroupName + '' '' + Case When(LangShortDesc<>'''') Then LangShortDesc Else LangFullDesc End AS ItemNameLang, MItemMaster.ItemShortName, MItemMaster.GroupNo, 
				MItemMaster.UOMH,MItemMaster.UOML, MItemMaster.UOMDefault, MItemMaster.CompanyNo, MItemMaster.FkDepartmentNo, 
				MItemMaster.FkCategoryNo, MItemMaster.IsActive, MItemMaster.MinLevel, MItemMaster.MaxLevel, MItemMaster.UserId, 
				MItemMaster.UserDate, MItemMaster.ModifiedBy,IsNull(MItemMaster.ControlUnder,0),IsNull(MItemMaster.FactorVal,0),MItemMaster.CessValue,MItemMaster.PackagingCharges,MItemMaster.ShortCode,MItemMaster.esFlag,MItemMaster.Barcode
				FROM MItemMaster 
				INNER JOIN MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo
--				INNER JOIN MItemGroup AS MItemGroup2 ON MItemMaster.GroupNo1 = MItemGroup2.ItemGroupNo
				WHERE MItemMaster.ItemNo=Case When @PItemNo is null then MItemMaster.ItemNo else @PItemNo end
				And MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.GroupNo else @PGroupNo end 
				--And MItemMaster.GroupNo1=Case When @PGroupNo1 is null then MItemMaster.GroupNo1 else @PGroupNo1 end 
				And MItemMaster.FkCategoryNo=Case When @PFkCategoryNo is null then MItemMaster.FkCategoryNo else @PFkCategoryNo end 
			    And MItemMaster.CompanyNo=Case When @PCompanyNo is null then MItemMaster.CompanyNo else @PCompanyNo end 
				--And MItemMaster.IsActive=''true''

			End --@Type = 5

			if(@Type=6)-- For Retriving Values With GroupNo1_Name + Item Name + GroupNo2_Name
			Begin
				Insert into @StockItems SELECT     MItemMaster.ItemNo, MItemGroup.ItemGroupName + '' '' + Case When(ItemShortName<>'''') Then ItemShortName Else ItemName End   AS ItemName,MItemGroup.LangGroupName + '' '' + Case When(LangShortDesc<>'''') Then LangShortDesc Else LangFullDesc End   AS ItemNameLang, 
                      MItemMaster.ItemShortName, MItemMaster.GroupNo, MItemMaster.UOMH,MItemMaster.UOML, MItemMaster.UOMDefault, MItemMaster.CompanyNo, 
                     MItemMaster.FkDepartmentNo, MItemMaster.FkCategoryNo, MItemMaster.IsActive, 
                      MItemMaster.MinLevel, MItemMaster.MaxLevel, MItemMaster.UserId, MItemMaster.UserDate, MItemMaster.ModifiedBy,IsNull(MItemMaster.ControlUnder,0),IsNull(MItemMaster.FactorVal,0),MItemMaster.CessValue,MItemMaster.PackagingCharges,MItemMaster.ShortCode,MItemMaster.esFlag,MItemMaster.Barcode
					  FROM         MItemMaster INNER JOIN
                      MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo --INNER JOIN
--                      MItemGroup AS MItemGroup2 ON MItemMaster.GroupNo1 = MItemGroup2.ItemGroupNo
					  WHERE MItemMaster.ItemNo=Case When @PItemNo is null then MItemMaster.ItemNo else @PItemNo end
				    And MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.GroupNo else @PGroupNo end 
					--And MItemMaster.GroupNo1=Case When @PGroupNo1 is null then MItemMaster.GroupNo1 else @PGroupNo1 end 
					And MItemMaster.FkCategoryNo=Case When @PFkCategoryNo is null then MItemMaster.FkCategoryNo else @PFkCategoryNo end 
					And MItemMaster.CompanyNo=Case When @PCompanyNo is null then MItemMaster.CompanyNo else @PCompanyNo end 
					--And MItemMaster.IsActive=''true''

			End --@Type = 6

	if(@Type=7)-- For Retriving Values With GroupNo1_Name + Item Name + GroupNo2_Name
			Begin
				Insert into @StockItems SELECT     MItemMaster.ItemNo, MItemGroup.ItemGroupName + '' '' + Case When(ItemShortName<>'''') Then ItemShortName Else ItemName End   AS ItemName,MItemGroup.LangGroupName + '' '' + Case When(LangShortDesc<>'''') Then LangShortDesc Else LangFullDesc End   AS ItemNameLang, 
                      MItemMaster.ItemShortName, MItemMaster.GroupNo, MItemMaster.UOMH,MItemMaster.UOML, MItemMaster.UOMDefault, MItemMaster.CompanyNo, 
                     MItemMaster.FkDepartmentNo, MItemMaster.FkCategoryNo, MItemMaster.IsActive, 
                      MItemMaster.MinLevel, MItemMaster.MaxLevel, MItemMaster.UserId, MItemMaster.UserDate, MItemMaster.ModifiedBy,IsNull(MItemMaster.ControlUnder,0),IsNull(MItemMaster.FactorVal,0),MItemMaster.CessValue,MItemMaster.PackagingCharges,MItemMaster.ShortCode,MItemMaster.esFlag,MItemMaster.Barcode
					  FROM         MItemMaster INNER JOIN
                      MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo --INNER JOIN
--                      MItemGroup AS MItemGroup2 ON MItemMaster.GroupNo1 = MItemGroup2.ItemGroupNo
					  WHERE MItemMaster.ItemNo=Case When @PItemNo is null then MItemMaster.ItemNo else @PItemNo end
				    And MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.GroupNo else @PGroupNo end 
					--And MItemMaster.GroupNo1=Case When @PGroupNo1 is null then MItemMaster.GroupNo1 else @PGroupNo1 end 
					And MItemMaster.FkCategoryNo=Case When @PFkCategoryNo is null then MItemMaster.FkCategoryNo else @PFkCategoryNo end 
					And MItemMaster.CompanyNo=Case When @PCompanyNo is null then MItemMaster.CompanyNo else @PCompanyNo end 
					--And MItemMaster.IsActive=''true''

			End 

	if(@Type=8)-- For Retriving Values With GroupNo1_Name + Item Name + GroupNo2_Name
			Begin
				Insert into @StockItems SELECT     MItemMaster.ItemNo, MItemGroup.ItemGroupName + '' '' + Case When(ItemShortName<>'''') Then ItemShortName Else ItemName End   AS ItemName,MItemGroup.LangGroupName + '' '' + Case When(LangShortDesc<>'''') Then LangShortDesc Else LangFullDesc End   AS ItemNameLang, 
                      MItemMaster.ItemShortName, MItemMaster.GroupNo, MItemMaster.UOMH,MItemMaster.UOML, MItemMaster.UOMDefault, MItemMaster.CompanyNo, 
                     MItemMaster.FkDepartmentNo, MItemMaster.FkCategoryNo, MItemMaster.IsActive, 
                      MItemMaster.MinLevel, MItemMaster.MaxLevel, MItemMaster.UserId, MItemMaster.UserDate, MItemMaster.ModifiedBy,IsNull(MItemMaster.ControlUnder,0),IsNull(MItemMaster.FactorVal,0),MItemMaster.CessValue,MItemMaster.PackagingCharges,MItemMaster.ShortCode,MItemMaster.esFlag,MItemMaster.Barcode
					  FROM         MItemMaster INNER JOIN
                      MItemGroup ON MItemMaster.GroupNo = MItemGroup.ItemGroupNo --INNER JOIN
--                      MItemGroup AS MItemGroup2 ON MItemMaster.GroupNo1 = MItemGroup2.ItemGroupNo
					  WHERE MItemMaster.ItemNo=Case When @PItemNo is null then MItemMaster.ItemNo else @PItemNo end
				    And MItemMaster.GroupNo=Case When @PGroupNo is null then MItemMaster.GroupNo else @PGroupNo end 
					--And MItemMaster.GroupNo1=Case When @PGroupNo1 is null then MItemMaster.GroupNo1 else @PGroupNo1 end 
					And MItemMaster.FkCategoryNo=Case When @PFkCategoryNo is null then MItemMaster.FkCategoryNo else @PFkCategoryNo end 
					And MItemMaster.CompanyNo=Case When @PCompanyNo is null then MItemMaster.CompanyNo else @PCompanyNo end 
					--And MItemMaster.IsActive=''true''

			End 
	
--	Open CurMStockItems
--	fetch CurMStockItems into @ItemNo ,@ItemName ,@ItemShortName , @GroupNo ,@UOMPrimary ,@UOMDefault ,
--							  @CompanyNo ,@GroupNo1 ,@FkDepartmentNo ,@FkCategoryNo ,@IsActive,@IsFixedBarcode,
--							  @MinLevel ,@MaxLevel ,@UserId ,@UserDate ,@ModifiedBy
--		while(@@fetch_status = 0)
--		Begin
--				Insert into @StockItems values (@ItemNo ,@ItemName ,@ItemShortName , @GroupNo ,@UOMPrimary ,@UOMDefault ,
--								  @CompanyNo ,@GroupNo1 ,@FkDepartmentNo ,@FkCategoryNo ,@IsActive,@IsFixedBarcode,
--								  @MinLevel ,@MaxLevel ,@UserId ,@UserDate ,@ModifiedBy)
--
--				fetch CurMStockItems into @ItemNo ,@ItemName ,@ItemShortName , @GroupNo ,@UOMPrimary ,@UOMDefault ,
--								  @CompanyNo ,@GroupNo1 ,@FkDepartmentNo ,@FkCategoryNo ,@IsActive,@IsFixedBarcode,
--								  @MinLevel ,@MaxLevel ,@UserId ,@UserDate ,@ModifiedBy
--		End --@@fetch_status=0
--		Close CurMStockItems Deallocate CurMStockItems
	Return
	End














/*---------------------------------------------------------------------------------------------------------------------------------------------------*/



' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMOtherBank]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE  [dbo].[DeleteMOtherBank] 
@BankNo                             numeric(18)


AS
Update MOtherBank set IsActive=''False'',StatusNo=2 Where BankNo = @BankNo

--       DELETE FROM MBank
--       WHERE
--          BankNo = @BankNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMOtherBank]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE [dbo].[AddMOtherBank]
     @BankNo                              numeric(18),
     @BankName                            varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select BankNo from MOtherBank
          where
          BankNo = @BankNo)
     BEGIN
       --Update existing row
       UPDATE MOtherBank
       SET
          BankName = @BankName,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          BankNo = @BankNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(BankNo),0) From MOtherBank
       DBCC CHECKIDENT(''MOtherBank'', RESEED, @Id)
       INSERT INTO MOtherBank(
          BankName,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          @BankName,
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTParkingBillDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 28/01/2013
CREATE PROCEDURE  [dbo].[DeleteTParkingBillDetails] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM TParkingBillDetails
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTParkingBillDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 28/01/2013
CREATE PROCEDURE [dbo].[AddTParkingBillDetails]
     @PkSrNo                              numeric(18),
     @ParkingBillNo                       numeric(18),
     @Barcode                             varchar(50),
     @Qty                                 numeric(18,2),
     @Rate                                numeric(18,2),
	 @ItemDisc							  numeric(18,2),
	 @UOMNo								  numeric(18),
	 @CompanyNo							  numeric(18),
     @FkRateSettingNo                     numeric(18),
	 @ItemNo							  numeric(18),
   @DiscPercentage                                numeric(18,2),
	 @DiscAmount							  numeric(18,2)
AS
IF EXISTS(select PkSrNo from TParkingBillDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TParkingBillDetails
       SET
          ParkingBillNo = @ParkingBillNo,
          Barcode = @Barcode,
          Qty = @Qty,
          Rate = @Rate,
		  ItemDisc = @ItemDisc,
		  UOMNo = @UOMNo,
          StatusNo=2,
		  CompanyNo = @CompanyNo,
          FkRateSettingNo = @FkRateSettingNo,
		  ItemNo = @ItemNo,
DiscAmt=@DiscAmount,
DiscPer=@DiscPercentage
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TParkingBillDetails
       DBCC CHECKIDENT(''TParkingBillDetails'', RESEED, @Id)
       INSERT INTO TParkingBillDetails(
          ParkingBillNo,
          Barcode,
          Qty,
          Rate,
		  ItemDisc,
		  UOMNo, 
          StatusNo,
		  CompanyNo,
          FkRateSettingNo,
		  ItemNo,DiscPer,DiscAmt
)
       VALUES(
          @ParkingBillNo,
          @Barcode,
          @Qty,
          @Rate,
		  @ItemDisc,
		  @UOMNo,
          1,
		  @CompanyNo,
          @FkRateSettingNo,
		  @ItemNo,@DiscPercentage,@DiscAmount
)

END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMNotification]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 26/05/2014
CREATE PROCEDURE [dbo].[AddMNotification]
     @NotifyNo                            numeric(18),
     @NotifyType                          numeric(18),
     @NotifyMessage                       text,
     @NotifyDate                          datetime,
     @NotifyStatus                        int,
	 @NotifyFileName					  varchar(300),
     @CompanyNo                           numeric(18)
AS
IF EXISTS(select NotifyNo from MNotification
          where
          NotifyNo = @NotifyNo)
     BEGIN
       --Update existing row
       UPDATE MNotification
       SET
          NotifyType = @NotifyType,
          NotifyMessage = @NotifyMessage,
          NotifyDate = @NotifyDate,
          NotifyStatus = @NotifyStatus,
		  NotifyFileName = @NotifyFileName,
          StatusNo = 2,
          CompanyNo = @CompanyNo
       WHERE
          NotifyNo = @NotifyNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(NotifyNo),0) From MNotification
       DBCC CHECKIDENT(''MNotification'', RESEED, @Id)
       INSERT INTO MNotification(
          NotifyType,
          NotifyMessage,
          NotifyDate,
          NotifyStatus,
		  NotifyFileName,
          StatusNo,
          CompanyNo
)
       VALUES(
          @NotifyType,
          @NotifyMessage,
          @NotifyDate,
          @NotifyStatus,
		  @NotifyFileName,
          1,
          @CompanyNo
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTOtherStock]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 17/05/2014
CREATE PROCEDURE [dbo].[AddTOtherStock]
     @PkOtherStockTrnNo                   numeric(18),
     @FKVoucherNo                         numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @FkVoucherSrNo                       numeric(18),
     @GroupNo                             numeric(18),
     @ItemNo                              numeric(18),
     @TrnCode                             numeric(18),
     @Quantity                            numeric(18,2),
     @BilledQuantity                       numeric(18,2),
     @Rate                                numeric(18,2),
     @Amount                              numeric(18,2),
     @NetRate                            numeric(18,2),
     @NetAmount                           numeric(18,2),
     @TaxPercentage                       numeric(18,2),
     @TaxAmount                            numeric(18,2),
     @DiscPercentage                       numeric(18,2),
     @DiscAmount                          numeric(18,2),
     @DiscRupees                           numeric(18,2),
     @DiscPercentage2                     numeric(18,2),
     @DiscAmount2                          numeric(18,2),
     @DiscRupees2                          numeric(18,2),
     @FkUomNo                             numeric(18),
     @FkStockBarCodeNo                    numeric(18),
     @FkRateSettingNo                     numeric(18),
     @FkItemTaxInfo                       numeric(18),
     @IsVoucherLock                       bit,
     @FreeQty                             numeric(18),
     @FreeUOMNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @CompanyNo                           numeric(18),
     @StatusNo                            int,
     @LandedRate                           numeric(18,2),
	 @BalanceQty						  numeric(18,2),
	 @IsComplete						  bit,
@DisplayItemName					  varchar(500)
AS
IF EXISTS(select PkOtherStockTrnNo from TOtherStock
          where
          PkOtherStockTrnNo = @PkOtherStockTrnNo)
     BEGIN
       --Update existing row
       UPDATE TOtherStock
       SET
          FKVoucherNo = @FKVoucherNo,
          FkVoucherTrnNo = @FkVoucherTrnNo,
          FkVoucherSrNo = @FkVoucherSrNo,
          GroupNo = @GroupNo,
          ItemNo = @ItemNo,
          TrnCode = @TrnCode,
          Quantity = @Quantity,
          BilledQuantity = @BilledQuantity,
          Rate = @Rate,
          Amount = @Amount,
          NetRate = @NetRate,
          NetAmount = @NetAmount,
          TaxPercentage = @TaxPercentage,
          TaxAmount = @TaxAmount,
          DiscPercentage = @DiscPercentage,
          DiscAmount = @DiscAmount,
          DiscRupees = @DiscRupees,
          DiscPercentage2 = @DiscPercentage2,
          DiscAmount2 = @DiscAmount2,
          DiscRupees2 = @DiscRupees2,
          FkUomNo = @FkUomNo,
          FkStockBarCodeNo = @FkStockBarCodeNo,
          FkRateSettingNo = @FkRateSettingNo,
          FkItemTaxInfo = @FkItemTaxInfo,
          IsVoucherLock = @IsVoucherLock,
          FreeQty = @FreeQty,
          FreeUOMNo = @FreeUOMNo,
          UserID = @UserID,
          UserDate = @UserDate,
         
          CompanyNo = @CompanyNo,
          StatusNo = @StatusNo,
          LandedRate = @LandedRate,
		  BalanceQty = @BalanceQty,
		  IsComplete = @IsComplete,
 DisplayItemName=@DisplayItemName
       WHERE
          PkOtherStockTrnNo = @PkOtherStockTrnNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkOtherStockTrnNo),0) From TOtherStock
       DBCC CHECKIDENT(''TOtherStock'', RESEED, @Id)
       INSERT INTO TOtherStock(
          FKVoucherNo,
          FkVoucherTrnNo,
          FkVoucherSrNo,
          GroupNo,
          ItemNo,
          TrnCode,
          Quantity,
          BilledQuantity,
          Rate,
          Amount,
          NetRate,
          NetAmount,
          TaxPercentage,
          TaxAmount,
          DiscPercentage,
          DiscAmount,
          DiscRupees,
          DiscPercentage2,
          DiscAmount2,
          DiscRupees2,
          FkUomNo,
          FkStockBarCodeNo,
          FkRateSettingNo,
          FkItemTaxInfo,
          IsVoucherLock,
          FreeQty,
          FreeUOMNo,
          UserID,
          UserDate,
        
          CompanyNo,
          StatusNo,
          LandedRate,
		  BalanceQty,
		  IsComplete,
DisplayItemName
)
       VALUES(
          @FKVoucherNo,
          @FkVoucherTrnNo,
          @FkVoucherSrNo,
          @GroupNo,
          @ItemNo,
          @TrnCode,
          @Quantity,
          @BilledQuantity,
          @Rate,
          @Amount,
          @NetRate,
          @NetAmount,
          @TaxPercentage,
          @TaxAmount,
          @DiscPercentage,
          @DiscAmount,
          @DiscRupees,
          @DiscPercentage2,
          @DiscAmount2,
          @DiscRupees2,
          @FkUomNo,
          @FkStockBarCodeNo,
          @FkRateSettingNo,
          @FkItemTaxInfo,
          @IsVoucherLock,
          @FreeQty,
          @FreeUOMNo,
          @UserID,
          @UserDate,
        
          @CompanyNo,
          @StatusNo,
          @LandedRate,
		  @BalanceQty,
		  ''false'',
@DisplayItemName
)

END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMState]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE [dbo].[AddMState]
     @StateNo                             numeric(18),
     @StateName                           varchar(50),
     @StateShortCode                      varchar(50),
     @StateLangName                       varchar(50),
     @CountryNo                           numeric(18),
    -- @RegionNo                            numeric(18),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
     @StateCode                           varchar(50)
   --  @ModifiedBy                          text
AS
IF EXISTS(select StateNo from MState
          where
          StateNo = @StateNo)
     BEGIN
       --Update existing row
       UPDATE MState
       SET
          StateName = @StateName,
          StateShortCode = @StateShortCode,
	      StateLangName = @StateLangName,
          CountryNo = @CountryNo,
          --RegionNo = @RegionNo,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StateCode=@StateCode,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          StateNo = @StateNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(StateNo),0) From MState
       DBCC CHECKIDENT(''MState'', RESEED, @Id)
       INSERT INTO MState(
          --StateNo,
          StateName,
          StateShortCode,
	      StateLangName,
          CountryNo,
         -- RegionNo,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo, 
          StatusNo,
		   StateCode
          --ModifiedBy
)
       VALUES(
          --@StateNo,
          @StateName,
          @StateShortCode,
		  @StateLangName,
          @CountryNo,
         -- @RegionNo,
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1,
@StateCode
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTOtherVoucherEntry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[AddTOtherVoucherEntry]
     @PkOtherVoucherNo                    numeric(18),
     @VoucherTypeCode                     numeric(18),
     @VoucherUserNo                       numeric(18),
     @VoucherDate                         datetime,
     @VoucherTime                         datetime,
     @Narration                           varchar(50),
     @Reference                           varchar(50),
     @ChequeNo                            numeric(18),
     @ClearingDate                        datetime,
     @CompanyNo                           numeric(18),
     @BilledAmount                        numeric(18,2),
     @ChallanNo                           varchar(50),
     @Remark                              varchar(50),
     @InwardLocationCode                  numeric(18),
     @MacNo                               numeric(18),
     @IsCancel                            bit,
     @PayTypeNo                           numeric(18),
     @RateTypeNo                          numeric(18),
     @TaxTypeNo                           numeric(18),
     @IsVoucherLock                       bit,
     @VoucherStatus                       int,
     @UserID                              numeric(18),
     @UserDate                            datetime,   
     @OrderType                           numeric(18),
     @ReturnAmount                        numeric(18),
     @Visibility                          numeric(18),
     @DiscPercent                         numeric(18),
     @DiscAmt                             numeric(18),
     @MixMode                             int,
     @IsItemLevelDisc                     bit,
     @IsFooterLevelDisc                   bit,
	 @SchemeDisc						  numeric(18,2),
	 @DistDisc							  numeric(18,2),
	 @CashDisc							   numeric(18,2),
	 @Charges							   numeric(18,2),
	 @SubTotal								numeric(18,2),
	 @TotalTax								numeric(18,2),
	 @RoundOff								numeric(18,2),
	 @OtherTax								numeric(18,2),
	 @LedgerNo								numeric(18),
     --@ServerOtherVoucherNo                  numeric(18),
     @ReturnID							  int output
AS
IF EXISTS(select PkOtherVoucherNo from TOtherVoucherEntry
          where
          PkOtherVoucherNo = @PkOtherVoucherNo)
     BEGIN
       --Update existing row
       UPDATE TOtherVoucherEntry
       SET
          VoucherTypeCode = @VoucherTypeCode,
          VoucherUserNo = @VoucherUserNo,
          VoucherDate = @VoucherDate,
          VoucherTime = @VoucherTime,
          Narration = @Narration,
          Reference = @Reference,
          ChequeNo = @ChequeNo,
          ClearingDate = @ClearingDate,
          CompanyNo = @CompanyNo,
          BilledAmount = @BilledAmount,
          ChallanNo = @ChallanNo,
          Remark = @Remark,
          InwardLocationCode = @InwardLocationCode,
          MacNo = @MacNo,
          IsCancel = @IsCancel,
          PayTypeNo = @PayTypeNo,
          RateTypeNo = @RateTypeNo,
          TaxTypeNo = @TaxTypeNo,
          IsVoucherLock = @IsVoucherLock,
          VoucherStatus = @VoucherStatus,
          UserID = @UserID,
          UserDate = @UserDate,         
          OrderType = @OrderType,
          ReturnAmount = @ReturnAmount,
          Visibility = @Visibility,
          DiscPercent = @DiscPercent,
          DiscAmt = @DiscAmt,
          StatusNo = 2,
          MixMode = @MixMode,
          IsItemLevelDisc = @IsItemLevelDisc,
          IsFooterLevelDisc = @IsFooterLevelDisc,
		  SchemeDisc=  @SchemeDisc,
		  DistDisc= @DistDisc,
		  CashDisc=@CashDisc,
		 Charges =@Charges,
		 SubTotal= @SubTotal,
		 TotalTax =@TotalTax,
		 RoundOff=@RoundOff,
		 OtherTax=@OtherTax,
		LedgerNo=@LedgerNo--,
        --ServerOtherVoucherNo=@ServerOtherVoucherNo
       WHERE
          PkOtherVoucherNo = @PkOtherVoucherNo
		set @ReturnID=@PkOtherVoucherNo   

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkOtherVoucherNo),0) From TOtherVoucherEntry
       DBCC CHECKIDENT(''TOtherVoucherEntry'', RESEED, @Id)
	   if (@VoucherUserNo=0)
			Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TOtherVoucherEntry where VoucherTypeCode=@VoucherTypeCode
       INSERT INTO TOtherVoucherEntry(
          VoucherTypeCode,
          VoucherUserNo,
          VoucherDate,
          VoucherTime,
          Narration,
          Reference,
          ChequeNo,
          ClearingDate,
          CompanyNo,
          BilledAmount,
          ChallanNo,
          Remark,
          InwardLocationCode,
          MacNo,
          IsCancel,
          PayTypeNo,
          RateTypeNo,
          TaxTypeNo,
          IsVoucherLock,
          VoucherStatus,
          UserID,
          UserDate,         
          OrderType,
          ReturnAmount,
          Visibility,
          DiscPercent,
          DiscAmt,
          StatusNo,
          MixMode,
          IsItemLevelDisc,
          IsFooterLevelDisc,
		  SchemeDisc,
		  DistDisc,
		  CashDisc,
		  Charges,
		  SubTotal,
		  TotalTax,
		  RoundOff,
		  OtherTax,
		  LedgerNo,
		  IsComplete,
          ServerOtherVoucherNo
)
       VALUES(
          @VoucherTypeCode,
          @VoucherUserNo,
          @VoucherDate,
          @VoucherTime,
          @Narration,
          @Reference,
          @ChequeNo,
          @ClearingDate,
          @CompanyNo,
          @BilledAmount,
          @ChallanNo,
          @Remark,
          @InwardLocationCode,
          @MacNo,
          @IsCancel,
          @PayTypeNo,
          @RateTypeNo,
          @TaxTypeNo,
          @IsVoucherLock,
          @VoucherStatus,
          @UserID,
          @UserDate,        
          @OrderType,
          @ReturnAmount,
          @Visibility,
          @DiscPercent,
          @DiscAmt,
          1,
          @MixMode,
          @IsItemLevelDisc,
          @IsFooterLevelDisc,
		  @SchemeDisc,
		  @DistDisc,
		  @CashDisc,
		  @Charges,
		  @SubTotal,
		  @TotalTax,
		  @RoundOff,
		  @OtherTax,
		  @LedgerNo,
		  ''false'',
          0 --@ServerOtherVoucherNo
)
Set @ReturnID=Scope_Identity()
END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMBrandSponsor]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 26/04/2014
CREATE PROCEDURE [dbo].[AddMBrandSponsor]
     @SponsorNo                           numeric(18),
     @BrandSponsorName                    varchar(50),
     @Remark                              text,
     @IsActive							  bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
	 @GlobalSponsorNo					  numeric(18)
AS
IF EXISTS(select SponsorNo from MBrandSponsor
          where
          SponsorNo = @SponsorNo)
     BEGIN
       --Update existing row
       UPDATE MBrandSponsor
       SET
          BrandSponsorName = @BrandSponsorName,
          Remark = @Remark,
		  IsActive=@IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  GlobalSponsorNo = @GlobalSponsorNo,
		  CompanyNo = @CompanyNo,
		  StatusNo = 2
       WHERE
          SponsorNo = @SponsorNo

     END
ELSE
     BEGIN
       --Insert new row
       INSERT INTO MBrandSponsor(
		  SponsorNo,
          BrandSponsorName,
          Remark,
	      IsActive,
          UserID,
          UserDate,
		  GlobalSponsorNo,
		  CompanyNo,
		  StatusNo
)
       VALUES(
		  @SponsorNo,
          @BrandSponsorName,
          @Remark,
		  @IsActive,
          @UserID,
          @UserDate,
		  @GlobalSponsorNo,
		  @CompanyNo,
		  1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMSalesman]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 31/01/2012
create PROCEDURE [dbo].[AddMSalesman]
     @SalesmanNo                          numeric(18),
     @SalesmanName                        varchar(50),
     @SalesmanUserNo                      numeric(18),
     @Address                             text,
     @PinCode                             varchar(50),
     @PhoneNo                             varchar(50),
     @Mobile                              varchar(50),
     @Disc                                numeric(18,2),
     @Rupees                              numeric(18,2),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select SalesmanNo from MSalesman
          where
          SalesmanNo = @SalesmanNo)
     BEGIN
       --Update existing row
       UPDATE MSalesman
       SET
          SalesmanName = @SalesmanName,
          SalesmanUserNo = @SalesmanUserNo,
          Address = @Address,
          PinCode = @PinCode,
          PhoneNo = @PhoneNo,
          Mobile = @Mobile,
          Disc = @Disc,
          Rupees = @Rupees,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          SalesmanNo = @SalesmanNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(SalesmanNo),0) From MSalesman
       DBCC CHECKIDENT(''MSalesman'', RESEED, @Id)
       INSERT INTO MSalesman(
          SalesmanName,
          SalesmanUserNo,
          Address,
          PinCode,
          PhoneNo,
          Mobile,
          Disc,
          Rupees,
          IsActive,
          UserID,
          UserDate
)
       VALUES(
          @SalesmanName,
          @SalesmanUserNo,
          @Address,
          @PinCode,
          @PhoneNo,
          @Mobile,
          @Disc,
          @Rupees,
          @IsActive,
          @UserID,
          @UserDate
)

END


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMOtherSettings]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/01/2014
CREATE PROCEDURE  [dbo].[DeleteMOtherSettings] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MOtherSettings
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMOtherSettings]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/01/2014
CREATE PROCEDURE [dbo].[AddMOtherSettings]
     @PkSrNo                              numeric(18),
     @SettingsKeyCode                     varchar(50)
AS
IF EXISTS(select PkSrNo from MOtherSettings
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MOtherSettings
       SET
          SettingsKeyCode = @SettingsKeyCode
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MOtherSettings
       DBCC CHECKIDENT(''MOtherSettings'', RESEED, @Id)
       INSERT INTO MOtherSettings(
          SettingsKeyCode
)
       VALUES(
          @SettingsKeyCode
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTDeliveryAddress]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[AddTDeliveryAddress]
     @PkSrNo                              numeric(18),
     @FkVoucherno                         numeric(18),
     @Ledgerno                            numeric(18),
     @LedgerDetailsNo                     numeric(18),
     @IsActive                            bit,
     @UserId                              int,
	 @UserDate					          datetime,
	 --@ModifiedBy					      varchar(500),
@Companyno                   int
   --  @StatusNo							  int
	
AS
IF EXISTS(select PkSrNo from TDeliveryAddress
          where
          FkVoucherno = @FkVoucherno)
     BEGIN
       --Update existing row
       UPDATE TDeliveryAddress
       SET
          FkVoucherno		= @FkVoucherno,
          Ledgerno			= @Ledgerno,
		  LedgerDetailsNo	= @LedgerDetailsNo,
          IsActive			= @IsActive,
          UserID			= @UserID,
          UserDate			= @UserDate,
          ModifiedBy		= isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo			= 2

       WHERE
          FkVoucherno = @FkVoucherno

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TDeliveryAddress
       DBCC CHECKIDENT(''TDeliveryAddress'', RESEED, @Id)
       INSERT INTO TDeliveryAddress(
 
          FkVoucherno,
          Ledgerno,
		  LedgerDetailsNo,
          IsActive,
          UserID,
          UserDate,
CompanyNo,
          StatusNo
	
)
       VALUES(

          @FkVoucherno,
          @Ledgerno,
		  @LedgerDetailsNo,
		  @IsActive,
		  @UserID,
		  @UserDate,
@CompanyNo,
          1
)

END

------------------------------------------------------------------------------------------------------------------------------------------------------------------

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ViewMaxMinLevel]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[ViewMaxMinLevel]
@CompNo		numeric(18),
@FromDate	datetime,
@ToDate		datetime


AS
Declare @TMaxMin Table(ItemNo numeric(18),ItemName Varchar(200),Quantity numeric(18,2),MinLevel numeric(18,2),MaxLevel numeric(18,2),OrdQty numeric(18,2))
Declare @ItemNo numeric(18),@ItemName Varchar(200),@Quantity numeric(18,2),@MinLevel numeric(18,2),@MaxLevel numeric(18,2)

Declare Cur Cursor For Select ItemNo,ItemName,IsNull(MinLevel,0),IsNull(MaxLevel,0) FRom MStockItems_V(NULL,NULL,NULL,NULL,NULL,NULL,NULL) 
Open Cur
Fetch Next From Cur Into @ItemNo ,@ItemName ,@MinLevel ,@MaxLevel 
While(@@Fetch_Status =0 )
Begin
	Select @Quantity=Quantity From GetItemClosingStock(@CompNo,@FromDate,@ToDate,@ItemNo,0,0)
	Insert into @TMaxMin values(@ItemNo,@ItemName,@Quantity,@MinLevel,@MaxLevel,0)
	Fetch Next From Cur Into @ItemNo ,@ItemName ,@MinLevel ,@MaxLevel 
End
Close Cur Deallocate Cur

Select * From @TMaxMin
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMBarcodePrefix]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 26-Feb-2013
 CREATE PROCEDURE  [dbo].[DeleteMBarcodePrefix]
@PkPrefixBarcodeNo		numeric(18)
AS

update MBarcodePrefix set IsActive=''false'' Where
		PkPrefixBarcodeNo=@PkPrefixBarcodeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMBarcodePrefix]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 26-Feb-2013
CREATE PROCEDURE [dbo].[AddMBarcodePrefix]
	@PkPrefixBarcodeNo		numeric(18),
	@PrefixBarcode		varchar(50),
	@MainGroupNo		numeric(18),
	@BrandNo		numeric(18),
	@CompanyNo		numeric(18),
	@DepartmentNo		numeric(18),
	@CategoryNo		numeric(18),
	@SalesTaxSettingNo		numeric(18),
	@PurchaseTaxSettingNo		numeric(18),
	@IsActive					bit
 AS 
 IF EXISTS ( Select PkPrefixBarcodeNo From MBarcodePrefix 
	 Where 
	 PkPrefixBarcodeNo =@PkPrefixBarcodeNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE MBarcodePrefix 
	 SET 

	PrefixBarcode=@PrefixBarcode,
	MainGroupNo=@MainGroupNo,
	BrandNo=@BrandNo,
	CompanyNo=@CompanyNo,
	DepartmentNo=@DepartmentNo,
	CategoryNo=@CategoryNo,
	SalesTaxSettingNo=@SalesTaxSettingNo,
	PurchaseTaxSettingNo=@PurchaseTaxSettingNo,
	IsActive=@IsActive
	Where 
	 PkPrefixBarcodeNo=@PkPrefixBarcodeNo
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(PkPrefixBarcodeNo),0) From MBarcodePrefix 
	  DBCC CHECKIDENT(''MBarcodePrefix'', RESEED, @Id) 
	  INSERT INTO MBarcodePrefix( 
	PrefixBarcode,
	MainGroupNo,
	BrandNo,
	CompanyNo,
	DepartmentNo,
	CategoryNo,
	SalesTaxSettingNo,
	PurchaseTaxSettingNo,
	IsActive 
)
	  VALUES(
	@PrefixBarcode,
	@MainGroupNo,
	@BrandNo,
	@CompanyNo,
	@DepartmentNo,
	@CategoryNo,
	@SalesTaxSettingNo,
	@PurchaseTaxSettingNo,
	@IsActive
	)
	END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMSubTaxType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE  [dbo].[DeleteMSubTaxType] 
@SubTaxTypeNo                       numeric(18)


AS

       DELETE FROM MSubTaxType
       WHERE
          SubTaxTypeNo = @SubTaxTypeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMSubTaxType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE [dbo].[AddMSubTaxType]
     @SubTaxTypeNo                        numeric(18),
     @SubTaxTypeName                      varchar(50),
     @SubTaxTypeShortCode                 varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @ModifiedBy                          text
AS
IF EXISTS(select SubTaxTypeNo from MSubTaxType
          where
          SubTaxTypeNo = @SubTaxTypeNo)
     BEGIN
       --Update existing row
       UPDATE MSubTaxType
       SET
          SubTaxTypeName = @SubTaxTypeName,
          SubTaxTypeShortCode = @SubTaxTypeShortCode,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          SubTaxTypeNo = @SubTaxTypeNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(SubTaxTypeNo),0) From MSubTaxType
       DBCC CHECKIDENT(''MSubTaxType'', RESEED, @Id)
       INSERT INTO MSubTaxType(
          --SubTaxTypeNo,
          SubTaxTypeName,
          SubTaxTypeShortCode,
          IsActive,
          UserID,
          UserDate
          --ModifiedBy
)
       VALUES(
          --@SubTaxTypeNo,
          @SubTaxTypeName,
          @SubTaxTypeShortCode,
          @IsActive,
          @UserID,
          @UserDate
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLedgerRateSetting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/03/2015
CREATE PROCEDURE [dbo].[AddMLedgerRateSetting]
     @PkSrNo                              numeric(18),
     @LedgerNo                            numeric(18),
     @ItemNo                              numeric(18),
     @UOMNo                               numeric(18),
     @Rate                                numeric(18,2),
	 @MRP								  numeric(18,2),
     @DiscPercentage                      numeric(18,2),
     @DiscAmount                          numeric(18,2),
     @CompNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkSrNo from MLedgerRateSetting
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MLedgerRateSetting
       SET
          LedgerNo = @LedgerNo,
          ItemNo = @ItemNo,
          UOMNo = @UOMNo,
          Rate = @Rate,
		  MRP = @MRP,
          DiscPercentage = @DiscPercentage,
          DiscAmount = @DiscAmount,
         CompNo = @CompNo,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MLedgerRateSetting
       DBCC CHECKIDENT(''MLedgerRateSetting'', RESEED, @Id)
       INSERT INTO MLedgerRateSetting(
          LedgerNo,
          ItemNo,
          UOMNo,
          Rate,
		  MRP,
          DiscPercentage,
          DiscAmount,
          CompNo,
          UserID,
          UserDate
)
       VALUES(
          @LedgerNo,
          @ItemNo,
          @UOMNo,
          @Rate,
		  @MRP,
          @DiscPercentage,
          @DiscAmount,
          @CompNo,
          @UserID,
          @UserDate
)

END


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMLedgerRateSetting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/03/2015
CREATE PROCEDURE  [dbo].[DeleteMLedgerRateSetting] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MLedgerRateSetting
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherPart]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
CREATE PROCEDURE [dbo].[AddTVoucherPart]
     @PkSrNo                              numeric(18),
     @Fke                                  numeric(18),
     @Fks                                  numeric(18)
	
     --@ModifiedBy                          text
AS
IF EXISTS(select PkSrNo  from TVoucherPart
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TVoucherPart
       SET
          Fke   = @Fke,
          Fks  = @Fks
		 
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TVoucherPart
       DBCC CHECKIDENT(''TVoucherPart'', RESEED, @Id)
       INSERT INTO TVoucherPart(
 
           Fke ,
          Fks
		 
)
       VALUES(

          @Fke ,
          @Fks
		 
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTEstimate]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
create PROCEDURE [dbo].[AddTEstimate]
     @PkSrNo                              numeric(18),
     @Fke                                  numeric(18),
     @Fks                                  numeric(18)
	
     --@ModifiedBy                          text
AS
IF EXISTS(select PkSrNo  from TEstimate
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TEstimate
       SET
          Fke   = @Fke,
          Fks  = @Fks
		 
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TEstimate
       DBCC CHECKIDENT(''TEstimate'', RESEED, @Id)
       INSERT INTO TEstimate(
 
           Fke ,
          Fks
		 
)
       VALUES(

          @Fke ,
          @Fks
		 
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMBarcodeSettings]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/01/2014
CREATE PROCEDURE  [dbo].[DeleteMBarcodeSettings] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MBarcodeSettings
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMBarcodeSettings]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/01/2014
CREATE PROCEDURE [dbo].[AddMBarcodeSettings]
     @PkSrNo                              numeric(18),
     @SettingNo                           numeric(18),
     @BarcodeTemplateNo                   numeric(18),
     @SettingValue                        varchar(50),
     @IsActive                            bit,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select PkSrNo from MBarcodeSettings
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MBarcodeSettings
       SET
          SettingNo = @SettingNo,
          BarcodeTemplateNo = @BarcodeTemplateNo,
          SettingValue = @SettingValue,
          IsActive = @IsActive,
		  CompanyNo = @CompanyNo,
		  StatusNo=2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MBarcodeSettings
       DBCC CHECKIDENT(''MBarcodeSettings'', RESEED, @Id)
       INSERT INTO MBarcodeSettings(
          SettingNo,
          BarcodeTemplateNo,
          SettingValue,
          IsActive,
		  CompanyNo,
		  StatusNo
)
       VALUES(
          @SettingNo,
          @BarcodeTemplateNo,
          @SettingValue,
          @IsActive,
		  @CompanyNo,
		  1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTPackingListDetailsItemNo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'Create PROCEDURE  [dbo].[DeleteTPackingListDetailsItemNo] 
@FkVoucherNo                      numeric(18),
@ItemNo							  numeric(18)



AS

       DELETE FROM TPackingListDetails
       WHERE
          FkVoucherNo = @FkVoucherNo And ItemNo=@ItemNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTPackingListDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 21/01/2015
CREATE PROCEDURE [dbo].[AddTPackingListDetails]
     @PackingListNo                       numeric(18),
     @FkVoucherNo                         numeric(18),
     @ItemNo                              numeric(18),
     @Quantity                            numeric(18,2),
     @BagNo                               varchar(50),
     @CompanyNo                           numeric(18),
	 @GroupNo							  numeric(18),
	 @FkStockTrnNo						  numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PackingListNo from TPackingListDetails
          where
          PackingListNo = @PackingListNo)
     BEGIN
       --Update existing row
       UPDATE TPackingListDetails
       SET
          FkVoucherNo = @FkVoucherNo,
          ItemNo = @ItemNo,
          Quantity = @Quantity,
          BagNo = @BagNo,
          CompanyNo = @CompanyNo,
          StatusNo = 1,
		  GroupNo=@GroupNo,
	      FkStockTrnNo=@FkStockTrnNo,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PackingListNo = @PackingListNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PackingListNo),0) From TPackingListDetails
       DBCC CHECKIDENT(''TPackingListDetails'', RESEED, @Id)
       INSERT INTO TPackingListDetails(
          FkVoucherNo,
          ItemNo,
          Quantity,
          BagNo,
          CompanyNo,
          StatusNo,
		  GroupNo,
		  FkStockTrnNo,
          UserID,
          UserDate
)
       VALUES(
          @FkVoucherNo,
          @ItemNo,
          @Quantity,
          @BagNo,
          @CompanyNo,
          2,
		  @GroupNo,
	      @FkStockTrnNo,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTPackingListDetailsGroup]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'Create PROCEDURE  [dbo].[DeleteTPackingListDetailsGroup] 
@FkVoucherNo				        numeric(18),
@GroupNo	                        numeric(18)


AS

       DELETE FROM TPackingListDetails
       WHERE
          FkVoucherNo = @FkVoucherNo And GroupNo=@GroupNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTPackingListDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 12/01/2015
CREATE PROCEDURE  [dbo].[DeleteTPackingListDetails] 
@PackingListNo                      numeric(18)


AS

       DELETE FROM TPackingListDetails
       WHERE
          PackingListNo = @PackingListNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRegion]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE [dbo].[AddMRegion]
     @RegionNo                            numeric(18),
     @RegionName                          varchar(50),
     @RegionShortCode                     varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
     --@ModifiedBy                          text
AS
IF EXISTS(select RegionNo from MRegion
          where
          RegionNo = @RegionNo)
     BEGIN
       --Update existing row
       UPDATE MRegion
       SET
          RegionName = @RegionName,
          RegionShortCode = @RegionShortCode,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
	      CompanyNo=@CompanyNo,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          RegionNo = @RegionNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(RegionNo),0) From MRegion
       DBCC CHECKIDENT(''MRegion'', RESEED, @Id)
       INSERT INTO MRegion(
          --RegionNo,
          RegionName,
          RegionShortCode,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
          --ModifiedBy
)
       VALUES(
          --@RegionNo,
          @RegionName,
          @RegionShortCode,
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMRegion]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE  [dbo].[DeleteMRegion] 
@RegionNo                           numeric(18)


AS
Update MRegion set IsActive=''False'',StatusNo=2 Where RegionNo = @RegionNo

--       DELETE FROM MRegion
--       WHERE
--          RegionNo = @RegionNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherEntryFormDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/10/2014
CREATE PROCEDURE [dbo].[AddTVoucherEntryFormDetails]
     @PkVoucherFormNo                     numeric(18),
     @FkVoucherNo                         numeric(18),
     @VoucherFormDate						datetime,
     @FormNo                              varchar(100),
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkVoucherFormNo from TVoucherEntryFormDetails
          where
          PkVoucherFormNo = @PkVoucherFormNo)
     BEGIN
       --Update existing row
       UPDATE TVoucherEntryFormDetails
       SET
          FkVoucherNo = @FkVoucherNo,
          VoucherFormDate = @VoucherFormDate,
          FormNo = @FormNo,
          StatusNo = 2,
          CompanyNo = @CompanyNo,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PkVoucherFormNo = @PkVoucherFormNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkVoucherFormNo),0) From TVoucherEntryFormDetails
       DBCC CHECKIDENT(''TVoucherEntryFormDetails'', RESEED, @Id)
       INSERT INTO TVoucherEntryFormDetails(
          FkVoucherNo,
          VoucherFormDate,
          FormNo,
          StatusNo,
          CompanyNo,
          UserID,
          UserDate
)
       VALUES(
          @FkVoucherNo,
          @VoucherFormDate,
          @FormNo,
          1,
          @CompanyNo,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTVoucherEntryFormDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/10/2014
CREATE PROCEDURE  [dbo].[DeleteTVoucherEntryFormDetails] 
@PkVoucherFormNo                    numeric(18)


AS

       DELETE FROM TVoucherEntryFormDetails
       WHERE
          PkVoucherFormNo = @PkVoucherFormNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherEntryFormDetails1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/10/2014
Create PROCEDURE [dbo].[AddTVoucherEntryFormDetails1]
     @PkVoucherFormNo                     numeric(18),
     @FkVoucherNo                         numeric(18),
     @VoucherFormDate						datetime,
     @FormNo                              varchar(100),
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @StatusNo                            numeric(18),
     @ModifiedBy                          varchar(MAX)
AS
SET IDENTITY_INSERT TVoucherEntryFormDetails ON
     BEGIN
       --Insert new row
       
       INSERT INTO TVoucherEntryFormDetails(
          PkVoucherFormNo,     
          FkVoucherNo,
          VoucherFormDate,
          FormNo,
          StatusNo,
          CompanyNo,
          UserID,
          UserDate,
          ModifiedBy  
)
       VALUES(
           @PkVoucherFormNo,     
          @FkVoucherNo,
          @VoucherFormDate,
          @FormNo,
           @StatusNo,
          @CompanyNo,
          @UserID,
          @UserDate,
          @ModifiedBy   
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetClosingStock]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[GetClosingStock]
	(
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@ItemNo		numeric(18),
	@Type		int,
	@No			numeric(18)

	)
RETURNS @TQtyAmt Table(DrAmt numeric(18,2),DrQty numeric(18,2),CrAmt numeric(18,2),CrQty numeric(18,2))
AS
	BEGIN
	Declare @DrAmt numeric(18,2),@DrQty numeric(18,2),@DAmt numeric(18,2),@DQty Numeric(18,2)
	Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@CAmt numeric(18,2),@CQty Numeric(18,2)
	Declare @TrnDr int,@TrnCr int
	set @TrnDr = 1 set @TrnCr = 2
	set @DrAmt=0 set @DrQty=0 set @CrAmt=0 set @CrQty=0
	
	Declare @VType int,@VNo numeric(18)--@IsJobWork int,@JobWorkCo numeric(18),
	 set @VType=0 set @VNo=0--set @IsJobWork=0 set @JobWorkCo=0
	
	
if(@Type=0)--Stock Summary
begin	
		/*SELECT     @DrAmt=isnull(SUM(TStock.Amount),0) , @DrQty=isnull(SUM(TStock.Quantity) ,0)
FROM         TStock INNER JOIN
                      TVoucherEntry ON TStock.FKVoucherNo = TVoucherEntry.PKVoucherNo
WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnDr) AND (TStock.BranchCode = @BrID) AND 
			(TVoucherEntry.VoucherDate >= @FromDate) AND 
                      (TVoucherEntry.VoucherDate <= @ToDate)And TVoucherEntry.CompanyNo=@CompNo
                      And TVoucherEntry.BranchCode=@BrID*/
 ---=============================================================================================================
 Declare CurDr Cursor For 	
	 SELECT     isnull(TStock.Amount,0), isNull(abs(TStock.BilledQuantity),0)--isnull(abs(TStock.Quantity),0)+isnull(abs(TStock.FreeQty),0)
				,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo
	FROM    TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo

	WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnDr) AND  
	(TVoucherEntry.VoucherDate >= @FromDate) AND 
	(TVoucherEntry.VoucherDate <= @ToDate)  and TVoucherEntry.IsCancel=''false''--And TVoucherEntry.CompanyNo=@CompNo
	--And TVoucherEntry.BranchCode=@BrID 

  Declare CurCr Cursor For
 SELECT    isnull(TStock.Amount,0),  isNull(abs(TStock.BilledQuantity),0)--isnull(TStock.Quantity,0)+isnull(TStock.FreeQty,0)
			,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo-- @CrAmt=isnull(SUM(TStock.Amount),0) , @CrQty=isnull(SUM(TStock.Quantity),0)
FROM       TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo

WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnCr) AND
			(TVoucherEntry.VoucherDate >= @FromDate) AND 
                      (TVoucherEntry.VoucherDate <= @ToDate)  and TVoucherEntry.IsCancel=''false''--And TVoucherEntry.CompanyNo=@CompNo
                      --And TVoucherEntry.BranchCode=@BrID 
                      

                      
end
---=============================================================================================================
else if(@Type=1)--Godown Stock Summary
begin	
 Declare CurDr Cursor For
		SELECT     isnull(TStock.Amount,0), isnull(abs(TStockGodown.Qty),0),TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--@DrAmt=isnull(SUM(TStock.Amount),0) , @DrQty=isnull(SUM(TStock.Quantity) ,0)
FROM        TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
 INNER JOIN
                      TStockGodown ON TStock.PkStockTrnNo = TStockGodown.FKStockTrnNo
WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnDr) AND 
			(TVoucherEntry.VoucherDate >= @FromDate) AND 
                      (TVoucherEntry.VoucherDate <= @ToDate)--And TVoucherEntry.CompanyNo=@CompNo
                      And TStockGodown.GodownNo=@No  and TVoucherEntry.IsCancel=''false''--And TVoucherEntry.BranchCode=@BrID
                      
 
 Declare CurCr Cursor For
 SELECT    isnull(TStock.Amount,0), isnull(TStockGodown.Qty,0),TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--    @CrAmt=isnull(SUM(TStock.Amount),0) , @CrQty=isnull(SUM(TStock.Quantity),0)
FROM        TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo
 INNER JOIN
                      TStockGodown ON TStock.PkStockTrnNo = TStockGodown.FKStockTrnNo
WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnCr) AND 
			(TVoucherEntry.VoucherDate >= @FromDate) AND 
                      (TVoucherEntry.VoucherDate <= @ToDate) --And TVoucherEntry.CompanyNo=@CompNo
                      And TStockGodown.GodownNo=@No  and TVoucherEntry.IsCancel=''false''--And TVoucherEntry.BranchCode=@BrID
                      
end
---=============================================================================================================

else if(@Type=3)--Category Stock Summary
begin	
 Declare CurDr Cursor For
		SELECT    isnull(TStock.Amount,0),  isNull(abs(TStock.BilledQuantity),0)--isnull(abs(TStock.Quantity),0)+isnull(abs(TStock.FreeQty),0)
,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo-- @DrAmt=isnull(SUM(TStock.Amount),0) , @DrQty=isnull(SUM(TStock.Quantity) ,0)
FROM        TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo

WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnDr) AND 
			(TVoucherEntry.VoucherDate >= @FromDate) AND 
                      (TVoucherEntry.VoucherDate <= @ToDate)  and TVoucherEntry.IsCancel=''false''--And TVoucherEntry.CompanyNo=@CompNo
                                         
 
 Declare CurCr Cursor For
 SELECT    isnull(TStock.Amount,0), isNull(abs(TStock.BilledQuantity),0) --isnull(TStock.Quantity,0)+isnull(TStock.FreeQty,0)
				,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--     @CrAmt=isnull(SUM(TStock.Amount),0) , @CrQty=isnull(SUM(TStock.Quantity),0)
FROM        TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo

WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnCr) AND 
			(TVoucherEntry.VoucherDate >= @FromDate) AND 
                      (TVoucherEntry.VoucherDate <= @ToDate)  and TVoucherEntry.IsCancel=''false''--And TVoucherEntry.CompanyNo=@CompNo
                      
end
---=============================================================================================================

else if(@Type=5)--Group Stock Summary
begin	
 Declare CurDr Cursor For
		SELECT    isnull(TStock.Amount,0),  isNull(abs(TStock.BilledQuantity),0)--isnull(abs(TStock.Quantity),0)+ isnull(abs(TStock.FreeQty),0)
			,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo-- @DrAmt=isnull(SUM(TStock.Amount),0) , @DrQty=isnull(SUM(TStock.Quantity) ,0)
FROM        TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo

WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnDr) AND 
			(TVoucherEntry.VoucherDate >= @FromDate) AND 
                      (TVoucherEntry.VoucherDate <= @ToDate)  and TVoucherEntry.IsCancel=''false''--And TVoucherEntry.CompanyNo=@CompNo
                      
 
 Declare CurCr Cursor For
 SELECT    isnull(TStock.Amount,0),  isNull(abs(TStock.BilledQuantity),0)--isnull(TStock.Quantity,0)+isnull(TStock.FreeQty,0)
				,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--     @CrAmt=isnull(SUM(TStock.Amount),0) , @CrQty=isnull(SUM(TStock.Quantity),0)
FROM         TVoucherEntry INNER JOIN
                      TStock ON TVoucherEntry.PkVoucherNo = TStock.FKVoucherNo

WHERE     (TStock.ItemNo = @ItemNo) AND (TStock.TrnCode = @TrnCr) AND 
			(TVoucherEntry.VoucherDate >= @FromDate) AND 
                      (TVoucherEntry.VoucherDate <= @ToDate)  and TVoucherEntry.IsCancel=''false'' --And TVoucherEntry.CompanyNo=@CompNo
                     
end
---=============================================================================================================
else if(@Type=6)--Ledger Stock Summary
begin	
 Declare CurDr Cursor For
		SELECT    isnull(TStock.Amount,0),  isNull(abs(TStock.BilledQuantity),0)--isnull(abs(TStock.Quantity),0)+isnull(abs(TStock.FreeQty),0)
				,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo-- @DrAmt=isnull(SUM(TStock.Amount),0) , @DrQty=isnull(SUM(TStock.Quantity) ,0)
FROM         TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                      TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo
							WHERE (TVoucherEntry.VoucherDate >= @FromDate) AND (TVoucherEntry.VoucherDate <= @ToDate) 
							AND (TVoucherDetails.LedgerNo = @No) AND (TVoucherDetails.VoucherSrNo = 1)
--							And (TVoucherEntry.CompanyNo =@CompNo) 
AND (TStock.TrnCode = @TrnDr) and (TStock.ItemNo = @ItemNo)  and TVoucherEntry.IsCancel=''false''
							 
 
 Declare CurCr Cursor For
 SELECT    isnull(TStock.Amount,0), isNull(abs(TStock.BilledQuantity),0)-- isnull(TStock.Quantity,0)+isnull(TStock.FreeQty,0)
			,TVoucherEntry.VoucherTypeCode,TVoucherEntry.PKVoucherNo--     @CrAmt=isnull(SUM(TStock.Amount),0) , @CrQty=isnull(SUM(TStock.Quantity),0)
FROM       TVoucherEntry INNER JOIN
                      TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo INNER JOIN
                      TStock ON TVoucherDetails.PkVoucherTrnNo = TStock.FkVoucherTrnNo
							WHERE (TVoucherEntry.VoucherDate >= @FromDate) AND (TVoucherEntry.VoucherDate <= @ToDate) 
							AND (TVoucherDetails.LedgerNo = @No) AND (TVoucherDetails.VoucherSrNo = 1)
--							And (TVoucherEntry.CompanyNo =@CompNo)
 AND (TStock.TrnCode = @TrnCr) and (TStock.ItemNo = @ItemNo)  and TVoucherEntry.IsCancel=''false''
							
end
---=============================================================================================================
--Open Debit Cursor
Open CurDr
	Fetch Next From CurDr Into @DAmt,@DQty,@VType,@VNo
	While (@@Fetch_status=0)
	begin
--		if(@VType=19)
--		begin
--			if(@IsJobWork=0)
--			begin
--				if((Select IsJobWork From MGRNMaster Where FkVoucherNo=@VNo)=0)
--				begin
					set @DrAmt=@DrAmt+@DAmt
					set @DrQty=@DrQty+@DQty
--				end
--			end
--			else if(@IsJobWork=1)
--			begin
--				if((Select IsJobWork From MGRNMaster Where FkVoucherNo=@VNo And ForJobWorkCompNo=@JobWorkCo)=1)
--				begin
--					set @DrAmt=@DrAmt+@DAmt
--					set @DrQty=@DrQty+@DQty
--				end
--			end
--		end
--		else
--		begin
--			if(@IsJobWork=0)
--			begin
--			set @DrAmt=@DrAmt+@DAmt
--			set @DrQty=@DrQty+@DQty
--			end
--		end
		Fetch Next From CurDr Into @DAmt,@DQty,@VType,@VNo
	end
	Close CurDr Deallocate CurDr
--
set @VType=0 set @VNo=0	
----Open Credit Cursor
Open CurCr
	Fetch Next From CurCr Into @CAmt,@CQty,@VType,@VNo
	While (@@Fetch_status=0)
	begin
--		if(@VType=19)
--			begin
--				if(@IsJobWork=0)
--				begin
--					if((Select IsJobWork From MGRNMaster Where FkVoucherNo=@VNo)=0)
--					begin
						set @CrAmt=@CrAmt+@CAmt
						set @CrQty=@CrQty+@CQty
--					end
--				end
--				else if(@IsJobWork=1)
--				begin
--					if((Select IsJobWork From MGRNMaster Where FkVoucherNo=@VNo And ForJobWorkCompNo=@JobWorkCo)=1)
--					begin
--						set @CrAmt=@CrAmt+@CAmt
--						set @CrQty=@CrQty+@CQty
--					end
--				end
--			end
--			else
--			begin
--				if(@IsJobWork=0)
--				begin
--				set @CrAmt=@CrAmt+@CAmt
--				set @CrQty=@CrQty+@CQty
--				end
--			end
--		
		Fetch Next From CurCr Into @CAmt,@CQty,@VType,@VNo
	end
	Close CurCr Deallocate CurCr
 Insert into @TQtyAmt values(@DrAmt,@DrQty,@CrAmt,@CrQty)
	RETURN
	END


' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StockReverseByStock]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [dbo].[StockReverseByStock]
@PkStockTrnNo                numeric(18)

AS
Declare @ItemNo		numeric(18), @Mrp numeric(18,2), @GodownNo numeric(18), @Qty numeric(18,2), @TrnCode numeric(18)

Declare CurTemp cursor for SELECT     TStock.ItemNo, MRateSetting.MRP, TStockGodown.GodownNo, abs(TStock.BilledQuantity) as Qty, TStock.TrnCode
FROM         TStock INNER JOIN
                      MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo INNER JOIN
                      TStockGodown ON TStock.PkStockTrnNo = TStockGodown.FKStockTrnNo
WHERE     PkStockTrnNo = @PkStockTrnNo
open CurTemp
fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
while(@@Fetch_Status = 0)
begin
	if(@TrnCode=1)
		set @Qty = @Qty*-1

	exec AddMStockItemBalance @ItemNo, @Mrp, @GodownNo, @Qty, 1
	
	fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
end
Close CurTemp Deallocate CurTemp

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTStockGodown]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 17/04/2012
CREATE PROCEDURE  [dbo].[DeleteTStockGodown] 
@PKStockGodownNo                      numeric(18)


AS

       DELETE FROM TStockGodown
       WHERE
          PKStockGodownNo = @PKStockGodownNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetStockGodownDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11-Sep-2012
Create Procedure [dbo].[GetStockGodownDetails]
@FkStockTrnNo  numeric(18),
@ItemNo		   numeric(18)
As
Begin

Declare @TGod Table(GodownNo numeric(18),GodownName varchar(MAX),Qty numeric(18,2),ActualQty numeric(18,2),PkStockGodownNo numeric(18))
Declare @GodownNo numeric(18),@GodownName varchar(MAX),@Qty numeric(18,2),@ActualQty numeric(18,2),@PkStockGodownNo numeric(18)

Declare CurGod Cursor For Select GodownNo,GodownName From MGodown Where GodownNo<>1
Open CurGod
Fetch Next From CurGod Into @GodownNo,@GodownName 
While(@@Fetch_Status = 0)
Begin
	if(@FkStockTrnNo<>0 AND @ItemNo<>0)
	Begin
		Select @Qty=IsNull(Qty,0), @ActualQty=IsNull(ActualQty,0),@PKStockGodownNo=IsNull(PKStockGodownNo,0) From TStockGodown Where FkStockTrnNo=@FkStockTrnNo
				AND ItemNo=@ItemNo AND GodownNo=@GodownNo
		if(@Qty is null) set @Qty=0
		if(@ActualQty is null) set @ActualQty=0
		if(@PKStockGodownNo is null) set @PKStockGodownNo=0
		Insert into @TGod values (@GodownNo,@GodownName,@Qty,@ActualQty,@PkStockGodownNo)
		
		set @Qty = null 
		set @ActualQty = null
		set @PKStockGodownNo = null
	End
	Else
		Insert into @TGod values (@GodownNo,@GodownName,0,0,0)
	Fetch Next From CurGod Into @GodownNo,@GodownName 
End
Close CurGod Deallocate CurGod

Select GodownNo,GodownName,Qty,ActualQty,PkStockGodownNo From @TGod
End
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTStockGodown]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 17/04/2012
CREATE PROCEDURE [dbo].[AddTStockGodown]
     @PKStockGodownNo                     numeric(18),
     @FKStockTrnNo                        numeric(18),
	 @ItemNo							  numeric(18),
     @GodownNo                            numeric(18),
     @Qty                                 numeric(18,2),
     @ActualQty                           numeric(18,2),
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select PKStockGodownNo from TStockGodown
          where
          PKStockGodownNo = @PKStockGodownNo)
     BEGIN
       --Update existing row
       UPDATE TStockGodown
       SET
          FKStockTrnNo = @FKStockTrnNo,
		  ItemNo = @ItemNo,
          GodownNo = @GodownNo,
          Qty = @Qty,
          ActualQty = @ActualQty,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo = @CompanyNo,
		  ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          PKStockGodownNo = @PKStockGodownNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PKStockGodownNo),0) From TStockGodown
       DBCC CHECKIDENT(''TStockGodown'', RESEED, @Id)
       INSERT INTO TStockGodown(
          
          FKStockTrnNo,
		  ItemNo,
          GodownNo,
          Qty,
          ActualQty,
          UserID,
          UserDate,
		  CompanyNo
)
       VALUES(
          
          @FKStockTrnNo,
		  @ItemNo,
          @GodownNo,
          @Qty,
          @ActualQty,
          @UserID,
          @UserDate,
		  @CompanyNo
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTStockGodown1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 17/04/2012
create PROCEDURE [dbo].[AddTStockGodown1]
     @PKStockGodownNo                     numeric(18),
     @FKStockTrnNo                        numeric(18),
	 @ItemNo							  numeric(18),
     @GodownNo                            numeric(18),
     @Qty                                 numeric(18,2),
     @ActualQty                           numeric(18,2),
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
     @ModifiedBy                          varchar(MAX)
AS

SET IDENTITY_INSERT TStockGodown ON
     BEGIN
       
       INSERT INTO TStockGodown(
          PKStockGodownNo,
          FKStockTrnNo,
		  ItemNo,
          GodownNo,
          Qty,
          ActualQty,
          UserID,
          UserDate,
		  CompanyNo,
          ModifiedBy        
          
)
       VALUES(
          @PKStockGodownNo,
          @FKStockTrnNo,
		  @ItemNo,
          @GodownNo,
          @Qty,
          @ActualQty,
          @UserID,
          @UserDate,
		  @CompanyNo,
          @ModifiedBy     
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StockReverse]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11-Jul-2012
CREATE PROCEDURE [dbo].[StockReverse]
@FkVoucherNo                numeric(18)

AS
Declare @ItemNo		numeric(18), @Mrp numeric(18,2), @GodownNo numeric(18), @Qty numeric(18,2), @TrnCode numeric(18)

Declare CurTemp cursor for SELECT     TStock.ItemNo, MRateSetting.MRP, TStockGodown.GodownNo, abs((TStock.BilledQuantity)) as Qty, TStock.TrnCode
FROM         TStock INNER JOIN
                      MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo INNER JOIN
                      TStockGodown ON TStock.PkStockTrnNo = TStockGodown.FKStockTrnNo
WHERE     (TStock.FkVoucherNo = @FkVoucherNo)
open CurTemp
fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
while(@@Fetch_Status = 0)
begin
	if(@TrnCode=1)
		set @Qty = @Qty*-1

	exec AddMStockItemBalance @ItemNo, @Mrp, @GodownNo, @Qty, 1
	
	fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
end
Close CurTemp Deallocate CurTemp
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StockEffect]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11-Jul-2012
CREATE PROCEDURE [dbo].[StockEffect]
@FkVoucherNo                numeric(18)

AS
Declare @ItemNo		numeric(18), @Mrp numeric(18,2), @GodownNo numeric(18), @Qty numeric(18,2), @TrnCode numeric(18),@IsCancel bit

--Select @IsCancel =IsCancel From TVoucherEntry Where PKVoucherNo=@FkVoucherNo

Declare CurTemp cursor for SELECT     TStock.ItemNo, MRateSetting.MRP, TStockGodown.GodownNo, abs((TStock.BilledQuantity)) as Qty, TStock.TrnCode
FROM         TStock INNER JOIN
                      MRateSetting ON TStock.FkRateSettingNo = MRateSetting.PkSrNo INNER JOIN
                      TStockGodown ON TStock.PkStockTrnNo = TStockGodown.FKStockTrnNo
WHERE     (TStock.FkVoucherNo = @FkVoucherNo)
open CurTemp
fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
while(@@Fetch_Status = 0)
Begin
	if(@TrnCode=2)
			set @Qty = @Qty*-1

--	if(@IsCancel=''true'')
--	Begin
--		if(@Qty>0)set @Qty = @Qty*-1
--		else if(@Qty<0)set @Qty=abs(@Qty)
--	End
	
	exec AddMStockItemBalance @ItemNo, @Mrp, @GodownNo, @Qty, 1

	fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
end
Close CurTemp Deallocate CurTemp
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTReward]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16-Oct-2013
CREATE PROCEDURE [dbo].[AddTReward]
	@RewardNo				numeric(18),
	@FkVoucherNo		numeric(18),
	@VoucherUserNo		numeric(18),
	@TotalBillAmount	numeric(18,2),
	@LedgerNo			numeric(18),
	@ToalDiscAmount		numeric(18,2),
	@FkVoucherTrnNo		numeric(18),
	@RedemptionStatusNo	numeric(18),
	@CompanyNo			numeric(18),
	@UserID				numeric(18),
	@UserDate			datetime,
    @ReturnID		   int output
 AS 
 IF EXISTS ( Select RewardNo From TReward 
	 Where 
	 RewardNo =@RewardNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE TReward 
	 SET 
	FkVoucherNo=@FkVoucherNo,
	VoucherUserNo=@VoucherUserNo,
	TotalBillAmount=@TotalBillAmount,
	LedgerNo=@LedgerNo,
	ToalDiscAmount=@ToalDiscAmount,
	FkVoucherTrnNo=@FkVoucherTrnNo,
	RedemptionStatusNo=@RedemptionStatusNo,
	StatusNo=2,
	CompanyNo=@CompanyNo,
	UserID=@UserID,
	UserDate=@UserDate

	Where 
	 RewardNo=@RewardNo
	set @ReturnID=@RewardNo    
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(RewardNo),0) From TReward 
	  DBCC CHECKIDENT(''TReward'', RESEED, @Id) 
	  INSERT INTO TReward
( 
	FkVoucherNo,
	VoucherUserNo,
	TotalBillAmount,
	LedgerNo,
	ToalDiscAmount,
	FkVoucherTrnNo,
	RedemptionStatusNo,
	StatusNo,
	CompanyNo,
	UserID,
	UserDate 
)
	  VALUES
(
	@FkVoucherNo,
	@VoucherUserNo,
	@TotalBillAmount,
	@LedgerNo,
	@ToalDiscAmount,
	@FkVoucherTrnNo,
	@RedemptionStatusNo,
	1,
	@CompanyNo,
	@UserID,
	@UserDate
)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLedgerDistDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE [dbo].[AddMLedgerDistDetails]
     @PkSrNo                           numeric(18),
     @LedgerNo                            numeric(18),
     @DistAgentName                       varchar(50),
     @MobileNo                            varchar(50),
     @Remark                              varchar(50),
	 @CompanyNo							  numeric(18)
--     @UserID                              numeric(18),
--     @UserDate                            datetime
    
AS
IF EXISTS(select PkSrNo from MLedgerDistDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MLedgerDistDetails
       SET
          --PkSrNo = @PkSrNo,
          LedgerNo = @LedgerNo,                            
          DistAgentName = @DistAgentName,                       
          MobileNo = @MobileNo,                            
          Remark = @Remark, 
          StatusNo=2,
	      CompanyNo = @CompanyNo
--          UserID = @UserID,
--          UserDate = @UserDate,
--          ModifiedBy =  isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
         
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MLedgerDistDetails
       DBCC CHECKIDENT(''MLedgerDistDetails'', RESEED, @Id)
       INSERT INTO MLedgerDistDetails(
          LedgerNo,                            
          DistAgentName,                       
          MobileNo,                            
          Remark, 
          StatusNo,
		  CompanyNo
--          UserID,
--          UserDate
         
)
       VALUES(
          @LedgerNo,
          @DistAgentName,                       
          @MobileNo,                            
          @Remark, 
          1,
		  @CompanyNo
--          @UserID,
--          @UserDate
          
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTWeighingBarCodePrint]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/12/2012
CREATE PROCEDURE [dbo].[AddTWeighingBarCodePrint]
     @PkSrNo                              numeric(18),
     @ItemNo                              numeric(18),
	 @BarCode							  varchar(50),
     @ActualQuantity                      numeric(18),
     @Quantity                            numeric(18),
	 @FKRateSettingNo					  numeric(18),
     @MacNo                               numeric(18),
     @UserID                              numeric(18)
AS
IF EXISTS(select PkSrNo from TWeighingBarCodePrint
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TWeighingBarCodePrint
       SET
          ItemNo = @ItemNo,
		  BarCode = @BarCode,
		  ActualQuantity = @ActualQuantity,
          Quantity = @Quantity,
		  FKRateSettingNo = @FKRateSettingNo,
          MacNo = @MacNo,
          UserID = @UserID
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TWeighingBarCodePrint
       DBCC CHECKIDENT(''TWeighingBarCodePrint'', RESEED, @Id)
       INSERT INTO TWeighingBarCodePrint(
          ItemNo,
		  BarCode,
		  ActualQuantity,
          Quantity,
		  FKRateSettingNo,
          MacNo,
          UserID
)
       VALUES(
          @ItemNo,
		  @BarCode,
		  @ActualQuantity,
          @Quantity,
		  @FKRateSettingNo,
          @MacNo,
          @UserID
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTWeighingBarCodePrint]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/12/2012
Create PROCEDURE  [dbo].[DeleteTWeighingBarCodePrint] 
@MacNo	                           numeric(18),
@UserID								numeric(18)


AS

       DELETE FROM TWeighingBarCodePrint
       WHERE
          MacNo = @MacNo AND UserID = @UserID
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NetProfitOrLoss]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE Function [dbo].[NetProfitOrLoss]
(@FromDate datetime,@ToDate datetime, @CompanyNo numeric(18))

Returns @Tstocktemp1 TABLE (Amount float,PorL int)
as
Begin
DECLARE @DOAmt float,@COAmt float,@OAmt float,@DAmt float,@PorL int,
   @Balance float,@SignCode int,@ReturnVal float,@OStock float,@ClosingStock1 float,
   @ClStock float,@FDate datetime,@GrNo numeric(18),@GrName varchar(50),@BalType int,@LTotal numeric(18,2),@RTotal numeric(18,2)
--Declare @Tstocktemp1 TABLE (Amount float)
set @DAmt=0
set @LTotal=0
set @RTotal=0
set @PorL=0
   SELECT @FDate=BooksBeginFrom
      FROM MCompany where CompanyNo=@CompanyNo

Declare Cursor1 Cursor for SELECT  GroupNo, GroupName FROM MGroup
						   WHERE  (GroupNo IN (10,11,12,13,14,15)) -- (ControlGroup IN (11, 13, 15)) or
	
Open cursor1
Fetch next from Cursor1 into @GrNo,@GrName
while (@@Fetch_Status = 0)
begin
	SELECT distinct @BalType =  SignCode FROM MGroup WHERE (GroupNo = @GrNo) --or ControlGroup = @GrNo

	select @Balance = dbo.GetGroupBalance1 (@GrNo,@CompanyNo,@FromDate,@ToDate,@BalType)
	--set @DAmt = @DAmt + @Balance
if (@Balance>=0)
		set @SignCode = 1
	else 
		set @SignCode = 2
	
	
	if(@SignCode = @BalType)
		begin
			set @LTotal = @LTotal + abs(@Balance)
			--insert into @Temp (GrNo,GrName,Balance) values (@GrNo,@GrName,@Balance)
		end
	else
		begin
			set @RTotal = @RTotal + abs(@Balance)
			--insert into @Temp1 (GrNo1,GrName1,Balance1) values (@GrNo,@GrName,@Balance)
		end
	Fetch next from Cursor1 into @GrNo,@GrName

end
close Cursor1
Deallocate Cursor1

--Opening Stock

select @OStock = isnull(SUM(0),0) FROM MStockItems GROUP BY CompanyNo HAVING (CompanyNo = @CompanyNo)			
if (@OStock>=0)
		begin
			set @LTotal = @LTotal + @OStock
			--insert into @Temp (GrNo,GrName,Balance) values (0,''Opening Stock'',@Balance)
		end
	else
		begin
			set @RTotal = @RTotal + @OStock
			--insert into @Temp1 (GrNo1,GrName1,Balance1) values (0,''Opening Stock'',@Balance)
		end



select @ClosingStock1 = Balance from dbo.GetAllItemClosingStock1 (@CompanyNo,@FromDate,@ToDate)
if (@ClosingStock1<=0)
		begin
			set @LTotal = @LTotal + @ClosingStock1
			--insert into @Temp (GrNo,GrName,Balance) values (0,''Opening Stock'',@Balance)
		end
	else
		begin
			set @RTotal = @RTotal + @ClosingStock1
			--insert into @Temp1 (GrNo1,GrName1,Balance1) values (0,''Opening Stock'',@Balance)
		end

if(@LTotal>@RTotal)
	begin
	--loss
	set @DAmt = @LTotal- @RTotal 
	set @PorL = 1
	end
else
	begin
	--Profit
	set @DAmt = @RTotal-  @LTotal
	set @PorL = 2
	end

--set @ReturnVal=@ClosingStock1-(@DAmt+@OStock)	
set @ReturnVal=@DAmt
insert into @TStockTemp1(Amount,PorL)values((@ReturnVal),@PorL)
return
end
--select * from @Tstocktemp1
' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLocation]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE [dbo].[AddMLocation]
     @LocationNo                          numeric(18),
     @LocationName                        varchar(50),
     @LocationShortCode                   varchar(50),
     @CountryNo                           numeric(18),
     @StateNo                             numeric(18),
     @CityNo                              numeric(18),
     @RegionNo                            numeric(18),
	 @ControlGroup                        numeric(18),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
     --@ModifiedBy                          text
AS
IF EXISTS(select LocationNo from MLocation
          where
          LocationNo = @LocationNo)
     BEGIN
       --Update existing row
       UPDATE MLocation
       SET
          LocationName = @LocationName,
          LocationShortCode = @LocationShortCode,
          CountryNo = @CountryNo,
          StateNo = @StateNo,
		  CityNo = @CityNo,
          RegionNo = @RegionNo,
		  ControlGroup = @ControlGroup,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          LocationNo = @LocationNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(LocationNo),0) From MLocation
       DBCC CHECKIDENT(''MLocation'', RESEED, @Id)
       INSERT INTO MLocation(
          --LocationNo,
          LocationName,
          LocationShortCode,
          CountryNo,
          StateNo,
		  CityNo,
          RegionNo,
		  ControlGroup,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
          --ModifiedBy
)
       VALUES(
          --@LocationNo,
          @LocationName,
          @LocationShortCode,
          @CountryNo,
          @StateNo,
		  @CityNo,
          @RegionNo,
		  @ControlGroup,
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
          --@ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMLocation]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE  [dbo].[DeleteMLocation] 
@LocationNo                         numeric(18)


AS
Update MLocation set IsActive=''False'',StatusNo=2 Where LocationNo = @LocationNo

--       DELETE FROM MLocation
--       WHERE
--          LocationNo = @LocationNo
--
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[GetItemLedgerSummary]'))
EXEC dbo.sp_executesql @statement = N'create VIEW [dbo].[GetItemLedgerSummary]
AS
SELECT     dbo.MStockItemsBalances.MonthNo, dbo.MStockItemsBalances.OpeningBalance, dbo.MStockItemsBalances.InQty, dbo.MStockItemsBalances.OutQty, 
                      dbo.MStockItemsBalances.ClosingBalance, dbo.MStockItemsBalances.StockItemNo, dbo.MLocation.LocationName, dbo.MCompany.CompanyName, 
                      dbo.MGodown.GodownName, dbo.MStockItemsBalances.GodownNo, dbo.MStockItems.CompanyNo, dbo.MStockItems.ItemName
FROM         dbo.MStockItemsBalances INNER JOIN
                      dbo.MGodown ON dbo.MStockItemsBalances.GodownNo = dbo.MGodown.GodownNo INNER JOIN
                      dbo.MStockItems ON dbo.MStockItemsBalances.StockItemNo = dbo.MStockItems.ItemNo INNER JOIN
                      dbo.MCompany ON dbo.MStockItems.CompanyNo = dbo.MCompany.CompanyNo INNER JOIN
                      dbo.MLocation ON dbo.MGodown.LocationNo = dbo.MLocation.LocationNo
' 
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMBarcodeTemplate]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/01/2014
CREATE PROCEDURE  [dbo].[DeleteMBarcodeTemplate] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MBarcodeTemplate
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMBarcodeTemplate]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/01/2014
CREATE PROCEDURE [dbo].[AddMBarcodeTemplate]
     @PkSrNo                              numeric(18),
	 @ScriptData						  varchar(max),
	 @PrinterName						  varchar(max),
	 @CompanyNo							  numeric(18),
	 @UserID							  numeric(18),
	 @UserDate						      DateTime

AS
IF EXISTS(select PkSrNo from MBarcodeTemplate
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MBarcodeTemplate
       SET
		  ScriptData=@ScriptData,
		  PrinterName=@PrinterName,
		  CompanyNo=@CompanyNo,
		  StatusNo=2,
		  UserID=@UserID,
		  UserDate=@UserDate	
       WHERE
          PkSrNo = @PkSrNo --And CompanyNo=@CompanyNo

     END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTParkingBill]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 28/01/2013
CREATE PROCEDURE [dbo].[AddTParkingBill]
     @ParkingBillNo                       numeric(18),
     @BillNo                              numeric(18),
     @BillDate                            datetime,
     @BillTime                            datetime,
     @PersonName                          varchar(50),
	 @LedgerNo							  numeric(18),
     @IsBill                              bit,
     @CompanyNo                           numeric(18),
	 @IsCancel							  bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @Discount							  numeric(18,2),
	 @Charges							  numeric(18,2),
	 @Charges2							  numeric(18,2),
	 @Remark							  varchar(500),
	 @RateTypeNo						  numeric(18),
	 @TaxTypeNo							  numeric(18),
     @ReturnID							  int output
AS
IF EXISTS(select ParkingBillNo from TParkingBill
          where
          ParkingBillNo = @ParkingBillNo)
     BEGIN
       --Update existing row
       UPDATE TParkingBill
       SET
          BillNo = @BillNo,
          BillDate = @BillDate,
          BillTime = @BillTime,
          PersonName = @PersonName,
		  LedgerNo = @LedgerNo,
          IsBill = @IsBill,
          CompanyNo = @CompanyNo,
		  IsCancel=@IsCancel,
          UserID = @UserID,
          UserDate = @UserDate,
		  Discount=@Discount,
		  Charges=@Charges,
		  Charges2=@Charges2,
		  Remark=@Remark,
		  RateTypeNo = @RateTypeNo,
		  TaxTypeNo = @TaxTypeNo,
          StatusNo=2
       WHERE
          ParkingBillNo = @ParkingBillNo
		set @ReturnID=@ParkingBillNo
     END
ELSE
     BEGIN
       --Insert new row
		Select @BillNo=IsNull(Max(BillNo),0)+1 from TParkingBill 

       Declare @Id numeric
       SELECT @Id=IsNull(Max(ParkingBillNo),0) From TParkingBill
       DBCC CHECKIDENT(''TParkingBill'', RESEED, @Id)
       INSERT INTO TParkingBill(
          BillNo,
          BillDate,
          BillTime,
          PersonName,
		  LedgerNo,
          IsBill,
          CompanyNo,
		  IsCancel,
          UserID,
          UserDate,
          StatusNo,
		  Discount,
		  Charges,
		  Charges2,
		  Remark,
		  RateTypeNo,
		  TaxTypeNo
)
       VALUES(
          @BillNo,
          @BillDate,
          @BillTime,
          @PersonName,
		  @LedgerNo,
          @IsBill,
          @CompanyNo,
		  @IsCancel,
          @UserID,
          @UserDate,
          1,
		  @Discount,
		  @Charges,
		  @Charges2,
		  @Remark,
		  @RateTypeNo,
		  @TaxTypeNo
)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTParkingBill]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 28/01/2013
CREATE PROCEDURE  [dbo].[DeleteTParkingBill] 
@ParkingBillNo                      numeric(18),
@FKVoucherNo					 numeric(18)


AS

		Update TParkingBill set IsBill=''true'',FKVoucherNo=@FKVoucherNo
       WHERE
          ParkingBillNo = @ParkingBillNo

--       DELETE FROM TParkingBill
--       WHERE
--          ParkingBillNo = @ParkingBillNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherJournalEntry]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 21/07/2015
CREATE PROCEDURE [dbo].[AddTVoucherJournalEntry]
     @PKSrNo                              numeric(18),
     @FKVoucherNo                         numeric(18),
     @FKReceiptVoucherNo                  numeric(18),
     @FKJournalVoucherNo                  numeric(18),
     @LedgerNo                            numeric(18),
     @Amount                              numeric(18,2),
     @JVAmount                            numeric(18,2),
     @CompanyNo                           numeric(18),
     @StatusNo                            int
AS
IF EXISTS(select PKSrNo from TVoucherJournalEntry
          where
          PKSrNo = @PKSrNo)
     BEGIN
       --Update existing row
       UPDATE TVoucherJournalEntry
       SET
          FKVoucherNo = @FKVoucherNo,
          FKReceiptVoucherNo = @FKReceiptVoucherNo,
          FKJournalVoucherNo = @FKJournalVoucherNo,
          LedgerNo = @LedgerNo,
          Amount = @Amount,
          JVAmount = @JVAmount,
          CompanyNo = @CompanyNo,
          StatusNo = @StatusNo
       WHERE
          PKSrNo = @PKSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PKSrNo),0) From TVoucherJournalEntry
       DBCC CHECKIDENT(''TVoucherJournalEntry'', RESEED, @Id)
       INSERT INTO TVoucherJournalEntry(
          FKVoucherNo,
          FKReceiptVoucherNo,
          FKJournalVoucherNo,
          LedgerNo,
          Amount,
          JVAmount,
          CompanyNo,
          StatusNo
)
       VALUES(
          @FKVoucherNo,
          @FKReceiptVoucherNo,
          @FKJournalVoucherNo,
          @LedgerNo,
          @Amount,
          @JVAmount,
          @CompanyNo,
          @StatusNo
)

END


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMStockLocation]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/09/2012
CREATE PROCEDURE [dbo].[AddMStockLocation]
     @StockLocationNo                     numeric(18),
     @StockLocationName                   varchar(50),
     @GodownNo                            numeric(18),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select StockLocationNo from MStockLocation
          where
          StockLocationNo = @StockLocationNo)
     BEGIN
       --Update existing row
       UPDATE MStockLocation
       SET
          StockLocationName = @StockLocationName,
          GodownNo = @GodownNo,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          StockLocationNo = @StockLocationNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(StockLocationNo),0) From MStockLocation
       DBCC CHECKIDENT(''MStockLocation'', RESEED, @Id)
       INSERT INTO MStockLocation(
          StockLocationName,
          GodownNo,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          @StockLocationName,
          @GodownNo,
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMStockLocation]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/09/2012
CREATE PROCEDURE  [dbo].[DeleteMStockLocation] 
@StockLocationNo                    numeric(18)


AS
	
      Update MStockLocation set IsActive=''false'',StatusNo=2
       WHERE
          StockLocationNo = @StockLocationNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMRack]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
Create PROCEDURE  [dbo].[DeleteMRack] 
@RackNo                             numeric(18)

AS
Update MRack set IsActive=''False'' where RackNo = @RackNo

/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRack]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
Create PROCEDURE [dbo].[AddMRack]
     @RackNo                              numeric(18),
     @RackName                            varchar(50),
     @RackCode                            varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)

AS
IF EXISTS(select RackNo from MRack
          where
          RackNo = @RackNo)
     BEGIN
       --Update existing row
       UPDATE MRack
       SET
          RackName = @RackName,
          RackCode = @RackCode,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
	      CompanyNo=@CompanyNo

       WHERE
          RackNo = @RackNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(RackNo),0) From MRack
       DBCC CHECKIDENT(''MRack'', RESEED, @Id)
       INSERT INTO MRack(
          RackName,
          RackCode,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo
)
       VALUES(
          @RackName,
          @RackCode,
          @IsActive,
          @UserID,
          @UserDate,
	      @CompanyNo
)

END

/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMStockCategory]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 18/04/2012
CREATE PROCEDURE [dbo].[AddMStockCategory]
     @CategoryNo                          numeric(18),
     @CategoryName                        varchar(50),
     @ControlGroup                        numeric(18),
	 @DepartmentNo						  numeric(18),
     @IsActive                            bit,
     @UserId                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select CategoryNo from MStockCategory
          where
          CategoryNo = @CategoryNo)
     BEGIN
       --Update existing row
       UPDATE MStockCategory
       SET
          CategoryName = @CategoryName,
          ControlGroup = @ControlGroup,
		  DepartmentNo=@DepartmentNo,
          IsActive = @IsActive,
          UserId = @UserId,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          CategoryNo = @CategoryNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(CategoryNo),0) From MStockCategory
       DBCC CHECKIDENT(''MStockCategory'', RESEED, @Id)
       INSERT INTO MStockCategory(
          CategoryName,
          ControlGroup,
          IsActive,
		  DepartmentNo,
          UserId,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          @CategoryName,
          @ControlGroup,
          @IsActive,
		  @DepartmentNo,
          @UserId,
          @UserDate,
		  @CompanyNo,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMStockCategory]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 17/04/2012
CREATE PROCEDURE  [dbo].[DeleteMStockCategory] 
@CategoryNo                         numeric(18)


AS

       DELETE FROM MStockCategory
       WHERE
          CategoryNo = @CategoryNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRackDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
Create PROCEDURE [dbo].[AddMRackDetails]
     @RackDetailsNo                       numeric(18),
     @UOMLNo                              numeric(18, 0),
     @FkRackNo                            numeric(18, 0),
     @ItemNo                              numeric(18, 0),
     @ToQty                               numeric(18, 2) ,
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime

AS
IF EXISTS(select RackDetailsNo from MRackDetails
          where
          RackDetailsNo = @RackDetailsNo)
     BEGIN
       --Update existing row
       UPDATE MRackDetails
       SET
          UOMLNo=@UOMLNo,
	      FkRackNo=@FkRackNo,
          ItemNo=@ItemNo,
          ToQty=@ToQty, 
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate

       WHERE
          RackDetailsNo = @RackDetailsNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(RackDetailsNo),0) From MRackDetails
       DBCC CHECKIDENT(''MRackDetails'', RESEED, @Id)
       INSERT INTO MRackDetails(

          UOMLNo,
	      FkRackNo,
          ItemNo,
          ToQty, 
          IsActive,
          UserID,
          UserDate
)
       VALUES(

          @UOMLNo,
	      @FkRackNo,
          @ItemNo,
          @ToQty, 
          @IsActive,
          @UserID,
          @UserDate
)

END

/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMRackDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
Create PROCEDURE  [dbo].[DeleteMRackDetails] 
@RackDetailsNo                             numeric(18)

AS
Update MRackDetails set IsActive=''False'' where RackDetailsNo = @RackDetailsNo

/*---------------------------------------------------------------------------------------------------------------------------------------------------*/

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMFooterDiscountDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 03/12/2013
CREATE PROCEDURE [dbo].[AddMFooterDiscountDetails]
     @PkSrNo                              numeric(18),
     @FooterDiscNo                        numeric(18),
     @Amount                              numeric(18,2),
     @DiscPercentage                      numeric(18,2),
     @DiscAmount                          numeric(18,2),
     @CompanyNo                           numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkSrNo from MFooterDiscountDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MFooterDiscountDetails
       SET
          FooterDiscNo = @FooterDiscNo,
          Amount = @Amount,
          DiscPercentage = @DiscPercentage,
          DiscAmount = @DiscAmount,
          StatusNo = 2,
          CompanyNo = @CompanyNo,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MFooterDiscountDetails
       DBCC CHECKIDENT(''MFooterDiscountDetails'', RESEED, @Id)
       INSERT INTO MFooterDiscountDetails(
          FooterDiscNo,
          Amount,
          DiscPercentage,
          DiscAmount,
          StatusNo,
          CompanyNo,
          UserID,
          UserDate
)
       VALUES(
          @FooterDiscNo,
          @Amount,
          @DiscPercentage,
          @DiscAmount,
          1,
          @CompanyNo,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMFooterDiscountDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 03/12/2013
CREATE PROCEDURE  [dbo].[DeleteMFooterDiscountDetails] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MFooterDiscountDetails
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMLedgerGroup]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
Create PROCEDURE  [dbo].[DeleteMLedgerGroup] 
@LedgerGroupNo                          numeric(18)


AS
Update MLedgerGroup set IsActive=''False'' where LedgerGroupNo= @LedgerGroupNo

/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLedgerGroup]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
Create PROCEDURE [dbo].[AddMLedgerGroup]
     @LedgerGroupNo                       numeric(18),
     @LedgerName                          varchar(250),
	 @LedgerLangName					  nvarchar(500),
     @GroupNo                             numeric(18),
	 @IsActive                            bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo                           numeric(18),
     @ReturnID							  int output
AS
IF EXISTS(select LedgerGroupNo from MLedgerGroup
          where
          LedgerGroupNo = @LedgerGroupNo)
     BEGIN
       --Update existing row
       UPDATE MLedgerGroup
       SET
          LedgerName = @LedgerName,
          LedgerLangName=@LedgerLangName,
          GroupNo = @GroupNo,
		  IsActive=@IsActive,      
		  UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo = @CompanyNo
          
       WHERE
          LedgerGroupNo = @LedgerGroupNo		
		  set @ReturnID=@LedgerGroupNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(LedgerGroupNo),0) From MLedgerGroup
       DBCC CHECKIDENT(''MLedgerGroup'', RESEED, @Id)

       INSERT INTO MLedgerGroup(
         
          LedgerName,
          LedgerLangName,
          GroupNo,
		  IsActive,
          UserID,
          UserDate,
          CompanyNo
         
)
       VALUES(

          @LedgerName,
          @LedgerLangName,
          @GroupNo,
	      @IsActive,
		  @UserID,
          @UserDate,
          @CompanyNo
  	 
)
set @ReturnID=Scope_Identity()

END

/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherEntry1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[AddTVoucherEntry1]
     @PkVoucherNo                         numeric(18),
     @VoucherTypeCode                     numeric(18),
     @VoucherUserNo                       numeric(18),
     @VoucherDate                         datetime,
     @VoucherTime                         datetime,
     @Narration                           varchar(50),
     @Reference                           varchar(50),
     @ChequeNo                            numeric(18),
     @ClearingDate                        datetime,
     @CompanyNo                           numeric(18),
     @BilledAmount                        numeric(18,2),
	 @ChallanNo                           varchar(50),
	 @Remark                              varchar(Max),
	 @InwardLocationCode				  numeric(18),
	 @MacNo								  numeric(18),
     @IsVoucherLock                       bit,
     @IsCancel                            bit,
	 @UserID                              numeric(18),
	 @PayTypeNo							  numeric(18),
	 @RateTypeNo						  numeric(18),
	 @TaxTypeNo							  numeric(18),
	 @TaxInvoiceTypeNo					  numeric(18),
     @VoucherStatus                        numeric(18),
	 @OrderType							  numeric(18),	
     @UserDate                            datetime,
     @StatusNo                            bit,
	 @ReturnAmount						  numeric(18,2),
     @Visibility						  numeric(18,2),
	 @DiscPercent						  numeric(18,2),
	 @DiscAmt							  numeric(18,2),
	 @MixMode							  int,
	 @IsItemLevelDisc					  bit,
	 @IsFooterLevelDisc					  bit,
	 @BrokerNo							  numeric(18),
	 @SuppCategory						  numeric(18),
	 @EffectiveDate						  datetime,
	-- @ExcisePercentage					  numeric(18,2),
	-- @IsExciseBill						  bit,
	 @IsBillMulti						  int,
	 @TransporterCode                     numeric(18),
     @TransPayType                        numeric(18),
     @LRNo                                varchar(50),
     @TransportMode                       numeric(18),
     @TransNoOfItems                      numeric(18),
	 @ChrgesTaxPerce					  numeric(18,2),
	 @LedgerNo							  numeric(18),
     @StateCode							  numeric(18),
     @TaxAmount 						  numeric(18),
     @VersionNo                           numeric(18),
     @ServerVoucherNo                      numeric(18)
     
AS

SET IDENTITY_INSERT TVoucherEntry ON
     BEGIN
       --Insert new row
       
       INSERT INTO TVoucherEntry(
          PkVoucherNo, 
          VoucherTypeCode,
          VoucherUserNo,
          VoucherDate,
          VoucherTime,
          Narration,
          Reference,
          ChequeNo,
          ClearingDate,
          CompanyNo,
          BilledAmount,
		  ChallanNo,
          Remark,
		  InwardLocationCode,
		  MacNo,
		  IsVoucherLock,
		  IsCancel,
		  PayTypeNo,
		  RateTypeNo,
		  TaxTypeNo,
		  TaxInvoiceTypeNo,
		  VoucherStatus,
		  OrderType,
		  ReturnAmount,
	      Visibility,
		  DiscPercent,
		  DiscAmt,
		  UserID,
          UserDate,
		  StatusNo,
		  MixMode,
		  IsItemLevelDisc,
		  IsFooterLevelDisc,
		  BrokerNo,
		  SuppCategory,
		  EffectiveDate,
		--  ExcisePercentage,
		 -- IsExciseBill,
		  IsBillMulti, 
		  TransporterCode,
          TransPayType,
          LRNo,
          TransportMode,
          TransNoOfItems,
		  ChrgesTaxPerce,
          LedgerNo,
          StateCode,
          TaxAmount,
            VersionNo,
           ServerVoucherNo
                 
         
)
       VALUES(
          @PkVoucherNo ,
          @VoucherTypeCode,
          @VoucherUserNo,
          @VoucherDate,
          @VoucherTime,
          @Narration,
          @Reference,
          @ChequeNo,
          @ClearingDate,
          @CompanyNo,
          @BilledAmount,
		  @ChallanNo,
          @Remark,
		  @InwardLocationCode,
		  @MacNo,
		  @IsVoucherLock,
		  @IsCancel,
		  @PayTypeNo,
		  @RateTypeNo,
		  @TaxTypeNo,
		  @TaxInvoiceTypeNo,
		   @VoucherStatus,
		  @OrderType,
          @ReturnAmount,
		  @Visibility,
		  @DiscPercent,
		  @DiscAmt,
		  @UserID,
          @UserDate,
		  @StatusNo,
		  @MixMode,
		  @IsItemLevelDisc,
          @IsFooterLevelDisc,
		  @BrokerNo,
		  @SuppCategory,
          @EffectiveDate,
		 -- @ExcisePercentage,
		 -- @IsExciseBill,
		  @IsBillMulti,
		  @TransporterCode,
          @TransPayType,
          @LRNo,
          @TransportMode,
          @TransNoOfItems,
		  @ChrgesTaxPerce,
   @LedgerNo,
          @StateCode,
          @TaxAmount,
            @VersionNo ,
          @ServerVoucherNo
                
)

END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTVoucherEntry1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE  [dbo].[DeleteTVoucherEntry1] 
@PkVoucherNo                        numeric(18)


AS

	--	Delete From TVoucherEntryCompany Where FKVoucherNo = @PkVoucherNo
       Delete From TVoucherEntry 
       WHERE
          PkVoucherNo = @PkVoucherNo

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherEntryES]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[AddTVoucherEntryES]
     @PkVoucherNo                         numeric(18),
     @VoucherTypeCode                     numeric(18),
     @VoucherUserNo                       numeric(18),
     @VoucherDate                         datetime,
     @VoucherTime                         datetime,
     @Narration                           varchar(50),
     @Reference                           varchar(50),
     @ChequeNo                            numeric(18),
     @ClearingDate                        datetime,
     @CompanyNo                           numeric(18),
     @BilledAmount                        numeric(18,2),
	 @ChallanNo                           varchar(50),
	 @Remark                              varchar(Max),
	 @InwardLocationCode				  numeric(18),
	 @MacNo								  numeric(18),
	 @UserID                              numeric(18),
	 @PayTypeNo							  numeric(18),
	 @RateTypeNo						  numeric(18),
	 @TaxTypeNo							  numeric(18),
	 @TaxInvoiceTypeNo					  numeric(18),
	 @OrderType							  numeric(18),	
     @UserDate                            datetime,
	 @ReturnAmount						  numeric(18,2),
     @Visibility						  numeric(18,2),
	 @DiscPercent						  numeric(18,2),
	 @DiscAmt							  numeric(18,2),
	 @MixMode							  int,
	 @IsItemLevelDisc					  bit,
	 @IsFooterLevelDisc					  bit,
	 @BrokerNo							  numeric(18),
	 @SuppCategory						  numeric(18),
	 @EffectiveDate						  datetime,
	-- @ExcisePercentage					  numeric(18,2),
	-- @IsExciseBill						  bit,
	 @IsBillMulti						  int,
	 @TransporterCode                     numeric(18),
     @TransPayType                        numeric(18),
     @LRNo                                varchar(50),
     @TransportMode                       numeric(18),
     @TransNoOfItems                      numeric(18),
	 @ChrgesTaxPerce					  numeric(18,2),
	 @LedgerNo							  numeric(18),
     @StateCode							  numeric(18),
     @TaxAmount 						  numeric(18),
@PkRefNo				 numeric(18),
     @ReturnID							  int output
AS
IF EXISTS(select PkVoucherNo from TVoucherEntry
          where
          PkVoucherNo = @PkVoucherNo)
     BEGIN
       --Update existing row
       UPDATE TVoucherEntry
       SET
          VoucherTypeCode = @VoucherTypeCode,
          VoucherUserNo = @VoucherUserNo,
          VoucherDate = @VoucherDate,
          VoucherTime = @VoucherTime,
          Narration = @Narration,
          Reference = @Reference,
          ChequeNo = @ChequeNo,
          ClearingDate = @ClearingDate,
          CompanyNo = @CompanyNo,
          BilledAmount = @BilledAmount,
		  ChallanNo = @ChallanNo,
		  Remark = @Remark,
		  InwardLocationCode = @InwardLocationCode,
		  MacNo=@MacNo,
		  PayTypeNo = @PayTypeNo, 
		  RateTypeNo = @RateTypeNo,
		  TaxTypeNo = @TaxTypeNo,
		  TaxInvoiceTypeNo = @TaxInvoiceTypeNo,
		  VoucherStatus = 2,
	      OrderType=@OrderType,
	      ReturnAmount=@Returnamount,
          Visibility=@Visibility,
		  DiscPercent = @DiscPercent,
		  DiscAmt = @DiscAmt,
		  StatusNo = 2,
		  MixMode = @MixMode,
		  IsItemLevelDisc = @IsItemLevelDisc,
		  IsFooterLevelDisc = @IsFooterLevelDisc,
		  BrokerNo=@BrokerNo,
		  SuppCategory=@SuppCategory,
		  EffectiveDate = @EffectiveDate,
		--  ExcisePercentage = @ExcisePercentage,
		--  IsExciseBill = @IsExciseBill,
		  IsBillMulti = @IsBillMulti,
		  TransporterCode = @TransporterCode,
          TransPayType = @TransPayType,
          LRNo = @LRNo,
          TransportMode = @TransportMode,
          TransNoOfItems = @TransNoOfItems,	
		  ChrgesTaxPerce = @ChrgesTaxPerce,
          LedgerNo=@LedgerNo,
          StateCode= @StateCode,
          TaxAmount=@TaxAmount,
PkRefNo=@PkRefNo,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          PkVoucherNo = @PkVoucherNo
		set @ReturnID=@PkVoucherNo    

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric, @AccYear int, @Month int
       SELECT @Id=IsNull(Max(PkVoucherNo),0) From TVoucherEntry
       DBCC CHECKIDENT(''TVoucherEntry'', RESEED, @Id)

       if (@VoucherTypeCode = 9 or @VoucherTypeCode = 12 or @VoucherTypeCode = 13 or @VoucherTypeCode = 15)
			begin
				set @Month=Month(@VoucherDate)
				set @AccYear = Year(@VoucherDate)
				if(@Month < 4)
						Set @AccYear = @AccYear - 1;
				
				if(@VoucherTypeCode=9)
				Begin
					if(@BrokerNo=0)
						Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TVoucherEntry 
						where VoucherTypeCode=@VoucherTypeCode AND VoucherDate >= cast( ''1-Apr-'' + cast(@AccYear as varchar)  as datetime) 
						AND VoucherDate <= cast( ''31-Mar-'' + cast((@AccYear+1)as varchar)  as datetime) AND BrokerNo=0
					else 
						Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TVoucherEntry 
						where VoucherTypeCode=@VoucherTypeCode AND VoucherDate >= cast( ''1-Apr-'' + cast(@AccYear as varchar)  as datetime) 
						AND VoucherDate <= cast( ''31-Mar-'' + cast((@AccYear+1)as varchar)  as datetime) AND BrokerNo<>0
				End
				Else 
					Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TVoucherEntry 
					where VoucherTypeCode=@VoucherTypeCode AND VoucherDate >= cast( ''1-Apr-'' + cast(@AccYear as varchar)  as datetime) 
					AND VoucherDate <= cast( ''31-Mar-'' + cast((@AccYear+1)as varchar)  as datetime) 
            end
		else if (@VoucherUserNo=0)
			Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TVoucherEntry where VoucherTypeCode=@VoucherTypeCode
			--select @PkVoucherNo=IsNull(Max(Cast(PkVoucherNo as numeric)),0)+1 from TvoucherEntry

       INSERT INTO TVoucherEntry(
          VoucherTypeCode,
          VoucherUserNo,
          VoucherDate,
          VoucherTime,
          Narration,
          Reference,
          ChequeNo,
          ClearingDate,
          CompanyNo,
          BilledAmount,
		  ChallanNo,
          Remark,
		  InwardLocationCode,
		  MacNo,
		  IsVoucherLock,
		  IsCancel,
		  PayTypeNo,
		  RateTypeNo,
		  TaxTypeNo,
		  TaxInvoiceTypeNo,
		  VoucherStatus,
		  OrderType,
		  ReturnAmount,
	      Visibility,
		  DiscPercent,
		  DiscAmt,
		  UserID,
          UserDate,
		  StatusNo,
		  MixMode,
		  IsItemLevelDisc,
		  IsFooterLevelDisc,
		  BrokerNo,
		  SuppCategory,
		  EffectiveDate,
		--  ExcisePercentage,
		 -- IsExciseBill,
		  IsBillMulti, 
		  TransporterCode,
          TransPayType,
          LRNo,
          TransportMode,
          TransNoOfItems,
		  ChrgesTaxPerce,
          LedgerNo,
          StateCode,
            TaxAmount,PkRefNo

         
)
       VALUES(
          @VoucherTypeCode,
          @VoucherUserNo,
          @VoucherDate,
          @VoucherTime,
          @Narration,
          @Reference,
          @ChequeNo,
          @ClearingDate,
          @CompanyNo,
          @BilledAmount,
		  @ChallanNo,
          @Remark,
		  @InwardLocationCode,
		  @MacNo,
		  ''false'',
		  ''false'',
		  @PayTypeNo,
		  @RateTypeNo,
		  @TaxTypeNo,
		  @TaxInvoiceTypeNo,
		  1,
		  @OrderType,
          @ReturnAmount,
		  @Visibility,
		  @DiscPercent,
		  @DiscAmt,
		  @UserID,
          @UserDate,
		  1,
		  @MixMode,
		  @IsItemLevelDisc,
          @IsFooterLevelDisc,
		  @BrokerNo,
		  @SuppCategory,
          @EffectiveDate,
		 -- @ExcisePercentage,
		 -- @IsExciseBill,
		  @IsBillMulti,
		  @TransporterCode,
          @TransPayType,
          @LRNo,
          @TransportMode,
          @TransNoOfItems,
		  @ChrgesTaxPerce,
   @LedgerNo,
          @StateCode,
             @TaxAmount,@PkRefNo
)
Set @ReturnID=Scope_Identity()
END



' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetBookDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetBookDetails]
@VchNo int,
@CompNo numeric(18),
@FromDate datetime,
@ToDate datetime,
@Type numeric(18)


AS


if(@Type=1)

SELECT 0 AS SRNO, TVoucherEntry.VoucherDate as Date, TVoucherEntry.VoucherUserNo AS VoucherNo, MLedger.LedgerName AS FromAccount,MLedger_1.LedgerName AS ToAccount, 
TVoucherDetails.Debit AS Amount,  TVoucherEntry.Remark, TVoucherEntry.Narration, TVoucherEntry.ChequeNo AS ChequeNo, 
 TVoucherEntry.VoucherTypeCode,  case when ((select groupno from MLedger where ledgerno=TVoucherDetails.ledgerno ) =28 
)then  MLedger.LedgerName else '''' end  AS BankName,   '''' AS PartyBank, '''' AS PartyBranch, '''' AS ChequeDate,0 as ToChequeNo,TVoucherEntry.Reference
 FROM   TVoucherEntry INNER JOIN TVoucherDetails ON TVoucherEntry.PkVoucherNo = TVoucherDetails.FkVoucherNo 
AND TVoucherDetails.SrNo = 501  INNER JOIN  TVoucherDetails as TVoucherDetails_2  ON TVoucherEntry.PkVoucherNo = TVoucherDetails_2.FkVoucherNo AND TVoucherDetails_2.vouchersrno =2 
 INNER JOIN   MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo INNER JOIN  MLedger AS MLedger_1 ON TVoucherDetails_2.LedgerNo = MLedger_1.LedgerNo 
WHERE   (TVoucherEntry.VoucherDate >= @FromDate) AND 
				(TVoucherEntry.VoucherDate <= @ToDate) and  (TVoucherEntry.VoucherTypeCode in (@VchNo)) order by TVoucherEntry.VoucherDate desc' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetOpeningLedgerBalanceOnlyES]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
create FUNCTION [dbo].[GetOpeningLedgerBalanceOnlyES]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18)
	)
RETURNS @TLedgerBal Table(OpAmt numeric(18,2))
AS
BEGIN
	Declare @DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @BalAmt numeric(18,2),@Res int

	Set @DrAmt = 0 Set @CrAmt = 0 set @Res=0

	SELECT    @DrAmt= IsNull(SUM(TVoucherDetails.Debit),0), @CrAmt=IsNull(SUM(TVoucherDetails.Credit),0)
		FROM         TVoucherDetails INNER JOIN
							  TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo INNER JOIN
							  MLedger ON TVoucherDetails.LedgerNo = MLedger.LedgerNo
		WHERE     (TVoucherDetails.LedgerNo = @LedgerNo)  AND 
				  (TVoucherEntry.CompanyNo = @CompNo) AND (TVoucherEntry.IsCancel=''false'') AND
				  (TVoucherEntry.VoucherTypeCode = 136) -- 36 = OpeningBalance
	                   
	set @BalAmt = (@DrAmt - @CrAmt)
	insert into @TLedgerBal values(@BalAmt)
	
	RETURN
END



' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTRewardFrom]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16-Oct-2013
CREATE PROCEDURE [dbo].[AddTRewardFrom]
	@PkSrNo				numeric(18),
	@RewardNo			numeric(18),
	@RewardDetailsNo	numeric(18),
	@SchemeDetailsNo	numeric(18),
	@SchemeFromNo		numeric(18),
	@FkStockNo			numeric(18),
	@CompanyNo			numeric(18)
 AS 
 IF EXISTS ( Select PkSrNo From TRewardFrom 
	 Where 
	 PkSrNo =@PkSrNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE TRewardFrom 
	 SET 

	RewardNo=@RewardNo,
	RewardDetailsNo=@RewardDetailsNo,
	SchemeDetailsNo=@SchemeDetailsNo,
	SchemeFromNo=@SchemeFromNo,
	FkStockNo=@FkStockNo,
	StatusNo=2,
	CompanyNo=@CompanyNo
	Where 
	 PkSrNo=@PkSrNo
	
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(PkSrNo),0) From TRewardFrom 
	  DBCC CHECKIDENT(''TRewardFrom'', RESEED, @Id) 
	  INSERT INTO TRewardFrom( 
	RewardNo,
	RewardDetailsNo,
	SchemeDetailsNo,
	SchemeFromNo,
	FkStockNo,
	StatusNo,
	CompanyNo 
)
	  VALUES
(
	@RewardNo,
	@RewardDetailsNo,
	@SchemeDetailsNo,
	@SchemeFromNo,
	@FkStockNo,
	1,
	@CompanyNo
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTRewardFrom]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16-Oct-2013
 CREATE PROCEDURE  [dbo].[DeleteTRewardFrom]
@PkSrNo		numeric(18)
AS
		DELETE FROM TRewardFrom
		Where
		PkSrNo=@PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMLedgerGroupDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
Create PROCEDURE [dbo].[AddMLedgerGroupDetails]
     @LedgerGrpDetailsNo                  numeric(18),
     @LedgerGroupNo                       numeric(18),
	 @LedgerNo				        	  numeric(18),
     @IsActive                            bit,
	 @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo                           numeric(18)
AS
IF EXISTS(select LedgerGrpDetailsNo from MLedgerGroupDetails
          where
          LedgerGrpDetailsNo = @LedgerGrpDetailsNo)
     BEGIN
       --Update existing row
       UPDATE MLedgerGroupDetails
       SET
          LedgerGroupNo = @LedgerGroupNo,
          LedgerNo=@LedgerNo,
          IsActive=@IsActive,      
		  UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo = @CompanyNo
          
       WHERE
          LedgerGrpDetailsNo = @LedgerGrpDetailsNo	

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(LedgerGrpDetailsNo),0) From MLedgerGroupDetails
       DBCC CHECKIDENT(''MLedgerGroupDetails'', RESEED, @Id)

       INSERT INTO MLedgerGroupDetails(
         
          LedgerGroupNo,
          LedgerNo,
          IsActive,
          UserID,
          UserDate,
          CompanyNo
         
)
       VALUES(

          @LedgerGroupNo,
          @LedgerNo,
          @IsActive,
		  @UserID,
          @UserDate,
          @CompanyNo
  	 
)
END

/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMGodownSetting]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[AddMGodownSetting]
     @PkGodownSettingNo                   numeric(18),
     @FkBcdSrNo                           numeric(18),
     @ItemNo                              numeric(18),
     @UOMNo                               numeric(18),
     @QuantitySlabFrom                    numeric(18,2),
     @QuantitySlabTo                      numeric(18,2),
     @GodownNo                            numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkGodownSettingNo from MGodownSetting
          where
          PkGodownSettingNo = @PkGodownSettingNo)
     BEGIN
       --Update existing row
       UPDATE MGodownSetting
       SET
          FkBcdSrNo = @FkBcdSrNo,
          ItemNo = @ItemNo,
          UOMNo = @UOMNo,
          QuantitySlabFrom = @QuantitySlabFrom,
          QuantitySlabTo = @QuantitySlabTo,
          GodownNo = @GodownNo,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PkGodownSettingNo = @PkGodownSettingNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkGodownSettingNo),0) From MGodownSetting
       DBCC CHECKIDENT(''MGodownSetting'', RESEED, @Id)
       INSERT INTO MGodownSetting(
          FkBcdSrNo,
          ItemNo,
          UOMNo,
          QuantitySlabFrom,
          QuantitySlabTo,
          GodownNo,
          UserID,
          UserDate
)
       VALUES(
          @FkBcdSrNo,
          @ItemNo,
          @UOMNo,
          @QuantitySlabFrom,
          @QuantitySlabTo,
          @GodownNo,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTRewardTo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16-Oct-2013
CREATE PROCEDURE [dbo].[AddTRewardTo]
	@PkSrNo				numeric(18),
	@RewardNo			numeric(18),
	@RewardDetailsNo	numeric(18),
	@SchemeDetailsNo	numeric(18),
	@SchemeToNo			numeric(18),
	@FkStockNo			numeric(18),
	@CompanyNo			numeric(18)
 AS 
 IF EXISTS ( Select PkSrNo From TRewardTo 
	 Where 
	 PkSrNo =@PkSrNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE TRewardTo 
	 SET 

	RewardNo=@RewardNo,
	RewardDetailsNo=@RewardDetailsNo,
	SchemeDetailsNo=@SchemeDetailsNo,
	SchemeToNo=@SchemeToNo,
	FkStockNo=@FkStockNo,
	StatusNo=2,
	CompanyNo=@CompanyNo
	Where 
	 PkSrNo=@PkSrNo
 End 
 ELSE BEGIN 
	 --Insert new row 
	  Declare @Id numeric 
	  SELECT @Id=IsNull(Max(PkSrNo),0) From TRewardTo 
	  DBCC CHECKIDENT(''TRewardTo'', RESEED, @Id) 
	  INSERT INTO TRewardTo
( 
	RewardNo,
	RewardDetailsNo,
	SchemeDetailsNo,
	SchemeToNo,
	FkStockNo,
	StatusNo,
	CompanyNo 
)
	  VALUES(
	@RewardNo,
	@RewardDetailsNo,
	@SchemeDetailsNo,
	@SchemeToNo,
	@FkStockNo,
	1,
	@CompanyNo
)
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTRewardTo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 16-Oct-2013
 CREATE PROCEDURE  [dbo].[DeleteTRewardTo]
@PkSrNo		numeric(18)
AS
		DELETE FROM TRewardTo
		Where
		PkSrNo=@PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLedgerBalanceForTrialBal]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE function [dbo].[GetLedgerBalanceForTrialBal] (@LedgerNo as int, @CompanyNo as int, @VDate as datetime)
returns @retFindReports TABLE (Balance float)
AS
BEGIN
	Declare @ClosingBalance numeric(18,2)
	set @ClosingBalance = 0
	
	set @VDate = DateAdd(d,1,@VDate)
	Select @ClosingBalance = OpAmt From GetOpeningLedgerBalance(@LedgerNo, @CompanyNo, @VDate, @VDate)

insert into @retFindReports(Balance)values(@ClosingBalance)
return 
end


--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLedgerBalanceVal]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'-- =============================================
-- Author:		<Author,,Name>
-- Alter date: <Alter Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[GetLedgerBalanceVal]
(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime	
)
RETURNS numeric(18,2)
AS
BEGIN

Declare @OpAmt numeric(18,2)
set @OpAmt=0 

SELECT     @OpAmt=OpAmt from GetOpeningLedgerBalance(@LedgerNo, @CompNo, @FromDate, @ToDate)

return @OpAmt

END

--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLedgerBalance]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetLedgerBalance]
(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime	
)
RETURNS @TLedger Table(LdgNo numeric(18),LdgName varchar(max),OpDrAmt numeric(18,2),OpCrAmt numeric(18,2),DrAmt numeric(18,2),CrAmt numeric(18,2),ClDrAmt numeric(18,2),ClCrAmt numeric(18,2))
AS
BEGIN
	Declare @LedgNo numeric(18),@LedgerName varchar(max),@DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @OpAmt numeric(18,2),@ClAmt numeric(18,2),@OpDrAmt numeric(18,2),@OpCrAmt numeric(18,2),
			@ClDrAmt numeric(18,2),@ClCrAmt numeric(18,2)
	--insert into @TLedger (LdgNo,LdgName,DrAmt,CrAmt)
		SELECT     @LedgNo=LedgerNo,@LedgerName=LedgerName From MLedger Where LedgerNo=@LedgerNo

		SELECT     @DrAmt=IsNull(SUM(TVoucherDetails.Debit),0) ,@CrAmt= IsNull(SUM(TVoucherDetails.Credit),0)
FROM         TVoucherDetails INNER JOIN
                      TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo 
WHERE     (TVoucherDetails.LedgerNo = @LedgerNo)  AND (TVoucherEntry.VoucherDate >= @FromDate) AND 
          (TVoucherEntry.VoucherDate <= @ToDate) And (TVoucherEntry.CompanyNo = @CompNo) and (TVoucherEntry.IsCancel=''false'')


Select @OpAmt=OpAmt From GetOpeningLedgerBalance(@LedgerNo,@CompNo,@FromDate,@ToDate)
if(@OpAmt >=0)Begin set @OpDrAmt=@OpAmt set @OpCrAmt=0 End
else Begin set @OpDrAmt=0 set @OpCrAmt=@OpAmt End

set @ClAmt=(@DrAmt-@CrAmt)+@OpAmt

if(@ClAmt >=0)Begin set @ClDrAmt=@ClAmt set @ClCrAmt=0 End
else Begin set @ClDrAmt=0 set @ClCrAmt=abs(@ClAmt) End

insert into @TLedger values(@LedgNo,@LedgerName,@OpDrAmt,abs(@OpCrAmt),@DrAmt,@CrAmt,@ClDrAmt,@ClCrAmt)
--Update @TLedger set ClAmt=(DrAmt-CrAmt)+@OpAmt,OpDrAmt=@OpDrAmt,OpCrAmt=@OpCrAmt

--If Does''nt Entry in Voucher Entry.
If((Select Count(*) From @TLedger)=0)
begin
	insert into @TLedger values(@LedgerNo,@LedgerName,@OpDrAmt,abs(@OpCrAmt),0,0,@OpDrAmt,@OpCrAmt)
end
	RETURN
	END


--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTEWayDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/11/2011
create PROCEDURE [dbo].[AddTEWayDetails]
    @PKEWayNo						numeric(18),						                            
    @FkVoucherNo					numeric(18),		                       
    @EWayNo							varchar(50),                     
    @VoucherUserNo                  numeric(18),     
    @EWayDate                       datetime,
    @ModeNo                         numeric(18),
    @Distance                       numeric(18,2),    
	@TransportNo					numeric(18),							  
	@VehicleNo						varchar(50),
	@LRNo								varchar(50),
	@LRDate							datetime,
	@LedgerNo						numeric(18),
	@LedgerName						varchar(max),
	@Address						varchar(max),
	@CityNo							numeric(18),
	@CityName						varchar(50),
	@PinCode						numeric(18),
	@StateCode						numeric(18),
	@StateName						varchar(50),
	@UserID							numeric(18),
	@UserDate						datetime,
	--@ModifiedBy						varchar(max),
	@StatusNo						int,
	@IsActive						bit
    
AS
IF EXISTS(select FkVoucherNo from [TEWayDetails]
          where
          FkVoucherNo = @FkVoucherNo)
     BEGIN
       UPDATE TEWayDetails
       SET

	FkVoucherNo		= @FkVoucherNo,
	EWayNo			= @EWayNo,
	VoucherUserNo	= @VoucherUserNo,
	EWayDate		= @EWayDate,
	ModeNo			= @ModeNo,
	Distance		= @Distance,
	TransportNo		= @TransportNo,
	VehicleNo		= @VehicleNo,
	LRNo			= @LRNo,
	LRDate			= @LRDate,
	LedgerNo		= @LedgerNo,
	LedgerName		= @LedgerName,
	Address			= @Address,
	CityNo			= @CityNo,
	CityName		= @CityName,
	PinCode			= @PinCode,
	StateCode		= @StateCode,
	StateName		= @StateName,
	UserID			= @UserID,
	UserDate		= @UserDate,
	ModifiedBy		= isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
	StatusNo		= 2,
	IsActive		= @IsActive
    
       WHERE
          PKEWayNo = @PKEWayNo

     END
ELSE
     BEGIN
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PKEWayNo),0) From TEWayDetails
       DBCC CHECKIDENT(''TEWayDetails'', RESEED, @Id)
       INSERT INTO TEWayDetails(

			FkVoucherNo,
			EWayNo,
			VoucherUserNo,
			EWayDate,
			ModeNo,
			Distance,
			TransportNo,
			VehicleNo,
			LRNo,
			LRDate,
			LedgerNo,
			LedgerName,
			Address,
			CityNo,
			CityName,
			PinCode,
			StateCode,
			StateName,
			UserID,
			UserDate,
			--ModifiedBy,
			StatusNo,
			IsActive
		        
)
       VALUES(
			@FkVoucherNo,
			@EWayNo,
			@VoucherUserNo,
			@EWayDate,
			@ModeNo,
			@Distance,
			@TransportNo,
			@VehicleNo,
			@LRNo,
			@LRDate,
			@LedgerNo,
			@LedgerName,
			@Address,
			@CityNo,
			@CityName,
			@PinCode,
			@StateCode,
			@StateName,
			@UserID,
			@UserDate,
			--@ModifiedBy,
			1,
			@IsActive        
          
)

END

------------------------------------------------------------------------------------------------------------------------------------------------------------------














' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMItemBrandDiscount]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/12/2013
CREATE PROCEDURE [dbo].[AddMItemBrandDiscount]
     @PkSrNo                              numeric(18),
     @ItemDiscNo                          numeric(18),
     @StockGroupNo                        numeric(18),
     @DiscPercentage                      numeric(18,2),
     @IsActive                            bit,
     @CompanyNo                           numeric(18),
	 @ReturnID							  int output
AS
IF EXISTS(select PkSrNo from MItemBrandDiscount
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MItemBrandDiscount
       SET
          ItemDiscNo = @ItemDiscNo,
          StockGroupNo = @StockGroupNo,
          DiscPercentage = @DiscPercentage,
          IsActive = @IsActive,
          StatusNo = 2,
          CompanyNo = @CompanyNo
       WHERE
          PkSrNo = @PkSrNo
		  set @ReturnID = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MItemBrandDiscount
       DBCC CHECKIDENT(''MItemBrandDiscount'', RESEED, @Id)
       INSERT INTO MItemBrandDiscount(
          ItemDiscNo,
          StockGroupNo,
          DiscPercentage,
          IsActive,
          StatusNo,
          CompanyNo
)
       VALUES(
          @ItemDiscNo,
          @StockGroupNo,
          @DiscPercentage,
          @IsActive,
          2,
          @CompanyNo
)

set @ReturnID = Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMItemBrandDiscount]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/12/2013
CREATE PROCEDURE  [dbo].[DeleteMItemBrandDiscount] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MItemBrandDiscount
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMRecipeMain]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--altered on 01/24/2019--umesh

CREATE PROCEDURE [dbo].[AddMRecipeMain]
 @MRecipeID                  int,
 @DocNo                      int,
 --@ItemType                   varchar(50),
 @GroupNo                    int,
 @FinishItemID               int,
 @PackingSize                decimal(18,2), 
 @RDate                      datetime,
 @Qty                        numeric(18,2), 
 @UomNo                      numeric(18,0),
 @RecipeType                 numeric(18,0),
 @IsActive                   bit, 
 @UserID                     int,
 @UserDate                   datetime,
 @ProdQty                    numeric(18,2),
 @FkRecipeID                 numeric(18,2),
 @IsLock                     bit,
 @ReturnID                   int output

AS
IF EXISTS(select MRecipeID from MRecipeMain
          where
          MRecipeID = @MRecipeID and RecipeType=@RecipeType)
     BEGIN
       --Update existing row
       UPDATE MRecipeMain
       SET
        DocNo=@DocNo,
		--ItemType=@ItemType,
		GroupNo=@GroupNo,
		FinishItemID=@FinishItemID,
		PackingSize=@PackingSize,
		RDate=@RDate,
        Qty=@Qty,
        ProdQty=@ProdQty,
        UomNo=@UomNo,
        RecipeType=@RecipeType,
        FkRecipeID=@FkRecipeID,
        IsLock=@IsLock,
		IsActive=@IsActive,
		UserID=@UserID,
        ModifiedOn = isnull(ModifiedOn,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)

       WHERE
          MRecipeID = @MRecipeID and RecipeType=@RecipeType
		set @ReturnID=@MRecipeID 

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
  SELECT @Id=IsNull(Max(MRecipeID),0) From MRecipeMain
       DBCC CHECKIDENT(''MRecipeMain'', RESEED, @Id)
       SELECT @DocNo=IsNull(Max(DocNo),0)+1 From MRecipeMain where RecipeType=@RecipeType
     
       INSERT INTO MRecipeMain(
        DocNo,
		--ItemType, 
		GroupNo,
		FinishItemID, 
		PackingSize, 
		RDate, 
        Qty,
        ProdQty,
        UomNo,
        RecipeType,
        FkRecipeID,
        IsLock,
		IsActive, 
		UserID, 
		UserDate
         
)
       VALUES(
         
		@DocNo,
		--@ItemType,
		@GroupNo, 
		@FinishItemID, 
		@PackingSize, 
		@RDate,
        @Qty, 
        @ProdQty,
        @UomNo,
        @RecipeType,
        @FkRecipeID,
        @IsLock,
		@IsActive, 
		@UserID,
        @UserDate         
)
Set @ReturnID=Scope_Identity()
END


/*---------------------------------------------------------------------------------------------------------------------------------------------------*/


set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMOccupation]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/02/2012
CREATE PROCEDURE [dbo].[AddMOccupation]
     @OccupationNo                        numeric(18),
     @OccupationName                      varchar(50),
     @ShortName                           varchar(50),
	 @IsActive							  bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select OccupationNo from MOccupation
          where
          OccupationNo = @OccupationNo)
     BEGIN
       --Update existing row
       UPDATE MOccupation
       SET
          OccupationName = @OccupationName,
          ShortName = @ShortName,
		  IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          OccupationNo = @OccupationNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(OccupationNo),0) From MOccupation
       DBCC CHECKIDENT(''MOccupation'', RESEED, @Id)
       INSERT INTO MOccupation(
          OccupationName,
          ShortName,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          @OccupationName,
          @ShortName,
		  @IsActive,
          @UserID,
          @UserDate,
	      @CompanyNo,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMOccupation]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/02/2012
CREATE PROCEDURE  [dbo].[DeleteMOccupation] 
@OccupationNo                       numeric(18)


AS

Update MOccupation set IsActive=''False'',StatusNo=2 where OccupationNo = @OccupationNo
--       DELETE FROM MOccupation
--       WHERE
--          OccupationID = @OccupationID
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMQualification]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/02/2012
CREATE PROCEDURE  [dbo].[DeleteMQualification] 
@QualificationNo                       numeric(18)


AS
Update MQualification set IsActive=''False'',StatusNo=2 where QualificationNo = @QualificationNo
--       DELETE FROM MQualification
--       WHERE
--          QualificationNo = @QualificationNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMQualification]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/02/2012
CREATE PROCEDURE [dbo].[AddMQualification]
     @QualificationNo                        numeric(18),
     @QualificationName                      varchar(50),
     @ShortName                           varchar(50),
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
AS
IF EXISTS(select QualificationNo from MQualification
          where
          QualificationNo = @QualificationNo)
     BEGIN
       --Update existing row
       UPDATE MQualification
       SET
          QualificationName = @QualificationName,
          ShortName = @ShortName,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          StatusNo=2
       WHERE
          QualificationNo = @QualificationNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(QualificationNo),0) From MQualification
       DBCC CHECKIDENT(''MOccupation'', RESEED, @Id)
       INSERT INTO MQualification(
          QualificationName,
          ShortName,
          IsActive,
          UserID,
          UserDate,
		  CompanyNo,
          StatusNo
)
       VALUES(
          @QualificationName,
          @ShortName,
          @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMItemDiscount]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/12/2013
CREATE PROCEDURE  [dbo].[DeleteMItemDiscount] 
@PkSrNo                             numeric(18),
@IsActive							int

AS

      
Update MItemDiscount Set IsActive=@IsActive,StatusNo=2 Where		  PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMItemDiscount]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 04/12/2013
CREATE PROCEDURE [dbo].[AddMItemDiscount]
     @PkSrNo                              numeric(18),
     @DiscUserNo                          numeric(18),
     @MfgCompanyNo                        numeric(18),
     @DiscDate                            datetime,
     @PeriodFrom                          datetime,
     @PeriodTo                            datetime,
     @CompanyNo                           numeric(18),
     @IsActive                            numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
 	 @ReturnID                           int output
AS
IF EXISTS(select PkSrNo from MItemDiscount
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MItemDiscount
       SET
          DiscUserNo = @DiscUserNo,
          MfgCompanyNo = @MfgCompanyNo,
          DiscDate = @DiscDate,
          PeriodFrom = @PeriodFrom,
          PeriodTo = @PeriodTo,
          StatusNo = 2,
          CompanyNo = @CompanyNo,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          PkSrNo = @PkSrNo
		  set @ReturnID = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MItemDiscount
       DBCC CHECKIDENT(''MItemDiscount'', RESEED, @Id)
	   Select @DiscUserNo=IsNull(Max(DiscUserNo),0)+1 from MItemDiscount 
       INSERT INTO MItemDiscount(
          DiscUserNo,
          MfgCompanyNo,
          DiscDate,
          PeriodFrom,
          PeriodTo,
          StatusNo,
          CompanyNo,
          IsActive,
          UserID,
          UserDate

)
       VALUES(
          @DiscUserNo,
          @MfgCompanyNo,
          @DiscDate,
          @PeriodFrom,
          @PeriodTo,
          1,
          @CompanyNo,
          @IsActive,
          @UserID,
          @UserDate
        
)

set @ReturnID = Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMUser]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 24/09/2008
CREATE PROCEDURE [dbo].[AddMUser]
     @UserCode                            numeric(18),
	 @UsersUserCode						  varchar(50),
     @UserName                            varchar(250),
     @Password                            varchar(50),
     @UserAddress                        varchar(250),
     @PhoneNo                          varchar(50),
     @UserType                              int,
	 @CityCode                              numeric(18),
	 @IsClose                              int,
	 @FkAccYearNo                        numeric(18),
	 @FkCompanyNo                        numeric(18),
	 @FkLocationNo                       numeric(18),
	 @ReturnID                           int output
AS
IF EXISTS(select UserCode from MUser
          where
          UserCode = @UserCode)
     BEGIN
       --Update existing row
       UPDATE MUser
       SET
          UserName = @UserName,
		  UsersUserCode= @UsersUserCode,
          Password = @Password,
          UserAddress = @UserAddress,
          PhoneNo = @PhoneNo,
          UserType = @UserType,
		  CityCode = @CityCode,
		  IsClose = @IsClose,
		  FkAccYearNo = @FkAccYearNo,
		  FkCompanyNo = @FkCompanyNo,
		  FkLocationNo = @FkLocationNo,
          StatusNo=2
       WHERE
          UserCode = @UserCode
	set @ReturnID = @UserCode
     END
ELSE
     BEGIN
		Declare @Id numeric
	   SELECT @Id=IsNull(Max(UserCode),0) from MUser
	   DBCC CHECKIDENT(''MUser'', RESEED, @Id)
       --Insert new row
       INSERT INTO MUser(
          
          UserName,
		  UsersUserCode,
          Password,
          UserAddress,
          PhoneNo,
          UserType,
		  CityCode,
		  IsClose,
		  FkAccYearNo,
		  FkCompanyNo,
          FkLocationNo,
          StatusNo
)
       VALUES(
          
          @UserName,
		  @UsersUserCode,
          @Password,
          @UserAddress,
          @PhoneNo,
          @UserType,
		  @CityCode,
		  @IsClose,
		  @FkAccYearNo,
		  @FkCompanyNo,
		  @FkLocationNo, 
          1
)
set @ReturnID = Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMUser]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 24/09/2008
CREATE PROCEDURE  [dbo].[DeleteMUser] 
@UserCode                           numeric(18)


AS

       DELETE FROM MUser
       WHERE
          UserCode = @UserCode
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMPayTypeLedger]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 12/01/2012
CREATE PROCEDURE  [dbo].[DeleteMPayTypeLedger] 
@PKPayTypeLedgerNo                        numeric(18)


AS

       DELETE FROM MPayTypeLedger
       WHERE
          PKPayTypeLedgerNo = @PKPayTypeLedgerNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMPayTypeLedger]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 12/01/2012
CREATE PROCEDURE [dbo].[AddMPayTypeLedger]
     @PkPayTypeLedgerNo                   numeric(18),
     @PayTypeNo                           numeric(18),
     @LedgerNo                            numeric(18),
	 @CompanyNo							  numeric(18),
	 @ChargesPerce						  numeric(18,2)
AS
IF EXISTS(select PkPayTypeLedgerNo from MPayTypeLedger
          where
          PkPayTypeLedgerNo = @PkPayTypeLedgerNo)
     BEGIN
       --Update existing row
       UPDATE MPayTypeLedger
       SET
          PayTypeNo = @PayTypeNo,
          LedgerNo = @LedgerNo,
		  CompanyNo = @CompanyNo,
		  ChargesPerce = @ChargesPerce,
          StatusNo=2
       WHERE
          PkPayTypeLedgerNo = @PkPayTypeLedgerNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PKPayTypeLedgerNo),0) From MPayTypeLedger
       DBCC CHECKIDENT(''MPayTypeLedger'', RESEED, @Id)
       INSERT INTO MPayTypeLedger(
          PayTypeNo,
          LedgerNo,
		  CompanyNo,
		  ChargesPerce,
          StatusNo
)
       VALUES(
          @PayTypeNo,
          @LedgerNo,
		  @CompanyNo,
		  @ChargesPerce,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMPayTypeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11/06/2012
CREATE PROCEDURE [dbo].[AddMPayTypeDetails]
     @PKPayTypeDetailsNo                  numeric(18),
     @FKPayTypeNo                         numeric(18),
     @ColLabel                            varchar(100),
     @ColName                             varchar(100),
     @IsComplsory                         bit,
     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PKPayTypeDetailsNo from MPayTypeDetails
          where
          PKPayTypeDetailsNo = @PKPayTypeDetailsNo)
     BEGIN
       --Update existing row
       UPDATE MPayTypeDetails
       SET
          FKPayTypeNo = @FKPayTypeNo,
          ColLabel = @ColLabel,
          ColName = @ColName,
          IsComplsory = @IsComplsory,
          IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
          StatusNo=2
       WHERE
          PKPayTypeDetailsNo = @PKPayTypeDetailsNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PKPayTypeDetailsNo),0) From MPayTypeDetails
       DBCC CHECKIDENT(''MPayTypeDetails'', RESEED, @Id)
       INSERT INTO MPayTypeDetails(
          FKPayTypeNo,
          ColLabel,
          ColName,
          IsComplsory,
          IsActive,
          UserID,
          UserDate,
          StatusNo 
)
       VALUES(
          @FKPayTypeNo,
          @ColLabel,
          @ColName,
          @IsComplsory,
          @IsActive,
          @UserID,
          @UserDate,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMPayTypeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11/06/2012
CREATE PROCEDURE  [dbo].[DeleteMPayTypeDetails] 
@PKPayTypeDetailsNo                 numeric(18)


AS

       DELETE FROM MPayTypeDetails
       WHERE
          PKPayTypeDetailsNo = @PKPayTypeDetailsNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherDetailsES]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
create PROCEDURE [dbo].[AddTVoucherDetailsES]
     @PkVoucherTrnNo                      numeric(18),
     @FkVoucherNo                         numeric(18),
     @VoucherSrNo                         numeric(18),
     @SignCode                            numeric(18),
     @LedgerNo                            numeric(18),
     @Debit                               numeric(18,2),
     @Credit                              numeric(18,2),
	 @SrNo								  numeric(18),
	 @CompanyNo							  numeric(18),
	 @Narration							  varchar(max),
	 @ReturnID							  int output
AS
IF EXISTS(select PkVoucherTrnNo from TVoucherDetails
          where
          PkVoucherTrnNo = @PkVoucherTrnNo)
     BEGIN
       --Update existing row
       UPDATE TVoucherDetails
       SET
          FkVoucherNo = @FkVoucherNo,
          VoucherSrNo = @VoucherSrNo,
          SignCode = @SignCode,
          LedgerNo = @LedgerNo,
          Debit = @Debit,
          Credit = @Credit,
		  CompanyNo = @CompanyNo,
		  SrNo = @SrNo,
		  Narration=@Narration,
		  StatusNo = 2
       WHERE
          PkVoucherTrnNo = @PkVoucherTrnNo
       set @ReturnID=@PkVoucherTrnNo    

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkVoucherTrnNo),0) From TVoucherDetails
       DBCC CHECKIDENT(''TVoucherDetails'', RESEED, @Id)
       INSERT INTO TVoucherDetails(
          FkVoucherNo,
          VoucherSrNo,
          SignCode,
          LedgerNo,
          Debit,
          Credit,
		  CompanyNo,
		  SrNo,
	      Narration,
		  StatusNo
)
       VALUES(
          @FkVoucherNo,
          @VoucherSrNo,
          @SignCode,
          @LedgerNo,
          @Debit,
          @Credit,
		  @CompanyNo,
		  @SrNo,
		  @Narration,
		  1
)
Set @ReturnID=Scope_Identity()
END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTVoucherDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
CREATE PROCEDURE  [dbo].[DeleteTVoucherDetails] 
@PkVoucherTrnNo                     numeric(18)


AS

	
--       DELETE FROM TVoucherDetailsCompany
--       WHERE
--          FkVoucherTrnNo = @PkVoucherTrnNo

       DELETE FROM TVoucherDetails
       WHERE
          PkVoucherTrnNo = @PkVoucherTrnNo

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherDetails1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 09/12/2011
create PROCEDURE [dbo].[AddTVoucherDetails1]
     @PkVoucherTrnNo                      numeric(18),
     @FkVoucherNo                         numeric(18),
     @VoucherSrNo                         numeric(18),
     @SignCode                            numeric(18),
     @LedgerNo                            numeric(18),
     @Debit                               numeric(18,2),
     @Credit                              numeric(18,2),
	 @SrNo								  numeric(18),
	 @CompanyNo							  numeric(18),
	 @Narration							  varchar(max),
	 @StatusNo                            int
AS
 SET IDENTITY_INSERT TVoucherDetails ON
     BEGIN
       --Insert new row
      
       INSERT INTO TVoucherDetails(
         PkVoucherTrnNo,     
          FkVoucherNo,
          VoucherSrNo,
          SignCode,
          LedgerNo,
          Debit,
          Credit,
		  CompanyNo,
		  SrNo,
	      Narration,
		  StatusNo
)
       VALUES(
          @PkVoucherTrnNo,   
          @FkVoucherNo,
          @VoucherSrNo,
          @SignCode,
          @LedgerNo,
          @Debit,
          @Credit,
		  @CompanyNo,
		  @SrNo,
		  @Narration,
		  @StatusNo
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFirmLedgerBalance]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetFirmLedgerBalance]
(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@MFGCompNo		numeric(18)
)
RETURNS @TLedger Table(LdgNo numeric(18),LdgName varchar(max),OpDrAmt numeric(18,2),OpCrAmt numeric(18,2),DrAmt numeric(18,2),CrAmt numeric(18,2),ClDrAmt numeric(18,2),ClCrAmt numeric(18,2))
AS
BEGIN
	Declare @LedgNo numeric(18),@LedgerName varchar(max),@DrAmt numeric(18,2),@CrAmt numeric(18,2)
	Declare @OpAmt numeric(18,2),@ClAmt numeric(18,2),@OpDrAmt numeric(18,2),@OpCrAmt numeric(18,2),
			@ClDrAmt numeric(18,2),@ClCrAmt numeric(18,2)
	--insert into @TLedger (LdgNo,LdgName,DrAmt,CrAmt)
		SELECT     @LedgNo=LedgerNo,@LedgerName=LedgerName From MLedger Where LedgerNo=@LedgerNo

		SELECT     @DrAmt=IsNull(SUM(TVoucherDetailsCompany.Debit),0) ,@CrAmt= IsNull(SUM(TVoucherDetailsCompany.Credit),0)
		FROM         TVoucherDetailsCompany INNER JOIN
								  TVoucherEntry INNER JOIN
								  TVoucherEntryCompany ON TVoucherEntry.PkVoucherNo = TVoucherEntryCompany.FkVoucherNo ON 
								  TVoucherDetailsCompany.FkVoucherNo = TVoucherEntryCompany.PKVoucherCompanyNo 
		WHERE     (TVoucherDetailsCompany.LedgerNo = @LedgerNo)  AND (TVoucherEntry.VoucherDate >= @FromDate) AND 
						  (TVoucherEntry.VoucherDate <= @ToDate) And (TVoucherEntry.CompanyNo = @CompNo) and (TVoucherEntry.IsCancel=''false'')
			 AND (TVoucherEntryCompany.MfgCompNo = @MFGCompNo)


Select @OpAmt=OpAmt From GetFirmOpeningLedgerBalance(@LedgerNo,@CompNo,@FromDate,@ToDate,@MFGCompNo)
if(@OpAmt >=0)Begin set @OpDrAmt=@OpAmt set @OpCrAmt=0 End
else Begin set @OpDrAmt=0 set @OpCrAmt=@OpAmt End



set @ClAmt=(@DrAmt-@CrAmt)+@OpAmt

if(@ClAmt >=0)Begin set @ClDrAmt=@ClAmt set @ClCrAmt=0 End
else Begin set @ClDrAmt=0 set @ClCrAmt=abs(@ClAmt) End

insert into @TLedger values(@LedgNo,@LedgerName,@OpDrAmt,abs(@OpCrAmt),@DrAmt,@CrAmt,@ClDrAmt,@ClCrAmt)
--Update @TLedger set ClAmt=(DrAmt-CrAmt)+@OpAmt,OpDrAmt=@OpDrAmt,OpCrAmt=@OpCrAmt

--If Does''nt Entry in Voucher Entry.
If((Select Count(*) From @TLedger)=0)
begin
	insert into @TLedger values(@LedgerNo,@LedgerName,@OpDrAmt,abs(@OpCrAmt),0,0,@OpDrAmt,@OpCrAmt)
end
	RETURN
	END



--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherPayTypeDetails1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11/06/2012
CREATE PROCEDURE [dbo].[AddTVoucherPayTypeDetails1]
     @PKVoucherPayTypeNo                  numeric(18),
     @FKSalesVoucherNo                    numeric(18),
     @FKReceiptVoucherNo                  numeric(18),
     @FKVoucherTrnNo                      numeric(18),
     @FKPayTypeNo                         numeric(18),
     @Amount                              numeric(18,2),
	 @CompanyNo							  numeric(18),
	 @ChargesPerce						  numeric(18,2),
	 @ChargesAmount						  numeric(18,2),
      @StatusNo                           int
AS

SET IDENTITY_INSERT TVoucherPayTypeDetails ON
     BEGIN
       --Insert new row
       
       INSERT INTO TVoucherPayTypeDetails(
          PKVoucherPayTypeNo,   
          FKSalesVoucherNo,
          FKReceiptVoucherNo,
          FKVoucherTrnNo,
          FKPayTypeNo,
          Amount,
		  CompanyNo,
		  StatusNo,
		  ChargesPerce,
		  ChargesAmount
)
       VALUES(
           @PKVoucherPayTypeNo,    
          @FKSalesVoucherNo,
          @FKReceiptVoucherNo,
          @FKVoucherTrnNo,
          @FKPayTypeNo,
          @Amount,
		  @CompanyNo,
		  @StatusNo,
		  @ChargesPerce,
		  @ChargesAmount
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTVoucherPayTypeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11/06/2012
CREATE PROCEDURE  [dbo].[DeleteTVoucherPayTypeDetails] 
@PKVoucherPayTypeNo                 numeric(18)


AS

       DELETE FROM TVoucherPayTypeDetails
       WHERE
          PKVoucherPayTypeNo = @PKVoucherPayTypeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherPayTypeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11/06/2012
CREATE PROCEDURE [dbo].[AddTVoucherPayTypeDetails]
     @PKVoucherPayTypeNo                  numeric(18),
     @FKSalesVoucherNo                    numeric(18),
     @FKReceiptVoucherNo                  numeric(18),
     @FKVoucherTrnNo                      numeric(18),
     @FKPayTypeNo                         numeric(18),
     @Amount                              numeric(18,2),
	 @CompanyNo							  numeric(18),
	 @ChargesPerce						  numeric(18,2),
	 @ChargesAmount						  numeric(18,2)
AS
IF EXISTS(select PKVoucherPayTypeNo from TVoucherPayTypeDetails
          where
          PKVoucherPayTypeNo = @PKVoucherPayTypeNo)
     BEGIN
       --Update existing row
       UPDATE TVoucherPayTypeDetails
       SET
          FKSalesVoucherNo = @FKSalesVoucherNo,
          FKReceiptVoucherNo = @FKReceiptVoucherNo,
          FKVoucherTrnNo = @FKVoucherTrnNo,
          FKPayTypeNo = @FKPayTypeNo,
          Amount = @Amount,
		  CompanyNo = @CompanyNo,
		  StatusNo = 2,
		  ChargesPerce = @ChargesPerce,
		  ChargesAmount = @ChargesAmount
       WHERE
          PKVoucherPayTypeNo = @PKVoucherPayTypeNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PKVoucherPayTypeNo),0) From TVoucherPayTypeDetails
       DBCC CHECKIDENT(''TVoucherPayTypeDetails'', RESEED, @Id)
       INSERT INTO TVoucherPayTypeDetails(
          FKSalesVoucherNo,
          FKReceiptVoucherNo,
          FKVoucherTrnNo,
          FKPayTypeNo,
          Amount,
		  CompanyNo,
		  StatusNo,
		  ChargesPerce,
		  ChargesAmount
)
       VALUES(
          @FKSalesVoucherNo,
          @FKReceiptVoucherNo,
          @FKVoucherTrnNo,
          @FKPayTypeNo,
          @Amount,
		  @CompanyNo,
		  1,
		  @ChargesPerce,
		  @ChargesAmount
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMSchemeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 20-Sep-2013
CREATE PROCEDURE [dbo].[AddMSchemeDetails]
	@PkSrNo				numeric(18),
	@SchemeNo			numeric(18),
	@DiscPercentage		numeric(18,2),
	@DiscAmount			numeric(18,2),
	@CompanyNo			numeric(18),
	@IsActive			bit,
	@UserID				numeric(18),
	@UserDate			datetime,
	@ReturnID           int output
 AS 
 IF EXISTS ( Select PkSrNo From MSchemeDetails 
	 Where 
	 PkSrNo =@PkSrNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE MSchemeDetails 
	 SET 

	SchemeNo=@SchemeNo,
	DiscPercentage=@DiscPercentage,
	DiscAmount=@DiscAmount,
	CompanyNo=@CompanyNo,
	StatusNo=2,
	IsActive = @IsActive,
	UserID=@UserID,
	UserDate=@UserDate
	Where 
	 PkSrNo=@PkSrNo
	 set @ReturnID=@PkSrNo    
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(PkSrNo),0) From MSchemeDetails 
	  DBCC CHECKIDENT(''MSchemeDetails'', RESEED, @Id) 
	  INSERT INTO MSchemeDetails( 
	SchemeNo,
	DiscPercentage,
	DiscAmount,
	CompanyNo,
	StatusNo,
	IsActive,
	UserID,
	UserDate 
)
	  VALUES(
	@SchemeNo,
	@DiscPercentage,
	@DiscAmount,
	@CompanyNo,
	1,
	@IsActive,
	@UserID,
	@UserDate
	)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMSchemeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE  [dbo].[DeleteMSchemeDetails]
@PkSrNo		numeric(18)
AS
		DELETE FROM MSchemeDetails
		Where
		PkSrNo=@PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMStockItemsIngredient]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 23/04/2015
CREATE PROCEDURE [dbo].[AddMStockItemsIngredient]
     @PkSrNo                              numeric(18),
     @IngredientValue                     varchar(300),
     @NutritionHeadValue                  varchar(300),
     @ReceipeHead1                        varchar(300),
     @ReceipeHead2                        varchar(300),
     @ReceipeHead3                        varchar(300),
     @LangReceipeHead1                    varchar(300),
     @LangReceipeHead2                    varchar(300),
     @LangReceipeHead3                    varchar(300),
     @ItemNo                              numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @CompanyNo                           numeric(18),
	 @ReturnID							  int output
AS
IF EXISTS(select PkSrNo from MStockItemsIngredient
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MStockItemsIngredient
       SET
          IngredientValue = @IngredientValue,
          NutritionHeadValue = @NutritionHeadValue,
          ReceipeHead1 = @ReceipeHead1,
          ReceipeHead2 = @ReceipeHead2,
          ReceipeHead3 = @ReceipeHead3,
          LangReceipeHead1 = @LangReceipeHead1,
          LangReceipeHead2 = @LangReceipeHead2,
          LangReceipeHead3 = @LangReceipeHead3,
          ItemNo = @ItemNo,
          UserID = @UserID,
          UserDate = @UserDate,
          CompanyNo = @CompanyNo,
          StatusNo = 2
       WHERE
          PkSrNo = @PkSrNo
	     set @ReturnID=@PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MStockItemsIngredient
       DBCC CHECKIDENT(''MStockItemsIngredient'', RESEED, @Id)
       INSERT INTO MStockItemsIngredient(
          IngredientValue,
          NutritionHeadValue,
          ReceipeHead1,
          ReceipeHead2,
          ReceipeHead3,
          LangReceipeHead1,
          LangReceipeHead2,
          LangReceipeHead3,
          ItemNo,
          UserID,
          UserDate,
          CompanyNo,
          StatusNo
)
       VALUES(
          @IngredientValue,
          @NutritionHeadValue,
          @ReceipeHead1,
          @ReceipeHead2,
          @ReceipeHead3,
          @LangReceipeHead1,
          @LangReceipeHead2,
          @LangReceipeHead3,
          @ItemNo,
          @UserID,
          @UserDate,
          @CompanyNo,
          1
)

set @ReturnID=Scope_Identity()

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReceipeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'Create Procedure [dbo].[GetReceipeDetails]
@ItemNo				Numeric(18)

As

SELECT     MStockItemsIngredient.ReceipeHead1, MStockItemsIngredient.ReceipeHead2, MStockItemsIngredient.ReceipeHead3, MStockItemsIngredient.LangReceipeHead1, 
                      MStockItemsIngredient.LangReceipeHead2, MStockItemsIngredient.LangReceipeHead3, MStockItemsReceipe.ReceipeDesc, MStockItemsReceipe.LangReceipeDesc, 
                      MStockItemsReceipe.SequenceNo
FROM         MStockItemsIngredient INNER JOIN
                      MStockItemsReceipe ON MStockItemsIngredient.PkSrNo = MStockItemsReceipe.IngredientNo
WHERE     (MStockItemsIngredient.ItemNo = @ItemNo)
Order by   MStockItemsReceipe.SequenceNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetMaxSchemeUserNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetMaxSchemeUserNo]
(
	@SchemeTypeNo numeric(18),
	@Type    numeric(18)
)
RETURNs  @GetMaxSchemeUserNo TABLE (SchemeUserNo  varchar(100))
As 
Begin

Declare @SchemeUserNo varchar(500),@MaxNo varchar(100)
Declare @Initalchar varchar(100)

Select @Initalchar= InitalChar  From MSchemeType Where SchemeTypeNo=@SchemeTypeNo

if(@Type=1)
	Select @MaxNo=IsNull(Max((Cast(( Replace(SchemeUserNo,@Initalchar+''-'','''')) As int)))+1,1) From MScheme Where SchemeTypeNo=@SchemeTypeNo and IsIWScheme<>1
Else
	Select @MaxNo=IsNull(Max((Cast(( Replace(SchemeUserNo,@Initalchar+''-'','''')) As int))),1) From MScheme Where SchemeTypeNo=@SchemeTypeNo



-- Insert Into @GetMaxSchemeUserNo Select (@Initalchar+''-''+ Case when (len(@MaxNo)=1) then ''000''+@MaxNo Else Case when (len(@MaxNo)=2) then ''00''+@MaxNo Else Case when (len(@MaxNo)=3) then ''0''+@MaxNo Else @MaxNo End End end
Insert Into @GetMaxSchemeUserNo Select Cast(@Initalchar+''-''+ Case when (len(@MaxNo)=1) then ''000''+@MaxNo Else Case when (len(@MaxNo)=2) then ''00''+@MaxNo Else Case when (len(@MaxNo)=3) then ''0''+@MaxNo Else @MaxNo End End end As varchar)

RETURN
End




' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMSchemeType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 20-Sep-2013
 CREATE PROCEDURE  [dbo].[DeleteMSchemeType]
@SchemeTypeNo		numeric(18)
AS

Update MSchemeType set IsActive=''false'' Where SchemeTypeNo=@SchemeTypeNo
		--DELETE FROM MSchemeType		Where		SchemeTypeNo=@SchemeTypeNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMSchemeType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 20-Sep-2013
CREATE PROCEDURE [dbo].[AddMSchemeType]
	@SchemeTypeNo		numeric(18),
	@SchemeTypeName		varchar(500),
	@SchemeTypeDesc		varchar(500),
	@InitalChar		varchar(500),
	@CompanyNo		numeric(18),
	@IsActive		bit,
	@UserID		numeric(18),
	@UserDate		datetime
 AS 
 IF EXISTS ( Select SchemeTypeNo From MSchemeType 
	 Where 
	 SchemeTypeNo =@SchemeTypeNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE MSchemeType 
	 SET 

	SchemeTypeName=@SchemeTypeName,
	SchemeTypeDesc=@SchemeTypeDesc,
	InitalChar=@InitalChar,
	CompanyNo=@CompanyNo,
	StatusNo=2,
	IsActive =@IsActive,
	UserID=@UserID,
	UserDate=@UserDate
	Where 
	 SchemeTypeNo=@SchemeTypeNo
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric 
	  SELECT @Id=IsNull(Max(SchemeTypeNo),0) From MSchemeType 
	  DBCC CHECKIDENT(''MSchemeType'', RESEED, @Id) 
	  INSERT INTO MSchemeType( 
	SchemeTypeName,
	SchemeTypeDesc,
	InitalChar,
	CompanyNo,
	StatusNo,
	IsActive,
	UserID,
	UserDate 
)
	  VALUES(
	@SchemeTypeName,
	@SchemeTypeDesc,
	@InitalChar,
	@CompanyNo,
	1,
	@IsActive,
	@UserID,
	@UserDate
	)
	END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMStockItemsReceipe]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 23/04/2015
CREATE PROCEDURE  [dbo].[DeleteMStockItemsReceipe] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MStockItemsReceipe
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMStockItemsReceipe]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 23/04/2015
CREATE PROCEDURE [dbo].[AddMStockItemsReceipe]
     @PkSrNo                              numeric(18),
     @IngredientNo                        numeric(18),
     @ReceipeDesc                         varchar(300),
     @LangReceipeDesc                     varchar(300),
     @SequenceNo                          numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @CompanyNo                           numeric(18)
    
AS
IF EXISTS(select PkSrNo from MStockItemsReceipe
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MStockItemsReceipe
       SET
          IngredientNo = @IngredientNo,
          ReceipeDesc = @ReceipeDesc,
          LangReceipeDesc = @LangReceipeDesc,
          SequenceNo = @SequenceNo,
          UserID = @UserID,
          UserDate = @UserDate,
          CompanyNo = @CompanyNo,
          StatusNo = 2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MStockItemsReceipe
       DBCC CHECKIDENT(''MStockItemsReceipe'', RESEED, @Id)
       INSERT INTO MStockItemsReceipe(
          IngredientNo,
          ReceipeDesc,
          LangReceipeDesc,
          SequenceNo,
          UserID,
          UserDate,
          CompanyNo,
          StatusNo
)
       VALUES(
          @IngredientNo,
          @ReceipeDesc,
          @LangReceipeDesc,
          @SequenceNo,
          @UserID,
          @UserDate,
          @CompanyNo,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherChequeDetails1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 12/09/2012
Create PROCEDURE [dbo].[AddTVoucherChequeDetails1]
     @PkSrNo                              numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @ClearingDate                        datetime,
     @UserID                              numeric(18),
     @UserDate                            datetime
AS

SET IDENTITY_INSERT TVoucherChequeDetails ON
     BEGIN
      
       INSERT INTO TVoucherChequeDetails(
          PkSrNo ,
          FkVoucherTrnNo,
          ClearingDate,
          UserID,
          UserDate
)
       VALUES(
          @PkSrNo, 
          @FkVoucherTrnNo,
          @ClearingDate,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTVoucherChequeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 12/09/2012
CREATE PROCEDURE  [dbo].[DeleteTVoucherChequeDetails] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM TVoucherChequeDetails
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTVoucherChequeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 12/09/2012
CREATE PROCEDURE [dbo].[AddTVoucherChequeDetails]
     @PkSrNo                              numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @ClearingDate                        datetime,
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PkSrNo from TVoucherChequeDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TVoucherChequeDetails
       SET
          FkVoucherTrnNo = @FkVoucherTrnNo,
          ClearingDate = @ClearingDate,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TVoucherChequeDetails
       DBCC CHECKIDENT(''TVoucherChequeDetails'', RESEED, @Id)
       INSERT INTO TVoucherChequeDetails(
          FkVoucherTrnNo,
          ClearingDate,
          UserID,
          UserDate
)
       VALUES(
          @FkVoucherTrnNo,
          @ClearingDate,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMStockItemsNutrition]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 23/04/2015
CREATE PROCEDURE  [dbo].[DeleteMStockItemsNutrition] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MStockItemsNutrition
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMStockItemsNutrition]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 23/04/2015
CREATE PROCEDURE [dbo].[AddMStockItemsNutrition]
     @PkSrNo                              numeric(18),
     @IngredientNo                        numeric(18),
     @NutritionNo                         numeric(18),
     @NutritionValue                      varchar(300),
     @NutritionUOM                        varchar(50),
     @SequenceNo                          numeric(18),
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @CompanyNo                           numeric(18)   
AS
IF EXISTS(select PkSrNo from MStockItemsNutrition
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MStockItemsNutrition
       SET
          IngredientNo = @IngredientNo,
          NutritionNo = @NutritionNo,
          NutritionValue = @NutritionValue,
          NutritionUOM = @NutritionUOM,
          SequenceNo = @SequenceNo,
          UserID = @UserID,
          UserDate = @UserDate,
          CompanyNo = @CompanyNo,
          StatusNo = 2
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MStockItemsNutrition
       DBCC CHECKIDENT(''MStockItemsNutrition'', RESEED, @Id)
       INSERT INTO MStockItemsNutrition(
          IngredientNo,
          NutritionNo,
          NutritionValue,
          NutritionUOM,
          SequenceNo,
          UserID,
          UserDate,
          CompanyNo,
          StatusNo
)
       VALUES(
          @IngredientNo,
          @NutritionNo,
          @NutritionValue,
          @NutritionUOM,
          @SequenceNo,
          @UserID,
          @UserDate,
          @CompanyNo,
          1
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTDeliveryChallan]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[AddTDeliveryChallan]
     @PkVoucherNo                         numeric(18),
     @VoucherTypeCode                     numeric(18),
     @VoucherUserNo                       numeric(18),
     @VoucherDate                         datetime,
     @VoucherTime                         datetime,
     @Narration                           varchar(50),
     @Reference                           varchar(50),
     @ChequeNo                            numeric(18),
     @ClearingDate                        datetime,
     @CompanyNo                           numeric(18),
     @BilledAmount                        numeric(18,2),
	 @ChallanNo                           varchar(50),
	 @Remark                              varchar(Max),
	 @InwardLocationCode				  numeric(18),
	 @MacNo								  numeric(18),
	 @UserID                              numeric(18),
	 @PayTypeNo							  numeric(18),
	 @RateTypeNo						  numeric(18),
	 @TaxTypeNo							  numeric(18),
	 @OrderType							  numeric(18),	
     @UserDate                            datetime,
	 @ReturnAmount						  numeric(18,2),
     @Visibility						  numeric(18,2),
	 @DiscPercent						  numeric(18,2),
	 @DiscAmt							  numeric(18,2),
	 @MixMode							  int,
	 @IsItemLevelDisc					  bit,
	 @IsFooterLevelDisc					  bit,
	 @BrokerNo							  numeric(18),
	 @SuppCategory						  numeric(18),
	 @EffectiveDate						  datetime,
	 @ExcisePercentage					  numeric(18,2),
	 @IsExciseBill						  bit,
	 @IsBillMulti						  int,
	 @TransporterCode                     numeric(18),
     @TransPayType                        numeric(18),
     @LRNo                                varchar(50),
     @TransportMode                       numeric(18),
     @TransNoOfItems                      numeric(18),
	 @ChrgesTaxPerce					  numeric(18,2),
	 @MfgCompNo							  numeric(18,0),
     @LedgerNo							  numeric(18,0),
	 @ChargesAmt1					      numeric(18,2),
     @ReturnID							  int output
AS
IF EXISTS(select PkVoucherNo from TDeliveryChallan
          where
          PkVoucherNo = @PkVoucherNo)
     BEGIN
       --Update existing row
       UPDATE TDeliveryChallan
       SET
          VoucherTypeCode = @VoucherTypeCode,
          VoucherUserNo = @VoucherUserNo,
          VoucherDate = @VoucherDate,
          VoucherTime = @VoucherTime,
          Narration = @Narration,
          Reference = @Reference,
          ChequeNo = @ChequeNo,
          ClearingDate = @ClearingDate,
          CompanyNo = @CompanyNo,
          BilledAmount = @BilledAmount,
		  ChallanNo = @ChallanNo,
		  Remark = @Remark,
		  InwardLocationCode = @InwardLocationCode,
		  MacNo=@MacNo,
		  PayTypeNo = @PayTypeNo, 
		  RateTypeNo = @RateTypeNo,
		  TaxTypeNo = @TaxTypeNo,		  
		  VoucherStatus = 2,
	      OrderType=@OrderType,
	      ReturnAmount=@Returnamount,
          Visibility=@Visibility,
		  DiscPercent = @DiscPercent,
		  DiscAmt = @DiscAmt,
		  StatusNo = 2,
		  MixMode = @MixMode,
		  IsItemLevelDisc = @IsItemLevelDisc,
		  IsFooterLevelDisc = @IsFooterLevelDisc,
		  BrokerNo=@BrokerNo,
		  SuppCategory=@SuppCategory,
		  EffectiveDate = @EffectiveDate,
		  ExcisePercentage = @ExcisePercentage,
		  IsExciseBill = @IsExciseBill,
		  IsBillMulti = @IsBillMulti,
		  TransporterCode = @TransporterCode,
          TransPayType = @TransPayType,
          LRNo = @LRNo,
          TransportMode = @TransportMode,
          TransNoOfItems = @TransNoOfItems,	
		  ChrgesTaxPerce = @ChrgesTaxPerce,
		  MfgCompNo=@MfgCompNo,
		  LedgerNo=@LedgerNo,
          ChargesAmt1=@ChargesAmt1,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          PkVoucherNo = @PkVoucherNo
		set @ReturnID=@PkVoucherNo    

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric, @AccYear int, @Month int
       SELECT @Id=IsNull(Max(PkVoucherNo),0) From TDeliveryChallan
       DBCC CHECKIDENT(''TVoucherEntry'', RESEED, @Id)

       if (@VoucherTypeCode = 9 or @VoucherTypeCode = 12 or @VoucherTypeCode = 13 or @VoucherTypeCode = 15)
			begin
				set @Month=Month(@VoucherDate)
				set @AccYear = Year(@VoucherDate)
				if(@Month < 4)
						Set @AccYear = @AccYear - 1;
				
				if(@VoucherTypeCode=9)
				Begin
					if(@BrokerNo=0)
						Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TDeliveryChallan 
						where VoucherTypeCode=@VoucherTypeCode aND MfgCompNo=@MfgCompNo AND VoucherDate >= cast( ''1-Apr-'' + cast(@AccYear as varchar)  as datetime) 
						AND VoucherDate <= cast( ''31-Mar-'' + cast((@AccYear+1)as varchar)  as datetime) AND BrokerNo=0
					else 
						Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TDeliveryChallan 
						where VoucherTypeCode=@VoucherTypeCode aND MfgCompNo=@MfgCompNo AND VoucherDate >= cast( ''1-Apr-'' + cast(@AccYear as varchar)  as datetime) 
						AND VoucherDate <= cast( ''31-Mar-'' + cast((@AccYear+1)as varchar)  as datetime) AND BrokerNo<>0
				End
				Else 
					Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TDeliveryChallan 
					where VoucherTypeCode=@VoucherTypeCode aND MfgCompNo=@MfgCompNo AND VoucherDate >= cast( ''1-Apr-'' + cast(@AccYear as varchar)  as datetime) 
					AND VoucherDate <= cast( ''31-Mar-'' + cast((@AccYear+1)as varchar)  as datetime) 
            end
		else if (@VoucherUserNo=0)
			Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TDeliveryChallan where VoucherTypeCode=@VoucherTypeCode aND MfgCompNo=@MfgCompNo
			--select @PkVoucherNo=IsNull(Max(Cast(PkVoucherNo as numeric)),0)+1 from TvoucherEntry

       INSERT INTO TDeliveryChallan(
          VoucherTypeCode,
          VoucherUserNo,
          VoucherDate,
          VoucherTime,
          Narration,
          Reference,
          ChequeNo,
          ClearingDate,
          CompanyNo,
          BilledAmount,
		  ChallanNo,
          Remark,
		  InwardLocationCode,
		  MacNo,
		  IsVoucherLock,
		  IsCancel,
		  PayTypeNo,
		  RateTypeNo,
		  TaxTypeNo,		  
		  VoucherStatus,
		  OrderType,
		  ReturnAmount,
	      Visibility,
		  DiscPercent,
		  DiscAmt,
		  UserID,
          UserDate,
		  StatusNo,
		  MixMode,
		  IsItemLevelDisc,
		  IsFooterLevelDisc,
		  BrokerNo,
		  SuppCategory,
		  EffectiveDate,
		  ExcisePercentage,
		  IsExciseBill,
		  IsBillMulti, 
		  TransporterCode,
          TransPayType,
          LRNo,
          TransportMode,
          TransNoOfItems,
		  ChrgesTaxPerce,
          MfgCompNo,
          LedgerNo,
          ChargesAmt1,
		  FKVoucherNo
         
)
       VALUES(
          @VoucherTypeCode,
          @VoucherUserNo,
          @VoucherDate,
          @VoucherTime,
          @Narration,
          @Reference,
          @ChequeNo,
          @ClearingDate,
          @CompanyNo,
          @BilledAmount,
		  @ChallanNo,
          @Remark,
		  @InwardLocationCode,
		  @MacNo,
		  ''false'',
		  ''false'',
		  @PayTypeNo,
		  @RateTypeNo,
		  @TaxTypeNo,		  
		  1,
		  @OrderType,
          @ReturnAmount,
		  @Visibility,
		  @DiscPercent,
		  @DiscAmt,
		  @UserID,
          @UserDate,
		  1,
		  @MixMode,
		  @IsItemLevelDisc,
          @IsFooterLevelDisc,
		  @BrokerNo,
		  @SuppCategory,
          @EffectiveDate,
		  @ExcisePercentage,
		  @IsExciseBill,
		  @IsBillMulti,
		  @TransporterCode,
          @TransPayType,
          @LRNo,
          @TransportMode,
          @TransNoOfItems,
		  @ChrgesTaxPerce,
		  @MfgCompNo,
          @LedgerNo,
          @ChargesAmt1,
		  0
)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMGodown]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/12/2011
CREATE PROCEDURE  [dbo].[DeleteMGodown] 
@GodownNo                            numeric(18)


AS
		Update MGodown set IsActive=''False'',StatusNo=2 where GodownNo = @GodownNo
       /*DELETE FROM MGodown
       WHERE
          GodownNo = @GodownNo*/
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMGodown]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/12/2011
CREATE PROCEDURE [dbo].[AddMGodown]
     @GodownNo                              numeric(18),
     @GodownName                          varchar(50),
	 @ControlGroup						  numeric(18),
	 @LocationNo						  numeric(18),
	     @IsActive                            bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18)
     --@ModifiedBy                          varchar(50)
AS
IF EXISTS(select GodownNo from MGodown
          where
          GodownNo = @GodownNo)
     BEGIN
       --Update existing row
       UPDATE MGodown
       SET
          GodownName = @GodownName,
	      ControlGroup=@ControlGroup,
		  LocationNo=@LocationNo,
		  IsActive = @IsActive,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo=@CompanyNo,
          ModifiedBy =  isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105),
          StatusNo=2
       WHERE
          GodownNo = @GodownNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(GodownNo),0) From MGodown
       DBCC CHECKIDENT(''MGodown'', RESEED, @Id)
       INSERT INTO MGodown(
          GodownName,
		  ControlGroup,
		  LocationNo,
		  IsActive,
          UserID,
          UserDate,
		  CompanyNo,   
          StatusNo
          --ModifiedBy
)
       VALUES(
          @GodownName,
		  @ControlGroup,
		  @LocationNo,
		  @IsActive,
          @UserID,
          @UserDate,
		  @CompanyNo,
          1
         -- @ModifiedBy
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTSeasonalItems]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 08/07/2013
create PROCEDURE [dbo].[AddTSeasonalItems]
     @PKSrNo                              numeric(18),
     @BillNo                              numeric(18),
     @ItemName                            text,
     @MRP                                 numeric(18),
     @Qty                                 numeric(18),
     @Barcode                             varchar(250),
     @IsPrint                             bit,
     @UserID                              numeric(18),
     @UserDate                            datetime
AS
IF EXISTS(select PKSrNo from TSeasonalItems
          where
          PKSrNo = @PKSrNo)
     BEGIN
       --Update existing row
       UPDATE TSeasonalItems
       SET
          BillNo = @BillNo,
          ItemName = @ItemName,
          MRP = @MRP,
          Qty = @Qty,
          Barcode = @Barcode,
          IsPrint = @IsPrint,
          UserID = @UserID,
          UserDate = @UserDate
       WHERE
          PKSrNo = @PKSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PKSrNo),0) From TSeasonalItems
       DBCC CHECKIDENT(''TSeasonalItems'', RESEED, @Id)
       INSERT INTO TSeasonalItems(
          BillNo,
          ItemName,
          MRP,
          Qty,
          Barcode,
          IsPrint,
          UserID,
          UserDate
)
       VALUES(
          @BillNo,
          @ItemName,
          @MRP,
          @Qty,
          @Barcode,
          @IsPrint,
          @UserID,
          @UserDate
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTSeasonalItems]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 08/07/2013
create PROCEDURE  [dbo].[DeleteTSeasonalItems] 
@PKSrNo                             numeric(18)


AS

       DELETE FROM TSeasonalItems
       WHERE
          PKSrNo = @PKSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMNutrition]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 23/04/2015
CREATE PROCEDURE [dbo].[AddMNutrition]
     @NutritionNo                         numeric(18),
     @NutritionName                       varchar(300),
     @NutritionUOM                        varchar(50),
     @IsAactive                           bit,
     @UserID                              numeric(18),
     @UserDate                            datetime,
     @CompanyNo                           numeric(18),
     @StatusNo                            int
AS
IF EXISTS(select NutritionNo from MNutrition
          where
          NutritionNo = @NutritionNo)
     BEGIN
       --Update existing row
       UPDATE MNutrition
       SET
          NutritionName = @NutritionName,
          NutritionUOM = @NutritionUOM,
          IsAactive = @IsAactive,
          UserID = @UserID,
          UserDate = @UserDate,
          CompanyNo = @CompanyNo,
          StatusNo = @StatusNo
       WHERE
          NutritionNo = @NutritionNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(NutritionNo),0) From MNutrition
       DBCC CHECKIDENT(''MNutrition'', RESEED, @Id)
       INSERT INTO MNutrition(
          NutritionName,
          NutritionUOM,
          IsAactive,
          UserID,
          UserDate,
          CompanyNo,
          StatusNo
)
       VALUES(
          @NutritionName,
          @NutritionUOM,
          @IsAactive,
          @UserID,
          @UserDate,
          @CompanyNo,
          @StatusNo
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMNutrition]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 23/04/2015
CREATE PROCEDURE  [dbo].[DeleteMNutrition] 
@NutritionNo                        numeric(18)


AS

       DELETE FROM MNutrition
       WHERE
          NutritionNo = @NutritionNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMFooterDiscountPayTypeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 10/12/2013
CREATE PROCEDURE [dbo].[AddMFooterDiscountPayTypeDetails]
     @PkSrNo                              numeric(18),
     @FooterDiscNo                        numeric(18),
     @PayTypeNo                           numeric(18),
     @IsActive                            bit,
     @CompanyNo                           numeric(18)
AS
IF EXISTS(select PkSrNo from MFooterDiscountPayTypeDetails
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE MFooterDiscountPayTypeDetails
       SET
          FooterDiscNo = @FooterDiscNo,
          PayTypeNo = @PayTypeNo,
          IsActive = @IsActive,
          StatusNo = 2,
          CompanyNo = @CompanyNo
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From MFooterDiscountPayTypeDetails
       DBCC CHECKIDENT(''MFooterDiscountPayTypeDetails'', RESEED, @Id)
       INSERT INTO MFooterDiscountPayTypeDetails(
          FooterDiscNo,
          PayTypeNo,
          IsActive,
          StatusNo,
          CompanyNo
)
       VALUES(
          @FooterDiscNo,
          @PayTypeNo,
          @IsActive,
          1,
          @CompanyNo
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteMFooterDiscountPayTypeDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 10/12/2013
CREATE PROCEDURE  [dbo].[DeleteMFooterDiscountPayTypeDetails] 
@PkSrNo                             numeric(18)


AS

       DELETE FROM MFooterDiscountPayTypeDetails
       WHERE
          PkSrNo = @PkSrNo
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTSeasonalBarCodePrint]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 06/12/2012
create PROCEDURE [dbo].[AddTSeasonalBarCodePrint]
     @PkSrNo                              numeric(18), 
     @BillNo                              numeric(18),
     @ItemName                            varchar(max),
	 @MRP            					  numeric(18,2),
     @Qty                                 numeric(18,2),
     @Barcode                             varchar(max),
     @UserID                              numeric(18)
AS
IF EXISTS(select PkSrNo from TSeasonalBarCodePrint
          where
          PkSrNo = @PkSrNo)
     BEGIN
       --Update existing row
       UPDATE TSeasonalBarCodePrint
       SET
          BillNo = @BillNo,
          ItemName=@ItemName,
          MRP = @MRP,
          Qty = @Qty,
		  Barcode = @Barcode,
          UserID = @UserID
       WHERE
          PkSrNo = @PkSrNo

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkSrNo),0) From TSeasonalBarCodePrint
       DBCC CHECKIDENT(''TBarCodePrint'', RESEED, @Id)
       INSERT INTO TSeasonalBarCodePrint(
          BillNo, 
          ItemName,
          MRP,
          Qty, 
          Barcode,
          UserID
         
)
       VALUES(
          @BillNo,
          @ItemName,
		  @MRP,
          @Qty,
          @Barcode,
          @UserID
)

END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTSeasonalBarCodePrint]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 02/11/2011
CREATE PROCEDURE  [dbo].[DeleteTSeasonalBarCodePrint] 
@UserID                           numeric(18)


AS

       DELETE FROM TSeasonalBarCodePrint
       WHERE
          UserID = @UserID
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StockEffectDC]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11-Jul-2012
Create PROCEDURE [dbo].[StockEffectDC]
@FkVoucherNo                numeric(18)

AS
Declare @ItemNo		numeric(18), @Mrp numeric(18,2), @GodownNo numeric(18), @Qty numeric(18,2), @TrnCode numeric(18),@IsCancel bit

--Select @IsCancel =IsCancel From TVoucherEntry Where PKVoucherNo=@FkVoucherNo

Declare CurTemp cursor for SELECT     TDeliveryChallanStock.ItemNo, MRateSetting.MRP, 2 AS GodownNo, abs((TDeliveryChallanStock.BilledQuantity)) as Qty, TDeliveryChallanStock.TrnCode
FROM         TDeliveryChallanStock INNER JOIN
                      MRateSetting ON TDeliveryChallanStock.FkRateSettingNo = MRateSetting.PkSrNo 
					--INNER JOIN TStockGodown ON TStock.PkStockTrnNo = TStockGodown.FKStockTrnNo
WHERE     (TDeliveryChallanStock.FkVoucherNo = @FkVoucherNo)
open CurTemp
fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
while(@@Fetch_Status = 0)
Begin
	if(@TrnCode=2)
			set @Qty = @Qty*-1

--	if(@IsCancel=''true'')
--	Begin
--		if(@Qty>0)set @Qty = @Qty*-1
--		else if(@Qty<0)set @Qty=abs(@Qty)
--	End
	
	exec AddMStockItemBalance @ItemNo, @Mrp, @GodownNo, @Qty, 1

	fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
end
Close CurTemp Deallocate CurTemp
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StockReverseByStockDC]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
create PROCEDURE [dbo].[StockReverseByStockDC]
@PkStockTrnNo                numeric(18)

AS
Declare @ItemNo		numeric(18), @Mrp numeric(18,2), @GodownNo numeric(18), @Qty numeric(18,2), @TrnCode numeric(18)

Declare CurTemp cursor for SELECT     TDeliveryChallanStock.ItemNo, MRateSetting.MRP, 2 AS GodownNo, abs(TDeliveryChallanStock.BilledQuantity) as Qty, TDeliveryChallanStock.TrnCode
FROM         TDeliveryChallanStock INNER JOIN
                      MRateSetting ON TDeliveryChallanStock.FkRateSettingNo = MRateSetting.PkSrNo 
				--INNER JOIN TStockGodown ON TStock.PkStockTrnNo = TStockGodown.FKStockTrnNo
WHERE     PkStockTrnNo = @PkStockTrnNo
open CurTemp
fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
while(@@Fetch_Status = 0)
begin
	if(@TrnCode=1)
		set @Qty = @Qty*-1

	exec AddMStockItemBalance @ItemNo, @Mrp, @GodownNo, @Qty, 1
	
	fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
end
Close CurTemp Deallocate CurTemp

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StockReverseDC]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 11-Jul-2012
create PROCEDURE [dbo].[StockReverseDC]
@FkVoucherNo                numeric(18)

AS
Declare @ItemNo		numeric(18), @Mrp numeric(18,2), @GodownNo numeric(18), @Qty numeric(18,2), @TrnCode numeric(18)

Declare CurTemp cursor for SELECT     TDeliveryChallanStock.ItemNo, MRateSetting.MRP, 2 AS GodownNo, abs((TDeliveryChallanStock.BilledQuantity)) as Qty, TDeliveryChallanStock.TrnCode
FROM         TDeliveryChallanStock INNER JOIN
                      MRateSetting ON TDeliveryChallanStock.FkRateSettingNo = MRateSetting.PkSrNo 
				--INNER JOIN TStockGodown ON TStock.PkStockTrnNo = TStockGodown.FKStockTrnNo
WHERE     (TDeliveryChallanStock.FkVoucherNo = @FkVoucherNo)
open CurTemp
fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
while(@@Fetch_Status = 0)
begin
	if(@TrnCode=1)
		set @Qty = @Qty*-1

	exec AddMStockItemBalance @ItemNo, @Mrp, @GodownNo, @Qty, 1
	
	fetch next from CurTemp into @ItemNo, @Mrp, @GodownNo, @Qty, @TrnCode 
end
Close CurTemp Deallocate CurTemp
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddTDeliveryChallanStock]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[AddTDeliveryChallanStock]
     @PkStockTrnNo                        numeric(18),
	 @FKVoucherNo						  numeric(18),
     @FkVoucherTrnNo                      numeric(18),
     @FkVoucherSrNo                       numeric(18),
     @GroupNo                             numeric(18),
     @ItemNo                              numeric(18),
     @TrnCode                             numeric(18),
     @Quantity                            numeric(18,2),
     @BilledQuantity                      numeric(18,2),
     @Rate                                numeric(18,2),
     @Amount                              numeric(18,2),
	 @NetRate							  numeric(18,2),
	 @NetAmount							  numeric(18,2),
     @TaxPercentage                       numeric(18,2),
     @TaxAmount                           numeric(18,2),
	 @DiscPercentage					  numeric(18,2),
	 @DiscAmount						  numeric(18,2),
	 @DiscRupees						  numeric(18,2),
	 @DiscPercentage2					  numeric(18,2),
	 @DiscAmount2						  numeric(18,2),
	 @DiscRupees2						  numeric(18,2),
	 @FkUomNo							  numeric(18),
	 @FkStockBarCodeNo				      numeric(18),
	 @FkRateSettingNo					  numeric(18),
	 @FkItemTaxInfo						  numeric(18),
	 @FreeQty                             numeric(18,2),
	 @FreeUOMNo							  numeric(18),   
     @UserID                              numeric(18),
     @UserDate                            datetime,
	 @CompanyNo							  numeric(18),
	 @LandedRate						  numeric(18,2),
	 @FkGRNNo						      numeric(18),
	 @BatchNo							  varchar(50),
	 @NoOfBag							  numeric(18),
	 @CessValue							  numeric(18,2),
	 @PackagingCharges					  numeric(18,2),
	 @LBTPerce							  numeric(18,2),
	 @LBTApplicableAmount				  numeric(18,2),
	 @LBTAmount							  numeric(18,2),
	 @DisplayItemName					  varchar(500),
	 @MfgCompNo							  numeric(18,0),
	 @TaxPercentageAdnl                   numeric(18,2),
     @TaxAmountAdnl                       numeric(18,2),
	 @FkItemTaxSettingNoAdnl			  numeric(18),
     @ReturnID							  int output
     
AS
IF EXISTS(select PkStockTrnNo from TDeliveryChallanStock
          where
          PkStockTrnNo = @PkStockTrnNo)
     BEGIN
       --Update existing row
       UPDATE TDeliveryChallanStock
       SET
		  FKVoucherNo = @FKVoucherNo,
          FkVoucherTrnNo = @FkVoucherTrnNo,
          FkVoucherSrNo = @FkVoucherSrNo,
          GroupNo = @GroupNo,
          ItemNo = @ItemNo,
          TrnCode = @TrnCode,
          Quantity = @Quantity,
          BilledQuantity = @BilledQuantity,
          Rate = @Rate,
          Amount = @Amount,
		  NetRate = @NetRate,
		  NetAmount = @NetAmount,
          TaxPercentage = @TaxPercentage,
          TaxAmount = @TaxAmount,
		  DiscPercentage=@DiscPercentage,
		  DiscAmount=@DiscAmount,
		  DiscRupees = @DiscRupees,
		  DiscPercentage2 =@DiscPercentage2,
		  DiscAmount2 = @DiscAmount2,
		  DiscRupees2 = @DiscRupees2,
	      FkUomNo=@FkUomNo,
	      FkStockBarCodeNo=@FkStockBarCodeNo,
	      FkRateSettingNo=@FkRateSettingNo,
	      FkItemTaxInfo=@FkItemTaxInfo,
		  FreeQty=@FreeQty,
	      FreeUOMNo=@FreeUOMNo,
          UserID = @UserID,
          UserDate = @UserDate,
		  CompanyNo= @CompanyNo,
		  LandedRate = @LandedRate,
		  StatusNo = 2,
		  FkGRNNo=@FkGRNNo,
		  BatchNo=@BatchNo,
		  NoOfBag=@NoOfBag,
		  CessValue=@CessValue,
	      PackagingCharges=@PackagingCharges,
		  LBTPerce = @LBTPerce,
		  LBTApplicableAmount = @LBTApplicableAmount,
		  LBTAmount = @LBTAmount,
	      DisplayItemName=@DisplayItemName,
		  MfgCompNo=@MfgCompNo,
		  TaxPercentageAdnl = @TaxPercentageAdnl,
          TaxAmountAdnl = @TaxAmountAdnl,
		  FkItemTaxSettingNoAdnl = @FkItemTaxSettingNoAdnl,
          ModifiedBy = isnull(ModifiedBy,'''') + cast(@UserID as varchar)+''@''+ CONVERT(VARCHAR(10), GETDATE(), 105)
       WHERE
          PkStockTrnNo = @PkStockTrnNo
		  set @ReturnID=@PkStockTrnNo    

     END
ELSE
     BEGIN
       --Insert new row
       Declare @Id numeric
       SELECT @Id=IsNull(Max(PkStockTrnNo),0) From TDeliveryChallanStock
       DBCC CHECKIDENT(''TStock'', RESEED, @Id)
       INSERT INTO TDeliveryChallanStock(
		  FKVoucherNo,
          FkVoucherTrnNo,
          FkVoucherSrNo,
          GroupNo,
          ItemNo,
          TrnCode,
          Quantity,
          BilledQuantity,
          Rate,
          Amount,
		  NetRate,
		  NetAmount,
          TaxPercentage,
          TaxAmount,
		  DiscPercentage,
		  DiscAmount,
		  DiscRupees,
		  DiscPercentage2,
		  DiscAmount2,
		  DiscRupees2,
		  FkUomNo,
		  FkStockBarCodeNo,
		  FkRateSettingNo,
		  FkItemTaxInfo,
		  IsVoucherLock,
	      FreeQty,
		  FreeUOMNo,
          UserID,
          UserDate,
		  CompanyNo,
		  LandedRate,
		  StatusNo,
		  FkGRNNo,
		  BatchNo,
          NoOfBag,
          CessValue,
		  PackagingCharges,
		  LBTPerce,
		  LBTApplicableAmount,
		  LBTAmount,
		  MfgCompNo,
	      DisplayItemName,
	      TaxPercentageAdnl,
          TaxAmountAdnl,
		  FkItemTaxSettingNoAdnl
          
)
       VALUES(
		  @FKVoucherNo,
          @FkVoucherTrnNo,
          @FkVoucherSrNo,
          @GroupNo,
          @ItemNo,
          @TrnCode,
          @Quantity,
          @BilledQuantity,
          @Rate,
		  @Amount,
		  @NetRate,
          @NetAmount,
          @TaxPercentage,
          @TaxAmount,
	      @DiscPercentage,
		  @DiscAmount,
		  @DiscRupees,
		  @DiscPercentage2,
		  @DiscAmount2,
		  @DiscRupees2,
		  @FkUomNo,
		  @FkStockBarCodeNo,
		  @FkRateSettingNo,
		  @FkItemTaxInfo,
		  ''false'',
	      @FreeQty,
		  @FreeUOMNo,
          @UserID,
          @UserDate,
		  @CompanyNo,
		  @LandedRate,
		  1,
		  @FkGRNNo,
		  @BatchNo,
		  @NoOfBag,
		  @CessValue,
		  @PackagingCharges,
		  @LBTPerce,
		  @LBTApplicableAmount,
          @LBTAmount,
		  @MfgCompNo,
		  @DisplayItemName,
	      @TaxPercentageAdnl,
          @TaxAmountAdnl,
		  @FkItemTaxSettingNoAdnl
)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateRecipt]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 17-sep-2018
CREATE PROCEDURE [dbo].[UpdateRecipt]
--@FkVoucherNo                numeric(18)

AS
Declare @PkVoucherNo  numeric(18),     @VoucherTypeCode  numeric(18),     @VoucherUserNo numeric(18),     @VoucherDate  datetime,
    @LedgerNo		numeric(18),@BilledAmount numeric(18,2),
     @ReturnID							  int ,  @ReturnID2							  int

Declare CurTemp cursor for SELECT VOUCHERDATE,SUM(BILLEDAMOUNT) AS AMT,LedgerNo FROM TVOUCHERENTRY 
WHERE VOUCHERTYPECODE=15 AND PAYTYPENO=2 GROUP BY VOUCHERDATE,VOUCHERTYPECODE,LedgerNo ORDER BY VOUCHERDATE
open CurTemp
fetch next from CurTemp into @VoucherDate, @BilledAmount,@LedgerNo
while(@@Fetch_Status = 0)
begin
--	if(@TrnCode=1)
--		set @Qty = @Qty*-1

			Select @VoucherUserNo=IsNull(Max(Cast(VoucherUserNo as numeric)),0)+1 from TVoucherEntry where VoucherTypeCode=11
	exec AddTVoucherEntry 0,11,@VoucherUserNo,@VoucherDate,@VoucherDate,''Receipt Bill'',
          '''',          0,          @VoucherDate,          1,          @BilledAmount,
		  0,          '''',		  0,		  0,		 1,		  2,		  0,		  0,
		  1,		  1, @VoucherDate,		          0,		  0,		  0,		  0,
		  1,         		  1,		  0,		  0,		  0,          @VoucherDate,		  0,
		  0,          0,          0,          0,          0,		  0,   @LedgerNo,          0,          0,0,@ReturnID
select   @ReturnID2 =max(pkvoucherno) from tvoucherentry where vouchertypecode=11
	exec AddTVoucherDetails 0,@ReturnID2,1,2,@LedgerNo,0.0,@BilledAmount,501,1,'''',2
	exec AddTVoucherDetails 0,@ReturnID2,2,1,1,@BilledAmount,0.0,0,1,'''',2
fetch next from CurTemp into @VoucherDate, @BilledAmount,@LedgerNo
end
Close CurTemp Deallocate CurTemp
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AddMScheme]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[AddMScheme]
	@SchemeNo				numeric(18),
	@SchemeTypeNo			numeric(18),
	@SchemeName				varchar(500),
	@SchemeUserNo			varchar(500),
	@SchemeDate				datetime,
	@SchemePeriodFrom		datetime,
	@SchemePeriodTo			datetime,
	@SchemeRedPeriodFrom	datetime,
	@SchemeRedPeriodTo		datetime,
	@SchemeWorth			varchar(500),
	@CompanyNo				numeric(18),
	@DiscType               numeric(18),
	@IsActive				int,
	@UserID					numeric(18),
	@UserDate				datetime,
	@SponcorNo				numeric(18),
	@CampaignID				varchar(50),
	@IsIWScheme				int,
	@CustomerType			int,
	@ReturnID               int output
 AS 
 IF EXISTS ( Select SchemeNo From MScheme 
	 Where 
	 SchemeNo =@SchemeNo ) 
	  BEGIN 
--Update existing row 
	 UPDATE MScheme 
	 SET 

	SchemeTypeNo=@SchemeTypeNo,
	SchemeName=@SchemeName,
	SchemeUserNo=@SchemeUserNo,
	SchemeDate=@SchemeDate,
	SchemePeriodFrom=@SchemePeriodFrom,
	SchemePeriodTo=@SchemePeriodTo,
	SchemeRedPeriodFrom=@SchemeRedPeriodFrom,
	SchemeRedPeriodTo=@SchemeRedPeriodTo,
	SchemeWorth=@SchemeWorth,
	CompanyNo=@CompanyNo,
	StatusNo=2,
	IsActive = @IsActive,
	DiscType=@DiscType,
	UserID=@UserID,
	UserDate=@UserDate,
	SponcorNo = @SponcorNo,
	CampaignID = @CampaignID,
	IsIWScheme = @IsIWScheme,
	CustomerType = @CustomerType
	Where 
	 SchemeNo=@SchemeNo
	 set @ReturnID=@SchemeNo    
 End 
 ELSE BEGIN 
	 --Insert new row 
	 Declare @Id numeric (18)
	 if(@IsIWScheme=0)
		SELECT @Id=IsNull(Max(SchemeNo),0) From MScheme where IsIWScheme=0
	 else 
	 Begin	
	 	SELECT @Id=IsNull(Max(SchemeNo),5000) From MScheme where IsIWScheme=1
--		if(@Id=0) 
--			set @Id=5000
	 End

	  DBCC CHECKIDENT(''MScheme'', RESEED, @Id) 
	if (@SchemeNo=0)
	Begin
		if(@IsIWScheme = 0)
		Select  @SchemeUserNo=SchemeUserNo From GetMaxSchemeUserNo(@SchemeTypeNo,1)
	End
--	Select @SchemeUserNo=IsNull(Max(Cast(SchemeUserNo as numeric)),0)+1 from MScheme 
              

	  INSERT INTO MScheme( 
	SchemeTypeNo,
	SchemeName,
	SchemeUserNo,
	SchemeDate,
	SchemePeriodFrom,
	SchemePeriodTo,
	SchemeRedPeriodFrom,
	SchemeRedPeriodTo,
	SchemeWorth,
	CompanyNo,
	StatusNo,
	IsActive,
	DiscType,
	UserID,
	UserDate ,
	SponcorNo,
	CampaignID,
	IsIWScheme,
	CustomerType
)
	  VALUES(
	@SchemeTypeNo,
	@SchemeName,
	@SchemeUserNo,
	@SchemeDate,
	@SchemePeriodFrom,
	@SchemePeriodTo,
	@SchemeRedPeriodFrom,
	@SchemeRedPeriodTo,
	@SchemeWorth,
	@CompanyNo,
	1,
	@IsActive,
	@DiscType,
	@UserID,
	@UserDate,
	@SponcorNo,
	@CampaignID,
	@IsIWScheme,
	@CustomerType
	)
Set @ReturnID=Scope_Identity()
END
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTStock]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/02/2012
CREATE PROCEDURE  [dbo].[DeleteTStock] 
@PkStockTrnNo                       numeric(18)


AS

Declare @Quantity numeric(18,2),@OQuantity numeric(18,2),@Qty numeric(18,2),@FKOtherStockTrnNo numeric(18),
			@FKOtherVoucherNo numeric(18),@ItemNo numeric(18),@Mrp numeric(18,2),@UOMNo numeric(18),
			@PkRateSettingNo numeric(18),@GodownNo  numeric(18)

Select @Quantity=Quantity,@ItemNo=ItemNo,@UOMNo=FkUOMNo,@PkRateSettingNo=FkRateSettingNo From TStock Where PkStockTrnNo = @PkStockTrnNo
Select @Mrp=MRP From MRateSetting Where PkSrNo =@PKRateSettingNo
Select @GodownNo=GodownNo From TStockGodown Where FKStockTrnNo=@PkStockTrnNo

IF EXISTS(select PkSrNo from TOtherStockDetails where FKStockTrnNo = @PkStockTrnNo)
Begin
	
	Select @FKOtherStockTrnNo=FKOtherStockTrnNo,@FKOtherVoucherNo=FKOtherVoucherNo From TOtherStockDetails Where FKStockTrnNo = @PkStockTrnNo
	Select @OQuantity=Quantity From TOtherStock Where PkOtherStockTrnNo =@FKOtherStockTrnNo
	if(@Quantity>@OQuantity)
		Update TOtherStock set BalanceQty=@OQuantity,StatusNo=2 Where PKOtherStockTrnNo=@FKOtherStockTrnNo	
	else
		Update TOtherStock set BalanceQty=BalanceQty+@Quantity,StatusNo=2 Where PKOtherStockTrnNo=@FKOtherStockTrnNo
	Delete From TOtherStockDetails where FKStockTrnNo = @PkStockTrnNo
	if((Select Count(*) From TOtherStock where BalanceQty<Quantity AND FKVoucherNo = @FKOtherVoucherNo)<=0)
		Update TOtherVoucherEntry set VoucherStatus=0,StatusNo=2 where PKOtherVoucherNo=@FKOtherVoucherNo
END

Exec StockReverseByStock @PkStockTrnNo
--exec AddMStockItemBalance @ItemNo, @Mrp, @GodownNo, @Quantity, 1

DELETE FROM TStock 
       WHERE
          PkStockTrnNo = @PkStockTrnNo

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteTDeliveryChallanStock]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'--Created on 01/02/2012
CREATE PROCEDURE  [dbo].[DeleteTDeliveryChallanStock] 
@PkStockTrnNo                       numeric(18)


AS

Declare @Quantity numeric(18,2),@OQuantity numeric(18,2),@Qty numeric(18,2),@FKOtherStockTrnNo numeric(18),
			@FKOtherVoucherNo numeric(18),@ItemNo numeric(18),@Mrp numeric(18,2),@UOMNo numeric(18),
			@PkRateSettingNo numeric(18),@GodownNo  numeric(18)

Select @Quantity=Quantity,@ItemNo=ItemNo,@UOMNo=FkUOMNo,@PkRateSettingNo=FkRateSettingNo From TDeliveryChallanStock Where PkStockTrnNo = @PkStockTrnNo
Select @Mrp=MRP From MRateSetting Where PkSrNo =@PKRateSettingNo


IF EXISTS(select PkSrNo from TOtherStockDetails where FKStockTrnNo = @PkStockTrnNo)
Begin
	
	Select @FKOtherStockTrnNo=FKOtherStockTrnNo,@FKOtherVoucherNo=FKOtherVoucherNo From TOtherStockDetails Where FKStockTrnNo = @PkStockTrnNo
	Select @OQuantity=Quantity From TOtherStock Where PkOtherStockTrnNo =@FKOtherStockTrnNo
	if(@Quantity>@OQuantity)
		Update TOtherStock set BalanceQty=@OQuantity,StatusNo=2 Where PKOtherStockTrnNo=@FKOtherStockTrnNo	
	else
		Update TOtherStock set BalanceQty=BalanceQty+@Quantity,StatusNo=2 Where PKOtherStockTrnNo=@FKOtherStockTrnNo
	Delete From TOtherStockDetails where FKStockTrnNo = @PkStockTrnNo
	if((Select Count(*) From TOtherStock where BalanceQty<Quantity AND FKVoucherNo = @FKOtherVoucherNo)<=0)
		Update TOtherVoucherEntry set VoucherStatus=0,StatusNo=2 where PKOtherVoucherNo=@FKOtherVoucherNo
END

Exec StockReverseByStock @PkStockTrnNo
--exec AddMStockItemBalance @ItemNo, @Mrp, @GodownNo, @Quantity, 1

DELETE FROM TDeliveryChallanStock 
       WHERE
          PkStockTrnNo = @PkStockTrnNo

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLedgerBalanceByMonthly]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetLedgerBalanceByMonthly]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime
	)
RETURNS @TLedgerMonth TABLE(MonthID int,MonthName varchar(20),opDrAmt numeric(18,2),opCrAmt numeric(18,2),DebitAmt numeric(18,2),CreditAmt numeric(18,2),ClDrAmt numeric(18,2),ClCrAmt numeric(18,2),Yr int,CrDr varchar(20))
AS
BEGIN
Declare @ItemName varchar(max),@CrDr varchar(20)
Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrAmt numeric(18,2),@DrQty numeric(18,2)
Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2)
Declare @Rate numeric(18,2),@BalAmt numeric(18,2),@OpDrAmt numeric(18,2),@OpCrAmt numeric(18,2)
Declare @Month varchar(25),@MNo int,@ClDrAmt numeric(18,2),@ClCrAmt numeric(18,2)
Declare @TDate datetime ,@Yr int,@cnt int


set @ClosingQty = 0 set @BalAmt = 0
set @DrAmt=0 set @CrAmt = 0
set @OpAmt=0

Select @OpAmt=OpAmt From GetOpeningLedgerBalance2(@LedgerNo,@CompNo,@FromDate,@ToDate)

if(@OpAmt>=0)Begin set @OpDrAmt=@OpAmt set @OpCrAmt =0 set @CrDr=''Cr'' End
else Begin set @OpDrAmt=0 set @OpCrAmt=abs(@OpAmt) set @CrDr=''Dr'' End
--insert into @TLedgerMonth values(0,''Opening Balance'',0,0,@OpAmt,0,@CrDr)

while(@FromDate	<= @ToDate)
begin
	set @Month =DateName("m",@FromDate)
	set @MNo= Month(@FromDate)
	
	if(@MNo=1 Or @MNo=3 Or @MNo=5 Or @MNo=7 Or @MNo=8 Or @MNo=10 Or @MNo=12)
		begin
			if(Day(@FromDate) >=1 Or Day(@FromDate)<31)
				set @TDate = ''31-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
		end
	else if(@MNo=4 Or @MNo=6 Or @MNo=9 Or @MNo=11 )
		begin
			if(Day(@FromDate) >=1 Or Day(@FromDate)<30)
				set @TDate = ''30-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
		end
	else
		begin
			if(Year(@FromDate)%4=0)
				begin
					if(Day(@FromDate) >=1 Or Day(@FromDate)<29)
						set @TDate = ''29-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
				end
			else
				begin
					if(Day(@FromDate) >=1 Or Day(@FromDate)<28)
						set @TDate = ''28-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
				end
		end
		
	if(@TDate > @ToDate)set @TDate=@ToDate
	--==============Get the Ledger Balance===============================
	select @DrAmt=DrAmt,@CrAmt=CrAmt from GetLedgerBalance (@LedgerNo,@CompNo,@FromDate,@TDate)
    set @BalAmt = 0
	set @BalAmt = (@DrAmt - @CrAmt)+ @OpAmt
	
	--=========================================================================	
if(@BalAmt>=0)
Begin
	set @CrDr=''Cr'' set @ClDrAmt=@BalAmt set @ClCrAmt=0
End
Else
Begin
	set @CrDr=''Dr'' set @ClDrAmt=0 set @ClCrAmt=abs(@BalAmt)
End
		insert into @TLedgerMonth values(@MNo,@Month,@OpDrAmt,@OpCrAmt,@DrAmt,@CrAmt,@ClDrAmt,@ClCrAmt,Year(@FromDate),@CrDr)
		
	if(Day(@FromDate) > 1) 
		set @FromDate = ''1-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
	
	set @FromDate =DateAdd(mm,1,@FromDate)
	set @OpAmt = @BalAmt
	set @DrAmt=0 set @CrAmt = 0
	set @OpDrAmt=@ClDrAmt set @OpCrAmt=@ClCrAmt
	set @ClDrAmt=0 set @ClCrAmt=0
end
--insert into @TLedgerMonth values(0,''Closing Balance'',@OpAmt,0,0,@BalAmt,0,@CrDr)

RETURN
END



--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetGroupwiseLedgerBal2]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetGroupwiseLedgerBal2]
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@Type		int,
	@No			numeric(18)	
AS
	Declare @LedgerNo	numeric(18)
Declare @TLedger Table(LdgNo numeric(18),LdgName varchar(max),OpDrAmt numeric(18,2),OpCrAmt numeric(18,2),DrAmt numeric(18,2),CrAmt numeric(18,2),ClDrAmt numeric(18,2),ClCrAmt numeric(18,2))
Declare @GrNo numeric(18),@GrName varchar(max),@cnt int	
	if(@Type = 0)
	Begin
		Declare CurLedg Cursor For --Select LedgerNo From MLedger Where GroupNo=@No
		SELECT   LedgerNo FROM MLedger WHERE (GroupNo = @No) OR 
		(GroupNo IN (SELECT GroupNo FROM MGroup WHERE (ControlGroup = @No))) ORDER BY GroupNo
		Open curLedg
		Fetch Next From CurLedg Into @LedgerNo
		While(@@Fetch_Status = 0)
		begin
--			SELECT @GrName=MGroup.GroupName FROM MGroup INNER JOIN MLedger ON MGroup.GroupNo = MLedger.GroupNo
--					WHERE (MLedger.LedgerNo = @LedgerNo) AND (MGroup.ControlGroup<>0)
					
--					if((Select count(*) From @TLedger Where LdgName=@GrName)=0)
--					begin if(@GrName<>'''')insert @TLedger values(-1,@GrName,0,0,0) end
			insert @TLedger Select * From	GetLedgerBalance(@LedgerNo,@CompNo,@FromDate,@ToDate)
			Fetch Next From CurLedg Into @LedgerNo
		end
		Close curLedg
		Deallocate curLedg
		--select * from @TLedger
Select LdgNo As ''Ledger No'', LdgName As ''Ledger Name'',OpDrAmt As ''Op. Amt(Dr)'',OpCrAmt As ''Op. Amt(Cr)'',DrAmt As ''Debit Amount'',CrAmt As ''Credit Amount'',abs(ClDrAmt) As ''Cl. Amt(Dr)'',abs(ClCrAmt) As ''Cl. Amt(Cr)'', case when ClCrAmt > 0 then ''Cr'' else ''Dr'' end as CrDr From @TLedger
	End
--	else if(@Type = 1)
--	Begin
--		
--		set @cnt=0
--		Declare CurGrp Cursor For Select GroupNo,GroupName From MGroup Where ControlGroup=0
--		Open CurGrp
--		Fetch Next From CurGrp Into @GrNo,@GrName
--		
--		While(@@Fetch_Status = 0)
--		begin
--			
--			Declare CurLedg Cursor For --Select LedgerNo From MLedger Where GroupNo=@GrNo
--			SELECT   LedgerNo FROM MLedger WHERE (GroupNo = @GrNo) OR 
--		(GroupNo IN (SELECT GroupNo FROM MGroup WHERE (ControlGroup = @GrNo))) ORDER BY GroupNo
--			Open curLedg
--			Fetch Next From CurLedg Into @LedgerNo
--			While(@@Fetch_Status = 0)
--			begin
--				if (@cnt=0)
--				insert @TLedger values(0,@GrName,0,0,0)
--				else
--				begin
--					SELECT @GrName=MGroup.GroupName FROM MGroup INNER JOIN MLedger ON MGroup.GroupNo = MLedger.GroupNo
--					WHERE (MLedger.LedgerNo = @LedgerNo) AND (MGroup.ControlGroup<>0)
--					
--					if((Select count(*) From @TLedger Where LdgName=@GrName)=0)
--					begin if(@GrName<>'''')insert @TLedger values(-1,@GrName,0,0,0) end
--				end
--				insert @TLedger Select * From	GetLedgerBalance(@LedgerNo,@CompNo,@FromDate,@ToDate)
--				Fetch Next From CurLedg Into @LedgerNo
--				set @cnt=1
--			end
--			Close curLedg
--			Deallocate curLedg
--			Fetch Next From CurGrp Into @GrNo,@GrName
--			set @cnt=0
--		end
--		Close CurGrp
--		Deallocate CurGrp
--	End


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetFirmLedgerBalanceByMonthly]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[GetFirmLedgerBalanceByMonthly]
	(
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime,
	@MFGCompNo		numeric(18)
	)
RETURNS @TLedgerMonth TABLE(MonthID int,MonthName varchar(20),opDrAmt numeric(18,2),opCrAmt numeric(18,2),DebitAmt numeric(18,2),CreditAmt numeric(18,2),ClDrAmt numeric(18,2),ClCrAmt numeric(18,2),Yr int,CrDr varchar(20))
AS
BEGIN
Declare @ItemName varchar(max),@CrDr varchar(20)
Declare @OpAmt numeric(18,2),@OpQty numeric(18,2),@DrAmt numeric(18,2),@DrQty numeric(18,2)
Declare @CrAmt numeric(18,2),@CrQty numeric(18,2),@ClosingQty numeric(18,2)
Declare @Rate numeric(18,2),@BalAmt numeric(18,2),@OpDrAmt numeric(18,2),@OpCrAmt numeric(18,2)
Declare @Month varchar(25),@MNo int,@ClDrAmt numeric(18,2),@ClCrAmt numeric(18,2)
Declare @TDate datetime ,@Yr int,@cnt int


set @ClosingQty = 0 set @BalAmt = 0
set @DrAmt=0 set @CrAmt = 0
set @OpAmt=0

Select @OpAmt=OpAmt From GetFirmOpeningLedgerBalance2(@LedgerNo,@CompNo,@FromDate,@ToDate,@MFGCompNo)

if(@OpAmt>=0)Begin set @OpDrAmt=@OpAmt set @OpCrAmt =0 set @CrDr=''Cr'' End
else Begin set @OpDrAmt=0 set @OpCrAmt=abs(@OpAmt) set @CrDr=''Dr'' End
--insert into @TLedgerMonth values(0,''Opening Balance'',0,0,@OpAmt,0,@CrDr)

while(@FromDate	<= @ToDate)
begin
	set @Month =DateName("m",@FromDate)
	set @MNo= Month(@FromDate)
	
	if(@MNo=1 Or @MNo=3 Or @MNo=5 Or @MNo=7 Or @MNo=8 Or @MNo=10 Or @MNo=12)
		begin
			if(Day(@FromDate) >=1 Or Day(@FromDate)<31)
				set @TDate = ''31-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
		end
	else if(@MNo=4 Or @MNo=6 Or @MNo=9 Or @MNo=11 )
		begin
			if(Day(@FromDate) >=1 Or Day(@FromDate)<30)
				set @TDate = ''30-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
		end
	else
		begin
			if(Year(@FromDate)%4=0)
				begin
					if(Day(@FromDate) >=1 Or Day(@FromDate)<29)
						set @TDate = ''29-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
				end
			else
				begin
					if(Day(@FromDate) >=1 Or Day(@FromDate)<28)
						set @TDate = ''28-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
				end
		end
		
	if(@TDate > @ToDate)set @TDate=@ToDate
	--==============Get the Ledger Balance===============================
	select @DrAmt=DrAmt,@CrAmt=CrAmt from GetFirmLedgerBalance (@LedgerNo,@CompNo,@FromDate,@TDate,@MFGCompNo)
    set @BalAmt = 0
	set @BalAmt = (@DrAmt - @CrAmt)+ @OpAmt
	
	--=========================================================================	
if(@BalAmt>=0)
Begin
	set @CrDr=''Cr'' set @ClDrAmt=@BalAmt set @ClCrAmt=0
End
Else
Begin
	set @CrDr=''Dr'' set @ClDrAmt=0 set @ClCrAmt=abs(@BalAmt)
End
		insert into @TLedgerMonth values(@MNo,@Month,@OpDrAmt,@OpCrAmt,@DrAmt,@CrAmt,@ClDrAmt,@ClCrAmt,Year(@FromDate),@CrDr)
		
	if(Day(@FromDate) > 1) 
		set @FromDate = ''1-'' + DateName("m",@FromDate)+ ''-'' + cast(Year(@FromDate) as varchar)
	
	set @FromDate =DateAdd(mm,1,@FromDate)
	set @OpAmt = @BalAmt
	set @DrAmt=0 set @CrAmt = 0
	set @OpDrAmt=@ClDrAmt set @OpCrAmt=@ClCrAmt
	set @ClDrAmt=0 set @ClCrAmt=0
end
--insert into @TLedgerMonth values(0,''Closing Balance'',@OpAmt,0,0,@BalAmt,0,@CrDr)

RETURN
END

--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

' 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLedgerWiseVoucherDetails_E]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'create PROCEDURE [dbo].[GetLedgerWiseVoucherDetails_E]
	-- Add the parameters for the stored procedure here
	@LedgNo numeric(18),
	@CompNo int,
	@FromDate datetime,
	@ToDate datetime,
	@Mno int
AS
BEGIN
    SELECT     0 AS PKvoucherno, ''01-01-1900'' AS Date, null AS [Voucher No], ''Opening Balance'' AS LedgerName, ''0'' AS [Voucher Type], opDrAmt AS Debit, opCrAmt AS Credit
    FROM         dbo.GetLedgerBalanceByMonthly(@LedgNo, @CompNo, @FromDate, @ToDate) 
    WHERE     (MonthID = @Mno) and Yr=Year(@FromDate)

    UNION ALL

	select Tvoucherentry.PKvoucherno,convert(varchar(11),TVoucherEntry.VoucherDate,105) as Date,
			TVoucherEntry.VoucheruserNo as [Voucher No],
			(select  ledgerName AS ledgerName from 
				MLedger where LedgerNo=(SELECT  TOP 1  LedgerNo
                          FROM          TVoucherDetails 
                          WHERE      (FkVoucherNo = TVoucherEntry.PkVoucherNo) 
						AND (LedgerNo <> @LedgNo) ORDER BY VoucherSrNo)) as LedgerName,
			MVoucherType.VoucherTypeName as [Voucher Type],
			TVoucherDetails.debit as Debit, TVoucherDetails.Credit as Credit 
	from TVoucherDetails 
	INNER JOIN TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo 
	INNER JOIN MVoucherType ON MVoucherType.VoucherTypeCode = TVoucherEntry.VoucherTypeCode 
	where(TVoucherEntry.CompanyNo = @CompNo 
	And TVoucherDetails.LedgerNo = @LedgNo and TVoucherEntry.VoucherDate >= @FromDate and 
	TVoucherEntry.VoucherDate <= @ToDate  ) and Month(TVoucherEntry.VoucherDate) = @Mno and (TVoucherEntry.IsCancel=''false'')

	order by Date,[Voucher No] 

--(select VoucherNo from TVoucherEntry where VoucherNo=TVoucherDetails.VoucherNo and companyno=TVoucherDetails.CompanyNo) as 
--VoucherNo1
END

--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetLedgerWiseVoucherDetails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GetLedgerWiseVoucherDetails]
	-- Add the parameters for the stored procedure here
	@LedgNo numeric(18),
	@CompNo int,
	@FromDate datetime,
	@ToDate datetime,
	@Mno int
AS
BEGIN
    SELECT      ''01-01-1900'' AS Date, null AS [Voucher No], ''Opening Balance'' AS LedgerName, null AS [Voucher Type], opDrAmt AS Debit, opCrAmt AS Credit,null AS PKvoucherno
    FROM         dbo.GetLedgerBalanceByMonthly(@LedgNo, @CompNo, @FromDate, @ToDate) AS GetLedgerBalanceByMonthly_1
    WHERE     (MonthID = @Mno) and Yr=Year(@FromDate)
    UNION ALL
	select convert(varchar(11),TVoucherEntry.VoucherDate,105) as Date,(select VoucheruserNo from TVoucherEntry where
 PKVoucherNo=TVoucherDetails.FKVoucherNo ) as [Voucher No],(select ledgerName AS ledgerName from 
MLedger where LedgerNo=(select  (LedgerNo) from TvoucherDetails where TvoucherDetails.companyno= @CompNo and FKvoucherno=tvoucherentry.PKvoucherno 
 and tvoucherdetails.vouchersrno = ( select min(tvoucherdetails.vouchersrno)  from TvoucherDetails where TvoucherDetails.companyno= @CompNo 
and FKvoucherno=tvoucherentry.PKvoucherno and LedgerNo<> @LedgNo) )) as LedgerName,(select VoucherTypeName from 
MVoucherType where VoucherTypeCode in (select VoucherTypeCode from TVoucherEntry where 
PKVoucherNo=TVoucherDetails.FKVoucherNo )and TVoucherEntry.companyno= @CompNo)
 as [Voucher Type],TVoucherDetails.debit as Debit, TVoucherDetails.Credit as Credit,TVoucherEntry.PkVoucherNo as Pk  from TVoucherDetails RIGHT OUTER JOIN TVoucherEntry ON TVoucherDetails.FKVoucherNo = TVoucherEntry.PKVoucherNo
 where(TVoucherEntry.CompanyNo = @CompNo 
And TVoucherDetails.LedgerNo = @LedgNo and TVoucherEntry.VoucherDate >= @FromDate and 
TVoucherEntry.VoucherDate <= @ToDate  ) and Month(TVoucherEntry.VoucherDate) = @Mno and (TVoucherEntry.IsCancel=''false'')
order by Date,[Voucher No]

--(select VoucherNo from TVoucherEntry where VoucherNo=TVoucherDetails.VoucherNo and companyno=TVoucherDetails.CompanyNo) as 
--VoucherNo1
END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RptGetLedgerBalanceByMonthly]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[RptGetLedgerBalanceByMonthly]
	@LedgerNo	numeric(18),
	@CompNo		numeric(18),
	@FromDate	datetime,
	@ToDate		datetime
AS
	Select * From GetLedgerBalanceByMonthly(@LedgerNo ,@CompNo,@FromDate,@ToDate)
	RETURN

' 
END
